<Type Name="Parallel" FullName="System.Threading.Tasks.Parallel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5cecfa2ccfb0c078816afadda63313ffb6ac73cf" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39140719" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Parallel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Parallel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Parallel" />
  <TypeSignature Language="VB.NET" Value="Public Class Parallel" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parallel abstract sealed" />
  <TypeSignature Language="F#" Value="type Parallel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c24e5-101">Fornisce supporto per aree e cicli in parallelo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c24e5-101">Provides support for parallel loops and regions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-102">Il <xref:System.Threading.Tasks.Parallel> classe fornisce sostituzioni parallela di dati basato sulla libreria per le operazioni comuni quali cicli, per ogni cicli e l'esecuzione di un set di istruzioni.</span><span class="sxs-lookup"><span data-stu-id="c24e5-102">The <xref:System.Threading.Tasks.Parallel> class provides library-based data parallel replacements for common operations such as for loops, for each loops, and execution of a set of statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-103">Questo esempio illustra diversi approcci all'implementazione di un ciclo parallelo tramite più costrutti del linguaggio.</span><span class="sxs-lookup"><span data-stu-id="c24e5-103">This example demonstrates several approaches to implementing a parallel loop using multiple language constructs.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#07](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelintro.cs#07)]
 [!code-vb[System.Threading.Tasks.Parallel#07](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelintro.vb#07)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="c24e5-104">Tutti i membri pubblici e protetti di <see cref="T:System.Threading.Tasks.Parallel" /> sono thread-safe e possono essere utilizzati contemporaneamente da più thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c24e5-104">All public and protected members of <see cref="T:System.Threading.Tasks.Parallel" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="For">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c24e5-105">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) in cui le iterazioni possono essere eseguite in parallelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-105">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop in which iterations may run in parallel.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, Action&lt;int,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Action`2&lt;int32, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Integer, toExclusive As Integer, body As Action(Of Integer, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Action&lt;int, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * Action&lt;int, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-106">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-106">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-107">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-107">The end index, exclusive.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-108">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-108">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-109">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-109">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-110">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-110">A  structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-111">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-111">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-112">Viene fornito con due argomenti:</span><span class="sxs-lookup"><span data-stu-id="c24e5-112">It is provided with two arguments:</span></span>  
  
-   <span data-ttu-id="c24e5-113">Un <xref:System.Int32> valore che rappresenta il conteggio delle iterazioni.</span><span class="sxs-lookup"><span data-stu-id="c24e5-113">An <xref:System.Int32> value that represents the iteration count.</span></span>  
  
-   <span data-ttu-id="c24e5-114">Oggetto <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere utilizzata per uscire dal ciclo in modo anomalo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-114">A <xref:System.Threading.Tasks.ParallelLoopState> instance that can be used to break out of the loop prematurely.</span></span> <span data-ttu-id="c24e5-115">Il <xref:System.Threading.Tasks.ParallelLoopState> oggetto viene creato dal compilatore; non è possibile creare un'istanza nel codice utente.</span><span class="sxs-lookup"><span data-stu-id="c24e5-115">The <xref:System.Threading.Tasks.ParallelLoopState> object is created by the compiler; it cannot be instantiated in user code.</span></span>  
  
 <span data-ttu-id="c24e5-116">Chiama il <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> metodo informa il `for` operazione che le iterazioni successive a quella corrente non sono necessario eseguire.</span><span class="sxs-lookup"><span data-stu-id="c24e5-116">Calling the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> method informs the `for` operation that iterations after the current one don't have to execute.</span></span> <span data-ttu-id="c24e5-117">Tuttavia, tutte le iterazioni prima di quella corrente uno sarà ancora da eseguire se è già stato fatto.</span><span class="sxs-lookup"><span data-stu-id="c24e5-117">However, all iterations before the current one will still have to be executed if they haven't already.</span></span>  
  
 <span data-ttu-id="c24e5-118">Pertanto, la chiamata <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> è simile all'uso di un'operazione di interruzione all'interno di un tradizionale `for` ciclo in un linguaggio come c#, ma non è un sostituto perfetto: ad esempio, non c'è garanzia che le iterazioni successive a quella corrente verranno sicuramente non eseguire.</span><span class="sxs-lookup"><span data-stu-id="c24e5-118">Therefore, calling <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> is similar to using a break operation within a conventional `for` loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</span></span>  
  
 <span data-ttu-id="c24e5-119">Se l'esecuzione di tutte le iterazioni prima di quello corrente non è necessario, usare il <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> metodo invece di usare <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span><span class="sxs-lookup"><span data-stu-id="c24e5-119">If executing all iterations before the current one is not necessary, use the <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> method instead of using <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span></span> <span data-ttu-id="c24e5-120">La chiamata <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informa il `for` ciclo che può abbandonare tutte le rimanenti iterazioni, indipendentemente dal fatto che siano connessi prima o dopo l'iterazione corrente, in quanto tutte le necessarie lavoro verrà sono già stato completato.</span><span class="sxs-lookup"><span data-stu-id="c24e5-120">Calling <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informs the `for` loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</span></span> <span data-ttu-id="c24e5-121">Tuttavia, come con <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, non vi sono garanzie relative alle altre iterazioni non verranno eseguiti.</span><span class="sxs-lookup"><span data-stu-id="c24e5-121">However, as with <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, there are no guarantees regarding which other iterations will not execute.</span></span>  
  
 <span data-ttu-id="c24e5-122">Se è stato interrotta, a un ciclo di <xref:System.Threading.Tasks.ParallelLoopResult> struttura restituita conterrà le informazioni relative al completamento del ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-122">If a loop is ended prematurely, the <xref:System.Threading.Tasks.ParallelLoopResult> structure that is returned will contain relevant information about the loop's completion.</span></span>  
  
 <span data-ttu-id="c24e5-123">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo viene restituito immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-123">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-124">Nell'esempio seguente viene eseguita fino a 100 iterazioni di un ciclo in parallelo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-124">The following example executes up to 100 iterations of a loop in parallel.</span></span> <span data-ttu-id="c24e5-125">Ogni iterazione viene sospeso per un intervallo casuale compreso tra 1 e 1.000 millisecondi.</span><span class="sxs-lookup"><span data-stu-id="c24e5-125">Each iteration pauses for a random interval from 1 to 1,000 milliseconds.</span></span> <span data-ttu-id="c24e5-126">Un valore generato casualmente determina a quali iterazione del ciclo di <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> viene chiamato il metodo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-126">A randomly generated value determines on which iteration of the loop the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="c24e5-127">Come l'output illustrato nell'esempio, non ci sono iterazioni il cui indice è maggiore di <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> inizio del valore proprietà dopo la chiamata al <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="c24e5-127">As the output from the example shows, no iterations whose index is greater than the <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> property value start after the call to the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.ParallelLoopState#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallelloopstate/cs/break1.cs#2)]
 [!code-vb[System.Threading.Tasks.ParallelLoopState#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallelloopstate/vb/break1.vb#2)]  
  
 <span data-ttu-id="c24e5-128">Poiché sono ancora soggetti a essere in esecuzione al termine delle iterazioni del ciclo il <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> viene chiamato il metodo, le chiamate di ogni iterazione il <xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType> proprietà da controllare se un'altra iterazione ha chiamato la <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="c24e5-128">Because iterations of the loop are still likely to be executing when the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method is called, each iteration calls the <xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType> property to check whether another iteration has called the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c24e5-129">Se il valore della proprietà `true`, l'iterazione controlla il valore della <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> proprietà e, se è maggiore del valore di indice dell'iterazione corrente, viene restituito immediatamente.</span><span class="sxs-lookup"><span data-stu-id="c24e5-129">If  the property value is `true`, the iteration checks the value of the <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> property and, if it is greater than the current iteration's index value, returns immediately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-130">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-130">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-131">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-131">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.Tasks.ParallelLoopState" />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, Action&lt;int&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Action`1&lt;int32&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Integer, toExclusive As Integer, body As Action(Of Integer)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Action&lt;int&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * Action&lt;int&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-132">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-132">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-133">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-133">The end index, exclusive.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-134">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-134">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-135">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) in cui le iterazioni possono essere eseguite in parallelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-135">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop in which iterations may run in parallel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-136">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-136">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-137">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-137">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-138">Viene fornito con il conteggio delle iterazioni (<xref:System.Int32>) come parametro.</span><span class="sxs-lookup"><span data-stu-id="c24e5-138">It is provided with the iteration count (<xref:System.Int32>) as a parameter.</span></span>  
  
 <span data-ttu-id="c24e5-139">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo viene restituito immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-139">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-140">L'esempio seguente usa il <xref:System.Threading.Tasks.Parallel.For%2A> metodo per chiamate di un delegato che viene generato l'errore byte casuali di 100 valori e calcola la somma.</span><span class="sxs-lookup"><span data-stu-id="c24e5-140">The following example uses the <xref:System.Threading.Tasks.Parallel.For%2A> method for 100 invocations of a delegate that generates random byte values and computes their sum.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel.For#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel.for/cs/for1.cs#1)]
 [!code-vb[System.Threading.Tasks.Parallel.For#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel.for/vb/for1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-141">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-141">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-142">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-142">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, Action&lt;long,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Action`2&lt;int64, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Long, toExclusive As Long, body As Action(Of Long, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Action&lt;long, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * Action&lt;int64, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-143">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-143">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-144">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-144">The end index, exclusive.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-145">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-145">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-146">Esegue un loop <see langword="for" /> (<see langword="For" /> in Visual Basic) con gli indici a 64 bit in cui le iterazioni possono eseguire in parallelo e lo stato del loop può essere monitorato e manipolato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-146">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-147">Struttura <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-147">A <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> structure that contains information on what portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-148">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-148">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-149">Viene fornito con i parametri seguenti: il conteggio delle iterazioni (<xref:System.Int64>) e un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-149">It is provided with the following parameters: the iteration count (<xref:System.Int64>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="c24e5-150">Chiama il <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> metodo informa il `for` operazione che le iterazioni successive a quella corrente non devono essere eseguiti, ma eseguire tutte le iterazioni prima di quello corrente.</span><span class="sxs-lookup"><span data-stu-id="c24e5-150">Calling the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> method informs the `for` operation that iterations after the current one don’t have to be executed, but all iterations before the current one do.</span></span>  
  
 <span data-ttu-id="c24e5-151">Pertanto, la chiamata di interruzione è simile all'uso di un'operazione di interruzione all'interno di un tradizionale `for` ciclo in un linguaggio come c#, ma non è un sostituto perfetto: ad esempio, non c'è garanzia che le iterazioni dopo quello corrente sicuramente non verrà eseguiti.</span><span class="sxs-lookup"><span data-stu-id="c24e5-151">Therefore, calling Break is similar to using a break operation within a conventional `for` loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</span></span>  
  
 <span data-ttu-id="c24e5-152">Se l'esecuzione di tutte le iterazioni prima di quello corrente non è necessario, usare il <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> metodo invece di usare <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span><span class="sxs-lookup"><span data-stu-id="c24e5-152">If executing all iterations before the current one is not necessary, use the <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> method instead of using <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span></span> <span data-ttu-id="c24e5-153">La chiamata <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informa il `for` ciclo che può abbandonare tutte le rimanenti iterazioni, indipendentemente dal fatto che siano connessi prima o dopo l'iterazione corrente, in quanto tutte le necessarie lavoro verrà sono già stato completato.</span><span class="sxs-lookup"><span data-stu-id="c24e5-153">Calling <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informs the `for` loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</span></span> <span data-ttu-id="c24e5-154">Tuttavia, come con <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, non vi sono garanzie relative alle altre iterazioni non verranno eseguiti.</span><span class="sxs-lookup"><span data-stu-id="c24e5-154">However, as with <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, there are no guarantees regarding which other iterations will not execute.</span></span>  
  
 <span data-ttu-id="c24e5-155">Se è stato interrotta, a un ciclo di <xref:System.Threading.Tasks.ParallelLoopResult> struttura restituita conterrà le informazioni relative al completamento del ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-155">If a loop is ended prematurely, the <xref:System.Threading.Tasks.ParallelLoopResult> structure that is returned will contain relevant information about the loop's completion.</span></span>  
  
 <span data-ttu-id="c24e5-156">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo restituisce immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-156">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-157">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-157">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-158">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-158">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, Action&lt;long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Action`1&lt;int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Long, toExclusive As Long, body As Action(Of Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Action&lt;long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * Action&lt;int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-159">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-159">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-160">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-160">The end index, exclusive.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-161">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-161">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-162">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) con indici a 64 bit in cui le iterazioni possono essere eseguite in parallelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-162">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-163">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-163">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-164">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-164">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-165">Viene fornito con il conteggio delle iterazioni (<xref:System.Int64>) come parametro.</span><span class="sxs-lookup"><span data-stu-id="c24e5-165">It is provided with the iteration count (<xref:System.Int64>) as a parameter.</span></span>  
  
 <span data-ttu-id="c24e5-166">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo viene restituito immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-166">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-167">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-167">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-168">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-168">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;int,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;int32, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;int, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * System.Threading.Tasks.ParallelOptions * Action&lt;int, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-169">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-169">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-170">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-170">The end index, exclusive.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-171">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-171">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-172">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-172">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-173">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-173">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-174">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-174">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-175">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-175">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-176">Viene fornito con i parametri seguenti: il conteggio delle iterazioni (<xref:System.Int32>) e un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-176">It is provided with the following parameters: the iteration count (<xref:System.Int32>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="c24e5-177">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo viene restituito immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-177">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-178">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-178">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-179">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-179">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-180">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-180">-or-</span>
          </span>
          <span data-ttu-id="c24e5-181">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-181">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-182">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-182">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-183">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-183">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;int&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;int32&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;int&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * System.Threading.Tasks.ParallelOptions * Action&lt;int&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-184">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-184">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-185">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-185">The end index, exclusive.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-186">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-186">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-187">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-187">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-188">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) nel quale le iterazioni possono essere eseguite in parallelo ed è possibile configurare le opzioni di ciclo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-188">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop in which iterations may run in parallel and loop options can be configured.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-189">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-189">A  structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-190">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-190">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-191">Viene fornito con il conteggio delle iterazioni (<xref:System.Int32>) come parametro.</span><span class="sxs-lookup"><span data-stu-id="c24e5-191">It is provided with the iteration count (<xref:System.Int32>) as a parameter.</span></span>  
  
 <span data-ttu-id="c24e5-192">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo restituisce immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-192">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-193">Nell'esempio seguente viene illustrato come annullare un ciclo parallelo:</span><span class="sxs-lookup"><span data-stu-id="c24e5-193">The following example shows how to cancel a parallel loop:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#05](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforcancel.cs#05)]
 [!code-vb[System.Threading.Tasks.Parallel#05](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforcancel.vb#05)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-194">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-194">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-195">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-195">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-196">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-196">-or-</span>
          </span>
          <span data-ttu-id="c24e5-197">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-197">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-198">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-198">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-199">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-199">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;long,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;int64, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;long, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * System.Threading.Tasks.ParallelOptions * Action&lt;int64, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-200">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-200">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-201">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-201">The end index, exclusive.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-202">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-202">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-203">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-203">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-204">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) con indici a 64 bit nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-204">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic)  loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-205">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-205">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-206">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-206">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-207">Viene fornito con i parametri seguenti: il conteggio delle iterazioni (<xref:System.Int64>) e un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-207">It is provided with the following parameters: the iteration count (<xref:System.Int64>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="c24e5-208">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo viene restituito immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-208">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-209">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> metodo con un <xref:System.Threading.Tasks.ParallelOptions> oggetto:</span><span class="sxs-lookup"><span data-stu-id="c24e5-209">The following example shows how to use the <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method with a <xref:System.Threading.Tasks.ParallelOptions> object:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelfor.cs#03)]
 [!code-vb[System.Threading.Tasks.Parallel#03](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelfor.vb#03)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-210">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-210">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-211">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-211">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-212">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-212">-or-</span>
          </span>
          <span data-ttu-id="c24e5-213">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-213">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-214">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-214">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-215">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-215">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * System.Threading.Tasks.ParallelOptions * Action&lt;int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-216">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-216">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-217">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-217">The end index, exclusive.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-218">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-218">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-219">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-219">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-220">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) con indici a 64 bit in cui è possibile eseguire le iterazioni in parallelo e configurare le opzioni del ciclo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-220">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-221">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-221">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-222">Supporta gli indici a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="c24e5-222">Supports 64-bit indexes.</span></span> <span data-ttu-id="c24e5-223">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-223">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-224">Viene fornito con il conteggio delle iterazioni (<xref:System.Int64>) come parametro.</span><span class="sxs-lookup"><span data-stu-id="c24e5-224">It is provided with the iteration count (<xref:System.Int64>) as a parameter.</span></span>  
  
 <span data-ttu-id="c24e5-225">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo restituisce immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-225">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-226">Nell'esempio seguente viene illustrato come utilizzare <xref:System.Threading.Tasks.ParallelOptions> per specificare un'utilità di pianificazione di attività personalizzato:</span><span class="sxs-lookup"><span data-stu-id="c24e5-226">The following example shows how to use <xref:System.Threading.Tasks.ParallelOptions> to specify a custom task scheduler:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#06](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforwithscheduler.cs#06)]
 [!code-vb[System.Threading.Tasks.Parallel#06](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforwithscheduler.vb#06)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-227">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-227">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-228">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-228">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-229">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-229">-or-</span>
          </span>
          <span data-ttu-id="c24e5-230">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-230">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-231">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-231">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-232">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-232">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (int fromInclusive, int toExclusive, Func&lt;TLocal&gt; localInit, Func&lt;int,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int32 fromInclusive, int32 toExclusive, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int32, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For(Of TLocal) (fromInclusive As Integer, toExclusive As Integer, localInit As Func(Of TLocal), body As Func(Of Integer, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Func&lt;TLocal&gt; ^ localInit, Func&lt;int, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int * int * Func&lt;'Local&gt; * Func&lt;int, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-233">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-233">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-234">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-234">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-235">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-235">The end index, exclusive.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-236">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-236">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-237">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-237">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-238">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-238">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-239">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) con dati locali del thread nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-239">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-240">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-240">A  structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-241">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-241">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-242">Viene fornito con i parametri seguenti: il conteggio delle iterazioni (<xref:System.Int32>), un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni che vengono eseguite sullo stesso thread.</span><span class="sxs-lookup"><span data-stu-id="c24e5-242">It is provided with the following parameters: the iteration count (<xref:System.Int32>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="c24e5-243">Il `localInit` delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-243">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-244">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-244">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-245">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-245">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-246">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-246">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-247">Il `localFinally` delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-247">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="c24e5-248">Questo delegato potrebbe essere chiamato simultaneamente su più attività. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-248">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-249">Il <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-249">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-250">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-250">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="c24e5-251">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo restituisce immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-251">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 <span data-ttu-id="c24e5-252">Per un esempio che usa questo metodo, vedere [procedura: scrivere un ciclo Parallel. for con variabili Thread-Local](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-252">For an example that uses this method, see [How to: Write a Parallel.For Loop with Thread-Local Variables](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-253">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-253">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-254">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-254">-or-</span>
          </span>
          <span data-ttu-id="c24e5-255">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-255">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-256">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-256">-or-</span>
          </span>
          <span data-ttu-id="c24e5-257">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-257">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-258">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-258">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (long fromInclusive, long toExclusive, Func&lt;TLocal&gt; localInit, Func&lt;long,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int64 fromInclusive, int64 toExclusive, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int64, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For(Of TLocal) (fromInclusive As Long, toExclusive As Long, localInit As Func(Of TLocal), body As Func(Of Long, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Func&lt;TLocal&gt; ^ localInit, Func&lt;long, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * Func&lt;'Local&gt; * Func&lt;int64, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-259">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-259">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-260">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-260">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-261">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-261">The end index, exclusive.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-262">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-262">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-263">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-263">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-264">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-264">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-265">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) con indici a 64 bit e dati locali del thread nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-265">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic)  loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-266">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-266">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-267">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-267">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-268">Viene fornito con i parametri seguenti: il conteggio delle iterazioni (<xref:System.Int64>), un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni che eseguono la stessa attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-268">It is provided with the following parameters: the iteration count (<xref:System.Int64>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</span></span>  
  
 <span data-ttu-id="c24e5-269">Il `localInit` delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-269">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-270">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-270">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-271">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-271">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-272">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-272">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-273">Il `localFinally` delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-273">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="c24e5-274">Questo delegato potrebbe essere chiamato simultaneamente su più attività. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-274">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-275">Il <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-275">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-276">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-276">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="c24e5-277">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo restituisce immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-277">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 <span data-ttu-id="c24e5-278">Per un esempio che usa questo metodo, vedere [procedura: scrivere un ciclo Parallel. for con variabili Thread-Local](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-278">For an example that uses this method, see [How to: Write a Parallel.For Loop with Thread-Local Variables](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-279">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-279">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-280">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-280">-or-</span>
          </span>
          <span data-ttu-id="c24e5-281">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-281">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-282">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-282">-or-</span>
          </span>
          <span data-ttu-id="c24e5-283">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-283">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-284">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-284">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;int,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int32, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;int, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int * int * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;int, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-285">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-285">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-286">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-286">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-287">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-287">The end index, exclusive.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-288">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-288">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-289">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-289">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-290">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-290">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-291">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-291">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-292">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) con dati locali del thread nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-292">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic)  loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-293">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-293">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-294">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-294">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-295">Viene fornito con i parametri seguenti: il conteggio delle iterazioni (<xref:System.Int32>), un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni che eseguono la stessa attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-295">It is provided with the following parameters: the iteration count (<xref:System.Int32>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</span></span>  
  
 <span data-ttu-id="c24e5-296">Il `localInit` delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-296">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-297">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-297">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-298">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-298">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-299">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-299">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-300">Il `localFinally` delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-300">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="c24e5-301">Questo delegato può essere chiamato simultaneamente su più thread. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-301">This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-302">Il <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-302">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-303">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-303">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="c24e5-304">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo restituisce immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-304">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-305">L'esempio seguente usa le variabili thread-local per calcolare la somma dei risultati di molte operazioni di lunga durate.</span><span class="sxs-lookup"><span data-stu-id="c24e5-305">The following example uses thread-local variables to compute the sum of the results of many lengthy operations.</span></span> <span data-ttu-id="c24e5-306">In questo esempio consente di limitare il grado di parallelismo a quattro.</span><span class="sxs-lookup"><span data-stu-id="c24e5-306">This example limits the degree of parallelism to four.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#04](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/threadlocalforwithoptions.cs#04)]
 [!code-vb[System.Threading.Tasks.Parallel#04](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/threadlocalforwithoptions.vb#04)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-307">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-307">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-308">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-308">-or-</span>
          </span>
          <span data-ttu-id="c24e5-309">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-309">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-310">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-310">-or-</span>
          </span>
          <span data-ttu-id="c24e5-311">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-311">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-312">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-312">-or-</span>
          </span>
          <span data-ttu-id="c24e5-313">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-313">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-314">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-314">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-315">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-315">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-316">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-316">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;long,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int64, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;long, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;int64, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-317">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-317">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="fromInclusive">
          <span data-ttu-id="c24e5-318">Indice iniziale, incluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-318">The start index, inclusive.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="c24e5-319">Indice finale, escluso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-319">The end index, exclusive.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-320">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-320">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-321">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-321">The function delegate that returns the initial state of the local data for each thread.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-322">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-322">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-323">Delegato che esegue un'azione finale sullo stato locale di ogni thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-323">The delegate that performs a final action on the local state of each thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-324">Esegue un ciclo <see langword="for" /> (<see langword="For" /> in Visual Basic) con indici a 64 bit e dati locali del thread nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-324">Executes a <see langword="for" /> (<see langword="For" /> in Visual Basic) loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-325">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-325">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-326">Il `body` delegato viene richiamato una volta per ogni valore nell'intervallo di iterazione (`fromInclusive`, `toExclusive`).</span><span class="sxs-lookup"><span data-stu-id="c24e5-326">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="c24e5-327">Viene fornito con i parametri seguenti: il conteggio delle iterazioni (<xref:System.Int64>), un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni che vengono eseguite sullo stesso thread.</span><span class="sxs-lookup"><span data-stu-id="c24e5-327">It is provided with the following parameters: the iteration count (<xref:System.Int64>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="c24e5-328">Il `localInit` delegato viene richiamato una volta per ogni thread che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuno di questi thread.</span><span class="sxs-lookup"><span data-stu-id="c24e5-328">The `localInit` delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those threads.</span></span> <span data-ttu-id="c24e5-329">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni thread.</span><span class="sxs-lookup"><span data-stu-id="c24e5-329">These initial states are passed to the first `body` invocations on each thread.</span></span> <span data-ttu-id="c24e5-330">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-330">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-331">Infine, l'ultima chiamata corpo su ogni thread restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-331">Finally, the last body invocation on each thread returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-332">Il `localFinally` delegato viene richiamato una volta per ogni thread per eseguire un'azione finale sullo stato locale di ogni thread.</span><span class="sxs-lookup"><span data-stu-id="c24e5-332">The `localFinally` delegate is invoked once per thread to perform a final action on each thread's local state.</span></span> <span data-ttu-id="c24e5-333">Questo delegato può essere chiamato simultaneamente su più thread. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-333">This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-334">Il <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-334">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-335">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-335">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="c24e5-336">Se `fromInclusive` è maggiore o uguale a `toExclusive`, il metodo restituisce immediatamente senza eseguire alcuna iterazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-336">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-337">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-337">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-338">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-338">-or-</span>
          </span>
          <span data-ttu-id="c24e5-339">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-339">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-340">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-340">-or-</span>
          </span>
          <span data-ttu-id="c24e5-341">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-341">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-342">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-342">-or-</span>
          </span>
          <span data-ttu-id="c24e5-343">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-343">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-344">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-344">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-345">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-345">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-346">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-346">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ForEach&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c24e5-347">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each " /> in Visual Basic) in cui le iterazioni possono essere eseguite in parallelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-347">Executes a <see langword="foreach" /> (<see langword="For Each " /> in Visual Basic) operation in which iterations may run in parallel.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As OrderablePartitioner(Of TSource), body As Action(Of TSource, ParallelLoopState, Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-348">Il tipo degli elementi nella <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-348">The type of the elements in <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-349">Oggetto Partitioner ordinabile contenente l'origine dati originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-349">The orderable partitioner that contains the original data source.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-350">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-350">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-351">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) su un oggetto <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-351">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-352">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-352">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-353">Questo overload è disponibile per gli scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</span><span class="sxs-lookup"><span data-stu-id="c24e5-353">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="c24e5-354">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero trarre vantaggio dal partizionamento dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-354">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="c24e5-355">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo prevede che il partitioner personalizzati per supportare il partizionamento dinamico.</span><span class="sxs-lookup"><span data-stu-id="c24e5-355">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="c24e5-356">Per altre informazioni, vedere [partitioner personalizzati per PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) e [procedura: implementare partizioni dinamiche](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-356">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-357">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-357">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-358">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-358">-or-</span>
          </span>
          <span data-ttu-id="c24e5-359">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-359">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c24e5-360">La proprietà <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> nel partitioner ordinabile <paramref name="source" /> restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-360">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c24e5-361">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-361">-or-</span>
          </span>
          <span data-ttu-id="c24e5-362">La proprietà <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> nel partitioner ordinabile di origine restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-362">The <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> property in the source orderable partitioner returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c24e5-363">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-363">-or-</span>
          </span>
          <span data-ttu-id="c24e5-364">Qualsiasi metodo nel partitioner ordinabile di origine restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-364">Any methods in the source orderable partitioner return <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As Partitioner(Of TSource), body As Action(Of TSource, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-365">Il tipo degli elementi nella <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-365">The type of the elements in <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-366">Oggetto Partitioner contenente l'origine dati originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-366">The partitioner that contains the original data source.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-367">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-367">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-368">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) su un oggetto <see cref="T:System.Collections.Concurrent.Partitioner" /> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-368">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-369">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-369">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-370">Questo overload è disponibile per gli scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</span><span class="sxs-lookup"><span data-stu-id="c24e5-370">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="c24e5-371">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero trarre vantaggio dal partizionamento dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-371">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="c24e5-372">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo prevede che il partitioner personalizzati per supportare il partizionamento dinamico.</span><span class="sxs-lookup"><span data-stu-id="c24e5-372">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="c24e5-373">Per altre informazioni, vedere [partitioner personalizzati per PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) e [procedura: implementare partizioni dinamiche](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-373">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-374">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-374">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-375">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-375">-or-</span>
          </span>
          <span data-ttu-id="c24e5-376">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-376">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c24e5-377">La proprietà <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> nel partitioner <paramref name="source" /> restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-377">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c24e5-378">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-378">-or-</span>
          </span>
          <span data-ttu-id="c24e5-379">Un metodo nel partitioner <paramref name="source" /> restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-379">A method in the <paramref name="source" /> partitioner returns <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-380">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-380">-or-</span>
          </span>
          <span data-ttu-id="c24e5-381">Il metodo <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> nel partitioner <paramref name="source" /> non restituisce il numero corretto di partizioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-381">The <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> method in the <paramref name="source" /> partitioner does not return the correct number of partitions.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As Partitioner(Of TSource), body As Action(Of TSource)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-382">Il tipo degli elementi nella <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-382">The type of the elements in <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-383">Oggetto Partitioner contenente l'origine dati originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-383">The partitioner that contains the original data source.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-384">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-384">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-385">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) su un oggetto <see cref="T:System.Collections.Concurrent.Partitioner" /> in cui le iterazioni possono essere eseguite in parallelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-385">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-386">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-386">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-387">Questo overload è disponibile per gli scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</span><span class="sxs-lookup"><span data-stu-id="c24e5-387">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="c24e5-388">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero trarre vantaggio dal partizionamento dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-388">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="c24e5-389">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo prevede che il partitioner personalizzati per supportare il partizionamento dinamico.</span><span class="sxs-lookup"><span data-stu-id="c24e5-389">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="c24e5-390">Per altre informazioni, vedere [partitioner personalizzati per PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) e [procedura: implementare partizioni dinamiche](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-390">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-391">Nell'esempio seguente viene illustrato come implementare un partitioner dell'intervallo per l'uso con <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="c24e5-391">The following example shows how to implement a range partitioner for use with <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel_RangePartitioners#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel_rangepartitioners/cs/rangepartitioner.cs#01)]
 [!code-vb[System.Threading.Tasks.Parallel_RangePartitioners#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel_rangepartitioners/vb/rangepart.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-392">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-392">The <paramref name="source" /> argument is  <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-393">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-393">-or-</span>
          </span>
          <span data-ttu-id="c24e5-394">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-394">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c24e5-395">La proprietà <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> nel partitioner <paramref name="source" /> restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-395">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c24e5-396">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-396">-or-</span>
          </span>
          <span data-ttu-id="c24e5-397">Eccezione generata quando qualsiasi metodo del partitioner <paramref name="source" /> restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-397">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-398">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-398">-or-</span>
          </span>
          <span data-ttu-id="c24e5-399">Il metodo <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> nel partitioner <paramref name="source" /> non restituisce il numero corretto di partizioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-399">The <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> method in the <paramref name="source" /> partitioner does not return the correct number of partitions.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource, ParallelLoopState, Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-400">Tipo di dati nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-400">The type of the data in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-401">Origine dati enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-401">An enumerable data source.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-402">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-402">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-403">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con indici a 64 bit su un oggetto <see cref="T:System.Collections.IEnumerable" /> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-403">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-404">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-404">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-405">Il `body` delegato viene richiamato una volta per ogni elemento di `source` enumerabile.</span><span class="sxs-lookup"><span data-stu-id="c24e5-405">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="c24e5-406">Viene fornito con i parametri seguenti: l'elemento corrente, un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo e l'indice dell'elemento corrente (<xref:System.Int64>).</span><span class="sxs-lookup"><span data-stu-id="c24e5-406">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and the current element's index (<xref:System.Int64>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-407">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-407">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-408">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-408">-or-</span>
          </span>
          <span data-ttu-id="c24e5-409">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-409">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-410">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-410">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-411">Tipo di dati nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-411">The type of the data in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-412">Origine dati enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-412">An enumerable data source.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-413">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-413">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-414">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) su un oggetto <see cref="T:System.Collections.IEnumerable" /> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-414">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-415">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-415">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-416">Il `body` delegato viene richiamato una volta per ogni elemento di `source` enumerabile.</span><span class="sxs-lookup"><span data-stu-id="c24e5-416">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="c24e5-417">Viene fornito con i parametri seguenti: l'elemento corrente e un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-417">It is provided with the following parameters: the current element, and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-418">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-418">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-419">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-419">-or-</span>
          </span>
          <span data-ttu-id="c24e5-420">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-420">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-421">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-421">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-422">Tipo di dati nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-422">The type of the data in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-423">Origine dati enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-423">An enumerable data source.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-424">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-424">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-425">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) su un oggetto <see cref="T:System.Collections.IEnumerable" /> in cui le iterazioni possono essere eseguite in parallelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-425">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-426">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-426">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-427">Il `body` delegato viene richiamato una volta per ogni elemento di `source` enumerabile.</span><span class="sxs-lookup"><span data-stu-id="c24e5-427">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="c24e5-428">Viene fornito con l'elemento corrente come parametro.</span><span class="sxs-lookup"><span data-stu-id="c24e5-428">It is provided with the current element as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-429">L'esempio seguente usa il <xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29> metodo contare il numero di caratteri diversi dallo spazio vuoto in un file di testo e vocali.</span><span class="sxs-lookup"><span data-stu-id="c24e5-429">The following example uses the <xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29> method to count the number of vowels and non-white-space characters in a text file.</span></span> <span data-ttu-id="c24e5-430">In questo caso, il <xref:System.Threading.Tasks.ParallelLoopResult> valore restituito dal metodo viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="c24e5-430">In this case, the <xref:System.Threading.Tasks.ParallelLoopResult> value returned by the method is ignored.</span></span> <span data-ttu-id="c24e5-431">Si noti che, poiché le operazioni possono essere eseguiti in parallelo, è necessario assicurarsi che le variabili di contatore incrementato è un'operazione atomica, e che più thread non tentare di accedere contemporaneamente alle variabili di contatore.</span><span class="sxs-lookup"><span data-stu-id="c24e5-431">Note that, because operations can run in parallel, you must ensure that incrementing the counter variables is an atomic operation, and that multiple threads do not attempt to access the counter variables simultaneously.</span></span> <span data-ttu-id="c24e5-432">A tale scopo, l'esempio Usa la `lock` istruzione (in c#) e il `SyncLock` istruzione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c24e5-432">For this purpose, the example uses the `lock` statement (in C#) and the `SyncLock` statement (in Visual Basic).</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel.ForEach#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel.foreach/cs/foreach1.cs#1)]
 [!code-vb[System.Threading.Tasks.Parallel.ForEach#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel.foreach/vb/foreach1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-433">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-433">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-434">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-434">-or-</span>
          </span>
          <span data-ttu-id="c24e5-435">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-435">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-436">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-436">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-437">Il tipo degli elementi nella <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-437">The type of the elements in <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-438">Oggetto Partitioner ordinabile contenente l'origine dati originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-438">The orderable partitioner that contains the original data source.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-439">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-439">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-440">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-440">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-441">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) su un oggetto <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-441">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-442">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-442">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-443">Questo overload è disponibile per gli scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</span><span class="sxs-lookup"><span data-stu-id="c24e5-443">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="c24e5-444">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero trarre vantaggio dal partizionamento dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-444">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="c24e5-445">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo prevede che il partitioner personalizzati per supportare il partizionamento dinamico.</span><span class="sxs-lookup"><span data-stu-id="c24e5-445">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="c24e5-446">Per altre informazioni, vedere [partitioner personalizzati per PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) e [procedura: implementare partizioni dinamiche](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-446">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-447">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-447">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-448">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-448">The <paramref name="source" /> argument is  <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-449">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-449">-or-</span>
          </span>
          <span data-ttu-id="c24e5-450">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-450">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-451">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-451">-or-</span>
          </span>
          <span data-ttu-id="c24e5-452">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-452">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-453">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-453">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c24e5-454">La proprietà <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> nel partitioner ordinabile <paramref name="source" /> restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-454">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c24e5-455">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-455">-or-</span>
          </span>
          <span data-ttu-id="c24e5-456">La proprietà <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> nel partitioner ordinabile <paramref name="source" /> restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-456">The <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c24e5-457">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-457">-or-</span>
          </span>
          <span data-ttu-id="c24e5-458">Eccezione generata quando qualsiasi metodo nell'oggetto partitioner ordinabile <paramref name="source" /> restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-458">The exception that is thrown when any methods in the <paramref name="source" /> orderable partitioner return <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-459">Il tipo degli elementi nella <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-459">The type of the elements in <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-460">Oggetto Partitioner contenente l'origine dati originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-460">The partitioner that contains the original data source.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-461">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-461">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-462">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-462">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-463">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) su un oggetto <see cref="T:System.Collections.Concurrent.Partitioner" /> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-463">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-464">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-464">A  structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-465">Questo overload è disponibile per gli scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</span><span class="sxs-lookup"><span data-stu-id="c24e5-465">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="c24e5-466">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero trarre vantaggio dal partizionamento dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-466">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="c24e5-467">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo prevede che il partitioner personalizzati per supportare il partizionamento dinamico.</span><span class="sxs-lookup"><span data-stu-id="c24e5-467">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="c24e5-468">Per altre informazioni, vedere [partitioner personalizzati per PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) e [procedura: implementare partizioni dinamiche](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-468">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-469">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-469">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-470">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-470">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-471">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-471">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-472">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-472">-or-</span>
          </span>
          <span data-ttu-id="c24e5-473">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-473">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-474">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-474">-or-</span>
          </span>
          <span data-ttu-id="c24e5-475">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-475">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c24e5-476">La proprietà <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> nel partitioner <paramref name="source" /> restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-476">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c24e5-477">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-477">-or-</span>
          </span>
          <span data-ttu-id="c24e5-478">Eccezione generata quando qualsiasi metodo del partitioner <paramref name="source" /> restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-478">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-479">Il tipo degli elementi nella <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-479">The type of the elements in <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-480">Oggetto Partitioner contenente l'origine dati originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-480">The partitioner that contains the original data source.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-481">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-481">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-482">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-482">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-483">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) su un oggetto <see cref="T:System.Collections.Concurrent.Partitioner" /> nel quale le iterazioni possono essere eseguite in parallelo ed è possibile configurare le opzioni di ciclo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-483">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel and loop options can be configured.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-484">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-484">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-485">Questo overload è disponibile per gli scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</span><span class="sxs-lookup"><span data-stu-id="c24e5-485">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="c24e5-486">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero trarre vantaggio dal partizionamento dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-486">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="c24e5-487">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo prevede che il partitioner personalizzati per supportare il partizionamento dinamico.</span><span class="sxs-lookup"><span data-stu-id="c24e5-487">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="c24e5-488">Per altre informazioni, vedere [partitioner personalizzati per PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) e [procedura: implementare partizioni dinamiche](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-488">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-489">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-489">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-490">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-490">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-491">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-491">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-492">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-492">-or-</span>
          </span>
          <span data-ttu-id="c24e5-493">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-493">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-494">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-494">-or-</span>
          </span>
          <span data-ttu-id="c24e5-495">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-495">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c24e5-496">La proprietà <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> nel partitioner <paramref name="source" /> restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-496">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c24e5-497">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-497">-or-</span>
          </span>
          <span data-ttu-id="c24e5-498">Eccezione generata quando qualsiasi metodo del partitioner <paramref name="source" /> restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-498">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-499">Tipo di dati nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-499">The type of the data in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-500">Origine dati enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-500">An enumerable data source.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-501">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-501">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-502">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-502">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-503">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con indici a 64 bit su un oggetto <see cref="T:System.Collections.IEnumerable" /> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-503">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-504">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-504">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-505">Il `body` delegato viene richiamato una volta per ogni elemento di `source` enumerabile.</span><span class="sxs-lookup"><span data-stu-id="c24e5-505">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="c24e5-506">Viene fornito con i parametri seguenti: l'elemento corrente, un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo e l'indice dell'elemento corrente (<xref:System.Int64>).</span><span class="sxs-lookup"><span data-stu-id="c24e5-506">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and the current element's index (<xref:System.Int64>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-507">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-507">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-508">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-508">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-509">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-509">-or-</span>
          </span>
          <span data-ttu-id="c24e5-510">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-510">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-511">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-511">-or-</span>
          </span>
          <span data-ttu-id="c24e5-512">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-512">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-513">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-513">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-514">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-514">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-515">Tipo di dati nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-515">The type of the data in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-516">Origine dati enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-516">An enumerable data source.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-517">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-517">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-518">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-518">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-519">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) su un oggetto <see cref="T:System.Collections.IEnumerable" /> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-519">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-520">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-520">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-521">Il `body` delegato viene richiamato una volta per ogni elemento di `source` enumerabile.</span><span class="sxs-lookup"><span data-stu-id="c24e5-521">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="c24e5-522">Viene fornito con i parametri seguenti: l'elemento corrente e un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-522">It is provided with the following parameters: the current element, and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-523">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-523">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-524">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-524">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-525">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-525">-or-</span>
          </span>
          <span data-ttu-id="c24e5-526">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-526">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-527">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-527">-or-</span>
          </span>
          <span data-ttu-id="c24e5-528">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-528">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-529">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-529">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-530">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-530">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-531">Tipo di dati nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-531">The type of the data in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-532">Origine dati enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-532">An enumerable data source.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-533">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-533">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-534">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-534">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-535">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) su un oggetto <see cref="T:System.Collections.IEnumerable" /> nel quale le iterazioni possono essere eseguite in parallelo ed è possibile configurare le opzioni di ciclo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-535">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel and loop options can be configured.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-536">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-536">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-537">Il `body` delegato viene richiamato una volta per ogni elemento di `source` enumerabile.</span><span class="sxs-lookup"><span data-stu-id="c24e5-537">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="c24e5-538">Viene fornito con l'elemento corrente come parametro.</span><span class="sxs-lookup"><span data-stu-id="c24e5-538">It is provided with the current element as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-539">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-539">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-540">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-540">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-541">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-541">-or-</span>
          </span>
          <span data-ttu-id="c24e5-542">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-542">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-543">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-543">-or-</span>
          </span>
          <span data-ttu-id="c24e5-544">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-544">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-545">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-545">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-546">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-546">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As OrderablePartitioner(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, Long, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-547">Il tipo degli elementi nella <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-547">The type of the elements in <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-548">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-548">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-549">Oggetto Partitioner ordinabile contenente l'origine dati originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-549">The orderable partitioner that contains the original data source.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-550">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-550">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-551">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-551">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-552">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-552">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-553">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con dati locali del thread su un oggetto <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-553">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-554">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-554">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-555">Questo overload è disponibile per gli scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</span><span class="sxs-lookup"><span data-stu-id="c24e5-555">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="c24e5-556">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero trarre vantaggio dal partizionamento dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-556">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="c24e5-557">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A> metodo prevede che il partitioner personalizzati per supportare il partizionamento dinamico.</span><span class="sxs-lookup"><span data-stu-id="c24e5-557">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="c24e5-558">Per altre informazioni, vedere [partitioner personalizzati per PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) e [procedura: implementare partizioni dinamiche](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-558">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="c24e5-559">Il `localInit` delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-559">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-560">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-560">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-561">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-561">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-562">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-562">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-563">Il `localFinally` delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-563">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="c24e5-564">Questo delegato potrebbe essere chiamato simultaneamente su più attività. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-564">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-565">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-565">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-566">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-566">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-567">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-567">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-568">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-568">-or-</span>
          </span>
          <span data-ttu-id="c24e5-569">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-569">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-570">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-570">-or-</span>
          </span>
          <span data-ttu-id="c24e5-571">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-571">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-572">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-572">-or-</span>
          </span>
          <span data-ttu-id="c24e5-573">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-573">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c24e5-574">La proprietà <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> in <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> restituisce <see langword="false" /> oppure il partitioner restituisce partizioni <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-574">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-575">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-575">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As Partitioner(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-576">Il tipo degli elementi nella <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-576">The type of the elements in <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-577">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-577">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-578">Oggetto Partitioner contenente l'origine dati originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-578">The partitioner that contains the original data source.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-579">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-579">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-580">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-580">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-581">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-581">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-582">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con dati locali del thread su un oggetto <see cref="T:System.Collections.Concurrent.Partitioner" /> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-582">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-583">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-583">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-584">Questo overload è disponibile per gli scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</span><span class="sxs-lookup"><span data-stu-id="c24e5-584">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="c24e5-585">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero trarre vantaggio dal partizionamento dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-585">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="c24e5-586">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A> metodo prevede che il partitioner personalizzati per supportare il partizionamento dinamico.</span><span class="sxs-lookup"><span data-stu-id="c24e5-586">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="c24e5-587">Per altre informazioni, vedere [partitioner personalizzati per PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) e [procedura: implementare partizioni dinamiche](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-587">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="c24e5-588">Il `localInit` delegato viene richiamato una volta per ogni thread che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-588">The `localInit` delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-589">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-589">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-590">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-590">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-591">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-591">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-592">Il `localFinally` delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-592">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="c24e5-593">Questo delegato potrebbe essere chiamato simultaneamente su più attività. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-593">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-594">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-594">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-595">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-595">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-596">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-596">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-597">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-597">-or-</span>
          </span>
          <span data-ttu-id="c24e5-598">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-598">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-599">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-599">-or-</span>
          </span>
          <span data-ttu-id="c24e5-600">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-600">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-601">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-601">-or-</span>
          </span>
          <span data-ttu-id="c24e5-602">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-602">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c24e5-603">La proprietà <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> in <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> restituisce <see langword="false" /> oppure il partitioner restituisce partizioni <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-603">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-604">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-604">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As IEnumerable(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, Long, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-605">Tipo di dati nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-605">The type of the data in the source.</span>
          </span>
        </typeparam>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-606">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-606">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-607">Origine dati enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-607">An enumerable data source.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-608">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-608">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-609">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-609">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-610">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-610">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-611">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con dati locali del thread su un oggetto <see cref="T:System.Collections.IEnumerable" /> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-611">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-612">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-612">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-613">Il `body` delegato viene richiamato una volta per ogni elemento di `source` enumerabile.</span><span class="sxs-lookup"><span data-stu-id="c24e5-613">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="c24e5-614">Viene fornito con i parametri seguenti: l'elemento corrente, un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo, indice dell'elemento corrente (<xref:System.Int64>) e uno stato locale che può essere condiviso fra le iterazioni che eseguono sullo stesso thread.</span><span class="sxs-lookup"><span data-stu-id="c24e5-614">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, the current element's index (<xref:System.Int64>), and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="c24e5-615">Il `localInit` delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-615">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-616">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-616">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-617">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-617">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-618">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-618">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-619">Il `localFinally` delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-619">The `localFinally` delegate is invoked once per task to perform a final action on each task’s local state.</span></span> <span data-ttu-id="c24e5-620">Questo delegato potrebbe essere chiamato simultaneamente su più attività. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-620">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-621">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-621">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-622">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-622">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-623">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-623">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-624">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-624">-or-</span>
          </span>
          <span data-ttu-id="c24e5-625">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-625">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-626">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-626">-or-</span>
          </span>
          <span data-ttu-id="c24e5-627">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-627">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-628">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-628">-or-</span>
          </span>
          <span data-ttu-id="c24e5-629">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-629">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-630">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-630">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As IEnumerable(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-631">Tipo di dati nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-631">The type of the data in the source.</span>
          </span>
        </typeparam>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-632">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-632">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-633">Origine dati enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-633">An enumerable data source.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-634">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-634">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-635">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-635">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-636">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-636">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-637">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con dati locali del thread su un oggetto <see cref="T:System.Collections.IEnumerable" /> nel quale le iterazioni possono essere eseguite in parallelo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-637">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-638">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-638">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-639">Il `body` delegato viene richiamato una volta per ogni elemento di `source` enumerabile.</span><span class="sxs-lookup"><span data-stu-id="c24e5-639">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="c24e5-640">Viene fornito con i parametri seguenti: l'elemento corrente, un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni che vengono eseguite sullo stesso thread.</span><span class="sxs-lookup"><span data-stu-id="c24e5-640">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="c24e5-641">Il `localInit` delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-641">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-642">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-642">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-643">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-643">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-644">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-644">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-645">Il `localFinally` delegato viene richiamato una volta per ogni thread per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-645">The `localFinally` delegate is invoked once per thread to perform a final action on each task’s local state.</span></span> <span data-ttu-id="c24e5-646">Questo delegato potrebbe essere chiamato simultaneamente su più attività. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-646">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-647">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-647">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-648">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-648">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-649">Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Threading.Tasks.Parallel.ForEach%2A> metodo con lo stato locale:</span><span class="sxs-lookup"><span data-stu-id="c24e5-649">The following example shows how to use a <xref:System.Threading.Tasks.Parallel.ForEach%2A> method with local state:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforeach.cs#02)]
 [!code-vb[System.Threading.Tasks.Parallel#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforeach.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-650">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-650">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-651">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-651">-or-</span>
          </span>
          <span data-ttu-id="c24e5-652">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-652">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-653">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-653">-or-</span>
          </span>
          <span data-ttu-id="c24e5-654">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-654">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-655">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-655">-or-</span>
          </span>
          <span data-ttu-id="c24e5-656">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-656">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-657">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-657">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-658">Il tipo degli elementi nella <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-658">The type of the elements in <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-659">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-659">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-660">Oggetto Partitioner ordinabile contenente l'origine dati originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-660">The orderable partitioner that contains the original data source.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-661">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-661">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-662">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-662">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-663">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-663">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-664">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-664">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-665">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con indici a 64 bit e dati locali del thread su un oggetto <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-665">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes and  with thread-local data on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-666">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-666">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-667">Questo overload è disponibile per gli scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</span><span class="sxs-lookup"><span data-stu-id="c24e5-667">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="c24e5-668">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero trarre vantaggio dal partizionamento dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-668">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="c24e5-669">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A> metodo prevede che il partitioner personalizzati per supportare il partizionamento dinamico.</span><span class="sxs-lookup"><span data-stu-id="c24e5-669">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="c24e5-670">Per altre informazioni, vedere [partitioner personalizzati per PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) e [procedura: implementare partizioni dinamiche](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-670">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="c24e5-671">Il `localInit` delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-671">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-672">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-672">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-673">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-673">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-674">Infine, l'ultima chiamata corpo su ogni thread restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-674">Finally, the last body invocation on each thread returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-675">Il `localFinally` delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-675">The `localFinally` delegate is invoked once per task to perform a final action on each task’s local state.</span></span> <span data-ttu-id="c24e5-676">Questo delegato potrebbe essere chiamato simultaneamente su più attività. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-676">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-677">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-677">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-678">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-678">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-679">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-679">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-680">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-680">-or-</span>
          </span>
          <span data-ttu-id="c24e5-681">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-681">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-682">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-682">-or-</span>
          </span>
          <span data-ttu-id="c24e5-683">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-683">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-684">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-684">-or-</span>
          </span>
          <span data-ttu-id="c24e5-685">L'argomento <paramref name="localInit" /> o <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-685">The <paramref name="localInit" /> or <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c24e5-686">La proprietà <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> in <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> restituisce <see langword="false" /> oppure il partitioner restituisce partizioni <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-686">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-687">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-687">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-688">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-688">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-689">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-689">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-690">Il tipo degli elementi nella <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-690">The type of the elements in <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-691">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-691">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-692">Oggetto Partitioner contenente l'origine dati originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-692">The partitioner that contains the original data source.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-693">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-693">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-694">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-694">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-695">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-695">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-696">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-696">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-697">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con dati locali del thread su un oggetto <see cref="T:System.Collections.Concurrent.Partitioner" /> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-697">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation  with thread-local data on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-698">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-698">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-699">Questo overload è disponibile per gli scenari in cui si desidera sostituire il valore predefinito di schema di partizionamento.</span><span class="sxs-lookup"><span data-stu-id="c24e5-699">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="c24e5-700">Ad esempio, i corpi di ciclo di dimensioni ridotte potrebbero trarre vantaggio dal partizionamento dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-700">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="c24e5-701">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A> metodo prevede che il partitioner personalizzati per supportare il partizionamento dinamico.</span><span class="sxs-lookup"><span data-stu-id="c24e5-701">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="c24e5-702">Questo overload è disponibile per gli scenari con corpi di ciclo di dimensioni ridotte che potrebbero trarre vantaggio dal partizionamento per intervalli statici.</span><span class="sxs-lookup"><span data-stu-id="c24e5-702">This overload is provided for scenarios with small loop bodies that might benefit from static range partitioning.</span></span> <span data-ttu-id="c24e5-703">I partitioner devono supportare partizioni dinamiche.</span><span class="sxs-lookup"><span data-stu-id="c24e5-703">Partitioners must support dynamic partitions.</span></span>  <span data-ttu-id="c24e5-704">Per altre informazioni, vedere [partitioner personalizzati per PLINQ e TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) e [procedura: implementare partizioni dinamiche](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-704">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="c24e5-705">Il `localInit` delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-705">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-706">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-706">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-707">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-707">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-708">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-708">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-709">Il `localFinally` delegato viene richiamato una volta per ogni attività per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-709">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="c24e5-710">Questo delegato potrebbe essere chiamato simultaneamente su più attività. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-710">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-711">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-711">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-712">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-712">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-713">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-713">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-714">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-714">-or-</span>
          </span>
          <span data-ttu-id="c24e5-715">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-715">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-716">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-716">-or-</span>
          </span>
          <span data-ttu-id="c24e5-717">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-717">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-718">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-718">-or-</span>
          </span>
          <span data-ttu-id="c24e5-719">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-719">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-720">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-720">-or-</span>
          </span>
          <span data-ttu-id="c24e5-721">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-721">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c24e5-722">La proprietà <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> in <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> restituisce <see langword="false" /> oppure il partitioner restituisce partizioni <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-722">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-723">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-723">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-724">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-724">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-725">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-725">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-726">Tipo di dati nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-726">The type of the data in the source.</span>
          </span>
        </typeparam>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-727">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-727">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-728">Origine dati enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-728">An enumerable data source.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-729">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-729">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-730">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-730">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-731">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-731">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-732">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-732">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-733">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con dati locali del thread e indici a 64 bit su un oggetto <see cref="T:System.Collections.IEnumerable" /> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-733">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data and 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-734">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-734">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-735">Il `body` delegato viene richiamato una volta per ogni elemento di `source` enumerabile.</span><span class="sxs-lookup"><span data-stu-id="c24e5-735">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="c24e5-736">Viene fornito con i parametri seguenti: l'elemento corrente, un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo, indice dell'elemento corrente (<xref:System.Int64>) e uno stato locale che può essere condiviso fra le iterazioni che eseguono sullo stesso thread.</span><span class="sxs-lookup"><span data-stu-id="c24e5-736">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, the current element's index (<xref:System.Int64>), and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="c24e5-737">Il `localInit` delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-737">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-738">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-738">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-739">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-739">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-740">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-740">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-741">Il `localFinally` delegato viene richiamato una volta per ogni thread per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-741">The `localFinally` delegate is invoked once per thread to perform a final action on each task’s local state.</span></span> <span data-ttu-id="c24e5-742">Questo delegato potrebbe essere chiamato simultaneamente su più attività. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-742">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-743">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-743">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-744">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-744">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-745">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-745">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-746">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-746">-or-</span>
          </span>
          <span data-ttu-id="c24e5-747">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-747">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-748">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-748">-or-</span>
          </span>
          <span data-ttu-id="c24e5-749">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-749">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-750">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-750">-or-</span>
          </span>
          <span data-ttu-id="c24e5-751">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-751">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-752">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-752">-or-</span>
          </span>
          <span data-ttu-id="c24e5-753">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-753">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-754">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-754">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-755">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-755">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-756">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-756">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c24e5-757">Tipo di dati nell'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-757">The type of the data in the source.</span>
          </span>
        </typeparam>
        <typeparam name="TLocal">
          <span data-ttu-id="c24e5-758">Tipo dei dati locali del thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-758">The type of the thread-local data.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c24e5-759">Origine dati enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-759">An enumerable data source.</span>
          </span>
        </param>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-760">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-760">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="localInit">
          <span data-ttu-id="c24e5-761">Delegato della funzione che restituisce lo stato iniziale dei dati locali per ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-761">The function delegate that returns the initial state of the local data for each task.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="c24e5-762">Delegato richiamato una volta per iterazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-762">The delegate that is invoked once per iteration.</span>
          </span>
        </param>
        <param name="localFinally">
          <span data-ttu-id="c24e5-763">Delegato che esegue un'azione finale sullo stato locale di ogni attività.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-763">The delegate that performs a final action on the local state of each task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-764">Esegue un'operazione <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) con dati locali del thread su un oggetto <see cref="T:System.Collections.IEnumerable" /> nel quale le iterazioni possono essere eseguite in parallelo, è possibile configurare le opzioni di ciclo e lo stato del ciclo può essere monitorato e modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-764">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c24e5-765">Struttura che contiene informazioni sulla parte di ciclo completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-765">A structure that contains information about which portion of the loop completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-766">Il `body` delegato viene richiamato una volta per ogni elemento di `source` enumerabile.</span><span class="sxs-lookup"><span data-stu-id="c24e5-766">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="c24e5-767">Viene fornito con i parametri seguenti: l'elemento corrente, un <xref:System.Threading.Tasks.ParallelLoopState> istanza che può essere usato per uscire dal ciclo in modo anomalo e uno stato locale che può essere condiviso fra le iterazioni che vengono eseguite sullo stesso thread.</span><span class="sxs-lookup"><span data-stu-id="c24e5-767">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="c24e5-768">Il `localInit` delegato viene richiamato una volta per ogni attività che partecipa all'esecuzione del ciclo e restituisce lo stato locale iniziale per ognuna di queste attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-768">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="c24e5-769">Questi stati iniziali vengono passati al primo `body` le chiamate in ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-769">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="c24e5-770">Quindi, ogni chiamata successiva del corpo restituisce un valore di stato probabilmente modificato che viene passato alla successiva chiamata del corpo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-770">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="c24e5-771">Infine, l'ultima chiamata corpo su ogni attività restituisce un valore di stato che viene passato al `localFinally` delegare.</span><span class="sxs-lookup"><span data-stu-id="c24e5-771">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="c24e5-772">Il `localFinally` delegato viene richiamato una volta per ogni thread per eseguire un'azione finale sullo stato locale di ogni attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-772">The `localFinally` delegate is invoked once per thread to perform a final action on each task’s local state.</span></span> <span data-ttu-id="c24e5-773">Questo delegato potrebbe essere chiamato simultaneamente su più attività. Pertanto, è necessario sincronizzare l'accesso a tutte le variabili condivise.</span><span class="sxs-lookup"><span data-stu-id="c24e5-773">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="c24e5-774">Il <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> metodo potrebbe usare più attività di thread in base alla durata dell'esecuzione, come le attività esistenti completate e vengono sostituiti da nuove attività.</span><span class="sxs-lookup"><span data-stu-id="c24e5-774">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="c24e5-775">In questo modo sottostante <xref:System.Threading.Tasks.TaskScheduler> oggetto la possibilità di aggiungere, modificare o rimuovere i thread che gestiscono il ciclo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-775">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-776">Il valore dell'argomento <paramref name="source" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-776">The <paramref name="source" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-777">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-777">-or-</span>
          </span>
          <span data-ttu-id="c24e5-778">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-778">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-779">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-779">-or-</span>
          </span>
          <span data-ttu-id="c24e5-780">Il valore dell'argomento <paramref name="body" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-780">The <paramref name="body" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-781">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-781">-or-</span>
          </span>
          <span data-ttu-id="c24e5-782">Il valore dell'argomento <paramref name="localInit" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-782">The <paramref name="localInit" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-783">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-783">-or-</span>
          </span>
          <span data-ttu-id="c24e5-784">Il valore dell'argomento <paramref name="localFinally" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-784">The <paramref name="localFinally" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-785">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'argomento <paramref name="parallelOptions" /> è annullato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-785">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-786">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-786">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-787">Eccezione che contiene tutte le eccezioni singole generate su tutti i thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-787">The exception that contains all the individual exceptions thrown on all threads.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c24e5-788">Esegue ognuna delle azioni fornite, eventualmente in parallelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-788">Executes each of the provided actions, possibly in parallel.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static void Invoke (params Action[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Invoke(class System.Action[] actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Invoke (ParamArray actions As Action())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Invoke(... cli::array &lt;Action ^&gt; ^ actions);" />
      <MemberSignature Language="F#" Value="static member Invoke : Action[] -&gt; unit" Usage="System.Threading.Tasks.Parallel.Invoke actions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="System.Action[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions">
          <span data-ttu-id="c24e5-789">Matrice di <see cref="T:System.Action" /> da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-789">An array of <see cref="T:System.Action" /> to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-790">Esegue ognuna delle azioni fornite, eventualmente in parallelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-790">Executes each of the provided actions, possibly in parallel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-791">Questo metodo può essere utilizzato per eseguire una serie di operazioni, potenzialmente in parallelo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-791">This method can be used to execute a set of operations, potentially in parallel.</span></span>  
  
 <span data-ttu-id="c24e5-792">Non sono garanzie sull'ordine in cui eseguire le operazioni o se vengono eseguite in parallelo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-792">No guarantees are made about the order in which the operations execute or whether they execute in parallel.</span></span> <span data-ttu-id="c24e5-793">Questo metodo non restituisce fino a quando ognuna delle operazioni fornite è completata, indipendentemente dal fatto che il completamento si verifica a causa di chiusura normale o insolita.</span><span class="sxs-lookup"><span data-stu-id="c24e5-793">This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</span></span>  
  
 <span data-ttu-id="c24e5-794">Per altre informazioni, vedere [Procedura: utilizzare Parallel.Invoke per eseguire operazioni in parallelo](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-794">For more information, see [How to: Use Parallel.Invoke to Execute Parallel Operations](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c24e5-795">In questo esempio viene illustrato come utilizzare il <xref:System.Threading.Tasks.Parallel.Invoke%2A> metodo con altri metodi, delegati anonimi ed espressioni lambda.</span><span class="sxs-lookup"><span data-stu-id="c24e5-795">This example demonstrates how to use the <xref:System.Threading.Tasks.Parallel.Invoke%2A> method with other methods, anonymous delegates, and lambda expressions.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelinvoke.cs#01)]
 [!code-vb[System.Threading.Tasks.Parallel#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelinvoke.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-796">Il valore dell'argomento <paramref name="actions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-796">The <paramref name="actions" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-797">Eccezione generata quando qualsiasi azione nella matrice <paramref name="actions" /> genera un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-797">The exception that is thrown when any action in the <paramref name="actions" /> array throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c24e5-798">La matrice di <paramref name="actions" /> contiene un elemento <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-798">The <paramref name="actions" /> array contains a <see langword="null" /> element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static void Invoke (System.Threading.Tasks.ParallelOptions parallelOptions, params Action[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Invoke(class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action[] actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Invoke(System::Threading::Tasks::ParallelOptions ^ parallelOptions, ... cli::array &lt;Action ^&gt; ^ actions);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Threading.Tasks.ParallelOptions * Action[] -&gt; unit" Usage="System.Threading.Tasks.Parallel.Invoke (parallelOptions, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="actions" Type="System.Action[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parallelOptions">
          <span data-ttu-id="c24e5-799">Oggetto che configura il comportamento di questa operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-799">An object that configures the behavior of this operation.</span>
          </span>
        </param>
        <param name="actions">
          <span data-ttu-id="c24e5-800">Matrice di azioni da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-800">An array of actions to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c24e5-801">Esegue ciascuna delle azioni fornite, possibilmente in parallelo, a meno che l'operazione non venga annullata dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-801">Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24e5-802">Questo metodo può essere utilizzato per eseguire una serie di operazioni, potenzialmente in parallelo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-802">This method can be used to execute a set of operations, potentially in parallel.</span></span> <span data-ttu-id="c24e5-803">Il token di annullamento passato con la <xref:System.Threading.Tasks.ParallelOptions> struttura consente al chiamante annullare l'intera operazione.</span><span class="sxs-lookup"><span data-stu-id="c24e5-803">The cancellation token passed in with the <xref:System.Threading.Tasks.ParallelOptions> structure enables the caller to cancel the entire operation.</span></span> <span data-ttu-id="c24e5-804">Per altre informazioni, vedere [Annullamento in thread gestiti](~/docs/standard/threading/cancellation-in-managed-threads.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-804">For more information, see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).</span></span>  
  
 <span data-ttu-id="c24e5-805">Non sono garanzie sull'ordine in cui eseguire le operazioni o se vengono eseguite in parallelo.</span><span class="sxs-lookup"><span data-stu-id="c24e5-805">No guarantees are made about the order in which the operations execute or whether they execute in parallel.</span></span> <span data-ttu-id="c24e5-806">Questo metodo non restituisce fino a quando ognuna delle operazioni fornite è completata, indipendentemente dal fatto che il completamento si verifica a causa di chiusura normale o insolita.</span><span class="sxs-lookup"><span data-stu-id="c24e5-806">This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</span></span>  
  
 <span data-ttu-id="c24e5-807">Per altre informazioni, vedere [Procedura: utilizzare Parallel.Invoke per eseguire operazioni in parallelo](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span><span class="sxs-lookup"><span data-stu-id="c24e5-807">For more information, see [How to: Use Parallel.Invoke to Execute Parallel Operations](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="c24e5-808">L'oggetto <see cref="T:System.Threading.CancellationToken" /> nell'oggetto <paramref name="parallelOptions" /> è impostato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-808">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> is set.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c24e5-809">Il valore dell'argomento <paramref name="actions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-809">The <paramref name="actions" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c24e5-810">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-810">-or-</span>
          </span>
          <span data-ttu-id="c24e5-811">Il valore dell'argomento <paramref name="parallelOptions" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-811">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="c24e5-812">Eccezione generata quando qualsiasi azione nella matrice <paramref name="actions" /> genera un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-812">The exception that is thrown when any action in the <paramref name="actions" /> array throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c24e5-813">La matrice di <paramref name="actions" /> contiene un elemento <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-813">The <paramref name="actions" /> array contains a <see langword="null" /> element.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c24e5-814">L'oggetto <see cref="T:System.Threading.CancellationTokenSource" /> associato all'oggetto <see cref="T:System.Threading.CancellationToken" /> nel <paramref name="parallelOptions" /> è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c24e5-814">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>