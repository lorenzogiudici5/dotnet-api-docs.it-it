<Type Name="HttpSessionState" FullName="System.Web.SessionState.HttpSessionState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b167891a8d919a4dc467cbde5ee7f5df32d79d1a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39930517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpSessionState : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpSessionState extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.HttpSessionState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpSessionState&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSessionState sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HttpSessionState = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce accesso ai valori relativi allo stato sessione, oltre che alle impostazioni a livello di sessione e ai metodi di gestione della durata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET consente la gestione dello stato della sessione per consentire di archiviare informazioni associate a una sessione del browser univoci tra più richieste. È possibile archiviare un insieme di valori di che cui si fa riferimento il nome della chiave o indice numerico. Accesso alle funzionalità e i valori della sessione è disponibile tramite il <xref:System.Web.SessionState.HttpSessionState> classe, che è accessibile tramite il <xref:System.Web.HttpContext.Session%2A> proprietà dell'oggetto corrente <xref:System.Web.HttpContext>, o il <xref:System.Web.UI.Page.Session%2A> proprietà del <xref:System.Web.UI.Page>.  
  
 I dati della sessione sono associato a una sessione del browser specifico utilizzando un identificatore univoco. Per impostazione predefinita, questo identificatore viene memorizzato in un cookie di sessione permanente nel browser, ma è anche possibile configurare l'applicazione per archiviare l'identificatore di sessione nell'URL, impostando il `cookieless` dell'attributo `true` o <xref:System.Web.HttpCookieMode.UseUri> nell'elemento di configurazione dell'applicazione. È possibile inoltre determinare se i cookie sono supportati dal browser, specificando un valore di ASP.NET <xref:System.Web.HttpCookieMode.UseDeviceProfile> per il `cookieless` attributo. È anche possibile ASP.NET determinare se i cookie siano abilitati per il browser, specificando un valore di <xref:System.Web.HttpCookieMode.AutoDetect> per il `cookieless` attributo. Se i cookie sono supportati quando <xref:System.Web.HttpCookieMode.UseDeviceProfile> è specificato o abilitato quando <xref:System.Web.HttpCookieMode.AutoDetect> viene specificato, la sessione identificatore sarà memorizzato in un cookie; in caso contrario, verrà archiviato l'identificatore di sessione nell'URL.  
  
 Le sessioni vengono avviate durante la prima richiesta e i valori della sessione verranno mantenute fino a quando viene effettuata una nuova richiesta dal browser prima del numero di minuti specificato nella <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> pass di proprietà. Quando viene avviata una nuova sessione, la sessione <xref:System.Web.SessionState.SessionStateModule.Start> viene generato l'evento. È possibile usare questo evento per eseguire operazioni aggiuntive all'inizio di una sessione, ad esempio l'impostazione predefinita i valori della sessione. Quando una sessione di timeout, il <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> viene chiamato il metodo o l'applicazione ASP.NET viene arrestato, la sessione <xref:System.Web.SessionState.SessionStateModule.End> viene generato l'evento. È possibile usare questo evento per eseguire le operazioni di pulitura necessarie. Il <xref:System.Web.SessionState.SessionStateModule.End> evento viene generato solo quando lo stato della sessione `mode` è impostata su <xref:System.Web.SessionState.SessionStateMode.InProc>.  
  
 Per migliorare le prestazioni, le sessioni che usano i cookie non allocare spazio di archiviazione di sessione fino a quando i dati vengono effettivamente archiviati nel <xref:System.Web.UI.Page.Session%2A> oggetto. Per altre informazioni, vedere la proprietà <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 Lo stato della sessione non viene mantenuto oltre i limiti dell'applicazione ASP.NET. Se un browser consente di passare a un'altra applicazione, le informazioni della sessione non sono disponibile per la nuova applicazione.  
  
 I valori della sessione vengono archiviati in memoria nel server Web, per impostazione predefinita. È anche possibile archiviare i valori della sessione in un database di SQL Server, un server di stato ASP.NET o un server personalizzato. In questo modo è possibile mantenere i valori di sessione nei casi in cui il processo di ASP.NET o IIS o l'applicazione ASP.NET viene riavviato e rendere disponibili i valori della sessione tra tutti i server in una Web farm. Questo comportamento viene configurato impostando la `mode` su un valore valido dell'attributo <xref:System.Web.SessionState.SessionStateMode> valore nell'elemento di configurazione dell'applicazione. Per altre informazioni, vedere [modalità stato sessione](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4).  
  
 Alternative per lo stato della sessione includono lo stato dell'applicazione (vedere la <xref:System.Web.HttpApplication.Application%2A> proprietà) e la cache ASP.NET (vedere il <xref:System.Web.Caching> dello spazio dei nomi), quali variabili di archiviazione che sono accessibili da tutti gli utenti di un'applicazione ASP.NET, il profilo di ASP.NET (vedere la <xref:System.Web.Profile> dello spazio dei nomi), che conserva i valori dell'utente in un archivio dati senza scadenza utilizzando un timeout; ASP.NET <xref:System.Web.UI.WebControls?displayProperty=nameWithType>, che mantiene i valori di controllo nella <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; la <xref:System.Web.HttpRequest.QueryString%2A> proprietà; e campi di un form HTML che sono disponibili da un HTTP `POST` utilizzando il <xref:System.Web.HttpRequest.Form%2A> raccolta. Per altre informazioni sulle differenze tra lo stato della sessione e altre alternative di gestione dello stato, vedere [suggerimenti per la gestione dello stato di ASP.NET](http://msdn.microsoft.com/library/af79fa0d-4bc8-47a6-9915-d8e355bfb732).  
  
   
  
## Examples  
 Esempio di codice seguente imposta e recupera i valori di stato della sessione.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpSessionState#30](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/session2cs.aspx#30)]
 [!code-aspx-vb[HttpSessionState#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/session2vb.aspx#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Web.Profile" />
    <altmember cref="N:System.Web.Caching" />
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Abandon" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon();" />
      <MemberSignature Language="F#" Value="member this.Abandon : unit -&gt; unit" Usage="httpSessionState.Abandon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annulla la sessione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una volta il <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> viene chiamato il metodo, la sessione corrente non è più valida e può essere avviata una nuova sessione. <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> fa sì che il <xref:System.Web.SessionState.SessionStateModule.End> generazione dell'evento. Un nuovo <xref:System.Web.SessionState.SessionStateModule.Start> verrà generato l'evento nella richiesta successiva.  
  
 Gli identificatori di sessione per abbandonato o sono scadute le sessioni vengono riciclati per impostazione predefinita. Vale a dire, se viene effettuata una richiesta che include l'identificatore di sessione per una sessione scaduta o chiusa, una nuova sessione viene avviata usando lo stesso identificatore di sessione. È possibile disabilitare questa impostando `regenerateExpiredSessionId` attributo dell'elemento di configurazione da `true`. Per altre informazioni, vedere [identificatori di sessione](http://msdn.microsoft.com/library/146ca206-d151-4f2e-a548-bcca05ccf0cb).  
  
 Il <xref:System.Web.SessionState.SessionStateModule.End> l'evento è supportato solo quando il <xref:System.Web.SessionState.HttpSessionState.Mode%2A> è impostata su <xref:System.Web.SessionState.SessionStateMode.InProc>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="httpSessionState.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'elemento da aggiungere alla raccolta degli stati sessione.</param>
        <param name="value">Valore dell'elemento da aggiungere alla raccolta degli stati sessione.</param>
        <summary>Aggiunge un nuovo elemento all'insieme dello stato sessione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il `name` parametro fa riferimento a un elemento di stato della sessione esistente, l'elemento esistente viene sovrascritto con il parametro specificato `value`.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come archiviare i valori nello stato sessione usando il <xref:System.Web.SessionState.HttpSessionState.Add%2A> (metodo). Viene inoltre illustrato come rimuovere i valori nello stato sessione usando il <xref:System.Web.SessionState.HttpSessionState.Remove%2A> (metodo). Oggetto <xref:System.Web.UI.WebControls.Repeater> controllo utilizzato per visualizzare lo stato della sessione contenuti nella pagina Web. Il <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> metodo viene utilizzato per scorrere la raccolta dello stato della sessione e popolare il <xref:System.Web.UI.WebControls.Repeater> controllo.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpSessionState.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove tutte le chiavi e i valori dalla raccolta di stato sessione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CodePage : int with get, set" Usage="System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'identificatore del set di caratteri per la sessione corrente.</summary>
        <value>Identificatore del set di caratteri per la sessione corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un set di caratteri (tabella codici) viene utilizzato per interpretare dati multibyte character, determinare il valore di carattere e l'ordinamento. Tabella codici impostazioni si applicano solo ai dati di caratteri multibyte e non per dati carattere Unicode.  
  
 Ciò <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> proprietà viene fornita per compatibilità con solo le versioni precedenti di ASP. Se non è necessaria garantire la compatibilità con le pagine ASP, usare il <xref:System.Web.HttpResponse.ContentEncoding%2A> proprietà invece.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Contents { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Web.SessionState.HttpSessionState" Usage="System.Web.SessionState.HttpSessionState.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'oggetto stato sessione corrente.</summary>
        <value>Oggetto <see cref="T:System.Web.SessionState.HttpSessionState" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.SessionState.HttpSessionState.Contents%2A> proprietà viene fornita per garantire la compatibilità con le versioni precedenti di ASP.  
  
   
  
## Examples  
 Esempio di codice seguente elenca i nomi degli elementi e i valori di <xref:System.Web.SessionState.HttpSessionState.Contents%2A> proprietà.  
  
 [!code-csharp[HttpSessionState#9](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#9)]
 [!code-vb[HttpSessionState#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'applicazione è configurata per sessioni senza cookie.</summary>
        <value>Uno dei valori <see cref="T:System.Web.HttpCookieMode" /> che indica se l'applicazione è configurata per le sessioni senza cookie. Il valore predefinito è <see cref="F:System.Web.HttpCookieMode.UseCookies" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> viene `true`, il <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> restituisce proprietà <xref:System.Web.HttpCookieMode.UseUri>; in caso contrario, il <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> restituisce proprietà <xref:System.Web.HttpCookieMode.UseCookies>.  
  
   
  
## Examples  
 I seguente esempio di codice impostare il `cookieless` attributo sessione `true` nel file Web. config. Per questa configurazione dell'applicazione di esempio, il <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> restituirebbe proprietà <xref:System.Web.HttpCookieMode.UseUri>.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="httpSessionState.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Oggetto <see cref="T:System.Array" /> che riceve i valori di sessione.</param>
        <param name="index">Indice in base zero in <c>array</c> in corrispondenza del quale viene iniziata la copia.</param>
        <summary>Copia la raccolta dei valori relativi allo stato sessione in una matrice unidimensionale, a partire dall'indice specificato nella matrice.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.SessionState.HttpSessionState.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di elementi nella raccolta degli stati sessione.</summary>
        <value>Numero di elementi nella raccolta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="httpSessionState.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore che può essere usato per leggere tutti i nomi di variabile di stato sessione nella sessione corrente.</summary>
        <returns>Un oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere i nomi delle variabili nell'insieme dello stato sessione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come archiviare i valori nello stato sessione usando il <xref:System.Web.SessionState.HttpSessionState.Add%2A> (metodo). Viene inoltre illustrato come rimuovere i valori nello stato sessione usando il <xref:System.Web.SessionState.HttpSessionState.Remove%2A> (metodo). Oggetto <xref:System.Web.UI.WebControls.Repeater> controllo viene usato per visualizzare il contenuto dello stato della sessione nella pagina Web. Il <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> metodo viene utilizzato per scorrere la raccolta dello stato della sessione e popolare il <xref:System.Web.UI.WebControls.Repeater> controllo.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCookieless">
      <MemberSignature Language="C#" Value="public bool IsCookieless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCookieless As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCookieless { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCookieless : bool" Usage="System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'ID della sessione è incorporato nell'URL o memorizzato in un cookie HTTP.</summary>
        <value>
          <see langword="true" /> se la sessione è incorporata nell'URL, altrimenti <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET identifica le sessioni in modo univoco con ogni browser. Per impostazione predefinita, l'identificatore univoco per una sessione è archiviato in un cookie di sessione permanente nel browser. È possibile specificare che gli identificatori di sessione non essere archiviati in un cookie impostando la `cookieless` dell'attributo `true` nell'elemento di configurazione.  
  
> [!NOTE]
>  Per migliorare la sicurezza dell'applicazione, l'applicazione deve consentire agli utenti di effettuare la disconnessione, a questo punto è necessario che chiami il <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> (metodo). In questo modo si riduce il rischio di un'origine non desiderata utilizzando l'identificatore univoco nell'URL per recuperare i dati privati archiviati nella sessione per un utente.  
  
 ASP.NET mantiene lo stato della sessione senza cookie, inserendo automaticamente un ID di sessione univoco nell'URL della pagina. Ad esempio, l'URL seguente è stato modificato da ASP.NET per includere il lit3py55t21z5v55vlm25s55 di ID di sessione univoco:  
  
```  
http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx  
```  
  
 ASP.NET consente di modificare i collegamenti contenuti in tutte le pagine richieste incorporando un valore di ID di sessione usando i collegamenti appena prima dell'invio di ogni pagina nel browser. Lo stato della sessione viene mantenuto fino a quando l'utente segue il percorso di collegamenti che fornisce il sito. Tuttavia, se l'agente utente riscrive l'URL, l'istanza dello stato della sessione andranno perse.  
  
 L'ID di sessione è incorporato nell'URL dopo la barra che segue il nome dell'applicazione e prima di qualsiasi identificatore di file o directory virtuale rimanente. In questo modo ASP.NET per risolvere il nome dell'applicazione prima di coinvolgere il <xref:System.Web.SessionState.SessionStateModule> nella richiesta.  
  
 Per impostazione predefinita, gli identificatori di sessione utilizzati nelle sessioni senza cookie vengono riciclati. Vale a dire, se viene effettuata una richiesta con un ID di sessione è scaduta, viene avviata una nuova sessione utilizzando l'ID di sessione fornito con la richiesta. Questo comportamento può comportare la condivisione indesiderata dei dati della sessione quando un collegamento che contiene un ID di sessione senza cookie è condiviso tra più browser, ad esempio tramite un motore di ricerca o un altro programma. È possibile ridurre la possibilità che i dati della sessione è condivisi da più client disabilitando il riciclo degli identificatori di sessione. A questo scopo, impostare il `regenerateExpiredSessionId` attributo dell'elemento di configurazione da `true`. Ciò comporterà un nuovo ID sessione viene generato quando viene effettuata una richiesta di sessione senza cookie con un ID sessione scaduti. Si noti che se la richiesta effettuata con l'ID sessione scaduti Usa HTTP `POST` metodo, quindi tutti i dati verranno persi `regenerateExpiredSessionId` è `true`, come ASP.NET esegue un reindirizzamento per garantire che il browser è l'identificatore della nuova sessione nell'URL.  
  
> [!NOTE]
>  La configurazione di `regenerateExpiredSessionId` dell'attributo `true` riduce la possibilità di condivisione indesiderata dei dati della sessione, non fornisce protezione da un'origine indesiderata acceda alla sessione di un altro utente, ottenendo il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valore e includerlo nelle richieste al server. Se si archiviano informazioni personali o riservate nello stato sessione, è consigliabile utilizzare SSL per crittografare le comunicazioni tra il browser e il server che include il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
   
  
## Examples  
 Il codice seguente viene impostata la `cookieless` attributo sessione su true nel file Web. config.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewSession">
      <MemberSignature Language="C#" Value="public bool IsNewSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNewSession : bool" Usage="System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la sessione è stata creata con la richiesta corrente.</summary>
        <value>
          <see langword="true" /> se la sessione è stata creata con la richiesta corrente, altrimenti <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la sessione è di sola lettura.</summary>
        <value>
          <see langword="true" /> se la sessione è di sola lettura, altrimenti <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'accesso all'insieme di valori relativi allo stato sessione è sincronizzato (thread-safe).</summary>
        <value>
          <see langword="true" /> se l'accesso alla raccolta è sincronizzato (thread-safe), altrimenti <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene o imposta i singoli valori di sessione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Web.SessionState.HttpSessionState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice numerico del valore della sessione.</param>
        <summary>Ottiene o imposta un valore di sessione in base all'indice numerico.</summary>
        <value>Valore dello stato della sessione archiviato in corrispondenza dell'indice specificato o <see langword="null" /> se l'elemento non esiste.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.SessionState.HttpSessionState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome chiave del valore di sessione.</param>
        <summary>Ottiene o imposta un valore di sessione in base al nome.</summary>
        <value>Valore dello stato della sessione con il nome specificato o <see langword="null" /> se l'elemento non esiste.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" Usage="System.Web.SessionState.HttpSessionState.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di chiavi per tutti i valori archiviati nell'insieme dello stato sessione.</summary>
        <value>L'oggetto <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> contenente tutte le chiavi di sessione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int with get, set" Usage="System.Web.SessionState.HttpSessionState.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'identificatore delle impostazioni locali (LCID) della sessione corrente.</summary>
        <value>Un'istanza <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura della sessione corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.SessionState.HttpSessionState.LCID%2A> proprietà viene fornita per compatibilità con solo le versioni precedenti di ASP. Se non è necessaria garantire la compatibilità con le pagine ASP, usare il <xref:System.Globalization.CultureInfo.LCID%2A> proprietà invece.  
  
 ASP.NET non archivia l'identificatore delle impostazioni locali nello stato della sessione. Il <xref:System.Web.SessionState.HttpSessionState.LCID%2A> accede alle proprietà di <xref:System.Globalization.CultureInfo.LCID%2A> proprietà per ottenere e impostare l'identificatore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As SessionStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::SessionStateMode Mode { System::Web::SessionState::SessionStateMode get(); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.SessionState.SessionStateMode" Usage="System.Web.SessionState.HttpSessionState.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la modalità corrente dello stato sessione.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.SessionState.SessionStateMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per informazioni su come configurare il server per <xref:System.Web.SessionState.SessionStateMode.StateServer> oppure <xref:System.Web.SessionState.SessionStateMode.SQLServer> archiviazione dello stato della sessione, vedere [Cenni preliminari sullo stato della sessione di ASP.NET](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc).  
  
   
  
## Examples  
 I seguente esempio di codice impostare il `mode` attributo sessione <xref:System.Web.SessionState.SessionStateMode.SQLServer> nel file Web. config. Per la modalità di sessione di SQL Server, il `sqlConnectionString` anche l'attributo è obbligatorio.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="SQLServer"  
      sqlConnectionString="Data Source=localhost;Integrated Security=SSPI"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpSessionState.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'elemento da eliminare dalla raccolta degli stati sessione.</param>
        <summary>Elimina un elemento dalla raccolta degli stati sessione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la raccolta dello stato della sessione non contiene un elemento con la proprietà specificata `name`, la raccolta rimane invariata. Non viene generata alcuna eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come archiviare i valori nello stato sessione usando il <xref:System.Web.SessionState.HttpSessionState.Add%2A> (metodo). Viene inoltre illustrato come rimuovere i valori nello stato sessione usando il <xref:System.Web.SessionState.HttpSessionState.Remove%2A> (metodo). Oggetto <xref:System.Web.UI.WebControls.Repeater> controllo viene usato per visualizzare il contenuto dello stato della sessione nella pagina Web. Il <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> metodo viene utilizzato per scorrere la raccolta dello stato della sessione e popolare il <xref:System.Web.UI.WebControls.Repeater> controllo.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="httpSessionState.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove tutte le chiavi e i valori dalla raccolta di stato sessione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.RemoveAll%2A> esegue la stessa funzione <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="httpSessionState.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell'elemento da rimuovere dalla raccolta degli stati sessione.</param>
        <summary>Elimina un elemento in corrispondenza dell'indice specificato dall'insieme dello stato sessione.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> è minore di zero.  
  
\- oppure - 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Web.SessionState.HttpSessionState.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionID">
      <MemberSignature Language="C#" Value="public string SessionID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionID : string" Usage="System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'identificatore univoco della sessione.</summary>
        <value>Identificatore di sessione univoco.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> proprietà viene utilizzata per identificare in modo univoco un browser con i dati della sessione sul server. Il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valore in modo casuale generato da ASP.NET e archiviato in un cookie di sessione permanente nel browser. Il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valore viene quindi inviato in un cookie con ogni richiesta all'applicazione ASP.NET.  
  
 Se si desidera disabilitare l'uso dei cookie in un'applicazione ASP.NET e prendere ancora usare dello stato della sessione, è possibile configurare l'applicazione per archiviare l'identificatore di sessione nell'URL invece di un cookie impostando la `cookieless` attributo della configurazione elemento da `true`, o a <xref:System.Web.HttpCookieMode.UseUri>, nel file Web. config per l'applicazione. È possibile inoltre determinare se i cookie sono supportati dal browser, specificando un valore di ASP.NET <xref:System.Web.HttpCookieMode.UseDeviceProfile> per il `cookieless` attributo. È anche possibile ASP.NET determinare se i cookie siano abilitati per il browser, specificando un valore di <xref:System.Web.HttpCookieMode.AutoDetect> per il `cookieless` attributo. Se i cookie sono supportati quando <xref:System.Web.HttpCookieMode.UseDeviceProfile> è specificato o abilitato quando <xref:System.Web.HttpCookieMode.AutoDetect> viene specificato, la sessione identificatore sarà memorizzato in un cookie; in caso contrario, verrà archiviato l'identificatore di sessione nell'URL. Per altre informazioni, vedere la proprietà <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>.  
  
 Il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> inviati tra il server e il browser in testo non crittografato, in un cookie o nell'URL. Di conseguenza, un'origine non autorizzata potrebbe ottenere l'accesso alla sessione di un altro utente ottenendo il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valore e includerlo nelle richieste al server. Se si archiviano informazioni personali o riservate nello stato sessione, è consigliabile utilizzare SSL per crittografare le comunicazioni tra il browser e il server che include il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 Quando si usa lo stato della sessione basata su cookie, ASP.NET non allocare spazio di archiviazione per dati di sessione fino a quando il <xref:System.Web.UI.Page.Session%2A> oggetto viene usato. Di conseguenza, un nuovo ID sessione viene generato per ogni richiesta di pagina fino a quando non si accede all'oggetto di sessione. Se l'applicazione richiede un ID di sessione statici per l'intera sessione, è possibile implementare il `Session_Start` metodo nel file Global. asax dell'applicazione e archiviare dati nel <xref:System.Web.UI.Page.Session%2A> dell'oggetto per correggere l'ID di sessione, oppure è possibile usare codice in un'altra parte di l'applicazione in cui archiviare in modo esplicito dati di <xref:System.Web.UI.Page.Session%2A> oggetto.  
  
 Se l'applicazione usa lo stato della sessione senza cookie, l'ID di sessione viene generato nella prima visualizzazione pagina e viene mantenuta per l'intera sessione.  
  
   
  
## Examples  
 Esempio di codice seguente illustra un file Web. config che consente di configurare lo stato della sessione per l'utilizzo di identificatori di sessione senza cookie. Per altre informazioni, vedere la proprietà <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticObjects : System.Web.HttpStaticObjectsCollection" Usage="System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di oggetti dichiarati da tag <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" /> all'interno del file Global.asax dell'applicazione ASP.NET.</summary>
        <value>Un oggetto <see cref="T:System.Web.HttpStaticObjectsCollection" /> contenente gli oggetti dichiarati nel file Global.asax.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un oggetto in una pagina non supporta la serializzazione e <xref:System.Web.SessionState.HttpSessionState.Mode%2A> out-of-process (<xref:System.Web.SessionState.SessionStateMode.SQLServer> o <xref:System.Web.SessionState.SessionStateMode.StateServer>), l'oggetto non verrà creato e non verranno aggiunti a questa raccolta.  
  
 Il <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> proprietà viene fornita per garantire la compatibilità con le versioni precedenti di ASP.  
  
   
  
## Examples  
 Nell'esempio di codice riportato Elenca le `id` e tipo di oggetto dell'oggetto nel <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> raccolta.  
  
 [!code-csharp[HttpSessionState#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#10)]
 [!code-vb[HttpSessionState#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta dei valori di stato sessione.</summary>
        <value>Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene e imposta il periodo di tempo, espresso in minuti, consentito tra due richieste prima che il provider dello stato sessione termini la sessione.</summary>
        <value>Periodo di timeout, in minuti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> proprietà può essere impostata nel file Web. config per un'applicazione usando il `timeout` attributo dell'elemento di configurazione, oppure è possibile impostare il <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> valore della proprietà direttamente tramite il codice dell'applicazione.  
  
 Il <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> proprietà non può essere impostata su un valore maggiore di minuti 525.600 (1 anno). Il valore predefinito è 20 minuti.  
  
   
  
## Examples  
 Il codice seguente viene impostata la `timeout` attributo sessione a 30 minuti nel file Web. config.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>