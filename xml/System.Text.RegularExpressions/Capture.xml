<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c97593c82b72397c42d3d64ff78e34c8ee2870d" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52352439" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <TypeSignature Language="F#" Value="type Capture = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta i risultati di una singola acquisizione di sottoespressione riuscita.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Text.RegularExpressions.Capture> oggetto non è modificabile e include alcun costruttore pubblico. Le istanze vengono restituite tramite i <xref:System.Text.RegularExpressions.CaptureCollection> oggetto, che viene restituito dal `Match.Captures` e <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> proprietà. Tuttavia, il `Match.Captures` proprietà fornisce informazioni sulla stessa corrispondenza il <xref:System.Text.RegularExpressions.Match> oggetto.  
  
 Se non si applica un a un gruppo di acquisizione, la <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> proprietà restituisce un <xref:System.Text.RegularExpressions.CaptureCollection> con una singola <xref:System.Text.RegularExpressions.Capture> oggetto che fornisce informazioni sull'acquisizione stesso come il <xref:System.Text.RegularExpressions.Group> oggetto. Se si applica un quantificatore a un gruppo di acquisizione, la `Group.Index`, `Group.Length`, e `Group.Value` proprietà forniscono informazioni solo sull'ultimo gruppo acquisito, mentre il <xref:System.Text.RegularExpressions.Capture> gli oggetti nel <xref:System.Text.RegularExpressions.CaptureCollection> forniscono informazioni su tutti Consente di acquisire sottoespressioni. Nell'esempio viene illustrata una situazione di questo tipo.  
  
   
  
## Examples  
 L'esempio seguente definisce un'espressione regolare che corrisponde alle frasi che non contengono punteggiatura, ad eccezione di un punto (".").  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 Il criterio di ricerca di espressioni regolari `((\w+)[\s.])+` è definito nel modo illustrato nella tabella seguente. Si noti che in questa espressione regolare viene applicato un quantificatore (+) per l'intera espressione regolare.  
  
|Modello|Descrizione|  
|-------------|-----------------|  
|`(\w+)`|Trova la corrispondenza di uno o più caratteri alfanumerici. Equivale al secondo gruppo di acquisizione.|  
|`[\s.])`|Corrisponde a uno spazio vuoto o un punto (".").|  
|`((\w+)[\s.])`|Corrisponde a uno o più caratteri alfanumerici seguiti da uno spazio vuoto o un punto ("."). Equivale al primo gruppo di acquisizione.|  
|`((\w+)[\s.])+`|Trova la corrispondenza una o più occorrenze di un carattere alfanumerico o di caratteri seguiti da uno spazio vuoto o un punto (".").|  
  
 In questo esempio, la stringa di input è costituito da due frasi. Come illustrato nell'output, nella prima frase costituito solo da una parola, in modo che il <xref:System.Text.RegularExpressions.CaptureCollection> oggetto ha un unico <xref:System.Text.RegularExpressions.Capture> che rappresenta la stessa acquisizione il <xref:System.Text.RegularExpressions.Group> oggetto. La seconda frase è costituito da più parole, in modo che il <xref:System.Text.RegularExpressions.Group> oggetti contengono solo informazioni relative alla sottoespressione corrispondente ultimo. Gruppo 1, che rappresenta la prima acquisizione, che contiene l'ultima parola nella frase con un periodo di chiusura. Gruppo 2, che rappresenta l'acquisizione di secondo, che contiene l'ultima parola nella frase. Tuttavia, il <xref:System.Text.RegularExpressions.Capture> gli oggetti del gruppo <xref:System.Text.RegularExpressions.CaptureCollection> oggetto acquisire ogni una sottoespressione. Il <xref:System.Text.RegularExpressions.Capture> oggetti nella raccolta del primo gruppo di acquisizione di acquisizioni contengono informazioni su ogni parola acquisita e spazio vuoto o periodo. Il <xref:System.Text.RegularExpressions.Capture> oggetti nella raccolta del secondo gruppo di acquisizione di acquisizioni contengono informazioni su ogni parola acquisita.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Text.RegularExpressions.Capture.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Posizione nella stringa originale in cui si trova il primo carattere della sottostringa acquisita.</summary>
        <value>Posizione iniziale con inizio zero nella stringa originale in cui si trova la sottostringa acquisita.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Text.RegularExpressions.Capture.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la lunghezza della sottostringa acquisita.</summary>
        <value>Lunghezza della sottostringa acquisita.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="capture.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera la sottostringa acquisita dalla stringa di input chiamando la proprietà <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
        <returns>Sottostringa acquisita dalla corrispondenza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ToString` è effettivamente una chiamata interna al <xref:System.Text.RegularExpressions.Capture.Value%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Text.RegularExpressions.Capture.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la sottostringa acquisita dalla stringa di input.</summary>
        <value>Sottostringa acquisita dalla corrispondenza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se una chiamata ai <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> oppure <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> metodo non riesce a trovare una corrispondenza, il valore dell'oggetto restituito `Match.Value` è di proprietà <xref:System.String.Empty?displayProperty=nameWithType>. Se il motore delle espressioni regolari viene trovato una corrispondenza tra un gruppo di acquisizione. il valore dell'oggetto restituito `Group.Value` è di proprietà <xref:System.String.Empty?displayProperty=nameWithType>. Vedere il secondo esempio per un'illustrazione.  
  
   
  
## Examples  
 L'esempio seguente definisce un'espressione regolare che corrisponde alle frasi che non contengono punteggiatura, ad eccezione di un punto ("."). Il `Match.Value` proprietà Visualizza la stringa di risultato, che consiste in una frase corrispondente, per ogni corrispondenza. Il `Group.Value` proprietà Visualizza la stringa di risultato per ogni gruppo di acquisizione; è costituito l'ultima stringa acquisita da tale gruppo di acquisizione. Il <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> proprietà Visualizza la stringa di risultato per ogni acquisizione.  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 Il criterio di ricerca di espressioni regolari `((\w+)[\s.])+` è definito nel modo illustrato nella tabella seguente. Si noti che in questa espressione regolare viene applicato un quantificatore (+) per l'intera espressione regolare.  
  
|Modello|Descrizione|  
|-------------|-----------------|  
|`(\w+)`|Trova la corrispondenza di uno o più caratteri alfanumerici. Equivale al secondo gruppo di acquisizione.|  
|`[\s.])`|Corrisponde a uno spazio vuoto o un punto (".").|  
|`((\w+)[\s.])`|Corrisponde a uno o più caratteri alfanumerici seguiti da uno spazio vuoto o un punto ("."). Equivale al primo gruppo di acquisizione.|  
|`((\w+)[\s.])+`|Trova la corrispondenza una o più occorrenze di un carattere alfanumerico o di caratteri seguiti da uno spazio vuoto o un punto (".").|  
  
 In questo esempio, la stringa di input è costituito da due frasi. Come illustrato nell'output, nella prima frase costituito solo da una parola, in modo che il <xref:System.Text.RegularExpressions.CaptureCollection> oggetto ha un unico <xref:System.Text.RegularExpressions.Capture> che rappresenta la stessa acquisizione il <xref:System.Text.RegularExpressions.Group> oggetto. La seconda frase è costituito da più parole, in modo che il <xref:System.Text.RegularExpressions.Group> oggetti contengono solo informazioni relative alla sottoespressione corrispondente ultimo. Gruppo 1, che rappresenta la prima acquisizione, che contiene l'ultima parola nella frase con un periodo di chiusura. Gruppo 2, che rappresenta l'acquisizione di secondo, che contiene l'ultima parola nella frase. Tuttavia, il <xref:System.Text.RegularExpressions.Capture> gli oggetti del gruppo <xref:System.Text.RegularExpressions.CaptureCollection> oggetto acquisire ogni una sottoespressione. Il <xref:System.Text.RegularExpressions.Capture> oggetti nella raccolta del primo gruppo di acquisizione di acquisizioni contengono informazioni su ogni parola acquisita e spazio vuoto o periodo. Il <xref:System.Text.RegularExpressions.Capture> oggetti nella raccolta del secondo gruppo di acquisizione di acquisizioni contengono informazioni su ogni parola acquisita.  
  
 L'esempio seguente usa un modello di espressione regolare `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`, in modo che corrisponda un numero di prodotti che è costituito da due parti separate da un punto. Entrambe le parti sono costituiti da caratteri alfabetici seguite da numeri facoltativi. La prima stringa di input corrisponde al modello, il valore dell'oggetto restituito <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> dell'oggetto `Value` è di proprietà <xref:System.String.Empty?displayProperty=nameWithType>. Analogamente, quando il criterio di espressione regolare viene trovato una corrispondenza tra un gruppo di acquisizione, il valore dell'oggetto corrispondente <xref:System.Text.RegularExpressions.Group> dell'oggetto `Value` è di proprietà <xref:System.String.Empty?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  
  
 Criterio di espressione regolare viene definito come illustrato nella tabella seguente:  
  
|Modello|Descrizione|  
|-------------|-----------------|  
|`^`|Inizia la ricerca della corrispondenza all'inizio della stringa.|  
|`([a-z]+)`|Trova la corrispondenza una o più occorrenze di qualsiasi carattere da una a z. Poiché il motore delle espressioni regolari viene passato il <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> opzione, questo confronto è tra maiuscole e minuscole. Equivale al primo gruppo di acquisizione.|  
|`(\d+)?`|Trova zero o una occorrenza di uno o più cifre decimali. Equivale al secondo gruppo di acquisizione.|  
|`\.`|Confrontare un carattere punto letterale.|  
|`([a-z]+`|Trova la corrispondenza una o più occorrenze di qualsiasi carattere da una a z. Il confronto viene eseguito senza distinzione tra maiuscole e minuscole.|  
|`(\d)*`|Ricerca la corrispondenza di zero o di più cifre decimali. Una sola cifra corrispondente è il quarto gruppo di acquisizione.|  
|`([a-z]+(\d)*)`|Corrisponde a uno o più caratteri alfabetici da una a z seguita da zero, uno o più cifre decimali. Questo è il quarto gruppo di acquisizione.|  
|`$`|Concludere la corrispondenza alla fine della stringa.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>