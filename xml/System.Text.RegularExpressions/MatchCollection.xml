<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MatchCollection.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e87525df368996e12afb05786542f35ef70697a6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e87525df368996e12afb05786542f35ef70697a6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.</source>
          <target state="translated">Rappresenta il gruppo di corrispondenze corrette individuate applicando in modo iterativo un modello di espressione regolare alla stringa di input.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The collection is immutable (read-only) and has no public constructor.</source>
          <target state="translated">La raccolta non è modificabile (sola lettura) e non dispone di alcun costruttore pubblico.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType&gt;</ph> restituisce un oggetto <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The collection contains zero or more <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> objects.</source>
          <target state="translated">La raccolta contiene zero o più <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>If the match is successful, the collection is populated with one <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> object for each match found in the input string.</source>
          <target state="translated">Se la corrispondenza ha esito positivo, la raccolta viene popolata con uno <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> oggetto per ogni corrispondenza trovata nella stringa di input.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>If the match is unsuccessful, the collection contains no <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> objects, and its <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property equals zero.</source>
          <target state="translated">Se la corrispondenza ha esito negativo, la raccolta non contiene <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> oggetti e il relativo <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> proprietà è uguale a zero.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>When applying a regular expression pattern to a particular input string, the regular expression engine uses either of two techniques to build the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object:</source>
          <target state="translated">Quando si applica un criterio di espressione regolare a una particolare stringa di input, il motore delle espressioni regolari utilizza una delle due tecniche seguenti per compilare il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>Direct evaluation.</source>
          <target state="translated">Valutazione diretta.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is populated all at once, with all matches resulting from a particular call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto viene popolato in una sola volta, con tutte le corrispondenze risultanti da una determinata chiamata per il <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>This technique is used when the collection's <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property is accessed.</source>
          <target state="translated">Questa tecnica viene utilizzata quando la raccolta <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> si accede alla proprietà.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>It typically is the more expensive method of populating the collection and entails a greater performance hit.</source>
          <target state="translated">In genere è il metodo di popolamento dell'insieme più costoso e comporta un maggiore impatto sulle prestazioni.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>Lazy evaluation.</source>
          <target state="translated">Valutazione lazy.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is populated as needed on a match-by-match basis.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto viene popolato in base alle esigenze con cadenza per-una corrispondenza.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>It is equivalent to the regular expression engine calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph> method repeatedly and adding each match to the collection.</source>
          <target state="translated">È equivalente alla chiamata di motore di espressione regolare di <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph> metodo ripetutamente e aggiunta alla raccolta di ogni corrispondenza.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>This technique is used when the collection is accessed through its <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method, or when it is accessed using the <ph id="ph2">`foreach`</ph> statement (in C#) or the <ph id="ph3">`For Each`</ph>...<ph id="ph4">`Next`</ph> statement (in Visual Basic).</source>
          <target state="translated">Questa tecnica viene utilizzata quando la raccolta è accessibile tramite il relativo <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> metodo, o quando vi si accede tramite il <ph id="ph2">`foreach`</ph> istruzione (in c#) o <ph id="ph3">`For Each`</ph>... <ph id="ph4">`Next`</ph> istruzione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as <ph id="ph1">`foreach`</ph> in C# and <ph id="ph2">`For Each`</ph>…<ph id="ph3">`Next`</ph></source>
          <target state="translated">Per scorrere i membri della raccolta, è necessario utilizzare il costrutto di iterazione della raccolta fornito dal linguaggio di (ad esempio <ph id="ph1">`foreach`</ph> in c# e <ph id="ph2">`For Each`</ph>...<ph id="ph3">`Next`</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>in Visual Basic) instead of retrieving the enumerator that is returned by the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">in Visual Basic) invece di recuperare l'enumeratore restituito dal <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.MatchCollection">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> class to interrogate a set of <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> instances.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> classe per interrogare un set di <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> istanze.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>The array the collection is to be copied into.</source>
          <target state="translated">Matrice in cui copiare la raccolta.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>The position in the array where copying is to begin.</source>
          <target state="translated">Posizione nella matrice in cui iniziare la copiatura.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies all the elements of the collection to the given array starting at the given index.</source>
          <target state="translated">Copia tutti gli elementi della raccolta nella matrice indicata a partire dall'indice specificato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>Because the collection is copied into the array starting at the given index, the destination array must be at least as large as the entire collection.</source>
          <target state="translated">Poiché la raccolta viene copiata nella matrice a partire dall'indice specificato, la matrice di destinazione deve essere grande almeno come l'intera raccolta.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">Questo membro non è presente nel <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Se si stanno sviluppando applicazioni che hanno come destinazione il <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, utilizzare il <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> metodo invece.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is generally populated by using lazy evaluation, trying to copy the collection before it has been fully populated may throw a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto in genere viene popolato con valutazione differita, durante il tentativo di copiare la raccolta, prima è stato popolato completamente può generare un <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a single match exceeds that time-out interval.</source>
          <target state="translated">Questa eccezione può essere generata se un valore di timeout per operazioni di corrispondenza è attiva e il tentativo di trovare una corrispondenza supera tale intervallo di timeout.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is a multi-dimensional array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è una matrice multidimensionale.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is outside the bounds of <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> non rientra nei limiti di <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /&gt;</ph> is outside the bounds of <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> e <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /&gt;</ph> non rientrano nei limiti di <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
          <source>A time-out occurred.</source>
          <target state="translated">Si è verificato un timeout.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>Gets the number of matches.</source>
          <target state="translated">Ottiene il numero di corrispondenze.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>The number of matches.</source>
          <target state="translated">Numero di corrispondenze.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>Accessing individual members of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object by retrieving the value of the collection's <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property causes the regular expression engine to populate the collection using direct evaluation.</source>
          <target state="translated">Accesso ai singoli membri del <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto recuperando il valore della proprietà <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> fa sì che il motore delle espressioni regolari popolare la raccolta utilizzando la valutazione diretta.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>ln contrast, calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method (or using the <ph id="ph2">`foreach`</ph> statement in C# and the <ph id="ph3">`For Each`</ph>...<ph id="ph4">`Next`</ph> statement in Visual Basic) causes the regular expression engine to populate the collection on an as needed basis using lazy evaluation.</source>
          <target state="translated">Per contro, chiamando la <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> metodo (o tramite il <ph id="ph2">`foreach`</ph> istruzione in c# e <ph id="ph3">`For Each`</ph>... <ph id="ph4">`Next`</ph> istruzione in Visual Basic) fa sì che il motore delle espressioni regolari popolare insieme un secondo necessità, utilizzando la valutazione lazy.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>Direct evaluation can be a much more expensive method of building the collection than lazy evaluation.</source>
          <target state="translated">La valutazione diretta può essere un metodo molto più costoso di compilazione dell'insieme rispetto alla valutazione lazy.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is generally populated by using lazy evaluation, trying to determine the number of elements in the collection before it has been fully populated may throw a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto in genere viene popolato con valutazione differita, tenta di determinare il numero di elementi nella raccolta prima che sia stato compilato completamente può generare un <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a single match exceeds that time-out interval.</source>
          <target state="translated">Questa eccezione può essere generata se un valore di timeout per operazioni di corrispondenza è attiva e il tentativo di trovare una corrispondenza supera tale intervallo di timeout.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property to determine whether the call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> method found any matches.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> proprietà per determinare se la chiamata al <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> metodo trovata alcuna corrispondenza.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>If not, it indicates that no matches were found.</source>
          <target state="translated">In caso contrario, indica che è stata trovata alcuna corrispondenza.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>Otherwise, it enumerates the matches and displays their value and the position in the input string at which they were found.</source>
          <target state="translated">In caso contrario, enumera le corrispondenze e consente di visualizzare il valore e la posizione nella stringa di input in cui sono stati trovati.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>The regular expression pattern <ph id="ph1">`\d+`</ph> matches one or more decimal characters in an input string.</source>
          <target state="translated">Criterio di espressione regolare <ph id="ph1">`\d+`</ph> corrisponde a uno o più caratteri decimali nella stringa di input.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Count">
          <source>A time-out occurred.</source>
          <target state="translated">Si è verificato un timeout.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>Provides an enumerator that iterates through the collection.</source>
          <target state="translated">Fornisce un enumeratore che scorre la raccolta.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>An object that contains all <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> objects within the <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.MatchCollection" /&gt;</ph>.</source>
          <target state="translated">Oggetto contenente tutti gli oggetti <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> all'interno di <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.MatchCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>Instead of  calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method to retrieve an enumerator that lets you iterate through the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> objects in the collection, you should use the group iteration construct (such as <ph id="ph3">`foreach`</ph> in C# and <ph id="ph4">`For Each`</ph>…<ph id="ph5">`Next`</ph></source>
          <target state="translated">Anziché chiamare il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> metodo per recuperare un enumeratore che consente di scorrere il <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> oggetti nella raccolta, è consigliabile utilizzare il costrutto dell'iterazione di gruppo (ad esempio <ph id="ph3">`foreach`</ph> in c# e <ph id="ph4">`For Each`</ph>...<ph id="ph5">`Next`</ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>in Visual Basic) provided by your programming language.</source>
          <target state="translated">in Visual Basic) fornite dal linguaggio di programmazione.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>Iterating the members of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object using the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method (or the <ph id="ph3">`foreach`</ph> statement in C# and the <ph id="ph4">`For Each`</ph>...<ph id="ph5">`Next`</ph> statement in Visual Basic) causes the regular expression engine to populate the collection on an as needed basis using lazy evaluation.</source>
          <target state="translated">Iterazione dei membri del <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> utilizzando il <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> metodo (o <ph id="ph3">`foreach`</ph> istruzione in c# e <ph id="ph4">`For Each`</ph>... <ph id="ph5">`Next`</ph> istruzione in Visual Basic) fa sì che il motore delle espressioni regolari popolare insieme un secondo necessità, utilizzando la valutazione lazy.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>This is analogous to repeatedly calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph> method, and then adding the resulting match to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object.</source>
          <target state="translated">Questo comportamento è analogo alla chiamata più volte il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph> (metodo) e aggiungendo quindi la corrispondenza risulta per il <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>In contrast, the regular expression engine uses direct evaluation to populate the collection all at once when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property is accessed.</source>
          <target state="translated">Al contrario, il motore delle espressioni regolari utilizza la valutazione diretta per popolare la raccolta in una sola volta quando il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> si accede alla proprietà.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>This can be a much more expensive method of building the collection than lazy evaluation.</source>
          <target state="translated">Può trattarsi di un metodo molto più costoso di compilazione dell'insieme rispetto alla valutazione lazy.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is generally populated by using lazy evaluation, trying to navigate to the next member of the collection may throw a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto in genere viene popolato con valutazione differita, tentativo di passare al membro successivo della raccolta può generare un <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find the next match exceeds that time-out interval.</source>
          <target state="translated">Questa eccezione può essere generata se un valore di timeout per operazioni di corrispondenza è attiva e il tentativo di trovare la corrispondenza successiva supera tale intervallo di timeout.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
          <source>A time-out occurred.</source>
          <target state="translated">Si è verificato un timeout.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
          <source>Gets a value that indicates whether the collection is read only.</source>
          <target state="translated">Ottiene un valore che indica se la raccolta è di sola lettura.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> in tutti i casi.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
          <source>Gets a value indicating whether access to the collection is synchronized (thread-safe).</source>
          <target state="translated">Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> in tutti i casi.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">Questo membro non è presente nel <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">Se si stanno sviluppando applicazioni che hanno come destinazione il <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, utilizzare il <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> proprietà invece.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>Index into the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> collection.</source>
          <target state="translated">Indice nella raccolta <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>Gets an individual member of the collection.</source>
          <target state="translated">Ottiene un singolo membro della raccolta.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>The captured substring at position <ph id="ph1">&lt;paramref name="i" /&gt;</ph> in the collection.</source>
          <target state="translated">Sottostringa acquisita alla posizione <ph id="ph1">&lt;paramref name="i" /&gt;</ph> della raccolta.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>In C#, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Item%2A&gt;</ph> property is an indexer; it is not explicitly referenced in code, but instead allows the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> collection to be accessed as if it were an array.</source>
          <target state="translated">In c#, la <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Item%2A&gt;</ph> proprietà è un indicizzatore, non fa riferimento in modo esplicito nel codice, ma invece consente il <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> raccolta a cui accedere come se fosse una matrice.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>Typically, individual items in the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object are accessed by their index only after the total number of items in the collection has been determined from the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property.</source>
          <target state="translated">In genere, gli elementi singolo di <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto si accede tramite il relativo indice solo dopo aver determinato il numero totale di elementi nella raccolta dal <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>However, accessing the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> property causes the regular expression engine to use direct evaluation to build the collection all at once.</source>
          <target state="translated">Tuttavia, l'accesso di <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Count%2A&gt;</ph> fa sì che il motore delle espressioni regolari di utilizzare la valutazione diretta per compilare la raccolta in una sola volta.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>This is typically more expensive than iterating the collection using the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> method, the C# <ph id="ph2">`foreach`</ph> statement, or the Visual Basic <ph id="ph3">`For Each`</ph>...<ph id="ph4">`Next`</ph> statement.</source>
          <target state="translated">Si tratta in genere più costoso l'iterazione della raccolta mediante la <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A&gt;</ph> metodo c# <ph id="ph2">`foreach`</ph> istruzione o Visual Basic <ph id="ph3">`For Each`</ph>... <ph id="ph4">`Next`</ph> istruzione.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object is generally populated by using lazy evaluation, trying to navigate to a specific match may throw a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto in genere viene popolato con valutazione differita, tentativo di passare a una corrispondenza specifica può generare un <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a specific match exceeds that time-out interval.</source>
          <target state="translated">Questa eccezione può essere generata se un valore di timeout per operazioni di corrispondenza è attiva e il tentativo di trovare una corrispondenza specifica supera tale intervallo di timeout.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>The following example parses the first sentence of Nathaniel Hawthorne's <bpt id="p1">*</bpt>House of the Seven Gables<ept id="p1">*</ept> and returns a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object that contains all words that begin with either an uppercase or lowercase "h".</source>
          <target state="translated">L'esempio seguente analizza la frase di Nathaniel Hawthorne <bpt id="p1">*</bpt>casa dei sette abbaini<ept id="p1">*</ept> e restituisce un <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> oggetto che contiene tutte le parole che iniziano con una "h" maiuscola o minuscola.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Item%2A&gt;</ph> property is then used to retrieve each word and display it to the console.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.RegularExpressions.MatchCollection.Item%2A&gt;</ph> proprietà viene quindi utilizzata per recuperare ogni parola e visualizzarli nella console.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>The example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="i" /&gt;</ph> is less than 0 or greater than or equal to <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph> è minore di 0 oppure maggiore o uguale a <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
          <source>A time-out occurred.</source>
          <target state="translated">Si è verificato un timeout.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the collection.</source>
          <target state="translated">Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
          <source>An object that can be used to synchronize access to the collection.</source>
          <target state="translated">Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
          <source>This property always returns the object itself.</source>
          <target state="translated">Questa proprietà restituisce sempre l'oggetto stesso.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">Questo membro non è presente nel <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">Se si stanno sviluppando applicazioni che hanno come destinazione il <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, utilizzare il <ph id="ph2">&lt;xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> proprietà invece.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>