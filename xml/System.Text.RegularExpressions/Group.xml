<Type Name="Group" FullName="System.Text.RegularExpressions.Group">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc532af15db92579ba54d48945294a88689c0807" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36408293" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Group : System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Group extends System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Group" />
  <TypeSignature Language="VB.NET" Value="Public Class Group&#xA;Inherits Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Group : System::Text::RegularExpressions::Capture" />
  <TypeSignature Language="F#" Value="type Group = class&#xA;    inherit Capture" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Capture</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta i risultati di un singolo gruppo di acquisizione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un gruppo di acquisizione può acquisire zero, uno o più stringhe in un'unica corrispondenza a causa dei quantificatori. (Per altre informazioni, vedere [quantificatori](~/docs/standard/base-types/quantifiers-in-regular-expressions.md).) Tutte le sottostringhe corrispondente a un singolo gruppo di acquisizione sono disponibili le <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> proprietà. Informazioni sull'ultima sottostringa acquisita è possibile accedere direttamente dal `Value` e `Index` proprietà. (Ovvero, il <xref:System.Text.RegularExpressions.Group> istanza è equivalente all'ultimo elemento della raccolta restituita dal <xref:System.Text.RegularExpressions.Group.Captures%2A> proprietà, che riflette l'ultima acquisizione eseguita dal gruppo di acquisizione.)  
  
 Un esempio consente di chiarire la relazione tra un <xref:System.Text.RegularExpressions.Group> oggetto e il <xref:System.Text.RegularExpressions.CaptureCollection?displayProperty=nameWithType> restituito dal <xref:System.Text.RegularExpressions.Group.Captures%2A> proprietà. Il criterio di espressione regolare `(\b(\w+?)[,:;]?\s?)+[?.!]` corrisponde a frasi intere. L'espressione regolare è definita nel modo illustrato nella tabella seguente.  
  
|Modello|Descrizione|  
|-------------|-----------------|  
|`\b`|Inizia la corrispondenza sul confine di parola.|  
|`(\w+?)`|Corrisponde a uno o più caratteri alfanumerici, ma il minor numero di caratteri possibile. Equivale al secondo gruppo di acquisizione (interno). (Il primo gruppo di acquisizione include il `\b` elemento di linguaggio.)|  
|`[,:;]?`|Trova nessuna o una occorrenza di una virgola, virgola o punto e virgola.|  
|`\s?`|Corrisponde a zero o una occorrenza di un carattere di spazio vuoto.|  
|`(\b(\w+?)[,:;]?\s?)+`|Corrisponde al modello composta da un confine di parola, una o più caratteri alfanumerici, un simbolo di punteggiatura e uno spazio vuoto una o più volte. Equivale al primo gruppo di acquisizione.|  
|`[?.!]`|Corrisponde a qualsiasi occorrenza di un periodo, un punto interrogativo o un punto esclamativo.|  
  
 In questo modello di espressione regolare, il criterio secondario `(\w+?)` è progettato in modo che corrisponda più parole all'interno di una frase. Tuttavia, il valore della <xref:System.Text.RegularExpressions.Group> oggetto rappresenta solo l'ultima corrispondenza che `(\w+?)` acquisisce, mentre il <xref:System.Text.RegularExpressions.Group.Captures%2A> proprietà restituisce un <xref:System.Text.RegularExpressions.CaptureCollection> che rappresenta tutto il testo acquisito. Come illustrato nell'output, il <xref:System.Text.RegularExpressions.CaptureCollection> per il secondo gruppo di acquisizione contiene quattro oggetti. L'ultimo di questi corrisponde al <xref:System.Text.RegularExpressions.Group> oggetto.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/cs/groupandcaptures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/vb/groupandcaptures1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Captures">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.CaptureCollection Captures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.CaptureCollection Captures" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Captures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captures As CaptureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::CaptureCollection ^ Captures { System::Text::RegularExpressions::CaptureCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captures : System.Text.RegularExpressions.CaptureCollection" Usage="System.Text.RegularExpressions.Group.Captures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.CaptureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta di tutte le acquisizioni rilevate dal gruppo di acquisizione, nel primo ordine più interno e più a sinistra (o nel primo ordine più interno e più a destra se l'espressione regolare viene modificata con l'opzione <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). La raccolta può avere zero o più elementi.</summary>
        <value>Raccolta delle sottostringhe individuate dal gruppo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non viene applicato un quantificatore all'acquisizione di un gruppo, la raccolta restituita dal <xref:System.Text.RegularExpressions.Group.Captures%2A> proprietà contiene un singolo <xref:System.Text.RegularExpressions.Capture> oggetto che fornisce informazioni sulla stessa sottostringa il <xref:System.Text.RegularExpressions.Group> oggetto. Questa procedura è illustrata nell'esempio riportato di seguito. Definisce un'espressione regolare, `\b(\w+)\b`, che estrae una singola parola di una frase. Il <xref:System.Text.RegularExpressions.Group> oggetto acquisisce la parola "This" e il singolo oggetto contenuto il <xref:System.Text.RegularExpressions.CaptureCollection> contiene informazioni sull'acquisizione stesso.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures1.vb#1)]  
  
 L'utilità reale del <xref:System.Text.RegularExpressions.Group.Captures%2A> proprietà si verifica quando un quantificatore è applicato a un gruppo di acquisizione in modo che il gruppo acquisisce più sottostringhe in una singola espressione regolare. In questo caso, il <xref:System.Text.RegularExpressions.Group> oggetto contiene informazioni sull'ultima sottostringa acquisita, mentre il <xref:System.Text.RegularExpressions.Group.Captures%2A> proprietà contiene informazioni sulle sottostringhe acquisite dal gruppo. Nell'esempio seguente, l'espressione regolare `\b(\w+\s*)+\.` corrisponde a un'intera frase che termina con un punto. Il gruppo `(\w+\s*)+` acquisisce singole parole nella raccolta. Poiché il <xref:System.Text.RegularExpressions.Group> raccolta contenente le informazioni solo l'ultima sottostringa acquisita, acquisisce l'ultima parola della frase "frase". È tuttavia disponibile dalla raccolta restituita da ogni parola acquisita dal gruppo di <xref:System.Text.RegularExpressions.Group.Captures%2A> proprietà.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Text.RegularExpressions.Group.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce il nome del gruppo di acquisizione rappresentato dall'istanza corrente.</summary>
        <value>Nome del gruppo di acquisizione rappresentato dall'istanza corrente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public bool Success { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Success" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Success" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Success As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Success { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Success : bool" Usage="System.Text.RegularExpressions.Group.Success" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la ricerca di corrispondenze ha avuto esito positivo.</summary>
        <value>
          <see langword="true" /> se la corrispondenza dà esito positivo; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Success` proprietà è true se almeno una sottostringa è stata acquisita da questo gruppo. È equivalente all'espressione booleana (Group.Captures.Count > 0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Group Synchronized (System.Text.RegularExpressions.Group inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Group Synchronized(class System.Text.RegularExpressions.Group inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (inner As Group) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Group ^ Synchronized(System::Text::RegularExpressions::Group ^ inner);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Text.RegularExpressions.Group -&gt; System.Text.RegularExpressions.Group" Usage="System.Text.RegularExpressions.Group.Synchronized inner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Group" />
      </Parameters>
      <Docs>
        <param name="inner">Oggetto <see cref="T:System.Text.RegularExpressions.Group" /> di input.</param>
        <summary>Restituisce un oggetto <see langword="Group" /> equivalente a quello fornito che può essere condiviso tra più thread.</summary>
        <returns>Oggetto <see langword="Group" /> dell'espressione regolare.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="inner" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>