<Type Name="RegexCompilationInfo" FullName="System.Text.RegularExpressions.RegexCompilationInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19dabc2ace8fba060536a278060176e6f5b49aa4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36607313" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegexCompilationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RegexCompilationInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexCompilationInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexCompilationInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexCompilationInfo" />
  <TypeSignature Language="F#" Value="type RegexCompilationInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una matrice di <xref:System.Text.RegularExpressions.RegexCompilationInfo> oggetti viene passato per il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> metodo per fornire informazioni relative a ogni espressione regolare da includere nell'assembly. Ogni espressione regolare compilata inclusa nell'assembly viene rappresentata come una classe derivata da <xref:System.Text.RegularExpressions.Regex>. Le proprietà del <xref:System.Text.RegularExpressions.RegexCompilationInfo> tipo definisce il nome di classe dell'espressione regolare, il nome completo (vale a dire, lo spazio dei nomi e il relativo nome di tipo), il criterio di espressione regolare, eventuali opzioni aggiuntive (ad esempio, se l'espressione regolare è tra maiuscole e minuscole) e un intervallo di timeout che specifica quanto tempo il motore delle espressioni regolari deve cercare una corrispondenza.  
  
 È possibile creare un'istanza di un <xref:System.Text.RegularExpressions.RegexCompilationInfo> oggetto chiamando il relativo costruttore di classe di overload.  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexCompilationInfo : string * System.Text.RegularExpressions.RegexOptions * string * string * bool -&gt; System.Text.RegularExpressions.RegexCompilationInfo" Usage="new System.Text.RegularExpressions.RegexCompilationInfo (pattern, options, name, fullnamespace, ispublic)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern">The regular expression to compile.</param>
        <param name="options">The regular expression options to use when compiling the regular expression.</param>
        <param name="name">The name of the type that represents the compiled regular expression.</param>
        <param name="fullnamespace">The namespace to which the new type belongs.</param>
        <param name="ispublic">
          <see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression to be included in an assembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni parametro del <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> costruttore corrisponde direttamente a una proprietà del <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe. Poiché tutte le proprietà sono di lettura/scrittura, anche i relativi valori possono essere assegnati direttamente.  
  
 Il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> metodo genera un assembly che contiene le espressioni regolari compilate. Pertanto, non è necessario specificare <xref:System.Text.RegularExpressions.RegexOptions.Compiled> come uno dei valori di `options`.  
  
 Se `ispublic` è `true`, la classe di espressione regolare compilata viene concessa l'accessibilità pubblica. Vale a dire, può essere implementato dal codice che viene eseguita in qualsiasi assembly. Se `ispublic` viene `false`, viene fornita la classe di espressione regolare compilata `internal` (in c#) o `Friend` (in Visual Basic) accessibilità. Vale a dire, può essere implementato solo da codice che viene eseguita nello stesso assembly come classe di espressioni regolari.  
  
   
  
## Examples  
 Nell'esempio seguente crea e usa un'espressione regolare compilata in due passaggi.  
  
 Nel primo passaggio, compilare ed eseguire l'esempio di codice seguente. Il <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> costruttore nell'esempio di codice consente di definire un'espressione regolare compilata. Il risultato dell'esecuzione del codice è un assembly denominato FishRegex. dll che contiene un tipo di espressione regolare compilata denominato `FishRegex`.  
  
 [!code-csharp[sys.txt.rgxCompInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/genFishRegex.cs#1)]
 [!code-vb[sys.txt.rgxCompInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/genFishRegex.vb#1)]  
  
 Nel secondo passaggio, compilare l'esempio di codice riportato di seguito utilizzando un riferimento a FishRegex. dll e quindi eseguire il file eseguibile risultante. Il file eseguibile corrisponde a una stringa di destinazione utilizzando il `FishRegex` digitare e consente di visualizzare la corrispondenza, gruppo, gruppo di acquisizione e la posizione di indice delle corrispondenze nella stringa di destinazione.  
  
 [!code-csharp[sys.txt.rgxCompInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/useFishRegex.cs#2)]
 [!code-vb[sys.txt.rgxCompInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/useFishRegex.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pattern" /> is <see langword="null" />.  -or-  <paramref name="name" /> is <see langword="null" />.  -or-  <paramref name="fullnamespace" /> is <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Questo costruttore crea un'espressione regolare compilata che viene utilizzato il valore di timeout predefinito del dominio dell'applicazione in cui è stato creato. Se un valore di timeout è definito per il dominio applicazione, l'espressione regolare compilata utilizza il valore <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, impedendo di un'operazione di criteri di ricerca dalla prima del timeout. Il costruttore consigliato per la creazione di un'espressione regolare compilata è <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />, che consente di impostare l'intervallo di timeout.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexCompilationInfo : string * System.Text.RegularExpressions.RegexOptions * string * string * bool * TimeSpan -&gt; System.Text.RegularExpressions.RegexCompilationInfo" Usage="new System.Text.RegularExpressions.RegexCompilationInfo (pattern, options, name, fullnamespace, ispublic, matchTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="pattern">The regular expression to compile.</param>
        <param name="options">The regular expression options to use when compiling the regular expression.</param>
        <param name="name">The name of the type that represents the compiled regular expression.</param>
        <param name="fullnamespace">The namespace to which the new type belongs.</param>
        <param name="ispublic">
          <see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</param>
        <param name="matchTimeout">The default time-out interval for the regular expression.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression with a specified time-out value to be included in an assembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni parametro del <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> costruttore corrisponde direttamente a una proprietà del <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe. Poiché tutte le proprietà sono di lettura/scrittura, anche i relativi valori possono essere assegnati direttamente.  
  
 Il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> metodo genera un assembly che contiene le espressioni regolari compilate. Pertanto, non è necessario specificare <xref:System.Text.RegularExpressions.RegexOptions.Compiled> come uno dei valori di `options`.  
  
 Se `ispublic` è `true`, la classe di espressione regolare compilata viene concessa l'accessibilità pubblica. Vale a dire, può essere implementato dal codice che viene eseguita in qualsiasi assembly. Se `ispublic` viene `false`, viene fornita la classe di espressione regolare compilata `internal` (in c#) o `Friend` (in Visual Basic) accessibilità. Vale a dire, può essere implementato solo da codice che viene eseguita nello stesso assembly come classe di espressioni regolari.  
  
 Il `matchTimeout` parametro definisce l'intervallo di timeout predefinito per l'espressione regolare compilata. Questo valore rappresenta la quantità approssimativa di tempo che un oggetto di espressione regolare compilata eseguirà una singola operazione di corrispondenza prima di timeout dell'operazione e il motore delle espressioni regolari genera un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> eccezione durante il successivo controllo temporizzazione . Per ulteriori informazioni sui valori di timeout, vedere il <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> proprietà.  
  
> [!IMPORTANT]
>  È consigliabile impostare sempre un valore di timeout predefinito per un'espressione regolare compilata. I consumer della libreria di espressioni regolari possono eseguire l'override di tale valore di timeout passando un <xref:System.TimeSpan> valore che rappresenta il nuovo intervallo di timeout per l'overload del costruttore.  
  
   
  
## Examples  
 L'esempio seguente definisce una singola espressione regolare compilata denominata `DuplicateChars` che identifica due o più occorrenze dello stesso carattere nella stringa di input. L'espressione regolare compilata ha un timeout predefinito di 2 secondi. Quando si esegue l'esempio, viene creato una libreria di classi denominata RegexLib. dll che contiene l'espressione regolare compilata.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 Il criterio di ricerca di espressioni regolari `(\w)\1+` è definito nel modo illustrato nella tabella seguente.  
  
|Criterio|Descrizione|  
|-------------|-----------------|  
|`(\w)`|Corrisponde a qualsiasi carattere alfanumerico e la assegna al primo gruppo di acquisizione.|  
|`\1+`|Corrisponde a uno o più occorrenze del valore del primo gruppo acquisito.|  
  
 L'esempio seguente usa il `DuplicatedChars` espressione regolare per identificare i caratteri duplicati in una matrice di stringhe. Quando chiama il `DuplicatedChars` costruttore, l'intervallo di timeout viene cambiata in impostato su 0,5 secondi.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pattern" /> is <see langword="null" />.  -or-  <paramref name="name" /> is <see langword="null" />.  -or-  <paramref name="fullnamespace" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</exception>
        <altmember cref="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the compiled regular expression has public visibility.</summary>
        <value>
          <see langword="true" /> Se l'espressione regolare ha visibilità pubblica; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> proprietà `false`, la classe di espressione regolare definita dall'istanza corrente è possibile creare istanze solo da codice che è in esecuzione nell'assembly che contiene la classe. Tuttavia, poiché il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> metodo genera un assembly che contiene solo le espressioni regolari compilate e non consente di aggiungere altro codice, non è in genere per assegnare un valore di questa proprietà `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeout : TimeSpan with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the regular expression's default time-out interval.</summary>
        <value>L'intervallo di tempo massimo predefinito che può trascorrere in un'operazione di criteri di ricerca prima di un <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> viene generata, o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> se i timeout sono disabilitati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> proprietà definisce l'intervallo di timeout predefinito per l'espressione regolare compilata. Questo valore rappresenta la quantità approssimativa di tempo in cui un'espressione regolare compilata verrà eseguita una singola operazione di corrispondenza prima di timeout dell'operazione e il motore delle espressioni regolari genera un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> eccezione durante il controllo di intervallo successivo.  
  
> [!IMPORTANT]
>  È consigliabile impostare sempre un valore di timeout predefinito per un'espressione regolare compilata. I consumer della libreria di espressioni regolari possono eseguire l'override di tale valore di timeout passando un <xref:System.TimeSpan> valore che rappresenta il nuovo intervallo di timeout al costruttore della classe dell'espressione regolare compilata.  
  
 È possibile assegnare un valore di timeout predefinito per un <xref:System.Text.RegularExpressions.RegexCompilationInfo> oggetto in uno dei modi seguenti:  
  
-   Chiamando il <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> metodo e fornire la rappresentazione di stringa di un <xref:System.TimeSpan> valore per la proprietà "REGEX_DEFAULT_MATCH_TIMEOUT".  
  
-   Chiamando il <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> costruttore e fornendo un valore per il `matchTimeout` parametro.  
  
-   Impostando il valore di questa proprietà.  
  
 Per impostare un intervallo di tempo ragionevole, considerare quanto segue:  
  
-   La lunghezza e complessità del criterio di espressione regolare. Le espressioni regolari più lunga e più complesse richiedono più tempo rispetto a quelli più breve e semplice.  
  
-   Il carico di lavoro previsto. L'elaborazione richiede più tempo nei sistemi con un utilizzo elevato della CPU e memoria.  
  
   
  
## Examples  
 L'esempio seguente definisce una singola espressione regolare compilata denominata `DuplicateChars` che identifica due o più occorrenze dello stesso carattere nella stringa di input. L'espressione regolare compilata ha un timeout predefinito di 2 secondi. Quando si esegue l'esempio, viene creato una libreria di classi denominata RegexLib. dll che contiene l'espressione regolare compilata.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 Il criterio di ricerca di espressioni regolari `(\w)\1+` è definito nel modo illustrato nella tabella seguente.  
  
|Criterio|Descrizione|  
|-------------|-----------------|  
|`(\w)`|Corrisponde a qualsiasi carattere alfanumerico e la assegna al primo gruppo di acquisizione.|  
|`\1+`|Corrisponde a uno o più occorrenze del valore del primo gruppo acquisito.|  
  
 L'esempio seguente usa il `DuplicatedChars` espressione regolare per identificare i caratteri duplicati in una matrice di stringhe. Quando chiama il `DuplicatedChars` costruttore, l'intervallo di timeout viene cambiata in impostato su 0,5 secondi.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the type that represents the compiled regular expression.</summary>
        <value>Il nome del nuovo tipo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe viene utilizzata per definire un'espressione regolare compilata, rappresentata come una classe derivata da <xref:System.Text.RegularExpressions.Regex>. Il <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> proprietà definisce il nome della classe del tipo di espressione regolare e il <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> e <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> insieme definiscono il nome completo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The value for this property is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The value for this property is an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the namespace to which the new type belongs.</summary>
        <value>Lo spazio dei nomi del nuovo tipo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe viene utilizzata per definire un'espressione regolare compilata, rappresentata come una classe derivata da <xref:System.Text.RegularExpressions.Regex>. Il <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> proprietà definisce lo spazio dei nomi che contiene il tipo di espressione regolare compilata, e il <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> e <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> insieme definiscono il nome completo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The value for this property is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); void set(System::Text::RegularExpressions::RegexOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.RegularExpressions.RegexOptions with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the options to use when compiling the regular expression.</summary>
        <value>Combinazione bit per bit dei valori di enumerazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> metodo genera un assembly che contiene le espressioni regolari compilate. Pertanto, non è necessario specificare <xref:System.Text.RegularExpressions.RegexOptions.Compiled> come uno dei valori di questa proprietà. Se è presente, il <xref:System.Text.RegularExpressions.RegexOptions.Compiled> opzione viene ignorata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the regular expression to compile.</summary>
        <value>L'espressione regolare per la compilazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> proprietà può contenere qualsiasi espressione regolare valida. Se il valore della <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> proprietà non è un criterio di espressione regolare sintatticamente corretto, la chiamata al <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> genererà un <xref:System.ArgumentException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The value for this property is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>