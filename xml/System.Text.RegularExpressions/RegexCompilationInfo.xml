<Type Name="RegexCompilationInfo" FullName="System.Text.RegularExpressions.RegexCompilationInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f164cfc9abe8e849fb31f3e1ac69fd860eddbf89" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52371120" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegexCompilationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RegexCompilationInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexCompilationInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexCompilationInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexCompilationInfo" />
  <TypeSignature Language="F#" Value="type RegexCompilationInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce le informazioni su un'espressione regolare utilizzate per compilare un'espressione regolare in un assembly autonomo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Matrice di <xref:System.Text.RegularExpressions.RegexCompilationInfo> oggetti viene passato per il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> metodo per fornire informazioni su ogni espressione regolare da includere nell'assembly. Ogni espressione regolare compilata inclusa nell'assembly è rappresentato come una classe derivata da <xref:System.Text.RegularExpressions.Regex>. Le proprietà del <xref:System.Text.RegularExpressions.RegexCompilationInfo> tipo definito nome della classe dell'espressione regolare, il nome completo (vale a dire, lo spazio dei nomi e il nome del tipo), il criterio di espressione regolare, eventuali opzioni aggiuntive (ad esempio, se l'espressione regolare è tra maiuscole e minuscole) e un intervallo di timeout che specifica quanto tempo il motore delle espressioni regolari deve cercare una corrispondenza.  
  
 È possibile creare un'istanza di un <xref:System.Text.RegularExpressions.RegexCompilationInfo> oggetto chiamando il costruttore di classe di overload.  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />
    <related type="Article" href="~/docs/standard/base-types/compilation-and-reuse-in-regular-expressions.md">Compilazione e riutilizzo</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />.</summary>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md">Elementi del linguaggio di espressioni regolari</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexCompilationInfo : string * System.Text.RegularExpressions.RegexOptions * string * string * bool -&gt; System.Text.RegularExpressions.RegexCompilationInfo" Usage="new System.Text.RegularExpressions.RegexCompilationInfo (pattern, options, name, fullnamespace, ispublic)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern">Espressione regolare da compilare.</param>
        <param name="options">Opzioni dell'espressione regolare da utilizzare per compilare l'espressione regolare.</param>
        <param name="name">Nome del tipo che rappresenta l'espressione regolare compilata.</param>
        <param name="fullnamespace">Spazio dei nomi al quale appartiene il nuovo tipo.</param>
        <param name="ispublic">
          <see langword="true" /> per rendere l'espressione regolare compilata visibile pubblicamente; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> che contiene informazioni su un'espressione regolare da includere in un assembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni parametro del <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> costruttore corrisponde direttamente a una proprietà del <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe. Poiché tutte le proprietà sono di lettura/scrittura, anche i relativi valori possono essere assegnati direttamente.  
  
 Il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> metodo genera un assembly che contiene le espressioni regolari compilate. Pertanto, non è necessario specificare <xref:System.Text.RegularExpressions.RegexOptions.Compiled> come uno dei valori di `options`.  
  
 Se `ispublic` è `true`, la classe di espressione regolare compilata viene concessa l'accessibilità pubblica. Vale a dire, può essere creata dal codice eseguito in qualsiasi assembly. Se `ispublic` viene `false`, la classe di espressione regolare compilata ha `internal` (in c#) o `Friend` (in Visual Basic) accessibilità. Vale a dire, è possibile creare istanze solo dal codice eseguito nello stesso assembly della classe di espressioni regolari.  
  
   
  
## Examples  
 Nell'esempio seguente crea e usa un'espressione regolare compilata in due passaggi.  
  
 Nel primo passaggio, compilare ed eseguire il codice seguente. Il <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> costruttore nell'esempio di codice definisce un'espressione regolare compilata. Il risultato dell'esecuzione del codice è un assembly denominato FishRegex. dll che contiene un tipo di espressione regolare compilata denominato `FishRegex`.  
  
 [!code-csharp[sys.txt.rgxCompInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/genFishRegex.cs#1)]
 [!code-vb[sys.txt.rgxCompInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/genFishRegex.vb#1)]  
  
 Nel secondo passaggio, compilare l'esempio di codice seguente tramite un riferimento a FishRegex. dll e quindi eseguire il file eseguibile risultante. Il file eseguibile corrisponde a una stringa di destinazione utilizzando il `FishRegex` digitare e consente di visualizzare la corrispondenza, gruppo, gruppo di acquisizione e la posizione di indice delle corrispondenze nella stringa di destinazione.  
  
 [!code-csharp[sys.txt.rgxCompInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/useFishRegex.cs#2)]
 [!code-vb[sys.txt.rgxCompInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/useFishRegex.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> è <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pattern" /> è <see langword="null" />.  
  
oppure 
 <paramref name="name" /> è <see langword="null" />.  
  
oppure 
 <paramref name="fullnamespace" /> è <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Questo costruttore crea un'espressione regolare compilata che viene utilizzato il valore di timeout predefinito del dominio dell'applicazione in cui viene creato. Se un valore di timeout è definito per il dominio applicazione, l'espressione regolare compilata viene utilizzato il valore <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, che impediscono un'operazione di corrispondenza da verifichi il timeout. Il costruttore consigliato per la creazione di un'espressione regolare compilata è <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />, che consente di impostare l'intervallo di timeout.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexCompilationInfo : string * System.Text.RegularExpressions.RegexOptions * string * string * bool * TimeSpan -&gt; System.Text.RegularExpressions.RegexCompilationInfo" Usage="new System.Text.RegularExpressions.RegexCompilationInfo (pattern, options, name, fullnamespace, ispublic, matchTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="pattern">Espressione regolare da compilare.</param>
        <param name="options">Opzioni dell'espressione regolare da utilizzare per compilare l'espressione regolare.</param>
        <param name="name">Nome del tipo che rappresenta l'espressione regolare compilata.</param>
        <param name="fullnamespace">Spazio dei nomi al quale appartiene il nuovo tipo.</param>
        <param name="ispublic">
          <see langword="true" /> per rendere l'espressione regolare compilata visibile pubblicamente; in caso contrario, <see langword="false" />.</param>
        <param name="matchTimeout">L'intervallo di timeout predefinito per l'espressione regolare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> che contiene informazioni su un'espressione regolare con un valore di timeout specificato da includere in un assembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni parametro del <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> costruttore corrisponde direttamente a una proprietà del <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe. Poiché tutte le proprietà sono di lettura/scrittura, anche i relativi valori possono essere assegnati direttamente.  
  
 Il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> metodo genera un assembly che contiene le espressioni regolari compilate. Pertanto, non è necessario specificare <xref:System.Text.RegularExpressions.RegexOptions.Compiled> come uno dei valori di `options`.  
  
 Se `ispublic` è `true`, la classe di espressione regolare compilata viene concessa l'accessibilità pubblica. Vale a dire, può essere creata dal codice eseguito in qualsiasi assembly. Se `ispublic` viene `false`, la classe di espressione regolare compilata ha `internal` (in c#) o `Friend` (in Visual Basic) accessibilità. Vale a dire, è possibile creare istanze solo dal codice eseguito nello stesso assembly della classe di espressioni regolari.  
  
 Il `matchTimeout` parametro definisce l'intervallo di timeout predefinito per l'espressione regolare compilata. Questo valore rappresenta il periodo di tempo che un oggetto di espressione regolare compilata verrà eseguita una singola operazione di corrispondenza prima che l'operazione va in timeout e il motore delle espressioni regolari genera un'eccezione approssimativo un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> eccezione durante il successivo controllo di temporizzazione . Per altre informazioni sul valore di timeout, vedere il <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> proprietà.  
  
> [!IMPORTANT]
>  È consigliabile impostare sempre un valore di timeout predefinito per un'espressione regolare compilata. La libreria di espressioni regolari può eseguire l'override di tale valore di timeout passando un <xref:System.TimeSpan> valore che rappresenta il nuovo intervallo di timeout per questo overload del costruttore.  
  
   
  
## Examples  
 L'esempio seguente definisce una singola espressione regolare compilata denominata `DuplicateChars` che identifica due o più occorrenze dello stesso carattere nella stringa di input. L'espressione regolare compilata ha un timeout predefinito di 2 secondi. Quando si esegue l'esempio, crea una libreria di classi denominata RegexLib. dll che contiene l'espressione regolare compilata.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 Il criterio di ricerca di espressioni regolari `(\w)\1+` è definito nel modo illustrato nella tabella seguente.  
  
|Modello|Descrizione|  
|-------------|-----------------|  
|`(\w)`|Corrisponde a qualsiasi carattere alfanumerico e la assegna al primo gruppo di acquisizione.|  
|`\1+`|Corrisponde a uno o più occorrenze del valore del primo gruppo acquisito.|  
  
 L'esempio seguente usa il `DuplicatedChars` espressione regolare per identificare i caratteri duplicati in una matrice di stringhe. Quando chiama il `DuplicatedChars` costruttore, viene modificato l'intervallo di timeout per 0,5 secondi.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> è <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pattern" /> è <see langword="null" />.  
  
oppure 
 <paramref name="name" /> è <see langword="null" />.  
  
oppure 
 <paramref name="fullnamespace" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
        <altmember cref="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'espressione regolare compilata ha visibilità pubblica.</summary>
        <value>
          <see langword="true" /> se l'espressione regolare ha visibilità pubblica; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> è di proprietà `false`, la classe di espressione regolare definita dall'istanza corrente è possibile creare istanze solo dal codice che è in esecuzione nell'assembly che contiene la classe. Tuttavia, poiché il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> metodo genera un assembly che contiene solo le espressioni regolari compilate e non consente di aggiungere altro codice, non è in genere necessario assegnare un valore di questa proprietà `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeout : TimeSpan with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'intervallo di timeout predefinito dell'espressione regolare.</summary>
        <value>L'intervallo di tempo massimo predefinito che può trascorrere in un'operazione di corrispondenza dei modelli prima che <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> venga generato o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> se i timeout sono disabilitati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> proprietà definisce l'intervallo di timeout predefinito per l'espressione regolare compilata. Questo valore rappresenta il periodo di tempo che un'espressione regolare compilata verrà eseguita una singola operazione di corrispondenza prima che l'operazione va in timeout e il motore delle espressioni regolari genera un'eccezione approssimativo un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> eccezione durante il successivo controllo di temporizzazione.  
  
> [!IMPORTANT]
>  È consigliabile impostare sempre un valore di timeout predefinito per un'espressione regolare compilata. La libreria di espressioni regolari può eseguire l'override di tale valore di timeout passando un <xref:System.TimeSpan> valore che rappresenta il nuovo intervallo di timeout al costruttore della classe dell'espressione regolare compilata.  
  
 È possibile assegnare un valore di timeout predefinito per un <xref:System.Text.RegularExpressions.RegexCompilationInfo> oggetto in uno dei modi seguenti:  
  
-   Chiamando il <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> metodo e fornire la rappresentazione di stringa di un <xref:System.TimeSpan> valore della proprietà "REGEX_DEFAULT_MATCH_TIMEOUT".  
  
-   Chiamando il <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> costruttore e fornendo un valore per il `matchTimeout` parametro.  
  
-   Impostando il valore di questa proprietà.  
  
 Per impostare un intervallo di tempo ragionevole, considerare quanto segue:  
  
-   La lunghezza e complessità del modello di espressione regolare. Le espressioni regolari più lunghi e più complesse richiedono più tempo rispetto a quelli più breve e semplice.  
  
-   Il carico di lavoro previsto. L'elaborazione richiede più tempo nei sistemi con utilizzo elevato di CPU e memoria.  
  
   
  
## Examples  
 L'esempio seguente definisce una singola espressione regolare compilata denominata `DuplicateChars` che identifica due o più occorrenze dello stesso carattere nella stringa di input. L'espressione regolare compilata ha un timeout predefinito di 2 secondi. Quando si esegue l'esempio, crea una libreria di classi denominata RegexLib. dll che contiene l'espressione regolare compilata.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 Il criterio di ricerca di espressioni regolari `(\w)\1+` è definito nel modo illustrato nella tabella seguente.  
  
|Modello|Descrizione|  
|-------------|-----------------|  
|`(\w)`|Corrisponde a qualsiasi carattere alfanumerico e la assegna al primo gruppo di acquisizione.|  
|`\1+`|Corrisponde a uno o più occorrenze del valore del primo gruppo acquisito.|  
  
 L'esempio seguente usa il `DuplicatedChars` espressione regolare per identificare i caratteri duplicati in una matrice di stringhe. Quando chiama il `DuplicatedChars` costruttore, viene modificato l'intervallo di timeout per 0,5 secondi.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del tipo che rappresenta l'espressione regolare compilata.</summary>
        <value>Nome del nuovo tipo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe viene utilizzata per definire un'espressione regolare compilata, che è rappresentata come una classe derivata da <xref:System.Text.RegularExpressions.Regex>. Il <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> proprietà definisce il nome della classe del tipo di espressione regolare e il <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> e <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> insieme definiscono il nome completo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di questa proprietà è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il valore per questa proprietà è una stringa vuota.</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo spazio dei nomi cui appartiene il nuovo tipo.</summary>
        <value>Spazio dei nomi del nuovo tipo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.RegularExpressions.RegexCompilationInfo> classe viene utilizzata per definire un'espressione regolare compilata, che è rappresentata come una classe derivata da <xref:System.Text.RegularExpressions.Regex>. Il <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> proprietà definisce lo spazio dei nomi che contiene il tipo di espressione regolare compilata, e il <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> e <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> insieme definiscono il nome completo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di questa proprietà è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); void set(System::Text::RegularExpressions::RegexOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.RegularExpressions.RegexOptions with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le opzioni da utilizzare per compilare l'espressione regolare.</summary>
        <value>Combinazione bit per bit dei valori di enumerazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> metodo genera un assembly che contiene le espressioni regolari compilate. Pertanto, non è necessario specificare <xref:System.Text.RegularExpressions.RegexOptions.Compiled> come uno dei valori di questa proprietà. Se è presente, il <xref:System.Text.RegularExpressions.RegexOptions.Compiled> opzione viene ignorata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'espressione regolare da compilare.</summary>
        <value>Espressione regolare da compilare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> proprietà può contenere un'espressione regolare valida. Se il valore della <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> proprietà non è un criterio di espressione regolare sintatticamente corretto, la chiamata al <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> metodo genera un <xref:System.ArgumentException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di questa proprietà è <see langword="null" />.</exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expressions.md">Espressioni regolari di .NET Framework</related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md">Elementi del linguaggio di espressioni regolari</related>
      </Docs>
    </Member>
  </Members>
</Type>