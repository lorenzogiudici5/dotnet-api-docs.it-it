<Type Name="XamlSchemaContext" FullName="System.Xaml.XamlSchemaContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3cb020dadf6911a6184d7c73f01746771d9bdf1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlSchemaContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlSchemaContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlSchemaContext" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlSchemaContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlSchemaContext" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c237a-101">Definisce un contesto riutilizzabile per l'interpretazione o il mapping dei tipi XAML e dei tipi negli assembly ad essi sottostanti.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c237a-101">Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-102">Un contesto dello schema XAML fornisce un livello di astrazione tra uno schema o vocabolario per XAML e una specifica implementazione del parser.</span><span class="sxs-lookup"><span data-stu-id="c237a-102">A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</span></span> <span data-ttu-id="c237a-103">Inserendo il concetto di un contesto dello schema, lo schema può essere utilizzato con diversi parser XAML e il contesto dello schema viene compilato con i dettagli necessari per interagire con un parser XAML specifico.</span><span class="sxs-lookup"><span data-stu-id="c237a-103">By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</span></span> <span data-ttu-id="c237a-104">Ad esempio, il contesto dello schema XAML fornisce query API correlate a concetti XAML o per l'associazione di CLR per il sistema di tipi XAML.</span><span class="sxs-lookup"><span data-stu-id="c237a-104">For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</span></span> <span data-ttu-id="c237a-105">Contesto dello schema XAML è inoltre responsabile per la gestione degli assembly caricati, l'elenco di assembly che definisce dove un parser XAML cerca tipi di supporto.</span><span class="sxs-lookup"><span data-stu-id="c237a-105">The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="c237a-106">In un <see cref="T:System.AppDomain" />, <see cref="T:System.Xaml.XamlSchemaContext" /> può essere condivisa tra più chiamanti che includono sia completo e tutti i chiamanti parzialmente attendibili.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c237a-106">In an <see cref="T:System.AppDomain" />, a <see cref="T:System.Xaml.XamlSchemaContext" /> can be shared between multiple callers, which include both full and partial trust callers.</span>
        </span>
        <span data-ttu-id="c237a-107">Questa situazione si verifica in Framework, ad esempio WPF, che forniscono accesso parzialmente attendibile in XAML durante il caricamento delle parti del modello di applicazione WPF.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c237a-107">This situation exists in frameworks such as WPF, which provide partial-trust access to XAML loading for portions of the WPF application model.</span>
        </span>
        <span data-ttu-id="c237a-108">Il valore predefinito <see cref="T:System.Xaml.XamlSchemaContext" /> implementazione fornisce le misure di sicurezza in questo scenario, mantenendo tutte le proprietà e impostazioni non modificabile.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c237a-108">The default <see cref="T:System.Xaml.XamlSchemaContext" /> implementation provides safeguards in this scenario by keeping all its properties and settings immutable.</span>
        </span>
        <span data-ttu-id="c237a-109">Le implementazioni derivate possono anche seguire questo modello di immutabilità per le proprietà e le impostazioni di un contesto dello schema XAML.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c237a-109">Derived implementations should also consider following this model of immutability for properties and settings of a XAML schema context.</span>
        </span>
        <span data-ttu-id="c237a-110">La <see cref="T:System.Xaml.XamlSchemaContext" /> classe di base è progettata in modo che le ricerche non hanno esternamente effetti collaterali.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c237a-110">The <see cref="T:System.Xaml.XamlSchemaContext" /> base class is designed so that lookups have no externally observable side effects.</span>
        </span>
        <span data-ttu-id="c237a-111">I tipi che fanno riferimento <see cref="T:System.Xaml.XamlSchemaContext" /> API nella base di classe, ad esempio <see cref="T:System.Xaml.XamlType" /> o <see cref="T:System.Xaml.XamlMember" />, anche non producono effetti collaterali dalle ricerche.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c237a-111">The types that are referenced by <see cref="T:System.Xaml.XamlSchemaContext" /> APIs in the base class, such as <see cref="T:System.Xaml.XamlType" /> or <see cref="T:System.Xaml.XamlMember" />, also produce no side effects from lookups.</span>
        </span>
        <span data-ttu-id="c237a-112">Tutti i dati che sono necessario rendere una determinazione dello schema dovrebbero essere disponibili la costruzione e le impostazioni del <see cref="T:System.AppDomain" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c237a-112">All data that is needed to make a schema determination should be available from the construction and settings of the <see cref="T:System.AppDomain" />.</span>
        </span>
        <span data-ttu-id="c237a-113">Si noti che nessuna API di ricerca si basano su servizi passato in modo esplicito. l'input si basa sulla stringa di input solo.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c237a-113">Notice that no lookup APIs rely on explicitly passed-in services; their input relies on string input only.</span>
        </span>
        <span data-ttu-id="c237a-114">Il <see cref="T:System.Xaml.XamlSchemaContext" /> , classe di base e <see cref="T:System.Xaml.XamlType" /> e <see cref="T:System.Xaml.XamlMember" /> sono tutti thread-safe nelle implementazioni di base.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c237a-114">The <see cref="T:System.Xaml.XamlSchemaContext" /> base class, and <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> are all thread safe in their base implementations.</span>
        </span>
        <span data-ttu-id="c237a-115">Se si deriva da <see cref="T:System.Xaml.XamlSchemaContext" /> o derivare le classi di sistema di tipo XAML, ad esempio <see cref="T:System.Xaml.XamlType" /> e <see cref="T:System.Xaml.XamlMember" /> , è possibile scegliere se le classi si comportano come thread-safe.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c237a-115">If you derive from <see cref="T:System.Xaml.XamlSchemaContext" /> or derive XAML type system classes such as <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> , you can choose whether your classes will behave as thread safe.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c237a-116">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-116">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c237a-117">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-117">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies">
          <span data-ttu-id="c237a-118">Informazioni su un set di assembly enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-118">An enumerable set of assembly information items.</span>
          </span>
          <span data-ttu-id="c237a-119">Ogni informazione sugli assembly viene specificata da un valore di <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-119">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-120">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" /> in base a un set di assembly di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-120">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="c237a-121">Oggetto impostazioni da utilizzare per costruire l'oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-121">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-122">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" /> in base a un oggetto impostazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-122">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a settings object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-123">L'oggetto impostazioni archivia informazioni sul convertitore di testo e specifiche dell'estensione di markup per il contesto dello schema.</span><span class="sxs-lookup"><span data-stu-id="c237a-123">The settings object stores information about text converter and markup extension specifics for the schema context.</span></span> <span data-ttu-id="c237a-124">Per ulteriori informazioni, vedere <xref:System.Xaml.XamlSchemaContextSettings>.</span><span class="sxs-lookup"><span data-stu-id="c237a-124">For more information, see <xref:System.Xaml.XamlSchemaContextSettings>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies, System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies, class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly), settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies, System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies">
          <span data-ttu-id="c237a-125">Informazioni su un set di assembly enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-125">An enumerable set of assembly information.</span>
          </span>
          <span data-ttu-id="c237a-126">Ogni informazione sugli assembly viene specificata da un valore di <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-126">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="c237a-127">Oggetto impostazioni da utilizzare per costruire l'oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-127">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-128">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" /> in base a un set di assembly di riferimento e a un oggetto impostazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-128">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies and a settings object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!XamlSchemaContext ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c237a-129">Fornisce un'implementazione <see langword="Finalize" /> non standard che non richiama <see langword="Dispose" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-129">Provides a nonstandard <see langword="Finalize" /> implementation that does not invoke <see langword="Dispose" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-130">Contesti dello schema XAML non devono essere eliminati da automatiche di garbage collection o da operazioni manuali.</span><span class="sxs-lookup"><span data-stu-id="c237a-130">XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</span></span> <span data-ttu-id="c237a-131">Sebbene contesti dello schema XAML non risorse non gestite, <xref:System.Windows.Markup.XamlDeferLoadAttribute> proprietà possono comunque essere attiva e l'eliminazione di un contesto dello schema XAML può interferire con l'operazione correlata caricamento posticipato.</span><span class="sxs-lookup"><span data-stu-id="c237a-131">Although XAML schema contexts  have no unmanaged resources, <xref:System.Windows.Markup.XamlDeferLoadAttribute> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</span></span>  
  
 <span data-ttu-id="c237a-132"><xref:System.AppDomain.AssemblyLoad> gestori eventi, che vengono collegati internamente come riferimenti deboli, vengono rimosse da questa implementazione.</span><span class="sxs-lookup"><span data-stu-id="c237a-132"><xref:System.AppDomain.AssemblyLoad> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifyAssemblyNamesInClrNamespaces">
      <MemberSignature Language="C#" Value="public bool FullyQualifyAssemblyNamesInClrNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullyQualifyAssemblyNamesInClrNamespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullyQualifyAssemblyNamesInClrNamespaces { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c237a-133">Ottiene un valore che specifica se uno schema XAML e il relativo contesto utilizzano nomi completi dell'assembly nei valori restituiti dall'API di ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-133">Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c237a-134">
            <see langword="true" /> se uno schema XAML e il relativo contesto utilizzano nomi completi dell'assembly nei valori restituiti dalle API di ricerca; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-134">
              <see langword="true" /> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-135">Questa proprietà restituisce il <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> valore definito nelle impostazioni per il <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> firma del costruttore.</span><span class="sxs-lookup"><span data-stu-id="c237a-135">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="c237a-136">Se altre firme sono state utilizzate per la costruzione o <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> non è impostata in modo specifico su `true`, il valore di questa proprietà è `false`.</span><span class="sxs-lookup"><span data-stu-id="c237a-136">If other signatures were used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="c237a-137">Il valore di questa proprietà influenza le stringhe restituite da <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span><span class="sxs-lookup"><span data-stu-id="c237a-137">The value of this property influences the strings that are returned by <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span></span> <span data-ttu-id="c237a-138">Se <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> è `true`, la parte dell'assembly della stringa riporterà l'equivalente di <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c237a-138">If <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> is `true`, the assembly portion of the string reports the equivalent of <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetAllXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetAllXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlNamespaces () As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetAllXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c237a-139">Cerca negli assembly contenuti nell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> e restituisce un set di spazi dei nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-139">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of namespaces.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c237a-140">Set enumerabile di identificatori degli spazi dei nomi,</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-140">An enumerable set of namespace identifiers.</span>
          </span>
          <span data-ttu-id="c237a-141">Questi identificatori sono forniti sotto forma di stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-141">These identifiers are provided as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-142">Questo metodo cerca solo gli assembly di riferimento, se vengono passati tramite l'impostazione di costruzione o la proprietà.</span><span class="sxs-lookup"><span data-stu-id="c237a-142">This method only searches the reference assemblies if they are passed in through construction or property setting.</span></span> <span data-ttu-id="c237a-143">Se non viene stabilito alcun assembly come assembly di riferimento, la logica di questo metodo esamina tutti gli assembly caricati in cui questo <xref:System.Xaml.XamlSchemaContext> è attiva.</span><span class="sxs-lookup"><span data-stu-id="c237a-143">If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <xref:System.Xaml.XamlSchemaContext> is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt; GetAllXamlTypes (string xamlNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlType&gt; GetAllXamlTypes(string xamlNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlTypes (xamlNamespace As String) As ICollection(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::Xaml::XamlType ^&gt; ^ GetAllXamlTypes(System::String ^ xamlNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="c237a-144">Spazio dei nomi XAML per il quale restituire i tipi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-144">The XAML namespace to return types for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-145">Cerca negli assembly contenuti nell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> e restituisce un set di tipi dallo spazio dei nomi XAML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-145">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of types from the specified XAML namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c237a-146">Set enumerabile di tipi XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-146">An enumerable set of XAML types.</span>
          </span>
          <span data-ttu-id="c237a-147">Ciascun tipo XAML nel set è rappresentato da un oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-147">Each XAML type in the set is represented by a <see cref="T:System.Xaml.XamlType" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetPreferredPrefix (string xmlns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPreferredPrefix(string xmlns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredPrefix (xmlns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPreferredPrefix(System::String ^ xmlns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlns">
          <span data-ttu-id="c237a-148">Spazio dei nomi XAML per il quale ottenere il prefisso preferito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-148">The XAML namespace to get the preferred prefix for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-149">Ottiene una stringa segnalata come prefisso preferito che deve essere utilizzata dai consumer quando eseguono il mapping dello spazio dei nomi XAML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-149">Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c237a-150">Stringa che i consumer devono utilizzare quando eseguono il mapping dello spazio dei nomi XAML specificato per l'utilizzo del markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-150">A string that consumers should use when they map the specified XAML namespace for markup use.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-151">Il consumer più immediato delle informazioni non è in genere un writer XAML.</span><span class="sxs-lookup"><span data-stu-id="c237a-151">The most immediate consumer of the information is typically a XAML writer.</span></span> <span data-ttu-id="c237a-152">Gli altri consumer indiretti includono strumenti di progettazione.</span><span class="sxs-lookup"><span data-stu-id="c237a-152">Other indirect consumers include design tools.</span></span>  
  
 <span data-ttu-id="c237a-153">Come parte dell'associazione XAML per common language runtime (CLR), è possibile specificare queste informazioni applicando <xref:System.Windows.Markup.XmlnsPrefixAttribute> a livello di assembly.</span><span class="sxs-lookup"><span data-stu-id="c237a-153">As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <xref:System.Windows.Markup.XmlnsPrefixAttribute> at the assembly level.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c237a-154">
            <paramref name="xmlns" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-154">
              <paramref name="xmlns" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueConverter&lt;TConverterBase&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; GetValueConverter&lt;TConverterBase&gt; (Type converterType, System.Xaml.XamlType targetType) where TConverterBase : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Xaml.Schema.XamlValueConverter`1&lt;!!TConverterBase&gt; GetValueConverter&lt;class TConverterBase&gt;(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueConverter(Of TConverterBase As Class) (converterType As Type, targetType As XamlType) As XamlValueConverter(Of TConverterBase)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : class System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ GetValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TConverterBase">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <typeparam name="TConverterBase">
          <span data-ttu-id="c237a-155">Classe base specifica del convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-155">The specific converter base class.</span>
          </span>
        </typeparam>
        <param name="converterType">
          <span data-ttu-id="c237a-156">Implementazione del convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-156">The converter implementation.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="c237a-157">Tipo di destinazione desiderato per il convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-157">The desired destination type for the converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-158">Restituisce un convertitore di valori che può eseguire la conversione nell'oggetto <paramref name="targetType" /> richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-158">Returns a value converter that can convert to the requested <paramref name="targetType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c237a-159">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo corrispondente al vincolo presente nella chiamata al metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-159">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with a constraint that matches the constraint that is put on the method call.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlDirective">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlDirective GetXamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlDirective GetXamlDirective(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlDirective (xamlNamespace As String, name As String) As XamlDirective" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlDirective ^ GetXamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlDirective</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="c237a-160">Spazio dei nomi XAML contenente la direttiva denominata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-160">The XAML namespace that contains the named directive.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="c237a-161">Nome della direttiva da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-161">The name of the directive to obtain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-162">Restituisce un valore <see cref="T:System.Xaml.XamlDirective" /> che rappresenta una direttiva, per il linguaggio XAML o per un'implementazione specifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-162">Returns a <see cref="T:System.Xaml.XamlDirective" /> value that represents a directive, either for the XAML language or for a particular implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c237a-163">Oggetto <see cref="T:System.Xaml.XamlDirective" /> che rappresenta la direttiva richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-163">A <see cref="T:System.Xaml.XamlDirective" /> object that represents the requested directive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-164">Eseguire l'override di questo metodo se si crea una classe derivata da <xref:System.Xaml.XamlDirective> come parte di uno scenario di estensione del sistema di tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="c237a-164">Override this method if you create a derived class from <xref:System.Xaml.XamlDirective> as part of a XAML type system extension scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c237a-165">
            <paramref name="xamlNamespace" /> o <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-165">
              <paramref name="xamlNamespace" /> or <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXamlType">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c237a-166">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su un identificatore di tipo CLR o XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-166">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on either a CLR or XAML type identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlType GetXamlType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c237a-167">Tipo per il quale ottenere un oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-167">The type to get a <see cref="T:System.Xaml.XamlType" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-168">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su un identificatore di tipo CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-168">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a CLR type identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c237a-169">Oggetto <see cref="T:System.Xaml.XamlType" /> che corrisponde al parametro <paramref name="type" /> di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-169">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-170">Questo overload si presuppone che si utilizza CLR per il sistema di tipi di supporto.</span><span class="sxs-lookup"><span data-stu-id="c237a-170">This overload assumes that you are using the CLR for the backing type system.</span></span> <span data-ttu-id="c237a-171">Se non si utilizza il sistema di tipi CLR, utilizzare <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span><span class="sxs-lookup"><span data-stu-id="c237a-171">If you are not using the CLR type system, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c237a-172">
            <paramref name="type" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-172">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType GetXamlType (System.Xaml.Schema.XamlTypeName xamlTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlType GetXamlType(class System.Xaml.Schema.XamlTypeName xamlTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlType ^ GetXamlType(System::Xaml::Schema::XamlTypeName ^ xamlTypeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlTypeName" Type="System.Xaml.Schema.XamlTypeName" />
      </Parameters>
      <Docs>
        <param name="xamlTypeName">
          <span data-ttu-id="c237a-173">Nome del tipo XAML per il quale ottenere un oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-173">The XAML type name to get a <see cref="T:System.Xaml.XamlType" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-174">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su un nome del tipo di sistema XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-174">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML system type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c237a-175">Oggetto <see cref="T:System.Xaml.XamlType" /> che corrisponde al parametro <paramref name="xamlTypeName" /> di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-175">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="xamlTypeName" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c237a-176">Un componente di <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> o <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-176">A component of <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> or <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c237a-177">
            <paramref name="xamlTypeName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-177">
              <paramref name="xamlTypeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xaml.Schema.XamlTypeName" />
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xaml.XamlType GetXamlType (string xamlNamespace, string name, params System.Xaml.XamlType[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(string xamlNamespace, string name, class System.Xaml.XamlType[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetXamlType (xamlNamespace As String, name As String, ParamArray typeArguments As XamlType()) As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(System::String ^ xamlNamespace, System::String ^ name, ... cli::array &lt;System::Xaml::XamlType ^&gt; ^ typeArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="c237a-178">Spazio dei nomi XAML contenente il tipo desiderato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-178">The XAML namespace that contains the desired type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="c237a-179">Nome della stringa del tipo desiderato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-179">The string name of the desired type.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="c237a-180">Argomenti di tipo di inizializzazione per un tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-180">The initialization type arguments for a generic type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-181">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su uno spazio dei nomi XAML e una stringa per il nome del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-181">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML namespace and a string for the type name.</span>
          </span>
          <span data-ttu-id="c237a-182">Questa firma può specificare gli argomenti del tipo per i casi in cui il tipo desiderato è generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-182">This signature can specify the type arguments for cases where the desired type is a generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c237a-183">Oggetto <see cref="T:System.Xaml.XamlType" /> che corrisponde ai criteri di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-183">The <see cref="T:System.Xaml.XamlType" /> that matches the input criteria.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAssemblyResolve">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.Assembly OnAssemblyResolve (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.Assembly OnAssemblyResolve(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function OnAssemblyResolve (assemblyName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Reflection::Assembly ^ OnAssemblyResolve(System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="c237a-184">Nome dell'assembly da caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-184">The name of the assembly to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-185">Chiamato quando le operazioni utilizzano questo contesto dello schema per risolvere un assembly richiesto per risolvere gli spazi dei nomi XAML in esso contenuti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-185">Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c237a-186">Assembly risolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-186">The resolved assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-187">La tecnica di risoluzione dell'assembly sottostante, che è un'API interna, è tolleranze incorporate per formati di stringa diverso dal nome di un assembly in base il <xref:System.Reflection.AssemblyName> comportamento di costruzione.</span><span class="sxs-lookup"><span data-stu-id="c237a-187">The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <xref:System.Reflection.AssemblyName> construction behavior.</span></span>  
  
 <span data-ttu-id="c237a-188">Lo scopo di questa API è per abilitare la risoluzione di prima possibilità per gli insiemi di assembly, noti come rispetto all'assembly di riferimento invece che su una global assembly cache.</span><span class="sxs-lookup"><span data-stu-id="c237a-188">The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</span></span> <span data-ttu-id="c237a-189">Se l'elenco degli assembly di riferimento viene popolato, l'implementazione predefinita può accedere gli assembly di riferimento noti.</span><span class="sxs-lookup"><span data-stu-id="c237a-189">If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt; ReferenceAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Reflection.Assembly&gt; ReferenceAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceAssemblies As IList(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ ReferenceAssemblies { System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c237a-190">Ottiene un set enumerabile di assembly di riferimento per il contesto dello schema XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-190">Gets an enumerable set of reference assemblies for the XAML schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c237a-191">Set enumerabile di assembly di riferimento per il contesto dello schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-191">An enumerable set of reference assemblies for the schema context.</span>
          </span>
          <span data-ttu-id="c237a-192">Ogni informazione sugli assembly viene specificata da un valore di <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-192">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportMarkupExtensionsWithDuplicateArity">
      <MemberSignature Language="C#" Value="public bool SupportMarkupExtensionsWithDuplicateArity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportMarkupExtensionsWithDuplicateArity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportMarkupExtensionsWithDuplicateArity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c237a-193">Ottiene un valore che specifica se uno schema XAML e il relativo contesto supportano le estensioni di markup con due costruttori dello stesso grado (numero di parametri di input).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-193">Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c237a-194">
            <see langword="true" /> se il contesto dello schema consente estensioni di markup con grado duplicato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-194">
              <see langword="true" /> if the schema context permits markup extensions that have duplicate arity; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c237a-195">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-195">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-196">Questa proprietà restituisce il <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> valore definito nelle impostazioni per il <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> firma del costruttore.</span><span class="sxs-lookup"><span data-stu-id="c237a-196">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="c237a-197">Se altre firme vengono utilizzate per la costruzione o <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> non è impostata in modo specifico su `true`, il valore di questa proprietà è `false`.</span><span class="sxs-lookup"><span data-stu-id="c237a-197">If other signatures are used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="c237a-198">Grado duplicato di estensioni di markup non è stato risolto in modo specifico per la specifica di XAML [MS-XAML], sezione 6.6.7.2.</span><span class="sxs-lookup"><span data-stu-id="c237a-198">Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</span></span> <span data-ttu-id="c237a-199">In questo modo la formazione di elemento di informazione XAML per un'estensione di markup è identica, indipendentemente dal grado duplicato che potrebbe esistere nell'implementazione dell'estensione di markup.</span><span class="sxs-lookup"><span data-stu-id="c237a-199">This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</span></span> <span data-ttu-id="c237a-200">Solo la chiamata effettiva dell'estensione di markup e il relativo `ProvideValue` espone eventuali problemi associati con grado duplicato.</span><span class="sxs-lookup"><span data-stu-id="c237a-200">Only the actual invocation of the markup extension and its `ProvideValue` exposes any issues associated with duplicate arity.</span></span> <span data-ttu-id="c237a-201">Comportamento per la gestione di grado duplicato in questo modo viene definito e viene lasciato fino a ogni implementazione contesto dello schema XAML e l'integrazione di writer XAML.</span><span class="sxs-lookup"><span data-stu-id="c237a-201">Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</span></span> <span data-ttu-id="c237a-202">Contesto dello schema XAML predefinito come implementato per le operazioni di servizi XAML di .NET Framework non supporta un grado duplicato; varie API dei servizi XAML .NET Framework genereranno eccezioni durante l'elaborazione di utilizzo dell'estensione di markup con grado duplicato sottostante.</span><span class="sxs-lookup"><span data-stu-id="c237a-202">The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</span></span>  
  
 <span data-ttu-id="c237a-203">Per ulteriori informazioni sulla definizione delle estensioni di markup, vedere [estensioni di Markup per XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c237a-203">For more information about defining markup extensions, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCompatibleXamlNamespace">
      <MemberSignature Language="C#" Value="public virtual bool TryGetCompatibleXamlNamespace (string xamlNamespace, out string compatibleNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetCompatibleXamlNamespace(string xamlNamespace, [out] string&amp; compatibleNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetCompatibleXamlNamespace (xamlNamespace As String, ByRef compatibleNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetCompatibleXamlNamespace(System::String ^ xamlNamespace, [Runtime::InteropServices::Out] System::String ^ % compatibleNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="compatibleNamespace" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="c237a-204">Stringa <see langword="xmlns" /> per lo spazio dei nomi XAML da controllare per verificare la presenza di un risultato compatibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-204">The <see langword="xmlns" /> string for the XAML namespace to be checked for a compatible result.</span>
          </span>
        </param>
        <param name="compatibleNamespace">
          <span data-ttu-id="c237a-205">Quando questo metodo restituisce il risultato, stringa <see langword="xmlns" /> per una richiesta dello spazio dei nomi XAML compatibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-205">When this method returns, the <see langword="xmlns" /> string for a compatible XAML namespace request.</span>
          </span>
          <span data-ttu-id="c237a-206">Può essere identica a <c>xamlNamespace</c> se il metodo restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-206">This might be identical to <c>xamlNamespace</c> if the method returns <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c237a-207">Restituisce l'esito positivo o negativo di una richiesta per uno spazio dei nomi XAML compatibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-207">Returns the success or failure of a request for a compatible XAML namespace.</span>
          </span>
          <span data-ttu-id="c237a-208">Una richiesta riuscita segnala lo spazio dei nomi XAML come parametro out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-208">A successful request reports that XAML namespace as an out parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c237a-209">
            <see langword="true" /> se <paramref name="compatibleNamespace" /> contiene un risultato utilizzabile; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-209">
              <see langword="true" /> if <paramref name="compatibleNamespace" /> contains a usable result; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c237a-210">Internamente, questo metodo Usa l'ordine di ricerca seguenti:</span><span class="sxs-lookup"><span data-stu-id="c237a-210">Internally, this method uses the following lookup order:</span></span>  
  
1.  <span data-ttu-id="c237a-211">Un dizionario compatibilità implementato internamente, che è stato controllato da una ricerca precedente.</span><span class="sxs-lookup"><span data-stu-id="c237a-211">An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</span></span>  
  
2.  <span data-ttu-id="c237a-212">Il <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> valutazione parametro.</span><span class="sxs-lookup"><span data-stu-id="c237a-212">The <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> parameter evaluation.</span></span>  
  
 <span data-ttu-id="c237a-213">Se non viene individuato alcun altro spazio dei nomi compatibile e che questo metodo restituisce `false`, `compatibleNamespace` output parametro potrebbe essere lo stesso valore di `xamlNamespace` input.</span><span class="sxs-lookup"><span data-stu-id="c237a-213">If no other compatible namespace is discovered and this method returns `false`, the `compatibleNamespace` parameter output might have the same value as the `xamlNamespace` input.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c237a-214">
            <paramref name="xamlNamespace" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c237a-214">
              <paramref name="xamlNamespace" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>