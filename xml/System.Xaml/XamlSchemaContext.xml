<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlSchemaContext.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c3cb020dadf6911a6184d7c73f01746771d9bdf1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3cb020dadf6911a6184d7c73f01746771d9bdf1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</source>
          <target state="translated">Definisce un contesto riutilizzabile per l'interpretazione o il mapping dei tipi XAML e dei tipi negli assembly ad essi sottostanti.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</source>
          <target state="translated">Un contesto dello schema XAML fornisce un livello di astrazione tra uno schema o vocabolario per XAML e una specifica implementazione del parser.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</source>
          <target state="translated">Inserendo il concetto di un contesto dello schema, lo schema può essere utilizzato con diversi parser XAML e il contesto dello schema viene compilato con i dettagli necessari per interagire con un parser XAML specifico.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</source>
          <target state="translated">Ad esempio, il contesto dello schema XAML fornisce query API correlate a concetti XAML o per l'associazione di CLR per il sistema di tipi XAML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</source>
          <target state="translated">Contesto dello schema XAML è inoltre responsabile per la gestione degli assembly caricati, l'elenco di assembly che definisce dove un parser XAML cerca tipi di supporto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>In an <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> can be shared between multiple callers, which include both full and partial trust callers.</source>
          <target state="translated">In un <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> può essere condivisa tra più chiamanti che includono sia completo e tutti i chiamanti parzialmente attendibili.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>This situation exists in frameworks such as WPF, which provide partial-trust access to XAML loading for portions of the WPF application model.</source>
          <target state="translated">Questa situazione si verifica in Framework, ad esempio WPF, che forniscono accesso parzialmente attendibile in XAML durante il caricamento delle parti del modello di applicazione WPF.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> implementation provides safeguards in this scenario by keeping all its properties and settings immutable.</source>
          <target state="translated">Il valore predefinito <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> implementazione fornisce le misure di sicurezza in questo scenario, mantenendo tutte le proprietà e impostazioni non modificabile.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>Derived implementations should also consider following this model of immutability for properties and settings of a XAML schema context.</source>
          <target state="translated">Le implementazioni derivate possono anche seguire questo modello di immutabilità per le proprietà e le impostazioni di un contesto dello schema XAML.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> base class is designed so that lookups have no externally observable side effects.</source>
          <target state="translated">La <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> classe di base è progettata in modo che le ricerche non hanno esternamente effetti collaterali.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The types that are referenced by <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> APIs in the base class, such as <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, also produce no side effects from lookups.</source>
          <target state="translated">I tipi che fanno riferimento <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> API nella base di classe, ad esempio <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> o <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, anche non producono effetti collaterali dalle ricerche.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>All data that is needed to make a schema determination should be available from the construction and settings of the <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated">Tutti i dati che sono necessario rendere una determinazione dello schema dovrebbero essere disponibili la costruzione e le impostazioni del <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>Notice that no lookup APIs rely on explicitly passed-in services; their input relies on string input only.</source>
          <target state="translated">Si noti che nessuna API di ricerca si basano su servizi passato in modo esplicito. l'input si basa sulla stringa di input solo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> base class, and <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> are all thread safe in their base implementations.</source>
          <target state="translated">Il <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> , classe di base e <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> sono tutti thread-safe nelle implementazioni di base.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>If you derive from <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> or derive XAML type system classes such as <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> , you can choose whether your classes will behave as thread safe.</source>
          <target state="translated">Se si deriva da <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> o derivare le classi di sistema di tipo XAML, ad esempio <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> , è possibile scegliere se le classi si comportano come thread-safe.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>An enumerable set of assembly information items.</source>
          <target state="translated">Informazioni su un set di assembly enumerabile.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">Ogni informazione sugli assembly viene specificata da un valore di <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a set of reference assemblies.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> in base a un set di assembly di riferimento.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object to use to construct the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</source>
          <target state="translated">Oggetto impostazioni da utilizzare per costruire l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a settings object.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> in base a un oggetto impostazioni.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object stores information about text converter and markup extension specifics for the schema context.</source>
          <target state="translated">L'oggetto impostazioni archivia informazioni sul convertitore di testo e specifiche dell'estensione di markup per il contesto dello schema.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>An enumerable set of assembly information.</source>
          <target state="translated">Informazioni su un set di assembly enumerabile.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">Ogni informazione sugli assembly viene specificata da un valore di <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object to use to construct the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</source>
          <target state="translated">Oggetto impostazioni da utilizzare per costruire l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a set of reference assemblies and a settings object.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> in base a un set di assembly di riferimento e a un oggetto impostazioni.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>Provides a nonstandard <ph id="ph1">&lt;see langword="Finalize" /&gt;</ph> implementation that does not invoke <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Fornisce un'implementazione <ph id="ph1">&lt;see langword="Finalize" /&gt;</ph> non standard che non richiama <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</source>
          <target state="translated">Contesti dello schema XAML non devono essere eliminati da automatiche di garbage collection o da operazioni manuali.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>Although XAML schema contexts  have no unmanaged resources, <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</source>
          <target state="translated">Sebbene contesti dello schema XAML non risorse non gestite, <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> proprietà possono comunque essere attiva e l'eliminazione di un contesto dello schema XAML può interferire con l'operazione correlata caricamento posticipato.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source><ph id="ph1">&lt;xref:System.AppDomain.AssemblyLoad&gt;</ph> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomain.AssemblyLoad&gt;</ph> gestori eventi, che vengono collegati internamente come riferimenti deboli, vengono rimosse da questa implementazione.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</source>
          <target state="translated">Ottiene un valore che specifica se uno schema XAML e il relativo contesto utilizzano nomi completi dell'assembly nei valori restituiti dall'API di ricerca.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se uno schema XAML e il relativo contesto utilizzano nomi completi dell'assembly nei valori restituiti dalle API di ricerca; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> value that is established in the settings for the <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> constructor signature.</source>
          <target state="translated">Questa proprietà restituisce il <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> valore definito nelle impostazioni per il <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> firma del costruttore.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>If other signatures were used for construction or if <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> is not specifically set to <ph id="ph2">`true`</ph>, the value of this property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se altre firme sono state utilizzate per la costruzione o <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> non è impostata in modo specifico su <ph id="ph2">`true`</ph>, il valore di questa proprietà è <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>The value of this property influences the strings that are returned by <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;</ph>.</source>
          <target state="translated">Il valore di questa proprietà influenza le stringhe restituite da <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>If <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the assembly portion of the string reports the equivalent of <ph id="ph3">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt;</ph> è <ph id="ph2">`true`</ph>, la parte dell'assembly della stringa riporterà l'equivalente di <ph id="ph3">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>Searches the assemblies that are held by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> and returns a set of namespaces.</source>
          <target state="translated">Cerca negli assembly contenuti nell'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> e restituisce un set di spazi dei nomi.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>An enumerable set of namespace identifiers.</source>
          <target state="translated">Set enumerabile di identificatori degli spazi dei nomi,</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>These identifiers are provided as strings.</source>
          <target state="translated">Questi identificatori sono forniti sotto forma di stringhe.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>This method only searches the reference assemblies if they are passed in through construction or property setting.</source>
          <target state="translated">Questo metodo cerca solo gli assembly di riferimento, se vengono passati tramite l'impostazione di costruzione o la proprietà.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> is active.</source>
          <target state="translated">Se non viene stabilito alcun assembly come assembly di riferimento, la logica di questo metodo esamina tutti gli assembly caricati in cui questo <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> è attiva.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>The XAML namespace to return types for.</source>
          <target state="translated">Spazio dei nomi XAML per il quale restituire i tipi.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>Searches the assemblies that are held by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> and returns a set of types from the specified XAML namespace.</source>
          <target state="translated">Cerca negli assembly contenuti nell'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> e restituisce un set di tipi dallo spazio dei nomi XAML specificato.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>An enumerable set of XAML types.</source>
          <target state="translated">Set enumerabile di tipi XAML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>Each XAML type in the set is represented by a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object.</source>
          <target state="translated">Ciascun tipo XAML nel set è rappresentato da un oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>The XAML namespace to get the preferred prefix for.</source>
          <target state="translated">Spazio dei nomi XAML per il quale ottenere il prefisso preferito.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</source>
          <target state="translated">Ottiene una stringa segnalata come prefisso preferito che deve essere utilizzata dai consumer quando eseguono il mapping dello spazio dei nomi XAML specificato.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>A string that consumers should use when they map the specified XAML namespace for markup use.</source>
          <target state="translated">Stringa che i consumer devono utilizzare quando eseguono il mapping dello spazio dei nomi XAML specificato per l'utilizzo del markup.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>The most immediate consumer of the information is typically a XAML writer.</source>
          <target state="translated">Il consumer più immediato delle informazioni non è in genere un writer XAML.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>Other indirect consumers include design tools.</source>
          <target state="translated">Gli altri consumer indiretti includono strumenti di progettazione.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> at the assembly level.</source>
          <target state="translated">Come parte dell'associazione XAML per common language runtime (CLR), è possibile specificare queste informazioni applicando <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> a livello di assembly.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source><ph id="ph1">&lt;paramref name="xmlns" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlns" /&gt;</ph> è null.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The specific converter base class.</source>
          <target state="translated">Classe base specifica del convertitore.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The converter implementation.</source>
          <target state="translated">Implementazione del convertitore.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The desired destination type for the converter.</source>
          <target state="translated">Tipo di destinazione desiderato per il convertitore.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>Returns a value converter that can convert to the requested <ph id="ph1">&lt;paramref name="targetType" /&gt;</ph>.</source>
          <target state="translated">Restituisce un convertitore di valori che può eseguire la conversione nell'oggetto <ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> richiesto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with a constraint that matches the constraint that is put on the method call.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> con vincolo corrispondente al vincolo presente nella chiamata al metodo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>The XAML namespace that contains the named directive.</source>
          <target state="translated">Spazio dei nomi XAML contenente la direttiva denominata.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>The name of the directive to obtain.</source>
          <target state="translated">Nome della direttiva da ottenere.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> value that represents a directive, either for the XAML language or for a particular implementation.</source>
          <target state="translated">Restituisce un valore <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> che rappresenta una direttiva, per il linguaggio XAML o per un'implementazione specifica.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> object that represents the requested directive.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> che rappresenta la direttiva richiesta.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>Override this method if you create a derived class from <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> as part of a XAML type system extension scenario.</source>
          <target state="translated">Eseguire l'override di questo metodo se si crea una classe derivata da <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> come parte di uno scenario di estensione del sistema di tipo XAML.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> o <ph id="ph2">&lt;paramref name="name" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on either a CLR or XAML type identifier.</source>
          <target state="translated">Restituisce un oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> basato su un identificatore di tipo CLR o XAML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>The type to get a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for.</source>
          <target state="translated">Tipo per il quale ottenere un oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a CLR type identifier.</source>
          <target state="translated">Restituisce un oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> basato su un identificatore di tipo CLR.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> che corrisponde al parametro <ph id="ph2">&lt;paramref name="type" /&gt;</ph> di input.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>This overload assumes that you are using the CLR for the backing type system.</source>
          <target state="translated">Questo overload si presuppone che si utilizza CLR per il sistema di tipi di supporto.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>If you are not using the CLR type system, use <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;</ph>.</source>
          <target state="translated">Se non si utilizza il sistema di tipi CLR, utilizzare <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>The XAML type name to get a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for.</source>
          <target state="translated">Nome del tipo XAML per il quale ottenere un oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a XAML system type name.</source>
          <target state="translated">Restituisce un oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> basato su un nome del tipo di sistema XAML.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input <ph id="ph2">&lt;paramref name="xamlTypeName" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> che corrisponde al parametro <ph id="ph2">&lt;paramref name="xamlTypeName" /&gt;</ph> di input.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>A component of <ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> (<ph id="ph2">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Name" /&gt;</ph> or <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /&gt;</ph>) is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Un componente di <ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> (<ph id="ph2">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Name" /&gt;</ph> o <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /&gt;</ph>) è <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source><ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The XAML namespace that contains the desired type.</source>
          <target state="translated">Spazio dei nomi XAML contenente il tipo desiderato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The string name of the desired type.</source>
          <target state="translated">Nome della stringa del tipo desiderato.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The initialization type arguments for a generic type.</source>
          <target state="translated">Argomenti di tipo di inizializzazione per un tipo generico.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a XAML namespace and a string for the type name.</source>
          <target state="translated">Restituisce un oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> basato su uno spazio dei nomi XAML e una stringa per il nome del tipo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>This signature can specify the type arguments for cases where the desired type is a generic type.</source>
          <target state="translated">Questa firma può specificare gli argomenti del tipo per i casi in cui il tipo desiderato è generico.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input criteria.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> che corrisponde ai criteri di input.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The name of the assembly to load.</source>
          <target state="translated">Nome dell'assembly da caricare.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</source>
          <target state="translated">Chiamato quando le operazioni utilizzano questo contesto dello schema per risolvere un assembly richiesto per risolvere gli spazi dei nomi XAML in esso contenuti.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The resolved assembly.</source>
          <target state="translated">Assembly risolto.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <ph id="ph1">&lt;xref:System.Reflection.AssemblyName&gt;</ph> construction behavior.</source>
          <target state="translated">La tecnica di risoluzione dell'assembly sottostante, che è un'API interna, è tolleranze incorporate per formati di stringa diverso dal nome di un assembly in base il <ph id="ph1">&lt;xref:System.Reflection.AssemblyName&gt;</ph> comportamento di costruzione.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</source>
          <target state="translated">Lo scopo di questa API è per abilitare la risoluzione di prima possibilità per gli insiemi di assembly, noti come rispetto all'assembly di riferimento invece che su una global assembly cache.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</source>
          <target state="translated">Se l'elenco degli assembly di riferimento viene popolato, l'implementazione predefinita può accedere gli assembly di riferimento noti.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>Gets an enumerable set of reference assemblies for the XAML schema context.</source>
          <target state="translated">Ottiene un set enumerabile di assembly di riferimento per il contesto dello schema XAML.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>An enumerable set of reference assemblies for the schema context.</source>
          <target state="translated">Set enumerabile di assembly di riferimento per il contesto dello schema.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">Ogni informazione sugli assembly viene specificata da un valore di <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</source>
          <target state="translated">Ottiene un valore che specifica se uno schema XAML e il relativo contesto supportano le estensioni di markup con due costruttori dello stesso grado (numero di parametri di input).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schema context permits markup extensions that have duplicate arity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il contesto dello schema consente estensioni di markup con grado duplicato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> value that is established in the settings for the <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> constructor signature.</source>
          <target state="translated">Questa proprietà restituisce il <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> valore definito nelle impostazioni per il <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> firma del costruttore.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>If other signatures are used for construction or if <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> is not specifically set to <ph id="ph2">`true`</ph>, the value of this property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se altre firme vengono utilizzate per la costruzione o <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> non è impostata in modo specifico su <ph id="ph2">`true`</ph>, il valore di questa proprietà è <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</source>
          <target state="translated">Grado duplicato di estensioni di markup non è stato risolto in modo specifico per la specifica di XAML [MS-XAML], sezione 6.6.7.2.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</source>
          <target state="translated">In questo modo la formazione di elemento di informazione XAML per un'estensione di markup è identica, indipendentemente dal grado duplicato che potrebbe esistere nell'implementazione dell'estensione di markup.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Only the actual invocation of the markup extension and its <ph id="ph1">`ProvideValue`</ph> exposes any issues associated with duplicate arity.</source>
          <target state="translated">Solo la chiamata effettiva dell'estensione di markup e il relativo <ph id="ph1">`ProvideValue`</ph> espone eventuali problemi associati con grado duplicato.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</source>
          <target state="translated">Comportamento per la gestione di grado duplicato in questo modo viene definito e viene lasciato fino a ogni implementazione contesto dello schema XAML e l'integrazione di writer XAML.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</source>
          <target state="translated">Contesto dello schema XAML predefinito come implementato per le operazioni di servizi XAML di .NET Framework non supporta un grado duplicato; varie API dei servizi XAML .NET Framework genereranno eccezioni durante l'elaborazione di utilizzo dell'estensione di markup con grado duplicato sottostante.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>For more information about defining markup extensions, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla definizione delle estensioni di markup, vedere <bpt id="p1">[</bpt>estensioni di Markup per XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>The <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> string for the XAML namespace to be checked for a compatible result.</source>
          <target state="translated">Stringa <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> per lo spazio dei nomi XAML da controllare per verificare la presenza di un risultato compatibile.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>When this method returns, the <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> string for a compatible XAML namespace request.</source>
          <target state="translated">Quando questo metodo restituisce il risultato, stringa <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> per una richiesta dello spazio dei nomi XAML compatibile.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>This might be identical to <bpt id="p1">&lt;c&gt;</bpt>xamlNamespace<ept id="p1">&lt;/c&gt;</ept> if the method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Può essere identica a <bpt id="p1">&lt;c&gt;</bpt>xamlNamespace<ept id="p1">&lt;/c&gt;</ept> se il metodo restituisce <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>Returns the success or failure of a request for a compatible XAML namespace.</source>
          <target state="translated">Restituisce l'esito positivo o negativo di una richiesta per uno spazio dei nomi XAML compatibile.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>A successful request reports that XAML namespace as an out parameter.</source>
          <target state="translated">Una richiesta riuscita segnala lo spazio dei nomi XAML come parametro out.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="compatibleNamespace" /&gt;</ph> contains a usable result; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="compatibleNamespace" /&gt;</ph> contiene un risultato utilizzabile; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>Internally, this method uses the following lookup order:</source>
          <target state="translated">Internamente, questo metodo Usa l'ordine di ricerca seguenti:</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</source>
          <target state="translated">Un dizionario compatibilità implementato internamente, che è stato controllato da una ricerca precedente.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;</ph> parameter evaluation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;</ph> valutazione parametro.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>If no other compatible namespace is discovered and this method returns <ph id="ph1">`false`</ph>, the <ph id="ph2">`compatibleNamespace`</ph> parameter output might have the same value as the <ph id="ph3">`xamlNamespace`</ph> input.</source>
          <target state="translated">Se non viene individuato alcun altro spazio dei nomi compatibile e che questo metodo restituisce <ph id="ph1">`false`</ph>, <ph id="ph2">`compatibleNamespace`</ph> output parametro potrebbe essere lo stesso valore di <ph id="ph3">`xamlNamespace`</ph> input.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>