<Type Name="XamlSchemaContext" FullName="System.Xaml.XamlSchemaContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ca57d453aac5cc8999eec238f44546bc66c4ec03" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39845175" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlSchemaContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlSchemaContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlSchemaContext" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlSchemaContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlSchemaContext" />
  <TypeSignature Language="F#" Value="type XamlSchemaContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="89a11-101">Definisce un contesto riutilizzabile per l'interpretazione o il mapping dei tipi XAML e dei tipi negli assembly ad essi sottostanti.</span>
      <span class="sxs-lookup">
        <span data-stu-id="89a11-101">Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-102">Un contesto dello schema XAML offre un livello di astrazione tra uno schema o del vocabolario per XAML e un'implementazione di parser specifico.</span><span class="sxs-lookup"><span data-stu-id="89a11-102">A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</span></span> <span data-ttu-id="89a11-103">Inserendo il concetto di un contesto dello schema, lo schema può essere utilizzato con diversi parser XAML e il contesto dello schema riempie i dettagli necessari per interagire con un parser XAML specifico.</span><span class="sxs-lookup"><span data-stu-id="89a11-103">By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</span></span> <span data-ttu-id="89a11-104">Ad esempio, il contesto dello schema XAML offre API di query che si riferiscono ai concetti XAML o sull'associazione CLR al sistema di tipi XAML.</span><span class="sxs-lookup"><span data-stu-id="89a11-104">For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</span></span> <span data-ttu-id="89a11-105">Il contesto dello schema XAML è anche responsabile della gestione degli assembly caricati, l'elenco di assembly che definisce dove un parser XAML cerca i tipi di supporto.</span><span class="sxs-lookup"><span data-stu-id="89a11-105">The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="89a11-106">
        <para>In un' <see cref="T:System.AppDomain" />, un <see cref="T:System.Xaml.XamlSchemaContext" /> possono essere condivisi tra più chiamanti che includono sia completo e i chiamanti in attendibilità parziale. Questa situazione si verifica nei Framework, ad esempio WPF, che forniscono l'accesso parzialmente attendibile per XAML il caricamento per parti del modello applicazione WPF. Il valore predefinito <see cref="T:System.Xaml.XamlSchemaContext" /> implementazione fornisce le misure di sicurezza in questo scenario, mantenendo tutte le proprietà e impostazioni non modificabile. Le implementazioni derivate possono anche seguire questo modello di immutabilità per le proprietà e le impostazioni di un contesto dello schema XAML.  Il <see cref="T:System.Xaml.XamlSchemaContext" /> classe di base è progettata in modo che le ricerche non hanno esternamente effetti collaterali. I tipi cui fanno riferimento <see cref="T:System.Xaml.XamlSchemaContext" /> API nella base di classe, ad esempio <see cref="T:System.Xaml.XamlType" /> o <see cref="T:System.Xaml.XamlMember" />, anche non producono effetti collaterali dalle ricerche. Dovrebbero essere disponibili la costruzione e le impostazioni di tutti i dati necessari per eseguire una determinazione dello schema di <see cref="T:System.AppDomain" />. Si noti che nessuna API di ricerca si basano su servizi passato in modo esplicito; l'input si basa sulla stringa di input solo.  Il <see cref="T:System.Xaml.XamlSchemaContext" /> classe base, e <see cref="T:System.Xaml.XamlType" /> e <see cref="T:System.Xaml.XamlMember" /> sono tutte thread-safe nelle implementazioni di base. Se si deriva da <see cref="T:System.Xaml.XamlSchemaContext" /> o derivare le classi di sistema di tipo XAML, ad esempio <see cref="T:System.Xaml.XamlType" /> e <see cref="T:System.Xaml.XamlMember" /> , è possibile scegliere se le classi si comportano come thread-safe.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="89a11-106">
          <para>In an <see cref="T:System.AppDomain" />, a <see cref="T:System.Xaml.XamlSchemaContext" /> can be shared between multiple callers, which include both full and partial trust callers. This situation exists in frameworks such as WPF, which provide partial-trust access to XAML loading for portions of the WPF application model. The default <see cref="T:System.Xaml.XamlSchemaContext" /> implementation provides safeguards in this scenario by keeping all its properties and settings immutable. Derived implementations should also consider following this model of immutability for properties and settings of a XAML schema context.  The <see cref="T:System.Xaml.XamlSchemaContext" /> base class is designed so that lookups have no externally observable side effects. The types that are referenced by <see cref="T:System.Xaml.XamlSchemaContext" /> APIs in the base class, such as <see cref="T:System.Xaml.XamlType" /> or <see cref="T:System.Xaml.XamlMember" />, also produce no side effects from lookups. All data that is needed to make a schema determination should be available from the construction and settings of the <see cref="T:System.AppDomain" />. Notice that no lookup APIs rely on explicitly passed-in services; their input relies on string input only.  The <see cref="T:System.Xaml.XamlSchemaContext" /> base class, and <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> are all thread safe in their base implementations. If you derive from <see cref="T:System.Xaml.XamlSchemaContext" /> or derive XAML type system classes such as <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> , you can choose whether your classes will behave as thread safe.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89a11-107">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-107">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89a11-108">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-108">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : seq&lt;System.Reflection.Assembly&gt; -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext referenceAssemblies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies">
          <span data-ttu-id="89a11-109">Informazioni su un set di assembly enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-109">An enumerable set of assembly information items.</span>
          </span>
          <span data-ttu-id="89a11-110">Ogni informazione sugli assembly viene specificata da un valore di <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-110">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-111">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" /> in base a un set di assembly di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-111">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : System.Xaml.XamlSchemaContextSettings -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="89a11-112">Oggetto impostazioni da utilizzare per costruire l'oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-112">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-113">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" /> in base a un oggetto impostazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a settings object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-114">L'oggetto impostazioni archivia le informazioni sulla conversione di testo e specifiche dell'estensione di markup per il contesto dello schema.</span><span class="sxs-lookup"><span data-stu-id="89a11-114">The settings object stores information about text converter and markup extension specifics for the schema context.</span></span> <span data-ttu-id="89a11-115">Per ulteriori informazioni, vedere <xref:System.Xaml.XamlSchemaContextSettings>.</span><span class="sxs-lookup"><span data-stu-id="89a11-115">For more information, see <xref:System.Xaml.XamlSchemaContextSettings>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies, System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies, class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly), settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies, System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : seq&lt;System.Reflection.Assembly&gt; * System.Xaml.XamlSchemaContextSettings -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext (referenceAssemblies, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies">
          <span data-ttu-id="89a11-116">Informazioni su un set di assembly enumerabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-116">An enumerable set of assembly information.</span>
          </span>
          <span data-ttu-id="89a11-117">Ogni informazione sugli assembly viene specificata da un valore di <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-117">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="89a11-118">Oggetto impostazioni da utilizzare per costruire l'oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-118">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-119">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" /> in base a un set di assembly di riferimento e a un oggetto impostazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies and a settings object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!XamlSchemaContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="xamlSchemaContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89a11-120">Fornisce un'implementazione <see langword="Finalize" /> non standard che non richiama <see langword="Dispose" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-120">Provides a nonstandard <see langword="Finalize" /> implementation that does not invoke <see langword="Dispose" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-121">Contesti dello schema XAML non devono essere eliminati da garbage collection automatica o da operazioni manuali.</span><span class="sxs-lookup"><span data-stu-id="89a11-121">XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</span></span> <span data-ttu-id="89a11-122">Sebbene i contesti di schemi XAML sono presenti risorse non gestite, <xref:System.Windows.Markup.XamlDeferLoadAttribute> proprietà potrebbero essere ancora attive e l'eliminazione di un contesto dello schema XAML può interferire con l'operazione correlata caricamento posticipato.</span><span class="sxs-lookup"><span data-stu-id="89a11-122">Although XAML schema contexts  have no unmanaged resources, <xref:System.Windows.Markup.XamlDeferLoadAttribute> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</span></span>  
  
 <span data-ttu-id="89a11-123"><xref:System.AppDomain.AssemblyLoad> gestori eventi, che sono agganciati internamente come riferimenti deboli, vengono eliminati da questa implementazione.</span><span class="sxs-lookup"><span data-stu-id="89a11-123"><xref:System.AppDomain.AssemblyLoad> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifyAssemblyNamesInClrNamespaces">
      <MemberSignature Language="C#" Value="public bool FullyQualifyAssemblyNamesInClrNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullyQualifyAssemblyNamesInClrNamespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullyQualifyAssemblyNamesInClrNamespaces { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.FullyQualifyAssemblyNamesInClrNamespaces : bool" Usage="System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89a11-124">Ottiene un valore che specifica se uno schema XAML e il relativo contesto utilizzano nomi completi dell'assembly nei valori restituiti dall'API di ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-124">Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89a11-125">
            <see langword="true" /> se uno schema XAML e il relativo contesto utilizzano nomi completi dell'assembly nei valori restituiti dalle API di ricerca; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-125">
              <see langword="true" /> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-126">Questa proprietà restituisce il <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> valore che viene stabilito nelle impostazioni per il <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> firma del costruttore.</span><span class="sxs-lookup"><span data-stu-id="89a11-126">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="89a11-127">Se le altre firme sono state usate per la costruzione o se <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> non è impostata in modo specifico `true`, il valore di questa proprietà è `false`.</span><span class="sxs-lookup"><span data-stu-id="89a11-127">If other signatures were used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="89a11-128">Il valore di questa proprietà influisce sulle stringhe restituite da <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span><span class="sxs-lookup"><span data-stu-id="89a11-128">The value of this property influences the strings that are returned by <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span></span> <span data-ttu-id="89a11-129">Se <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> viene `true`, la parte dell'assembly della stringa segnala l'equivalente di <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="89a11-129">If <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> is `true`, the assembly portion of the string reports the equivalent of <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetAllXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetAllXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlNamespaces () As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetAllXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetAllXamlNamespaces : unit -&gt; seq&lt;string&gt;&#xA;override this.GetAllXamlNamespaces : unit -&gt; seq&lt;string&gt;" Usage="xamlSchemaContext.GetAllXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89a11-130">Cerca negli assembly contenuti nell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> e restituisce un set di spazi dei nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-130">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of namespaces.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a11-131">Set enumerabile di identificatori degli spazi dei nomi,</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-131">An enumerable set of namespace identifiers.</span>
          </span>
          <span data-ttu-id="89a11-132">Questi identificatori sono forniti sotto forma di stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-132">These identifiers are provided as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-133">Questo metodo cercherà l'assembly di riferimento solo se vengono passati tramite la costruzione o impostazione delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="89a11-133">This method only searches the reference assemblies if they are passed in through construction or property setting.</span></span> <span data-ttu-id="89a11-134">Se non viene stabilito alcun assembly come assembly di riferimento, la logica di questo metodo esamina tutti gli assembly caricati in cui questo <xref:System.Xaml.XamlSchemaContext> è attiva.</span><span class="sxs-lookup"><span data-stu-id="89a11-134">If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <xref:System.Xaml.XamlSchemaContext> is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt; GetAllXamlTypes (string xamlNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlType&gt; GetAllXamlTypes(string xamlNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlTypes (xamlNamespace As String) As ICollection(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::Xaml::XamlType ^&gt; ^ GetAllXamlTypes(System::String ^ xamlNamespace);" />
      <MemberSignature Language="F#" Value="abstract member GetAllXamlTypes : string -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;&#xA;override this.GetAllXamlTypes : string -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;" Usage="xamlSchemaContext.GetAllXamlTypes xamlNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="89a11-135">Spazio dei nomi XAML per il quale restituire i tipi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-135">The XAML namespace to return types for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-136">Cerca negli assembly contenuti nell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> e restituisce un set di tipi dallo spazio dei nomi XAML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-136">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of types from the specified XAML namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a11-137">Set enumerabile di tipi XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-137">An enumerable set of XAML types.</span>
          </span>
          <span data-ttu-id="89a11-138">Ciascun tipo XAML nel set è rappresentato da un oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-138">Each XAML type in the set is represented by a <see cref="T:System.Xaml.XamlType" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetPreferredPrefix (string xmlns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPreferredPrefix(string xmlns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredPrefix (xmlns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPreferredPrefix(System::String ^ xmlns);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredPrefix : string -&gt; string&#xA;override this.GetPreferredPrefix : string -&gt; string" Usage="xamlSchemaContext.GetPreferredPrefix xmlns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlns">
          <span data-ttu-id="89a11-139">Spazio dei nomi XAML per il quale ottenere il prefisso preferito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-139">The XAML namespace to get the preferred prefix for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-140">Ottiene una stringa segnalata come prefisso preferito che deve essere utilizzata dai consumer quando eseguono il mapping dello spazio dei nomi XAML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-140">Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a11-141">Stringa che i consumer devono utilizzare quando eseguono il mapping dello spazio dei nomi XAML specificato per l'utilizzo del markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-141">A string that consumers should use when they map the specified XAML namespace for markup use.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-142">Il consumer più immediato delle informazioni è in genere un writer XAML.</span><span class="sxs-lookup"><span data-stu-id="89a11-142">The most immediate consumer of the information is typically a XAML writer.</span></span> <span data-ttu-id="89a11-143">Altri consumer indiretta includono gli strumenti di progettazione.</span><span class="sxs-lookup"><span data-stu-id="89a11-143">Other indirect consumers include design tools.</span></span>  
  
 <span data-ttu-id="89a11-144">Come parte dell'associazione XAML per common language runtime (CLR), è possibile specificare queste informazioni, applicando <xref:System.Windows.Markup.XmlnsPrefixAttribute> a livello di assembly.</span><span class="sxs-lookup"><span data-stu-id="89a11-144">As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <xref:System.Windows.Markup.XmlnsPrefixAttribute> at the assembly level.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89a11-145">
            <paramref name="xmlns" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-145">
              <paramref name="xmlns" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueConverter&lt;TConverterBase&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; GetValueConverter&lt;TConverterBase&gt; (Type converterType, System.Xaml.XamlType targetType) where TConverterBase : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Xaml.Schema.XamlValueConverter`1&lt;!!TConverterBase&gt; GetValueConverter&lt;class TConverterBase&gt;(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueConverter(Of TConverterBase As Class) (converterType As Type, targetType As XamlType) As XamlValueConverter(Of TConverterBase)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : class System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ GetValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.GetValueConverter : Type * System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; (requires 'ConverterBase : null)" Usage="xamlSchemaContext.GetValueConverter (converterType, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TConverterBase">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <typeparam name="TConverterBase">
          <span data-ttu-id="89a11-146">Classe base specifica del convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-146">The specific converter base class.</span>
          </span>
        </typeparam>
        <param name="converterType">
          <span data-ttu-id="89a11-147">Implementazione del convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-147">The converter implementation.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="89a11-148">Tipo di destinazione desiderato per il convertitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-148">The desired destination type for the converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-149">Restituisce un convertitore di valori che può eseguire la conversione nell'oggetto <paramref name="targetType" /> richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-149">Returns a value converter that can convert to the requested <paramref name="targetType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a11-150">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo corrispondente al vincolo presente nella chiamata al metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-150">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with a constraint that matches the constraint that is put on the method call.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlDirective">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlDirective GetXamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlDirective GetXamlDirective(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlDirective (xamlNamespace As String, name As String) As XamlDirective" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlDirective ^ GetXamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlDirective : string * string -&gt; System.Xaml.XamlDirective&#xA;override this.GetXamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="xamlSchemaContext.GetXamlDirective (xamlNamespace, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlDirective</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="89a11-151">Spazio dei nomi XAML contenente la direttiva denominata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-151">The XAML namespace that contains the named directive.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="89a11-152">Nome della direttiva da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-152">The name of the directive to obtain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-153">Restituisce un valore <see cref="T:System.Xaml.XamlDirective" /> che rappresenta una direttiva, per il linguaggio XAML o per un'implementazione specifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-153">Returns a <see cref="T:System.Xaml.XamlDirective" /> value that represents a directive, either for the XAML language or for a particular implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a11-154">Oggetto <see cref="T:System.Xaml.XamlDirective" /> che rappresenta la direttiva richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-154">A <see cref="T:System.Xaml.XamlDirective" /> object that represents the requested directive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-155">Eseguire l'override di questo metodo se si crea una classe derivata da <xref:System.Xaml.XamlDirective> come parte di uno scenario di estensione del sistema di tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="89a11-155">Override this method if you create a derived class from <xref:System.Xaml.XamlDirective> as part of a XAML type system extension scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89a11-156">
            <paramref name="xamlNamespace" /> o <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-156">
              <paramref name="xamlNamespace" /> or <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXamlType">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89a11-157">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su un identificatore di tipo CLR o XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-157">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on either a CLR or XAML type identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlType GetXamlType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlType : Type -&gt; System.Xaml.XamlType&#xA;override this.GetXamlType : Type -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="89a11-158">Tipo per il quale ottenere un oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-158">The type to get a <see cref="T:System.Xaml.XamlType" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-159">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su un identificatore di tipo CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-159">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a CLR type identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a11-160">Oggetto <see cref="T:System.Xaml.XamlType" /> che corrisponde al parametro <paramref name="type" /> di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-160">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-161">Questo overload presuppone che si stia usando CLR per il sistema di tipi di backup.</span><span class="sxs-lookup"><span data-stu-id="89a11-161">This overload assumes that you are using the CLR for the backing type system.</span></span> <span data-ttu-id="89a11-162">Se non si usa il sistema di tipi CLR, usare <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span><span class="sxs-lookup"><span data-stu-id="89a11-162">If you are not using the CLR type system, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89a11-163">
            <paramref name="type" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-163">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType GetXamlType (System.Xaml.Schema.XamlTypeName xamlTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlType GetXamlType(class System.Xaml.Schema.XamlTypeName xamlTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlType ^ GetXamlType(System::Xaml::Schema::XamlTypeName ^ xamlTypeName);" />
      <MemberSignature Language="F#" Value="member this.GetXamlType : System.Xaml.Schema.XamlTypeName -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType xamlTypeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlTypeName" Type="System.Xaml.Schema.XamlTypeName" />
      </Parameters>
      <Docs>
        <param name="xamlTypeName">
          <span data-ttu-id="89a11-164">Nome del tipo XAML per il quale ottenere un oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-164">The XAML type name to get a <see cref="T:System.Xaml.XamlType" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-165">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su un nome del tipo di sistema XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-165">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML system type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a11-166">Oggetto <see cref="T:System.Xaml.XamlType" /> che corrisponde al parametro <paramref name="xamlTypeName" /> di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-166">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="xamlTypeName" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="89a11-167">Un componente di <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> o <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-167">A component of <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> or <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89a11-168">
            <paramref name="xamlTypeName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-168">
              <paramref name="xamlTypeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xaml.Schema.XamlTypeName" />
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xaml.XamlType GetXamlType (string xamlNamespace, string name, params System.Xaml.XamlType[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(string xamlNamespace, string name, class System.Xaml.XamlType[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetXamlType (xamlNamespace As String, name As String, ParamArray typeArguments As XamlType()) As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(System::String ^ xamlNamespace, System::String ^ name, ... cli::array &lt;System::Xaml::XamlType ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlType : string * string * System.Xaml.XamlType[] -&gt; System.Xaml.XamlType&#xA;override this.GetXamlType : string * string * System.Xaml.XamlType[] -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType (xamlNamespace, name, typeArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="89a11-169">Spazio dei nomi XAML contenente il tipo desiderato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-169">The XAML namespace that contains the desired type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="89a11-170">Nome della stringa del tipo desiderato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-170">The string name of the desired type.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="89a11-171">Argomenti di tipo di inizializzazione per un tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-171">The initialization type arguments for a generic type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-172">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su uno spazio dei nomi XAML e una stringa per il nome del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-172">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML namespace and a string for the type name.</span>
          </span>
          <span data-ttu-id="89a11-173">Questa firma può specificare gli argomenti del tipo per i casi in cui il tipo desiderato è generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-173">This signature can specify the type arguments for cases where the desired type is a generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a11-174">Oggetto <see cref="T:System.Xaml.XamlType" /> che corrisponde ai criteri di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-174">The <see cref="T:System.Xaml.XamlType" /> that matches the input criteria.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAssemblyResolve">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.Assembly OnAssemblyResolve (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.Assembly OnAssemblyResolve(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function OnAssemblyResolve (assemblyName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Reflection::Assembly ^ OnAssemblyResolve(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member OnAssemblyResolve : string -&gt; System.Reflection.Assembly&#xA;override this.OnAssemblyResolve : string -&gt; System.Reflection.Assembly" Usage="xamlSchemaContext.OnAssemblyResolve assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="89a11-175">Nome dell'assembly da caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-175">The name of the assembly to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-176">Chiamato quando le operazioni utilizzano questo contesto dello schema per risolvere un assembly richiesto per risolvere gli spazi dei nomi XAML in esso contenuti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-176">Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a11-177">Assembly risolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-177">The resolved assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-178">La tecnica di risoluzione assembly sottostante, ovvero un'API interna, ha le tolleranze incorporate per formati di stringa diversa dal nome di un assembly come base il <xref:System.Reflection.AssemblyName> comportamento di costruzione.</span><span class="sxs-lookup"><span data-stu-id="89a11-178">The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <xref:System.Reflection.AssemblyName> construction behavior.</span></span>  
  
 <span data-ttu-id="89a11-179">Lo scopo di questa API è per abilitare la risoluzione di prima possibilità su set noto degli assembly, ad esempio rispetto all'assembly di riferimento invece che su una global assembly cache.</span><span class="sxs-lookup"><span data-stu-id="89a11-179">The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</span></span> <span data-ttu-id="89a11-180">Se l'elenco di assembly di riferimento viene popolato, l'implementazione predefinita può accedere gli assembly di riferimento noti.</span><span class="sxs-lookup"><span data-stu-id="89a11-180">If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt; ReferenceAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Reflection.Assembly&gt; ReferenceAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceAssemblies As IList(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ ReferenceAssemblies { System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferenceAssemblies : System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt;" Usage="System.Xaml.XamlSchemaContext.ReferenceAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89a11-181">Ottiene un set enumerabile di assembly di riferimento per il contesto dello schema XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-181">Gets an enumerable set of reference assemblies for the XAML schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89a11-182">Set enumerabile di assembly di riferimento per il contesto dello schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-182">An enumerable set of reference assemblies for the schema context.</span>
          </span>
          <span data-ttu-id="89a11-183">Ogni informazione sugli assembly viene specificata da un valore di <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-183">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportMarkupExtensionsWithDuplicateArity">
      <MemberSignature Language="C#" Value="public bool SupportMarkupExtensionsWithDuplicateArity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportMarkupExtensionsWithDuplicateArity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportMarkupExtensionsWithDuplicateArity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportMarkupExtensionsWithDuplicateArity : bool" Usage="System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89a11-184">Ottiene un valore che specifica se uno schema XAML e il relativo contesto supportano le estensioni di markup con due costruttori dello stesso grado (numero di parametri di input).</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-184">Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89a11-185">
            <see langword="true" /> se il contesto dello schema consente estensioni di markup con grado duplicato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-185">
              <see langword="true" /> if the schema context permits markup extensions that have duplicate arity; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="89a11-186">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-186">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-187">Questa proprietà restituisce il <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> valore che viene stabilito nelle impostazioni per il <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> firma del costruttore.</span><span class="sxs-lookup"><span data-stu-id="89a11-187">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="89a11-188">Se altre firme vengono utilizzate per la costruzione o se <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> non è impostata in modo specifico `true`, il valore di questa proprietà è `false`.</span><span class="sxs-lookup"><span data-stu-id="89a11-188">If other signatures are used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="89a11-189">Grado duplicato di estensioni di markup non viene indirizzato in modo specifico dalla specifica di XAML [MS-XAML] sezione 6.6.7.2.</span><span class="sxs-lookup"><span data-stu-id="89a11-189">Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</span></span> <span data-ttu-id="89a11-190">Questo avviene perché la formazione di elemento di informazione XAML per un'estensione di markup è identica, indipendentemente dal grado duplicato che potrebbe esistere nell'implementazione dell'estensione di markup.</span><span class="sxs-lookup"><span data-stu-id="89a11-190">This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</span></span> <span data-ttu-id="89a11-191">Solo la chiamata effettiva dell'estensione di markup e il relativo `ProvideValue` espone eventuali problemi associati con grado duplicato.</span><span class="sxs-lookup"><span data-stu-id="89a11-191">Only the actual invocation of the markup extension and its `ProvideValue` exposes any issues associated with duplicate arity.</span></span> <span data-ttu-id="89a11-192">Comportamento per la gestione di grado duplicato in questo modo viene definito e viene eseguito fino al livello ogni implementazione contesto dello schema XAML e all'integrazione di writer XAML.</span><span class="sxs-lookup"><span data-stu-id="89a11-192">Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</span></span> <span data-ttu-id="89a11-193">Contesto dello schema XAML predefinito come implementato per le operazioni di servizi XAML di .NET Framework non supporta grado duplicato; vari servizi API di .NET Framework XAML genereranno eccezioni durante l'elaborazione di utilizzo dell'estensione di markup con grado duplicato sottostante.</span><span class="sxs-lookup"><span data-stu-id="89a11-193">The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</span></span>  
  
 <span data-ttu-id="89a11-194">Per altre informazioni sulla definizione delle estensioni di markup, vedere [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="89a11-194">For more information about defining markup extensions, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCompatibleXamlNamespace">
      <MemberSignature Language="C#" Value="public virtual bool TryGetCompatibleXamlNamespace (string xamlNamespace, out string compatibleNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetCompatibleXamlNamespace(string xamlNamespace, [out] string&amp; compatibleNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetCompatibleXamlNamespace (xamlNamespace As String, ByRef compatibleNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetCompatibleXamlNamespace(System::String ^ xamlNamespace, [Runtime::InteropServices::Out] System::String ^ % compatibleNamespace);" />
      <MemberSignature Language="F#" Value="abstract member TryGetCompatibleXamlNamespace : string *  -&gt; bool&#xA;override this.TryGetCompatibleXamlNamespace : string *  -&gt; bool" Usage="xamlSchemaContext.TryGetCompatibleXamlNamespace (xamlNamespace, compatibleNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="compatibleNamespace" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="89a11-195">Stringa <see langword="xmlns" /> per lo spazio dei nomi XAML da controllare per verificare la presenza di un risultato compatibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-195">The <see langword="xmlns" /> string for the XAML namespace to be checked for a compatible result.</span>
          </span>
        </param>
        <param name="compatibleNamespace">
          <span data-ttu-id="89a11-196">Quando questo metodo restituisce il risultato, stringa <see langword="xmlns" /> per una richiesta dello spazio dei nomi XAML compatibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-196">When this method returns, the <see langword="xmlns" /> string for a compatible XAML namespace request.</span>
          </span>
          <span data-ttu-id="89a11-197">Può essere identica a <c>xamlNamespace</c> se il metodo restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-197">This might be identical to <c>xamlNamespace</c> if the method returns <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a11-198">Restituisce l'esito positivo o negativo di una richiesta per uno spazio dei nomi XAML compatibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-198">Returns the success or failure of a request for a compatible XAML namespace.</span>
          </span>
          <span data-ttu-id="89a11-199">Una richiesta riuscita segnala lo spazio dei nomi XAML come parametro out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-199">A successful request reports that XAML namespace as an out parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a11-200">
            <see langword="true" /> se <paramref name="compatibleNamespace" /> contiene un risultato utilizzabile; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-200">
              <see langword="true" /> if <paramref name="compatibleNamespace" /> contains a usable result; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a11-201">Internamente, questo metodo Usa l'ordine di ricerca seguenti:</span><span class="sxs-lookup"><span data-stu-id="89a11-201">Internally, this method uses the following lookup order:</span></span>  
  
1.  <span data-ttu-id="89a11-202">Un dizionario implementate internamente la compatibilità, che è stato controllato da una ricerca precedente.</span><span class="sxs-lookup"><span data-stu-id="89a11-202">An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</span></span>  
  
2.  <span data-ttu-id="89a11-203">Il <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> valutazione parametro.</span><span class="sxs-lookup"><span data-stu-id="89a11-203">The <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> parameter evaluation.</span></span>  
  
 <span data-ttu-id="89a11-204">Se non viene individuato alcun altro spazio dei nomi compatibile e questo metodo restituisce `false`, il `compatibleNamespace` parametro output potrebbe avere lo stesso valore di `xamlNamespace` input.</span><span class="sxs-lookup"><span data-stu-id="89a11-204">If no other compatible namespace is discovered and this method returns `false`, the `compatibleNamespace` parameter output might have the same value as the `xamlNamespace` input.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89a11-205">
            <paramref name="xamlNamespace" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a11-205">
              <paramref name="xamlNamespace" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>