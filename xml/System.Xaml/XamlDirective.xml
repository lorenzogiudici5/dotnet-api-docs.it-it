<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlDirective.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a2eac5472d3696b1d538c311c8dde96426e0fb73.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2eac5472d3696b1d538c311c8dde96426e0fb73</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>Provides the XAML type system identifier for a member if the member is also a XAML directive.</source>
          <target state="translated">Fornisce l'identificatore di sistema dei tipi XAML per un membro se il membro è anche una direttiva XAML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>XAML readers and XAML writers use the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> identifier during processing of member nodes.</source>
          <target state="translated">I lettori e i writer XAML utilizzano l'identificatore <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> durante l'elaborazione dei nodi del membro.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>The identifier is used when the XAML reader is positioned on a <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xaml.XamlMember.IsDirective" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">L'identificatore viene utilizzato quando il lettore XAML viene posizionato su un oggetto <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph> e <ph id="ph2">&lt;see cref="P:System.Xaml.XamlMember.IsDirective" /&gt;</ph> è <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> provides expected values for the XAML type system when the member is a XAML directive.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> Fornisce i valori previsti per il sistema di tipi XAML quando il membro è una direttiva XAML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>By definition, a XAML directive has characteristics that always return the same results for a subset of the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> properties, and the same XAML type system information is reported for all possible XAML directives.</source>
          <target state="translated">Per definizione, una direttiva XAML include caratteristiche che restituiscono sempre gli stessi risultati per un sottoinsieme di <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> proprietà e le stesse informazioni di sistema di tipo XAML viene segnalato per tutte le possibili direttive XAML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> <ph id="ph2">`Lookup*`</ph> virtual members in the <ph id="ph3">&lt;xref:System.Xaml.XamlDirective&gt;</ph> class.</source>
          <target state="translated">La segnalazione di caratteristiche di sistema di tipo XAML che sono specifiche delle direttive viene eseguita tramite il comportamento interno o tramite le sostituzioni di <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> <ph id="ph2">`Lookup*`</ph> membri virtuali nella <ph id="ph3">&lt;xref:System.Xaml.XamlDirective&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>The following list shows the returned results of a XAML directive for <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> when the member is actually a <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>:</source>
          <target state="translated">L'elenco seguente mostra i risultati di una direttiva XAML per <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> quando il membro è effettivamente un <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A&gt;</ph> è sempre <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> è sempre <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> è sempre <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;</ph> è sempre <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph> è sempre <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> è sempre <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph> è sempre <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph> è sempre <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> è sempre <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> è sempre <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>Also, the internal backing for <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> remains unset and returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Inoltre, il supporto interno per <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> resta non impostato e restituisce <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> is a <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> subclass.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> è un <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> sottoclasse.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>As with <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> has security considerations regarding how the XAML type system reports access.</source>
          <target state="translated">Come con <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> contiene considerazioni di sicurezza riguardanti il sistema di tipi XAML segnala l'accesso.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>See <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>The primary XAML namespace where this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> can exist.</source>
          <target state="translated">Spazio dei nomi XAML primario in cui può essere presente l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>The identifying name of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Nome identificativo dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> class, specifying values for a name and a single XAML namespace.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> specificando i valori per nome e singolo spazio dei nomi XAML.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>Use this signature only when you want or expect <ph id="ph1">&lt;see cref="P:System.Xaml.XamlMember.IsUnknown" /&gt;</ph> to report <ph id="ph2">&lt;see langword="true" /&gt;</ph> for the directive.</source>
          <target state="translated">Utilizzare questa firma solo quando si desidera o si prevede che <ph id="ph1">&lt;see cref="P:System.Xaml.XamlMember.IsUnknown" /&gt;</ph> restituisca <ph id="ph2">&lt;see langword="true" /&gt;</ph> per la direttiva.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>This signature of the constructor always generates an identifier for the directive where <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> reports <ph id="ph2">`true`</ph> for the XAML type system.</source>
          <target state="translated">Questa firma del costruttore genera sempre un identificatore per la direttiva in <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> report <ph id="ph2">`true`</ph> sistema di tipi per XAML.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor signature instead.</source>
          <target state="translated">Se le informazioni necessarie sono disponibili (tipo di supporto e un elemento di informazione di testo sintassi per la conversione) e si desidera un identificatore che è possibile applicare la direttiva, utilizzare il <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType&gt;</ph> firma del costruttore invece.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>If you use this signature, the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> value for the instance is <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>; and the <ph id="ph3">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> value and <ph id="ph4">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> value are both <ph id="ph5">`null`</ph>.</source>
          <target state="translated">Se si utilizza questa firma, il <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> valore per l'istanza è <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>; e <ph id="ph3">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> valore e <ph id="ph4">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> sono entrambi <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>A set of XAML namespaces where this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> can exist, passed as an enumerable set of the identifier strings.</source>
          <target state="translated">Un set di spazi dei nomi XAML dove è possibile che esista questo oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> passato come un set enumerabile di stringhe dell'identificatore.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The identifying name of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Nome identificativo dell'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The XAML type that backs the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Tipo XAML sottostante all'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The type converter that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> uses for text syntax conversion.</source>
          <target state="translated">Convertitore di tipi utilizzato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> per la conversione della sintassi del testo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>A value of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.AllowedMemberLocations" /&gt;</ph> enumeration.</source>
          <target state="translated">Valore dell'enumerazione <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.AllowedMemberLocations" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> class, specifying values for each per-case value of a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> specificando i valori per ogni valore caso per caso di un oggetto <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>You must use this constructor to generate a <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> that does not report <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> as <ph id="ph3">`true`</ph>.</source>
          <target state="translated">È necessario utilizzare questo costruttore per generare un <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> che non segnala <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> come <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The <ph id="ph1">&lt;paramref name="xamlType" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="xamlType" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>Gets a value that specifies the XAML node types where the directive can be specified.</source>
          <target state="translated">Ottiene un valore che specifica i tipi di nodo XAML in cui è possibile specificare la direttiva.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>A value of the enumeration.</source>
          <target state="translated">Valore dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>The default is the enumeration default, which is <ph id="ph1">&lt;see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è il valore predefinito dell'enumerazione, ovvero <ph id="ph1">&lt;see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>You can set this value in the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29&gt;</ph> constructor signature.</source>
          <target state="translated">È possibile impostare questo valore <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29&gt;</ph> firma del costruttore.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>If you construct by using the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29&gt;</ph> constructor signature, the <ph id="ph2">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> value for the instance is <ph id="ph3">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>.</source>
          <target state="translated">Se viene costruita tramite il <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29&gt;</ph> firma del costruttore, il <ph id="ph2">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> valore per l'istanza è <ph id="ph3">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>However, the instance always reports <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Tuttavia, l'istanza restituisce sempre <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> come <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>This behavior typically affects attempts to write object graphs and also affects other practical uses of a <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> value.</source>
          <target state="translated">Questo comportamento influisce in genere i tentativi di scrivere oggetti grafici e influisce anche altri impieghi pratici di un <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> valore.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>You typically would not construct a XAML directive case where <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Non è possibile creare in genere un case direttiva XAML in cui <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> è <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetHashCode">
          <source>Returns the hash code for this object.</source>
          <target state="translated">Restituisce il codice hash per questo oggetto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetHashCode">
          <source>An integer hash code.</source>
          <target state="translated">Codice hash di un intero.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>Returns a list of XAML namespaces where this XAML member can exist.</source>
          <target state="translated">Restituisce un elenco di spazi dei nomi XAML in cui può essere presente questo membro XAML.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>A list of XAML namespace identifiers, as strings.</source>
          <target state="translated">Elenco di identificatori degli spazi dei nomi XAML in formato stringa.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</source>
          <target state="translated">Gli identificatori dello spazio dei nomi XAML sono stringhe che vengono in genere visualizzati sotto forma di stringa identificatore URI (Uniform Resource) secondo le convenzioni normali per spazi dei nomi XAML e XML.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</source>
          <target state="translated">Se l'elenco contiene più di un elemento, il primo elemento nel set è in genere lo spazio dei nomi XAML pertinente primario per scopi di elaborazione e gli altri elementi sono alternativi.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType&gt;</ph> relies on this ordering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType&gt;</ph> si basa su questo ordine.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph> implementation.</source>
          <target state="translated">Restituisce un'implementazione <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>Because a XAML directive cannot have custom attributes, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Poiché una direttiva XAML non può avere attributi personalizzati, questa implementazione restituisce sempre <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object, which is used during deferred loading of XAML-declared objects.</source>
          <target state="translated">Restituisce un oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> utilizzato durante il caricamento posticipato degli oggetti dichiarati in XAML.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>Because a directive cannot have deferred loading, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Poiché una direttiva non può avere il caricamento posticipato, questa implementazione restituisce sempre <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> objects.</source>
          <target state="translated">Restituisce un elenco di oggetti <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>The list reports the members where dependency relationships for initialization order exist relative to this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Nell'elenco vengono segnalati i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>Because a XAML directive cannot have initialization order, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Poiché una direttiva XAML non può avere un ordine di inizializzazione, questa implementazione restituisce sempre <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> that is associated with a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> associato a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> information for this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Informazioni sull'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> per l'oggetto <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>This method may be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo può essere richiamato da chiamate a <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>This implementation returns an internal static <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> value that is specific to directives in the XAML type system.</source>
          <target state="translated">Questa implementazione restituisce un' statico interno <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> valore specifico per le direttive nel sistema di tipi XAML.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is reported as an ambient property.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> viene segnalato come proprietà di ambiente.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source>Because a XAML directive cannot be an ambient type, this implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Poiché una direttiva XAML non può essere un tipo di ambiente, questa implementazione restituisce sempre <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsEvent">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents an event.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> rappresenta un evento.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsEvent">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsEvent">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents an intended read-only property.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> rappresenta una proprietà di sola lettura prevista.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source>By definition, directives are settable.</source>
          <target state="translated">Per definizione, le direttive sono impostabili.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadPublic">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a property that has a public <ph id="ph2">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> rappresenta una proprietà che dispone di una funzione di accesso <ph id="ph2">&lt;see langword="get" /&gt;</ph> pubblica.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadPublic">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsReadPublic">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a member that is not resolvable by the backing system that is used for type and member resolution.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> rappresenta un membro che non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a non-resolvable member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> rappresenta un membro che non può essere risolto; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementazione solo chiama base e non esegue alcuna operazione più.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>.</source>
          <target state="translated">L'implementazione di base restituisce i risultati nell'ordine indicato: i risultati sono basati sulla reflection interna; o i risultati sono basati sul controllo per un valore null del <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementazione esegue il sealing questo virtuale membro; pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents an intended write-only property.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> rappresenta una proprietà di sola scrittura prevista.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWritePublic">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a property that has a public <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Restituisce un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> rappresenta una proprietà che dispone di una funzione di accesso <ph id="ph2">&lt;see langword="set" /&gt;</ph> pubblica.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWritePublic">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsWritePublic">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type where the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> can exist.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> del tipo in cui può essere presente l'oggetto <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>Target types are not relevant for directives; therefore, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Tipi di destinazione non sono rilevanti per le direttive; Pertanto, questa implementazione restituisce sempre <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type that is used by the member.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> del tipo utilizzato dal membro.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type that is used by the member.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> del tipo utilizzato dal membro.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementazione solo chiama base e non esegue alcuna operazione più.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>The base implementation returns results based either on internal reflection, or checking for a null value of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>, processing in that order.</source>
          <target state="translated">L'implementazione di base restituisce i risultati in base alla reflection interna o verifica di un valore null di <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>, elaborati nell'ordine specificato.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>See Remarks in <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType&gt;</ph> for more information about what information <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> carries.</source>
          <target state="translated">Vedere la sezione Osservazioni in <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType&gt;</ph> per ulteriori informazioni su quali informazioni <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> esegue.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>Returns a type converter implementation that is associated with this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Restituisce un'implementazione del convertitore di tipi associata all'oggetto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> instance that has <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> constraint; or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Istanza di <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> con vincolo <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementazione solo chiama base e non esegue alcuna operazione più.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>See <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source>Returns a <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Restituisce una funzione di accesso <ph id="ph1">&lt;see langword="get" /&gt;</ph> associata all'oggetto <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source>Returns a CLR reflection <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Restituisce un oggetto <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> della reflection CLR associato all'oggetto <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source>Returns a <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Restituisce una funzione di accesso <ph id="ph1">&lt;see langword="set" /&gt;</ph> associata all'oggetto <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> esegue il sealing al membro virtuale. Pertanto, tutti <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> tipi e tutte le direttive XAML predefinite devono utilizzare questo comportamento.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.ToString">
          <source>Returns a string representation of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Restituisce una rappresentazione in forma di stringa di <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.ToString">
          <source>A string representation of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Rappresentazione in forma di stringa di <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.ToString">
          <source>If XAML namespace information is available, this implementation returns a string combination of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</source>
          <target state="translated">Se sono disponibili informazioni dello spazio dei nomi XAML, questa implementazione restituisce una combinazione della stringa <ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.ToString">
          <source>If XAML namespace information is unavailable, this implementation returns <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</source>
          <target state="translated">Se le informazioni dello spazio dei nomi XAML non sono disponibile, questa implementazione restituisce <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>