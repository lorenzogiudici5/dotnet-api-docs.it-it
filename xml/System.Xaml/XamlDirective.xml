<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95fab87d5eed7bb70a2918e6a942597a62d78e89" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51934950" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <TypeSignature Language="F#" Value="type XamlDirective = class&#xA;    inherit XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="31c42-101">Fornisce l'identificatore di sistema dei tipi XAML per un membro se il membro è anche una direttiva XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="31c42-101">Provides the XAML type system identifier for a member if the member is also a XAML directive.</span>
      </span>
      <span data-ttu-id="31c42-102">I lettori e i writer XAML utilizzano l'identificatore <see cref="T:System.Xaml.XamlDirective" /> durante l'elaborazione dei nodi del membro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="31c42-102">XAML readers and XAML writers use the <see cref="T:System.Xaml.XamlDirective" /> identifier during processing of member nodes.</span>
      </span>
      <span data-ttu-id="31c42-103">L'identificatore viene utilizzato quando il lettore XAML viene posizionato su un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" /> e <see cref="P:System.Xaml.XamlMember.IsDirective" /> è <see langword="true" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="31c42-103">The identifier is used when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" /> and <see cref="P:System.Xaml.XamlMember.IsDirective" /> is <see langword="true" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-104"><xref:System.Xaml.XamlDirective> Fornisce i valori previsti per il sistema di tipi XAML quando il membro è una direttiva XAML.</span><span class="sxs-lookup"><span data-stu-id="31c42-104"><xref:System.Xaml.XamlDirective> provides expected values for the XAML type system when the member is a XAML directive.</span></span> <span data-ttu-id="31c42-105">Per definizione, una direttiva XAML include caratteristiche che restituiscono sempre gli stessi risultati per un subset del <xref:System.Xaml.XamlMember> proprietà e le stesse informazioni di sistema di tipo XAML viene segnalato per tutte le possibili direttive XAML.</span><span class="sxs-lookup"><span data-stu-id="31c42-105">By definition, a XAML directive has characteristics that always return the same results for a subset of the <xref:System.Xaml.XamlMember> properties, and the same XAML type system information is reported for all possible XAML directives.</span></span> <span data-ttu-id="31c42-106">La creazione di report di caratteristiche di sistema di tipi XAML specifiche per le direttive viene eseguita tramite il comportamento interno o tramite le sostituzioni dei <xref:System.Xaml.XamlMember> `Lookup*` membri virtuali nel <xref:System.Xaml.XamlDirective> classe.</span><span class="sxs-lookup"><span data-stu-id="31c42-106">The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <xref:System.Xaml.XamlMember> `Lookup*` virtual members in the <xref:System.Xaml.XamlDirective> class.</span></span>  
  
 <span data-ttu-id="31c42-107">L'elenco seguente mostra i risultati di una direttiva XAML per restituiti <xref:System.Xaml.XamlMember> quando il membro è effettivamente un <xref:System.Xaml.XamlDirective>:</span><span class="sxs-lookup"><span data-stu-id="31c42-107">The following list shows the returned results of a XAML directive for <xref:System.Xaml.XamlMember> when the member is actually a <xref:System.Xaml.XamlDirective>:</span></span>  
  
-   <span data-ttu-id="31c42-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> è sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="31c42-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="31c42-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> è sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="31c42-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="31c42-110"><xref:System.Xaml.XamlMember.DependsOn%2A> è sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="31c42-110"><xref:System.Xaml.XamlMember.DependsOn%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="31c42-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> è sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="31c42-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="31c42-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> è sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="31c42-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="31c42-113"><xref:System.Xaml.XamlMember.IsDirective%2A> è sempre `true`.</span><span class="sxs-lookup"><span data-stu-id="31c42-113"><xref:System.Xaml.XamlMember.IsDirective%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="31c42-114"><xref:System.Xaml.XamlMember.IsEvent%2A> è sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="31c42-114"><xref:System.Xaml.XamlMember.IsEvent%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="31c42-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> è sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="31c42-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="31c42-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> è sempre `true`.</span><span class="sxs-lookup"><span data-stu-id="31c42-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="31c42-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> è sempre `true`.</span><span class="sxs-lookup"><span data-stu-id="31c42-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> is always `true`.</span></span>  
  
 <span data-ttu-id="31c42-118">Inoltre, il supporto interno per <xref:System.Xaml.XamlMember.DeclaringType%2A> rimane non impostato e restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="31c42-118">Also, the internal backing for <xref:System.Xaml.XamlMember.DeclaringType%2A> remains unset and returns `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31c42-119"><xref:System.Xaml.XamlDirective> è un <xref:System.Xaml.XamlMember> sottoclasse.</span><span class="sxs-lookup"><span data-stu-id="31c42-119"><xref:System.Xaml.XamlDirective> is a <xref:System.Xaml.XamlMember> subclass.</span></span> <span data-ttu-id="31c42-120">Come per gli <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> considerazioni di sicurezza riguardanti il modo in cui il sistema di tipi XAML segnala l'accesso.</span><span class="sxs-lookup"><span data-stu-id="31c42-120">As with <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> has security considerations regarding how the XAML type system reports access.</span></span> <span data-ttu-id="31c42-121">Vedere <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="31c42-121">See <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">
      <span data-ttu-id="31c42-122">Informazioni su strutture e concetti del flusso del nodo XAML</span>
      <span class="sxs-lookup">
        <span data-stu-id="31c42-122">Understanding XAML Node Stream Structures and Concepts</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31c42-123">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-123">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="31c42-124">Spazio dei nomi XAML primario in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-124">The primary XAML namespace where this <see cref="T:System.Xaml.XamlDirective" /> can exist.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="31c42-125">Nome identificativo dell'oggetto <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-125">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31c42-126">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDirective" /> specificando i valori per nome e singolo spazio dei nomi XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-126">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for a name and a single XAML namespace.</span>
          </span>
          <span data-ttu-id="31c42-127">Utilizzare questa firma solo quando si desidera o si prevede che <see cref="P:System.Xaml.XamlMember.IsUnknown" /> restituisca <see langword="true" /> per la direttiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-127">Use this signature only when you want or expect <see cref="P:System.Xaml.XamlMember.IsUnknown" /> to report <see langword="true" /> for the directive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="31c42-128">Questa firma del costruttore viene sempre generato un identificatore per la direttiva in cui <xref:System.Xaml.XamlMember.IsUnknown%2A> report `true` per XAML il sistema di tipi.</span><span class="sxs-lookup"><span data-stu-id="31c42-128">This signature of the constructor always generates an identifier for the directive where <xref:System.Xaml.XamlMember.IsUnknown%2A> reports `true` for the XAML type system.</span></span> <span data-ttu-id="31c42-129">Se le informazioni necessarie sono disponibili (tipo di supporto e un elemento di informazione di testo sintassi per la conversione) e si desidera che un identificatore che può applicare la direttiva, utilizzare il <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> firma del costruttore invece.</span><span class="sxs-lookup"><span data-stu-id="31c42-129">If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> constructor signature instead.</span></span>  
  
 <span data-ttu-id="31c42-130">Se si usa questa firma, il <xref:System.Xaml.XamlDirective.AllowedLocation%2A> valore per l'istanza è <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; e il <xref:System.Xaml.XamlMember.Type%2A> valore e <xref:System.Xaml.XamlMember.TypeConverter%2A> valore sono entrambi `null`.</span><span class="sxs-lookup"><span data-stu-id="31c42-130">If you use this signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; and the <xref:System.Xaml.XamlMember.Type%2A> value and <xref:System.Xaml.XamlMember.TypeConverter%2A> value are both `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : seq&lt;string&gt; * string * System.Xaml.XamlType * System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; * System.Xaml.Schema.AllowedMemberLocations -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespaces, name, xamlType, typeConverter, allowedLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces">
          <span data-ttu-id="31c42-131">Un set di spazi dei nomi XAML dove è possibile che esista questo oggetto <see cref="T:System.Xaml.XamlDirective" /> passato come un set enumerabile di stringhe dell'identificatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-131">A set of XAML namespaces where this <see cref="T:System.Xaml.XamlDirective" /> can exist, passed as an enumerable set of the identifier strings.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="31c42-132">Nome identificativo dell'oggetto <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-132">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </param>
        <param name="xamlType">
          <span data-ttu-id="31c42-133">Tipo XAML sottostante all'oggetto <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-133">The XAML type that backs the <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </param>
        <param name="typeConverter">
          <span data-ttu-id="31c42-134">Convertitore di tipi utilizzato dall'oggetto <see cref="T:System.Xaml.XamlDirective" /> per la conversione della sintassi del testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-134">The type converter that this <see cref="T:System.Xaml.XamlDirective" /> uses for text syntax conversion.</span>
          </span>
        </param>
        <param name="allowedLocation">
          <span data-ttu-id="31c42-135">Valore dell'enumerazione <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-135">A value of the <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31c42-136">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDirective" /> specificando i valori per ogni valore caso per caso di un oggetto <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-136">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for each per-case value of a <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-137">È necessario utilizzare questo costruttore per generare una <xref:System.Xaml.XamlDirective> che non segnalano <xref:System.Xaml.XamlMember.IsUnknown%2A> come `true`.</span><span class="sxs-lookup"><span data-stu-id="31c42-137">You must use this constructor to generate a <xref:System.Xaml.XamlDirective> that does not report <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31c42-138">Il valore del parametro <paramref name="xamlType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-138">The <paramref name="xamlType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedLocation : System.Xaml.Schema.AllowedMemberLocations" Usage="System.Xaml.XamlDirective.AllowedLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31c42-139">Ottiene un valore che specifica i tipi di nodo XAML in cui è possibile specificare la direttiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-139">Gets a value that specifies the XAML node types where the directive can be specified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31c42-140">Valore dell'enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-140">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="31c42-141">Il valore predefinito è il valore predefinito dell'enumerazione, ovvero <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-141">The default is the enumeration default, which is <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-142">È possibile impostare questo valore <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> firma del costruttore.</span><span class="sxs-lookup"><span data-stu-id="31c42-142">You can set this value in the <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> constructor signature.</span></span> <span data-ttu-id="31c42-143">Se si costruisce usando il <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> firma del costruttore, il <xref:System.Xaml.XamlDirective.AllowedLocation%2A> valore per l'istanza è <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span><span class="sxs-lookup"><span data-stu-id="31c42-143">If you construct by using the <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> constructor signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span></span> <span data-ttu-id="31c42-144">Tuttavia, l'istanza restituisce sempre <xref:System.Xaml.XamlMember.IsUnknown%2A> come `true`.</span><span class="sxs-lookup"><span data-stu-id="31c42-144">However, the instance always reports <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span> <span data-ttu-id="31c42-145">Questo comportamento influisce in genere su tentativi di scrivere oggetti grafici e interessa anche altri utilizzi pratici di un <xref:System.Xaml.XamlMember> valore.</span><span class="sxs-lookup"><span data-stu-id="31c42-145">This behavior typically affects attempts to write object graphs and also affects other practical uses of a <xref:System.Xaml.XamlMember> value.</span></span>  
  
 <span data-ttu-id="31c42-146">Non è possibile creare in genere un case direttivo XAML in cui <xref:System.Xaml.XamlDirective.AllowedLocation%2A> è <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="31c42-146">You typically would not construct a XAML directive case where <xref:System.Xaml.XamlDirective.AllowedLocation%2A> is <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlDirective.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-147">Restituisce il codice hash per questo oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-147">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-148">Codice hash di un intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-148">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlDirective.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-149">Restituisce un elenco di spazi dei nomi XAML in cui può essere presente questo membro XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-149">Returns a list of XAML namespaces where this XAML member can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-150">Elenco di identificatori degli spazi dei nomi XAML in formato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-150">A list of XAML namespace identifiers, as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-151">Gli identificatori dello spazio dei nomi XAML sono stringhe che sono in genere visualizzati sotto forma di stringa Uniform Resource Identifier (URI) in base alle convenzioni solite per spazi dei nomi XAML e XML.</span><span class="sxs-lookup"><span data-stu-id="31c42-151">The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</span></span> <span data-ttu-id="31c42-152">Se l'elenco contiene più di un elemento, il primo elemento nel set è in genere lo spazio dei nomi XAML pertinente primario per l'elaborazione e gli altri elementi sono gli oggetti alternativi.</span><span class="sxs-lookup"><span data-stu-id="31c42-152">If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</span></span> <span data-ttu-id="31c42-153"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> si basa su tale ordinamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-153"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> relies on this ordering.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlDirective.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-154">Restituisce un'implementazione <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-154">Returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
          <span data-ttu-id="31c42-155">Questa implementazione restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-155">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-156">Restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-156">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-157">Una direttiva XAML non può disporre di attributi personalizzati, questa implementazione restituisce sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="31c42-157">Because a XAML directive cannot have custom attributes, this implementation always returns `null`.</span></span> <span data-ttu-id="31c42-158"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-158"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlDirective.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-159">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilizzato durante il caricamento posticipato degli oggetti dichiarati in XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-159">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used during deferred loading of XAML-declared objects.</span>
          </span>
          <span data-ttu-id="31c42-160">Questa implementazione restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-160">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-161">Restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-161">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-162">Poiché una direttiva non può avere il caricamento posticipato, questa implementazione restituisce sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="31c42-162">Because a directive cannot have deferred loading, this implementation always returns `null`.</span></span> <span data-ttu-id="31c42-163"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-163"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlDirective.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-164">Restituisce un elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-164">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="31c42-165">Nell'elenco vengono segnalati i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-165">The list reports the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="31c42-166">Questa implementazione restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-166">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-167">Restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-167">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-168">Una direttiva XAML non può disporre di un ordine di inizializzazione, questa implementazione restituisce sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="31c42-168">Because a XAML directive cannot have initialization order, this implementation always returns `null`.</span></span> <span data-ttu-id="31c42-169"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-169"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlDirective.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-170">Restituisce l'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associato a <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-170">Returns the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with a <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-171">Informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> per l'oggetto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-171">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-172">Questo metodo può essere richiamato dalle chiamate a <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="31c42-172">This method may be invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="31c42-173">Questa implementazione restituisce un' statico interno <xref:System.Xaml.Schema.XamlMemberInvoker> valore specifico per le direttive nel sistema di tipi XAML.</span><span class="sxs-lookup"><span data-stu-id="31c42-173">This implementation returns an internal static <xref:System.Xaml.Schema.XamlMemberInvoker> value that is specific to directives in the XAML type system.</span></span> <span data-ttu-id="31c42-174"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-174"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlDirective.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-175">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene segnalato come proprietà di ambiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-175">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-176">Restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-176">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-177">Poiché una direttiva XAML non può essere un tipo di ambiente, questa implementazione restituisce sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="31c42-177">Because a XAML directive cannot be an ambient type, this implementation always returns `false`.</span></span> <span data-ttu-id="31c42-178"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-178"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="override this.LookupIsEvent : unit -&gt; bool" Usage="xamlDirective.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-179">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta un evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-179">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-180">Restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-180">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-181"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-181"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-182">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta una proprietà di sola lettura prevista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-182">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended read-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-183">Restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-183">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-184">Per definizione, le direttive sono configurabili.</span><span class="sxs-lookup"><span data-stu-id="31c42-184">By definition, directives are settable.</span></span> <span data-ttu-id="31c42-185"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-185"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlDirective.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-186">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="get" /> pubblica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-186">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-187">Restituisce sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-187">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-188"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-188"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlDirective.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-189">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta un membro che non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-189">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-190">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta un membro che non può essere risolto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-190">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlDirective" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-191">Il <xref:System.Xaml.XamlDirective> implementazione solo chiama la base e non esegue più.</span><span class="sxs-lookup"><span data-stu-id="31c42-191">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="31c42-192">L'implementazione di base restituisce i risultati nell'ordine indicato: i risultati sono basati sulla reflection interna; o i risultati sono basati sul controllo della presenza di un valore null di <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="31c42-192">The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="31c42-193">Il <xref:System.Xaml.XamlDirective> implementazione esegue il sealing questo virtuale membro; pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-193">The <xref:System.Xaml.XamlDirective> implementation seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-194">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta una proprietà di sola scrittura prevista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-194">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended write-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-195">Restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-195">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-196"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-196"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlDirective.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-197">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="set" /> pubblica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-197">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-198">Restituisce sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-198">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-199"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-199"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-200">Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-200">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
          <span data-ttu-id="31c42-201">Questa implementazione restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-201">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-202">Restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-202">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-203">Tipi di destinazione non sono rilevanti per le direttive; Pertanto, questa implementazione restituisce sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="31c42-203">Target types are not relevant for directives; therefore, this implementation always returns `null`.</span></span> <span data-ttu-id="31c42-204"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-204"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-205">Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-205">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-206">Oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-206">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-207">Il <xref:System.Xaml.XamlDirective> implementazione solo chiama la base e non esegue più.</span><span class="sxs-lookup"><span data-stu-id="31c42-207">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="31c42-208">L'implementazione di base restituisce i risultati in base alla reflection interne o verifica di un valore null di <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, elaborazione in quell'ordine.</span><span class="sxs-lookup"><span data-stu-id="31c42-208">The base implementation returns results based either on internal reflection, or checking for a null value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span> <span data-ttu-id="31c42-209"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-209"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 <span data-ttu-id="31c42-210">Vedere la sezione Osservazioni in <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> per ulteriori informazioni su quali informazioni <xref:System.Xaml.XamlMember.Type%2A> esegue.</span><span class="sxs-lookup"><span data-stu-id="31c42-210">See Remarks in <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> for more information about what information <xref:System.Xaml.XamlMember.Type%2A> carries.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlDirective.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-211">Restituisce un'implementazione del convertitore di tipi associata all'oggetto <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-211">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-212">Istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" />; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-212">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance that has <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-213">Il <xref:System.Xaml.XamlDirective> implementazione solo chiama la base e non esegue più.</span><span class="sxs-lookup"><span data-stu-id="31c42-213">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="31c42-214">Vedere <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="31c42-214">See <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="31c42-215"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-215"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-216">Restituisce una funzione di accesso <see langword="get" /> associata all'oggetto <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-216">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
          <span data-ttu-id="31c42-217">Questa implementazione restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-217">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-218">Restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-218">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-219"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-219"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlDirective.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-220">Restituisce un oggetto <see cref="T:System.Reflection.MemberInfo" /> della reflection CLR associato all'oggetto <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-220">Returns a CLR reflection <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
          <span data-ttu-id="31c42-221">Questa implementazione restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-221">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-222">Restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-222">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-223"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-223"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-224">Restituisce una funzione di accesso <see langword="set" /> associata all'oggetto <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-224">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
          <span data-ttu-id="31c42-225">Questa implementazione restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-225">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-226">Restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-226">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-227"><xref:System.Xaml.XamlDirective> esegue il sealing membro virtuale. Pertanto, tutti <xref:System.Xaml.XamlDirective> tipi e tutte le direttive XAML predefinite devono usare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="31c42-227"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlDirective.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31c42-228">Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-228">Returns a string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31c42-229">Rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31c42-229">A string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c42-230">Se sono disponibili informazioni dello spazio dei nomi XAML, questa implementazione restituisce una combinazione di stringhe <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> e <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="31c42-230">If XAML namespace information is available, this implementation returns a string combination of <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> and <xref:System.Xaml.XamlMember.Name%2A>.</span></span> <span data-ttu-id="31c42-231">Se le informazioni dello spazio dei nomi XAML non sono disponibile, questa implementazione restituisce <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="31c42-231">If XAML namespace information is unavailable, this implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>