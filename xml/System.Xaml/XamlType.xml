<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb0ff907d26752a779ff68947140ab04c94ff374" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39978471" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0a50f-101">Fornisce informazioni sui tipi XAML come parte del sistema XAML complessivo implementato nei servizi XAML di .NET Framework.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a50f-101">Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-102">Molte API nel <xref:System.Xaml.XamlType> classe forniscono informazioni sui tipi XAML, in cui il concetto generano report per è simile a sezioni specifiche della specifica XAML [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="0a50f-102">Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].</span></span>  
  
 <span data-ttu-id="0a50f-103"><xref:System.Xaml.XamlType> è ampiamente usato nelle API di servizi XAML di .NET Framework per la segnalazione di informazioni su un tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="0a50f-103"><xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.</span></span> <span data-ttu-id="0a50f-104"><xref:System.Xaml.XamlType> Restituisce le informazioni che potrebbe essere necessario conoscere un tipo XAML per funzionare con un'istanza o per accedere ai relativi membri da un flusso di nodi XAML o una rappresentazione XAML simile.</span><span class="sxs-lookup"><span data-stu-id="0a50f-104"><xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.</span></span> <span data-ttu-id="0a50f-105">La creazione di report è simile al modo in cui il <xref:System.Type> in CLR sistema tipo, insieme alle classi di reflection, ad esempio <xref:System.Reflection.MemberInfo>, forniscono informazioni su un tipo CLR e sul relativo utilizzo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-105">Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.</span></span>  
  
 <span data-ttu-id="0a50f-106">Per estendere il sistema di tipi XAML, è possibile derivare da <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-106">To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="0a50f-107">A tale scopo, potrebbe essere inoltre necessario implementare un <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-107">To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="0a50f-108">Il <xref:System.Xaml.Schema.XamlTypeInvoker> consente al sistema di tipo XAML generalizzato lavorare con il sistema di tipi di backup che si specifica come parte del comportamento della chiamata.</span><span class="sxs-lookup"><span data-stu-id="0a50f-108">The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.</span></span> <span data-ttu-id="0a50f-109">L'oggetto personalizzato specifico <xref:System.Xaml.Schema.XamlTypeInvoker> fornisce un modo per ridurre le dipendenze nel sistema di tipi CLR, che vengono usate per l'impostazione predefinita <xref:System.Xaml.XamlType> comportamento.</span><span class="sxs-lookup"><span data-stu-id="0a50f-109">The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-110">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-110">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType">
          <span data-ttu-id="0a50f-111">Oggetto <see cref="T:System.Type" /> CLR sottostante per il tipo XAML da costruire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-111">The underlying CLR <see cref="T:System.Type" /> for the XAML type to construct.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="0a50f-112">Contesto dello schema XAML per lettori o writer XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-112">XAML schema context for XAML readers or XAML writers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-113">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base alle informazioni sul tipo CLR sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the underlying CLR type information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a50f-114">Uno o più oggetti <paramref name="underlyingType" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-114">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="0a50f-115">Nome del tipo da creare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-115">The name of the type to create.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="0a50f-116">Argomenti di tipo per un oggetto <see cref="T:System.Xaml.XamlType" /> che rappresenta un tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-116">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span>
          </span>
          <span data-ttu-id="0a50f-117">Potrebbe essere (e spesso è) <see langword="null" />, che indica che il tipo rappresentato non è un tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-117">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="0a50f-118">Contesto dello schema XAML per lettori e writer XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-118">XAML schema context for XAML readers and XAML writers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-119">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base al nome di una stringa per il tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on a string name for the type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-120">Rappresenta un costruttore protetto.</span><span class="sxs-lookup"><span data-stu-id="0a50f-120">This is a protected constructor.</span></span> <span data-ttu-id="0a50f-121">Nessuna classe derivata pubblica corrente esistono che utilizzano questo percorso specifico per la costruzione.</span><span class="sxs-lookup"><span data-stu-id="0a50f-121">No current public derived classes exist that use this particular path for construction.</span></span> <span data-ttu-id="0a50f-122">I consumer esistenti <xref:System.Xaml.XamlType>, è necessario usare firme del costruttore (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, o <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) per inizializzare un <xref:System.Xaml.XamlType> oggetto.</span><span class="sxs-lookup"><span data-stu-id="0a50f-122">As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a50f-123">Uno o più oggetti <paramref name="typeName" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-123">One or more of <paramref name="typeName" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType">
          <span data-ttu-id="0a50f-124">Tipo sottostante per il tipo XAML da costruire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-124">The underlying type for the XAML type to construct.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="0a50f-125">Contesto dello schema XAML per il lettore XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-125">XAML schema context for the XAML reader.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="0a50f-126">Implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> che gestisce le chiamate con reflection di runtime all'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-126">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-127">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base alle informazioni sul tipo sottostante e a un'implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-127">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on underlying type information and a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a50f-128">Uno o più oggetti <paramref name="underlyingType" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-128">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace">
          <span data-ttu-id="0a50f-129">Spazio dei nomi XAML per il tipo in formato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-129">The XAML namespace for the type, as a string.</span>
          </span>
        </param>
        <param name="unknownTypeName">
          <span data-ttu-id="0a50f-130">Nome del tipo nello spazio dei nomi XAML <c>unknownTypeNamespace</c> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-130">The name of the type in the provided <c>unknownTypeNamespace</c> XAML namespace.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="0a50f-131">Argomenti di tipo per un oggetto <see cref="T:System.Xaml.XamlType" /> che rappresenta un tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-131">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span>
          </span>
          <span data-ttu-id="0a50f-132">Potrebbe essere (e spesso è) <see langword="null" />, che indica che il tipo rappresentato non è un tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-132">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="0a50f-133">Contesto dello schema XAML per lettori o writer XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-133">XAML schema context for XAML readers or XAML writers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-134">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base allo spazio dei nomi XAML e al nome di una stringa per il tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-134">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the XAML namespace and a string name for the type.</span>
          </span>
          <span data-ttu-id="0a50f-135">Questo costruttore è esclusivamente destinato all'analisi e alla registrazione dei nodi XAML degli utilizzi dei tipi noti per non avere supporto nel sistema dei tipi e nel contesto dello schema XAML di supporto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-135">This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-136">Utilizzare questo costruttore solo per i tipi "sconosciuti" in cui non è disponibile un tipo XAML che esegue il mapping a un sistema di tipi sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-136">Use this constructor only for "unknown" types where a XAML type that maps to an underlying type system is unavailable.</span></span> <span data-ttu-id="0a50f-137">Questo costruttore non produca un risultato in cui <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> è `true`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-137">This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> is `true`.</span></span> <span data-ttu-id="0a50f-138">Al contrario, la logica di reflector predefinita segnala il tipo sottostante come <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-138">Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0a50f-139">Tuttavia, questo comportamento può cambiare del <xref:System.Xaml.XamlType.LookupIsUnknown%2A> eseguire l'override.</span><span class="sxs-lookup"><span data-stu-id="0a50f-139">However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a50f-140">Uno o più oggetti <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-140">One or more of <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />, or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-141">Ottiene un insieme di sola lettura dei tipi che possono essere utilizzati come valore di <see cref="P:System.Xaml.XamlType.ContentProperty" /> per l'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-141">Gets a read-only collection of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-142">Insieme di sola lettura dei possibili tipi di contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-142">A read-only collection of possible content types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-143">Tipi assegnabili un tipo di contenuto specifico (ad esempio, può essere assegnato a un tipo di base che è un tipo di contenuto consentito) non sono considerati più tipi ai fini di <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-143">Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-144">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-144">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-145">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-145">Gets the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
          <span data-ttu-id="0a50f-146">La determinazione di questo valore si basa sul tipo sottostante dell'oggetto <see cref="T:System.Xaml.XamlType" /> e del contesto dello schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-146">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-147">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-147">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-148">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupBaseType%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-148">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-149">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupBaseType%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-149">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type.</span></span> <span data-ttu-id="0a50f-150">Per impostazione predefinita <xref:System.Xaml.XamlType.BaseType%2A> restituisce una costante interna che rappresenta un <xref:System.Object> se <xref:System.Xaml.XamlType.UnderlyingType%2A> è `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-150">By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a50f-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> è virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="0a50f-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="0a50f-152">La sostituzione è potenzialmente (se per scopi dannosi o in altro modo) per modificare le informazioni sul tipo restituito su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni sul sistema di tipo del tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-152">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="0a50f-153">Per eventuali controlli SecurityCritical di operazioni di assegnazione e accesso, usare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-153">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">
          <span data-ttu-id="0a50f-154">Tipo da verificare rispetto all'oggetto <see cref="T:System.Xaml.XamlType" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-154">The type to check against the current <see cref="T:System.Xaml.XamlType" /> .</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-155">Restituisce un valore che indica se un'istanza dell'oggetto <see cref="T:System.Xaml.XamlType" /> dispone dell'oggetto <see cref="T:System.Xaml.XamlType" /> specificato nell'elenco dei tipi assegnabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-155">Returns a value that indicates whether an instance of this <see cref="T:System.Xaml.XamlType" /> has the specified <see cref="T:System.Xaml.XamlType" /> in its list of assignable types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-156">
            <see langword="true" /> se <paramref name="xamlType" /> è presente nell'elenco dei tipi assegnabili; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-156">
              <see langword="true" /> if <paramref name="xamlType" /> is in the assignable types list; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-157">Anche se il tipo può essere assegnato non dispone di tutte le funzionalità del tipo di riferimento, è possibile usarlo per l'assegnazione.</span><span class="sxs-lookup"><span data-stu-id="0a50f-157">Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.</span></span> <span data-ttu-id="0a50f-158">Ad esempio, è possibile utilizzare l'assegnazione a rendere le corrispondenze di tipo per i valori di una proprietà.</span><span class="sxs-lookup"><span data-stu-id="0a50f-158">For example, you can use assignment to make type matches for the values of a property.</span></span> <span data-ttu-id="0a50f-159">Il concetto dei tipi assegnabili in XAML è simile al concetto di cast dei backup nel sistema di tipi CLR.</span><span class="sxs-lookup"><span data-stu-id="0a50f-159">The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.</span></span> <span data-ttu-id="0a50f-160">In un sistema di tipi CLR, ad esempio, ogni tipo ha un <xref:System.Object> nell'elenco dei tipi assegnabili.</span><span class="sxs-lookup"><span data-stu-id="0a50f-160">For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.</span></span>  
  
 <span data-ttu-id="0a50f-161">Se uno dei due <xref:System.Xaml.XamlType> istanze utilizzate per il confronto ha <xref:System.Xaml.XamlType.IsUnknown%2A> uguale a `true`, questo metodo è una speciale modalità sconosciute che restituisce `true` se i due <xref:System.Xaml.XamlType> istanze sono equivalenti.</span><span class="sxs-lookup"><span data-stu-id="0a50f-161">If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent.</span></span>  
  
 <span data-ttu-id="0a50f-162">L'implementazione predefinita utilizza CLR <xref:System.Type> dal <xref:System.Xaml.XamlType.UnderlyingType%2A> per questa <xref:System.Xaml.XamlType> e l'input <xref:System.Xaml.XamlType>e chiama <xref:System.Type.IsAssignableFrom%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-162">The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>.</span></span> <span data-ttu-id="0a50f-163">Eseguire l'override di questo metodo se si desidera che una determinazione dei tipi assegnabili diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-163">Override this method if you want a different determination of assignable types.</span></span>  
  
 <span data-ttu-id="0a50f-164">Il passaggio di un valore null `xamlType` non viene generata un'eccezione e restituisce sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-164">Passing a null `xamlType` does not throw an exception and always returns `false`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a50f-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> è virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="0a50f-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="0a50f-166">La sostituzione è potenzialmente (se per scopi dannosi o in altro modo) per modificare l'assegnabilità di un tipo XAML in modo che non si allinei nel modo previsto con il comportamento di tipo-cast di tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-166">The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.</span></span> <span data-ttu-id="0a50f-167">Per eventuali controlli SecurityCritical di operazioni di assegnazione e accesso, usare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-167">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-168">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve avere argomenti (vincoli generici tramite <see langword="x:TypeArguments" />, testo di inizializzazione o altre tecniche XAML) per costruire un'istanza valida del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-168">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-169">
            <see langword="true" /> se la costruzione di un'istanza richiede un valore dell'argomento; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-169">
              <see langword="true" /> if construction of an instance requires some argument value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-170">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-170">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-171">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-171">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-172">Ottiene le informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-172">Gets the <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-173">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-173">
              <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="0a50f-174">Può essere <see langword="null" /> se non esiste alcuna proprietà di contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-174">May be <see langword="null" /> if no content property exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-175">Quando si utilizza l'associazione o il supporto del sistema di tipi CLR, la proprietà di contenuto XAML può essere specificata in un tipo applicando <xref:System.Windows.Markup.ContentPropertyAttribute> alla definizione del tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-175">When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.</span></span>  
  
 <span data-ttu-id="0a50f-176">Questa proprietà viene allineato al `[content property]` elemento informazione nella specifica [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="0a50f-176">This property aligns to the `[content property]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="0a50f-177">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupContentProperty%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-177">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-178">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupContentProperty%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-178">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-179">Ottiene i tipi utilizzati per eseguire il wrapping di contenuto per una proprietà di contenuto quando non si tratta di una corrispondenza dei tipi rigida, ad esempio stringhe in un oggetto <see langword="Collection&lt;T&gt;" /> fortemente tipizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-179">Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <see langword="Collection&lt;T&gt;" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-180">Insieme di sola lettura dei possibili tipi di wrapper del contenuto; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-180">A read-only collection of possible content wrapper types; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-181">Se non sono wrapper che tengano conto per la corrispondenza dei tipi esposti, questa proprietà è `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-181">If there are no wrappers to account for type match loosening, this property is `null`.</span></span>  
  
 <span data-ttu-id="0a50f-182">Tipi che restituiscono <xref:System.Xaml.XamlType.CanAssignTo%2A> per uno specifico tipo di contenuto non vengono considerati ai fini di più tipi di <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-182">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-183">Nell'associazione per CLR <xref:System.Xaml> e <xref:System.Xaml.XamlType>, il tipo di wrapper del contenuto XAML può essere specificato in un tipo come un <xref:System.Windows.Markup.ContentWrapperAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-183">In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.</span></span>  
  
 <span data-ttu-id="0a50f-184">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupContentWrappers%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-184">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-185">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupContentWrappers%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-185">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-186">Ottiene l'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che rappresenta il comportamento di conversione del caricamento posticipato per questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-186">Gets the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that represents the deferred loading conversion behavior for this type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-187">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con il vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> che rappresenta il comportamento di caricamento posticipato per questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-187">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint that represents the deferred loading behavior for this type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-188">Comportamento dei modelli XAML in WPF è un esempio di comportamento di caricamento posticipato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-188">XAML template behavior in WPF is an example of deferred loading behavior.</span></span>  
  
 <span data-ttu-id="0a50f-189">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-189">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-190">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-190">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-191">Indica se l'oggetto corrente è uguale a un altro oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-191">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a50f-192">Oggetto da confrontare con l'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-192">The object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-193">Indica se l'oggetto corrente è uguale a un altro oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-193">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-194">
            <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-194">
              <see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="0a50f-195">Oggetto da confrontare con l'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-195">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-196">Indica se l'oggetto corrente è uguale a un altro oggetto dello stesso tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-196">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-197">
            <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="other" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-197">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">
          <span data-ttu-id="0a50f-198">Direttiva per la quale trovare il membro con alias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-198">The directive for which to find the aliased member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-199">Restituisce il membro XAML a cui viene associata come alias una direttiva XAML dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-199">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-200">Membro con alias, se trovato; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-200">The aliased member, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-201">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-201">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-202">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-202">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-203">Restituisce un insieme che contiene tutte le proprietà associabili esposte dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-203">Returns a collection that contains all the attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-204">Insieme che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-204">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-205">Ciascuna <xref:System.Xaml.XamlMember> nella raccolta restituita deve contenere valori che supportano il concetto che la <xref:System.Xaml.XamlMember> è un membro associabile.</span><span class="sxs-lookup"><span data-stu-id="0a50f-205">Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member.</span></span> <span data-ttu-id="0a50f-206">Ad esempio, i membri devono restituire `true` per <xref:System.Xaml.XamlMember.IsAttachable%2A>, un tipo per <xref:System.Xaml.XamlMember.TargetType%2A>e così via.</span><span class="sxs-lookup"><span data-stu-id="0a50f-206">For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.</span></span>  
  
 <span data-ttu-id="0a50f-207">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-207">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-208">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-208">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-209">Restituisce un insieme che contiene tutti i membri esposti dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-209">Returns a collection that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-210">Insieme che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-210">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-211">Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAllMembers%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-211">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0a50f-212">Nome del membro associabile da ottenere, in formato <c>ownerTypeName.MemberName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-212">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-213">Restituisce un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta uno specifico membro associabile denominato di <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-213">Returns a <see cref="T:System.Xaml.XamlMember" /> representing a specific named attachable member of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-214">Oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro associabile richiesto; in caso contrario, <see langword="null" />, se non esiste alcun membro associabile in base a quel nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-214">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-215">Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAttachableMember%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-215">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a50f-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> è virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="0a50f-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="0a50f-217">La sostituzione è potenzialmente (se per scopi dannosi o in caso contrario) per modificare i membri di un tipo XAML segnalati in modo che non si allineino nel modo previsto con la <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-217">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="0a50f-218">Per eventuali controlli critico per la sicurezza del membro reporting, usare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-218">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-219">Restituisce il codice hash per questo oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-219">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-220">Codice hash di un intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-220">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0a50f-221">Nome del membro da ottenere in formato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-221">The name of the member to get (as a string).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-222">Restituisce un oggetto <see cref="T:System.Xaml.XamlMember" /> per un membro denominato specifico dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-222">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-223">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro, se tale membro viene trovato; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-223">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if such a member was found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-224">Il valore per `name` che dovrà essere non qualificato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-224">The value for `name` is expected to be unqualified.</span></span> <span data-ttu-id="0a50f-225">Nomi completi di tipo che indicano un membro associato devono essere inviati a <xref:System.Xaml.XamlType.GetAttachableMember%2A> invece.</span><span class="sxs-lookup"><span data-stu-id="0a50f-225">Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead.</span></span> <span data-ttu-id="0a50f-226">Membro non devono essere utilizzati nomi; con prefisso un prefisso è legato all'utilizzo e il sistema di tipi XAML non è possibile conoscere il contesto di tale utilizzo e come viene mappato il prefisso.</span><span class="sxs-lookup"><span data-stu-id="0a50f-226">Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.</span></span>  
  
 <span data-ttu-id="0a50f-227">Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupMember%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-227">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a50f-228"><xref:System.Xaml.XamlType.LookupMember%2A> è virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="0a50f-228"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="0a50f-229">La sostituzione è potenzialmente (se per scopi dannosi o in caso contrario) per modificare i membri di un tipo XAML segnalati in modo che non si allineino nel modo previsto con la <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-229">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="0a50f-230">Per eventuali controlli critico per la sicurezza del membro reporting, usare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-230">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">
          <span data-ttu-id="0a50f-231">Conteggio (grado) della modalità sintassi o costruttore specifica su cui si desiderano informazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-231">The count (arity) of the particular syntax or constructor mode that you want information about.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-232">Per i tipi di estensione di markup, restituisce i tipi dei parametri posizionali supportati in un utilizzo dell'estensione di markup specifico per l'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-232">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-233">Elenco di valori di <see cref="T:System.Xaml.XamlType" /> dove ogni oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta il tipo per tale posizione nella sintassi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-233">A list of <see cref="T:System.Xaml.XamlType" /> values, where each <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span>
          </span>
          <span data-ttu-id="0a50f-234">È necessario specificare i tipi nello stesso ordine impiegato quando si fornisce l'input per l'estensione di markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-234">You must specify the types in the same order when you supply markup input for the markup extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-235">Questa API è applicabile solo se questa <xref:System.Xaml.XamlType> rappresenta un'estensione di markup (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> è `true`).</span><span class="sxs-lookup"><span data-stu-id="0a50f-235">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="0a50f-236">L'input `parameterCount` non corretta per richiedere il tipo di un parametro posizionale.</span><span class="sxs-lookup"><span data-stu-id="0a50f-236">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="0a50f-237">È di specificare il grado di utilizzo di un'estensione di markup.</span><span class="sxs-lookup"><span data-stu-id="0a50f-237">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="0a50f-238">Utilizzo dell'estensione di markup spesso ha più firme di"+" e Usa il grado di parametro diversi (conteggio) dei parametri posizionali per differenziare.</span><span class="sxs-lookup"><span data-stu-id="0a50f-238">Markup extension usage often has multiple "signatures" and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="0a50f-239">Tuttavia, è possibile configurare un contesto dello schema per consentire gradi duplicati e utilizzare tipi di parametri posizionali per la differenziazione.</span><span class="sxs-lookup"><span data-stu-id="0a50f-239">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="0a50f-240">Per ulteriori informazioni, vedere <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-240">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="0a50f-241">In uno specifico grado (numero), le posizioni dei parametri e tipi possono variare.</span><span class="sxs-lookup"><span data-stu-id="0a50f-241">For a specific arity (count), the parameter positions and types can vary.</span></span> <span data-ttu-id="0a50f-242">Per ottenere il tipo di utilizzo dell'estensione di markup di un grado specifico posizionale, chiamare prima <xref:System.Xaml.XamlType.GetPositionalParameters%2A> che specifica il conteggio del grado.</span><span class="sxs-lookup"><span data-stu-id="0a50f-242">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count.</span></span> <span data-ttu-id="0a50f-243">Ottenere quindi l'elemento nella posizione specificata dalla raccolta restituita.</span><span class="sxs-lookup"><span data-stu-id="0a50f-243">Then get the item at that position from the returned collection.</span></span>  
  
 <span data-ttu-id="0a50f-244">Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-244">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-245">Restituisce un elenco di identificatori di stringa per gli spazi dei nomi XAML nei quali è incluso il tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-245">Returns a list of string identifiers for XAML namespaces that the type is included in.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-246">Elenco di valori di stringa, dove ogni stringa rappresenta l'identificatore URI per uno spazio dei nomi XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-246">A list of string values, where each string is the URI identifier for a XAML namespace.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-247">Identificatori di spazio dei nomi XAML tipici sono stringhe in formato URI.</span><span class="sxs-lookup"><span data-stu-id="0a50f-247">Typical XAML namespace identifiers are strings in URI form.</span></span>  
  
 <span data-ttu-id="0a50f-248">L'implementazione predefinita verifica quanto segue, in ordine: lo spazio dei nomi XAML fornito nella costruzione di strutture (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> solo la firma); e gli spazi dei nomi che sono disponibili dal contesto dello schema.</span><span class="sxs-lookup"><span data-stu-id="0a50f-248">The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context.</span></span> <span data-ttu-id="0a50f-249">Se questi sono i singoli `null`, viene generato un nuovo elenco che contiene un'unica stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="0a50f-249">If these are each `null`, a new list is generated that contains a single empty string.</span></span> <span data-ttu-id="0a50f-250">È possibile eseguire l'override di questo metodo per modificare la metodologia di ricerca.</span><span class="sxs-lookup"><span data-stu-id="0a50f-250">You can override this method to change the lookup methodology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-251">Ottiene l'implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-251">Gets the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-252">Implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-252">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-253">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, la chiamata <xref:System.Xaml.XamlType.Invoker%2A> possibile richiamare o <xref:System.Xaml.XamlType.LookupInvoker%2A> o una specifica sostituzione di tale metodo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-253">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method.</span></span> <span data-ttu-id="0a50f-254">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupInvoker%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-254">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.</span></span>  
  
 <span data-ttu-id="0a50f-255">Se un <xref:System.Xaml.XamlType.LookupInvoker%2A> override restituisce `null`, o se l'implementazione predefinita restituisce `null` scarsa dimestichezza <xref:System.Xaml.XamlType.UnderlyingType%2A> per questo <xref:System.Xaml.XamlType>, quindi <xref:System.Xaml.XamlType.Invoker%2A> restituisce <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-255">If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-256">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-257">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-257">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-258">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsAmbient%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-258">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-259">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsAmbient%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-259">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-260">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-261">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta una matrice; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-261">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an array; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-262">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupCollectionKind%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-262">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-263">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupCollectionKind%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-263">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-264">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-264">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-265">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-265">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-266">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupCollectionKind%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-266">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-267">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupCollectionKind%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-267">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-268">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-268">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-269">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-269">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-270">Questa proprietà viene allineato al `[is default constructible]` elemento informazione nella specifica [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="0a50f-270">This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="0a50f-271">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsConstructible%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-271">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-272">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsConstructible%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-272">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-273">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-273">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a dictionary, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-274">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-274">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a dictionary; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-275">Questa proprietà viene allineato al `[is dictionary]` elemento informazione nella specifica [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="0a50f-275">This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="0a50f-276">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupCollectionKind%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-276">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-277">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupCollectionKind%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-277">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-278">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a generic type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-279">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo generico; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-279">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a generic type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-280">Questa proprietà è una proprietà di supporto che verifica la presenza di un valore null di <xref:System.Xaml.XamlType.TypeArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-280">This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span> <span data-ttu-id="0a50f-281">Non vi è alcuna specifica `Lookup` metodo correlati <xref:System.Xaml.XamlType.IsGeneric%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-281">There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-282">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-282">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-283">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-283">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-284">In termini di specifica di XAML, questo tipo deve essere assegnabile al `x:MarkupExtension` per restituire `true` per <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-284">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-285">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-285">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-286">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-286">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-287">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-287">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-288">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-288">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-289">Un namescope XAML impone l'univocità del nome della proprietà o le proprietà utilizzate per `x:Name`  /  `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-289">A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="0a50f-290">Se <xref:System.Xaml.XamlType.IsNameScope%2A> è `true`, un meccanismo per imporre l'univocità deve esistere e deve restituire dalla prospettiva di questo tipo che possiede un namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="0a50f-290">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="0a50f-291">L'ambito dei nomi XAML si estende al contenuto del tipo quindi fino a quando non viene rilevato un altro tipo che possiede namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="0a50f-291">The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.</span></span>  
  
 <span data-ttu-id="0a50f-292">Questa proprietà viene allineato al `[is name scope]` elemento informazione nella specifica [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="0a50f-292">This property aligns to the `[is name scope]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="0a50f-293">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsNameScope%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-293">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-294">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene inizializzato tramite una stringa <see langword="xamlName" /> valida come <see cref="P:System.Xaml.XamlType.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-294">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlType.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-295">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene inizializzato tramite una stringa <see langword="xamlName" /> valida; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-295">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-296">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-296">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-297">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-297">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-298">Questa proprietà viene allineato al `[is nullable]` elemento informazione nella specifica [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="0a50f-298">This property aligns to the `[is nullable]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="0a50f-299">Se non si usa la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsNullable%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-299">If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-300">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico nel sistema dei tipi pertinente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-300">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-301">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-301">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-302">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsPublic%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-302">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a50f-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> è virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="0a50f-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="0a50f-304">La sostituzione è potenzialmente (se per scopi dannosi o in altro modo) per modificare le informazioni di accesso riportate su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni di sistema e di accesso di tipo del tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-304">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.</span></span> <span data-ttu-id="0a50f-305">Per eventuali controlli SecurityCritical di operazioni di assegnazione e accesso, usare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-305">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-306">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto nel sistema dei tipi sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-306">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-307">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-307">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an unresolvable type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-308">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsUnknown%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-308">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 <span data-ttu-id="0a50f-309">Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, una <xref:System.Xaml.XamlType> dotato `true` per <xref:System.Xaml.XamlType.IsUnknown%2A> non può essere scritto in un oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="0a50f-309">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="0a50f-310">Nelle implementazioni predefinite in <xref:System.Xaml> , il <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> chiamare genera un <xref:System.Xaml.XamlObjectWriterException> quando il relativo <xref:System.Xaml.XamlType> report `true` per <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-310">Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span> <span data-ttu-id="0a50f-311">Non è necessario passare un <xref:System.Xaml.XamlType> che ha <xref:System.Xaml.XamlType.IsUnknown%2A> come `true` solo se si è preparati a gestire le eccezioni da <xref:System.Xaml.XamlObjectWriter>, o esistono altri modi per regolare la <xref:System.Xaml.XamlObjectWriter> comportamento o il flusso di nodi XAML prima della scrittura dell'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="0a50f-311">You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-312">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-312">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-313">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-313">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a50f-314">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-314">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-315">Dall'alto in basso è una metafora che simula il comportamento del processore XAML durante la creazione dell'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="0a50f-315">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="0a50f-316">Quando compilato dall'alto in basso, un tipo viene creata un'istanza, a associato al padre, e quindi impostate le proprietà.</span><span class="sxs-lookup"><span data-stu-id="0a50f-316">When built top-down, a type is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="0a50f-317">Costruzione dall'alto in basso evita di richiamare i gestori di proprietà modificata più volte.</span><span class="sxs-lookup"><span data-stu-id="0a50f-317">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="0a50f-318">Tale gestione si riflette l'oggetto grafico e quindi elimina più chiamate del gestore e offre un'ottimizzazione delle prestazioni per l'avvio dell'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="0a50f-318">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="0a50f-319">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-319">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-320">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-320">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-321">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti in base alla definizione XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-321">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-322">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-322">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-323">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-323">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-324">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-324">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-325">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta XML <see langword="XDATA" /> secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-325">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-326">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta <see langword="XDATA" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-326">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-327">Questa proprietà viene allineato al `[is xdata]` elemento informazione nella specifica [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="0a50f-327">This property aligns to the `[is xdata]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="0a50f-328">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsXData%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-328">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-329">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsXData%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-329">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-330">Ottiene un valore che fornisce le informazioni sul tipo per la proprietà <see langword="Items" /> dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-330">Gets a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-331">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo degli elementi nell'insieme; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-331">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-332">Questa proprietà è applicabile solo se questa <xref:System.Xaml.XamlType> rappresenta una raccolta (<xref:System.Xaml.XamlType.IsCollection%2A> è `true`).</span><span class="sxs-lookup"><span data-stu-id="0a50f-332">This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`).</span></span> <span data-ttu-id="0a50f-333">Il `Items` proprietà è qualsiasi proprietà che contiene gli elementi in tale tipo di raccolta o una matrice.</span><span class="sxs-lookup"><span data-stu-id="0a50f-333">The `Items` property is whatever property holds items in that type of collection or array.</span></span>  
  
 <span data-ttu-id="0a50f-334">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupItemType%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-334">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-335">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupItemType%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-335">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-336">Ottiene un valore che fornisce le informazioni sul tipo per la proprietà della chiave dell'oggetto <see cref="T:System.Xaml.XamlType" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-336">Gets a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-337">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo della chiave per l'utilizzo del dizionario; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-337">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-338">Questa proprietà è applicabile solo se questa <xref:System.Xaml.XamlType> rappresenta un dizionario (<xref:System.Xaml.XamlType.IsDictionary%2A> è `true`).</span><span class="sxs-lookup"><span data-stu-id="0a50f-338">This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).</span></span>  
  
 <span data-ttu-id="0a50f-339">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupKeyType%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-339">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-340">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupKeyType%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-340">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">
          <span data-ttu-id="0a50f-341">Direttiva per la quale trovare il membro con alias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-341">The directive for which to find the aliased member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-342">Restituisce il membro XAML a cui viene associata come alias una direttiva XAML dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-342">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-343">Membro con alias, se trovato; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-343">The aliased member, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-344">Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-344">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-345">L'implementazione predefinita può restituire risultati per le seguenti direttive XAML: `Key`; `Name`; `Uid`; e `xml:lang`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-345">The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`.</span></span> <span data-ttu-id="0a50f-346">I valori per queste dipendono dalla reflection sottostante e possono comunque restituire `null` se non viene trovata alcuna proprietà con alias.</span><span class="sxs-lookup"><span data-stu-id="0a50f-346">Values for these depend on underlying reflection and might still return `null` if no aliased property is found.</span></span>  
  
 <span data-ttu-id="0a50f-347">Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per le informazioni sul sistema di tipo XAML o le informazioni sullo schema di un tipo di report.</span><span class="sxs-lookup"><span data-stu-id="0a50f-347">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-348">Restituisce un set enumerabile che contiene tutte le proprietà associabili esposte dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-348">Returns an enumerable set that contains all attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-349">Set enumerabile che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-349">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-350">Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-350">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-351">Sebbene <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> restituisce una raccolta generica, questo `Lookup` metodo restituisce un insieme enumerabile generico.</span><span class="sxs-lookup"><span data-stu-id="0a50f-351">Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="0a50f-352">L'implementazione predefinita Usa la reflection CLR interna.</span><span class="sxs-lookup"><span data-stu-id="0a50f-352">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="0a50f-353">Quando <xref:System.Xaml.XamlType.UnderlyingType%2A> viene `null`, può usare l'implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile.</span><span class="sxs-lookup"><span data-stu-id="0a50f-353">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="0a50f-354">Questo comportamento viene chiamato <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> in modo ricorsivo per tentare di trovare un tipo di base valido e restituisce `null` se non esiste alcun tipo di base valido.</span><span class="sxs-lookup"><span data-stu-id="0a50f-354">This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="0a50f-355">Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-355">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="0a50f-356">Un valore null restituito deve essere riservato per i casi in cui non è possibile determinare le informazioni a causa di mancanza di supporto dei tipi di reflection o di sistema.</span><span class="sxs-lookup"><span data-stu-id="0a50f-356">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="0a50f-357">Se un tipo è valido e reflection o altre tecniche sono disponibili, ma un tipo non dispone di membri associabili, è necessario restituire un oggetto vuoto <xref:System.Collections.Generic.IEnumerable%601> impostato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-357">If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-358">Restituisce un set enumerabile contenente tutti i membri esposti dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-358">Returns an enumerable set that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-359">Set enumerabile che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-359">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-360">Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-360">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-361">Sebbene <xref:System.Xaml.XamlType.GetAllMembers%2A> restituisce una raccolta generica, questo `Lookup` metodo restituisce un insieme enumerabile generico.</span><span class="sxs-lookup"><span data-stu-id="0a50f-361">Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="0a50f-362">L'implementazione predefinita Usa la reflection CLR interna.</span><span class="sxs-lookup"><span data-stu-id="0a50f-362">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="0a50f-363">Per i casi in cui <xref:System.Xaml.XamlType.UnderlyingType%2A> viene `null`, può usare l'implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile.</span><span class="sxs-lookup"><span data-stu-id="0a50f-363">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="0a50f-364">Questo comportamento viene chiamato <xref:System.Xaml.XamlType.LookupAllMembers%2A> in modo ricorsivo per tentare di trovare un tipo di base valido e restituisce `null` se non esiste alcun tipo di base valido.</span><span class="sxs-lookup"><span data-stu-id="0a50f-364">This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="0a50f-365">Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-365">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="0a50f-366">Un valore null restituito deve essere riservato per i casi in cui non è possibile determinare le informazioni a causa di mancanza di supporto dei tipi di reflection o di sistema.</span><span class="sxs-lookup"><span data-stu-id="0a50f-366">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="0a50f-367">Se un tipo valido, reflection o altre tecniche sono disponibili. Se un tipo non dispone di membri, è necessario restituire un oggetto vuoto <xref:System.Collections.Generic.IEnumerable%601> impostato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-367">If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 <span data-ttu-id="0a50f-368">Restituire i valori relativi <xref:System.Xaml.XamlType.LookupAllMembers%2A> e <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> devono escludersi a vicenda.</span><span class="sxs-lookup"><span data-stu-id="0a50f-368">Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive.</span></span> <span data-ttu-id="0a50f-369">Se si dispone di una situazione in cui una proprietà di sistema di tipo sottostante può supportare un utilizzo standard dell'istanza, nonché un utilizzo associabile, tale membro deve essere segnalato come due diversi <xref:System.Xaml.XamlMember> valori, con un valore che appare nell'elenco associabile e un'altra di elenco di membri standard.</span><span class="sxs-lookup"><span data-stu-id="0a50f-369">If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-370">Restituisce un elenco dei tipi che possono essere utilizzati come valore di <see cref="P:System.Xaml.XamlType.ContentProperty" /> per l'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-370">Returns a list of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-371">Elenco dei possibili tipi di contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-371">A list of possible content types.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-372">Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-372">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-373">Tipi che restituiscono <xref:System.Xaml.XamlType.CanAssignTo%2A> per uno specifico tipo di contenuto non vengono considerati ai fini di più tipi di <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-373">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-374">L'implementazione predefinita consente ad altre proprietà degli <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, o <xref:System.Xaml.XamlType.ItemType%2A>) per ottenere un risultato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-374">The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result.</span></span> <span data-ttu-id="0a50f-375">Il `Lookup` esegue l'override per l'elenco di proprietà precedente può essere richiamato anche in questo aspetto.</span><span class="sxs-lookup"><span data-stu-id="0a50f-375">The `Lookup` overrides for the preceding property list can also be invoked in this determination.</span></span>  
  
 <span data-ttu-id="0a50f-376">Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-376">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0a50f-377">Nome del membro associabile da ottenere, in formato <c>ownerTypeName.MemberName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-377">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-378">Restituisce un oggetto <see cref="T:System.Xaml.XamlMember" /> per uno specifico membro associabile denominato dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-378">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named attachable from this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-379">Oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro associabile richiesto; in caso contrario, <see langword="null" />, se non esiste alcun membro associabile in base a quel nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-379">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-380">Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-380">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-381">L'implementazione predefinita Usa la reflection CLR interna.</span><span class="sxs-lookup"><span data-stu-id="0a50f-381">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="0a50f-382">Quando <xref:System.Xaml.XamlType.UnderlyingType%2A> viene `null`, può usare l'implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile.</span><span class="sxs-lookup"><span data-stu-id="0a50f-382">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="0a50f-383">Questo comportamento viene chiamato <xref:System.Xaml.XamlType.LookupAttachableMember%2A> in modo ricorsivo per tentare di trovare un tipo di base valido e restituisce `null` se non esiste alcun tipo di base valido.</span><span class="sxs-lookup"><span data-stu-id="0a50f-383">This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="0a50f-384">Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-384">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a50f-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> è virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="0a50f-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="0a50f-386">La sostituzione è potenzialmente (se per scopi dannosi o in caso contrario) per modificare i membri di un tipo XAML segnalati in modo che non si allineino nel modo previsto con la <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-386">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="0a50f-387">Per eventuali controlli critico per la sicurezza del membro reporting, usare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-387">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-388">Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-388">Returns the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
          <span data-ttu-id="0a50f-389">La determinazione di questo valore si basa sul tipo sottostante dell'oggetto <see cref="T:System.Xaml.XamlType" /> e del contesto dello schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-389">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-390">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-390">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-391">Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.BaseType%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-391">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-392">L'implementazione predefinita potrebbe restituire una costante interna che rappresenta il <xref:System.Object> se <xref:System.Xaml.XamlType.UnderlyingType%2A> è `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-392">The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
 <span data-ttu-id="0a50f-393">Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-393">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a50f-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> è virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="0a50f-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="0a50f-395">La sostituzione è potenzialmente (se per scopi dannosi o in altro modo) per modificare le informazioni sul tipo restituito su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni sul sistema di tipo del tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-395">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="0a50f-396">Per eventuali controlli SecurityCritical di operazioni di assegnazione e accesso, usare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-396">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-397">Restituisce un valore dell'enumerazione <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> che dichiara il tipo di insieme specifico utilizzato dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-397">Returns a value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration that declares which specific collection type this <see cref="T:System.Xaml.XamlType" /> uses.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-398">Valore dell'enumerazione <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-398">A value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-399">Questo metodo viene richiamato da un metodo interno privato (non pubblico `CollectionKind` oppure `GetCollectionKind` API esiste in <xref:System.Xaml.XamlType>).</span><span class="sxs-lookup"><span data-stu-id="0a50f-399">This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>).</span></span>  
  
 <span data-ttu-id="0a50f-400">L'implementazione predefinita Usa la reflection CLR interna.</span><span class="sxs-lookup"><span data-stu-id="0a50f-400">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="0a50f-401">Per i casi in cui <xref:System.Xaml.XamlType.UnderlyingType%2A> viene `null`, può usare l'implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile.</span><span class="sxs-lookup"><span data-stu-id="0a50f-401">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="0a50f-402">Questo comportamento viene chiamato indirettamente <xref:System.Xaml.XamlType.LookupCollectionKind%2A> in modo ricorsivo per tentare di trovare un tipo di base valido; restituisce <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> se non esiste alcun tipo di base valido.</span><span class="sxs-lookup"><span data-stu-id="0a50f-402">This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> if no valid base type exists.</span></span> <span data-ttu-id="0a50f-403">In generale, l'implementazione predefinita tenta di individuare il `Add` metodo del tipo sottostante tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="0a50f-403">In general, the default implementation attempts to find the `Add` method of the underlying type by reflection.</span></span> <span data-ttu-id="0a50f-404">Se viene trovato, il <xref:System.Reflection.MethodInfo> del `Add` metodo le informazioni è sufficienti per determinare quale <xref:System.Xaml.Schema.XamlCollectionKind> valore deve essere restituito.</span><span class="sxs-lookup"><span data-stu-id="0a50f-404">If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned.</span></span> <span data-ttu-id="0a50f-405">In caso contrario restituirà <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-405">Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0a50f-406">Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-406">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-407">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve avere argomenti (vincoli generici tramite <see langword="x:TypeArguments" />, testo di inizializzazione o altre tecniche XAML) per costruire un'istanza valida del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-407">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-408">
            <see langword="true" /> se la costruzione di un'istanza richiede un valore dell'argomento; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-408">
              <see langword="true" /> if construction of an instance requires some argument value; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-409">Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-409">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-410">L'implementazione predefinita restituisce `false` per considerati tipi di valore in CLR i tipi di sistema di tipi.</span><span class="sxs-lookup"><span data-stu-id="0a50f-410">The default implementation returns `false` for types considered value types in the CLR type system.</span></span> <span data-ttu-id="0a50f-411">Per altri tipi di valore, reflection CLR <xref:System.Reflection.ConstructorInfo> viene usato per determinare se è presente un costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="0a50f-411">For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a default constructor exists.</span></span>  
  
 <span data-ttu-id="0a50f-412">Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-412">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-413">Restituisce le informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-413">Returns <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-414">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-414">
              <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="0a50f-415">Può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-415">May be <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-416">Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.ContentProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-416">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-417">L'implementazione predefinita cerca <xref:System.Windows.Markup.ContentPropertyAttribute> sulla definizione di tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-417">The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition.</span></span> <span data-ttu-id="0a50f-418">È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-418">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="0a50f-419">Se questi controlli non in grado di individuare un tipo di contenuto, l'implementazione predefinita restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-419">If these checks do not discover a content type, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="0a50f-420">Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-420">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-421">Ottiene un elenco di valori di <see cref="T:System.Xaml.XamlType" /> che rappresentano i wrapper del contenuto per l'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-421">Gets a list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-422">Elenco di valori di <see cref="T:System.Xaml.XamlType" /> che rappresentano i wrapper del contenuto per l'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-422">A list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-423">Wrapper del contenuto è una classe che rappresenta il tipo di raccolta del contenuto quando i tipi utilizzati in tale raccolta non sono contigui al sistema di tipi.</span><span class="sxs-lookup"><span data-stu-id="0a50f-423">A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.</span></span> <span data-ttu-id="0a50f-424">I tipi di elementi della raccolta per il wrapper del contenuto devono essere limitate in qualche modo oltre <xref:System.Object> o un oggetto neutro equivalente.</span><span class="sxs-lookup"><span data-stu-id="0a50f-424">The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent.</span></span> <span data-ttu-id="0a50f-425">Tuttavia, questa limitazione viene applicata solo per la progettazione o scopo delle proprietà che utilizzano quel tipo e non dal sistema dei tipi.</span><span class="sxs-lookup"><span data-stu-id="0a50f-425">However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.</span></span> <span data-ttu-id="0a50f-426">Possono esistere più di un wrapper del contenuto su un tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-426">More than one content wrapper can exist on a type.</span></span>  
  
 <span data-ttu-id="0a50f-427">Per un esempio di classe e uno scenario rispetto all'implementazione WPF XAML, vedere <xref:System.Windows.Documents.InlineCollection>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-427">For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-428">Quando implementato in una classe derivata, restituisce un'implementazione di <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-428">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-429">Un'implementazione <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-429">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-430">Eseguire l'override di questo metodo per fornire la reflection interna con un modo alternativo per ottenere i valori di attributo CLR.</span><span class="sxs-lookup"><span data-stu-id="0a50f-430">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="0a50f-431">In assenza di una sostituzione, l'utilità di riflessione interno Usa la logica tipici della reflection CLR.</span><span class="sxs-lookup"><span data-stu-id="0a50f-431">In absence of an override, the internal reflector uses typical CLR reflection logic.</span></span>  
  
 <span data-ttu-id="0a50f-432">L'implementazione predefinita restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-432">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-433">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-433">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML-declared objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-434">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-434">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-435">Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-435">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span></span> <span data-ttu-id="0a50f-436">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.DeferringLoader%2A> restituisca un valore diverso da quello è abilitata dalla reflection interna predefinita e forniscono anche personalizzato <xref:System.Xaml.Schema.XamlTypeInvoker> informazioni.</span><span class="sxs-lookup"><span data-stu-id="0a50f-436">Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.</span></span>  
  
 <span data-ttu-id="0a50f-437">L'implementazione predefinita restituisce un oggetto in base alla lettura <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-437">The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span></span> <span data-ttu-id="0a50f-438">È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-438">It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="0a50f-439">Se non è disponibile un valore, questo metodo restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-439">If a value is unavailable, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-440">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associato a <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-440">Returns a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-441">Le informazioni <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> per questo oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-441">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> information for this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-442">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-442">This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-443">L'implementazione predefinita non richiede un <xref:System.Xaml.XamlType> essere creato usando uno dei costruttori che passano iniziale <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-443">The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="0a50f-444">Tuttavia, un' <xref:System.Xaml.XamlType.UnderlyingType%2A> devono essere presenti per il <xref:System.Xaml.XamlType>; in caso contrario, l'implementazione predefinita restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-444">However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="0a50f-445">Eseguire l'override di questo metodo se si crea anche una classe derivata da <xref:System.Xaml.Schema.XamlTypeInvoker> e si vogliono restituire la classe derivata.</span><span class="sxs-lookup"><span data-stu-id="0a50f-445">Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="0a50f-446">Se si torna `null`, <xref:System.Xaml.XamlType.Invoker%2A> restituisce <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> ai chiamanti.</span><span class="sxs-lookup"><span data-stu-id="0a50f-446">If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-447">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-447">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-448">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-448">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-449">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsAmbient%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-449">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-450">L'implementazione predefinita Usa la reflection CLR sul <xref:System.Xaml.XamlType.UnderlyingType%2A> e possono controllare i tipi di base.</span><span class="sxs-lookup"><span data-stu-id="0a50f-450">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types.</span></span> <span data-ttu-id="0a50f-451">L'implementazione verifica per la <xref:System.Windows.Markup.AmbientAttribute> che viene applicato alla definizione del tipo attinente a livello di classe e restituisce `true` in questo caso.</span><span class="sxs-lookup"><span data-stu-id="0a50f-451">This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case.</span></span> <span data-ttu-id="0a50f-452">Restituiscono tutti gli altri casi `false`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-452">All other cases return `false`.</span></span>  
  
 <span data-ttu-id="0a50f-453">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsAmbient%2A> restituisca un valore diverso da quello è abilitata dalla reflection interna predefinita.</span><span class="sxs-lookup"><span data-stu-id="0a50f-453">Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-454">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-454">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-455">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-455">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-456">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsConstructible%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-456">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-457">L'implementazione predefinita Usa la reflection CLR sul <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-457">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="0a50f-458">Il tipo deve essere concreti, non annidata e chiuso.</span><span class="sxs-lookup"><span data-stu-id="0a50f-458">The type must be concrete, non-nested, and closed.</span></span> <span data-ttu-id="0a50f-459">L'implementazione predefinita controlla se il tipo è un tipo di valore e la restituzione di <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-459">The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span> <span data-ttu-id="0a50f-460">Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, questo metodo restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-460">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.</span></span>  
  
 <span data-ttu-id="0a50f-461">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsConstructible%2A> restituisca un valore diverso da quello è abilitata dalla reflection interna predefinita.</span><span class="sxs-lookup"><span data-stu-id="0a50f-461">Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-462">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-462">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-463">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-463">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-464">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-464">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-465">L'implementazione predefinita è costituito solo da questa chiamata:</span><span class="sxs-lookup"><span data-stu-id="0a50f-465">The default implementation consists only of this call:</span></span>  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 <span data-ttu-id="0a50f-466">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsMarkupExtension%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-466">Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="0a50f-467">In termini di specifica di XAML, questo tipo deve essere assegnabile al `x:MarkupExtension` per restituire `true` per <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-467">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-468">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-468">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-469">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-469">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-470">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsNameScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-470">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-471">L'implementazione predefinita esegue una <xref:System.Xaml.XamlType.CanAssignTo%2A> chiamare indirettamente rispetto al tipo <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-471">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="0a50f-472"><xref:System.Windows.Markup.INameScope> è un'interfaccia definita nell'assembly WindowsBase. dll.</span><span class="sxs-lookup"><span data-stu-id="0a50f-472"><xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase.dll.</span></span> <span data-ttu-id="0a50f-473">Questa tecnica per l'identificazione di namescope XAML viene usata sia dalle implementazioni di WPF e Windows Workflow Foundation di XAML.</span><span class="sxs-lookup"><span data-stu-id="0a50f-473">This technique for XAML namescope identification is used both by WPF and Windows Workflow Foundation implementations of XAML.</span></span>  
  
 <span data-ttu-id="0a50f-474">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsNameScope%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-474">Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="0a50f-475">Un namescope XAML impone l'univocità del nome della proprietà o proprietà che vengono usate per `x:Name`  /  `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-475">A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="0a50f-476">Se <xref:System.Xaml.XamlType.IsNameScope%2A> è `true`, quindi un meccanismo per imporre l'univocità deve esistere e deve restituire dalla prospettiva di questo tipo che possiede un namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="0a50f-476">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="0a50f-477">L'ambito dei nomi XAML si estende al contenuto del tipo quindi fino a quando non viene rilevato un altro tipo di proprietario namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="0a50f-477">The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-478">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-478">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-479">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-479">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-480">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsNullable%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-480">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-481">L'implementazione predefinita esegue una determinazione basata sul concetto che ammette valori null della libreria core CLR, confrontato con <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-481">The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="0a50f-482">Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, viene restituito `true`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-482">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="0a50f-483">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsNullable%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-483">Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-484">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico nel sistema dei tipi pertinente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-484">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-485">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-485">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-486">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-486">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-487">L'implementazione predefinita Usa la reflection CLR su un valore non null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-487">The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="0a50f-488">Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, viene restituito `true`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-488">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="0a50f-489">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsPublic%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-489">Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a50f-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> è virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="0a50f-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="0a50f-491">La sostituzione è potenzialmente (se per scopi dannosi o in altro modo) per modificare le informazioni di accesso riportate su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni di sistema o l'accesso di tipo del tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-491">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.</span></span> <span data-ttu-id="0a50f-492">Per eventuali controlli SecurityCritical di operazioni di assegnazione e accesso, usare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-492">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-493">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto nel sistema dei tipi sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-493">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-494">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-494">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nonresolvable type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-495">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-495">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-496">L'implementazione predefinita è possibile usare la reflection CLR.</span><span class="sxs-lookup"><span data-stu-id="0a50f-496">The default implementation can use CLR reflection.</span></span> <span data-ttu-id="0a50f-497">Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, viene restituito `true`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-497">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="0a50f-498">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsUnknown%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-498">Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-499">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti in base alla definizione XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-499">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-500">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-500">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a white-space significant collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-501">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-501">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-502">L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-502">The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span></span> <span data-ttu-id="0a50f-503">È anche possibile verificare il <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-503">It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="0a50f-504">Se un valore non è disponibile, verrà restituito `false`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-504">If a value is not available, it returns `false`.</span></span>  
  
 <span data-ttu-id="0a50f-505">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-505">Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-506">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta XML <see langword="XDATA" /> secondo la definizione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-506">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-507">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta <see langword="XDATA" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-507">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-508">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsXData%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-508">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-509">L'implementazione predefinita esegue una <xref:System.Xaml.XamlType.CanAssignTo%2A> chiamare indirettamente rispetto al tipo <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-509">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="0a50f-510">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsXData%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-510">Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-511">Restituisce un valore che fornisce le informazioni sul tipo per la proprietà <see langword="Items" /> dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-511">Returns a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-512">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo degli elementi nell'insieme; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-512">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-513">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.ItemType%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-513">This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-514">L'implementazione predefinita è possibile usare i concetti di reflection CLR, ad esempio la verifica per un `Add` metodo in base al <xref:System.Reflection.MethodInfo> e usando la <xref:System.Reflection.ParameterInfo>; controllo <xref:System.Xaml.XamlType.IsArray%2A>; e il controllo <xref:System.Xaml.XamlType.BaseType%2A> e provando la stessa logica.</span><span class="sxs-lookup"><span data-stu-id="0a50f-514">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="0a50f-515">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.ItemType%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-515">Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic.</span></span> <span data-ttu-id="0a50f-516">Casi in cui <xref:System.Xaml.XamlType.LookupCollectionKind%2A> restituisce <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> devono restituire `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-516">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-517">Restituisce un valore che fornisce le informazioni sul tipo per la proprietà della chiave dell'oggetto <see cref="T:System.Xaml.XamlType" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-517">Returns a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-518">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo della chiave per l'utilizzo del dizionario o <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-518">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, or <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary,</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-519">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.KeyType%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-519">This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-520">L'implementazione predefinita è possibile usare i concetti di reflection CLR, ad esempio la verifica per un `Add` metodo in base al <xref:System.Reflection.MethodInfo> e usando la <xref:System.Reflection.ParameterInfo>; e il controllo <xref:System.Xaml.XamlType.BaseType%2A> e provando la stessa logica.</span><span class="sxs-lookup"><span data-stu-id="0a50f-520">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="0a50f-521">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.KeyType%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-521">Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic.</span></span> <span data-ttu-id="0a50f-522">Casi in cui <xref:System.Xaml.XamlType.LookupCollectionKind%2A> non restituisce <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> devono restituire `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-522">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-523">Restituisce un valore che fornisce le informazioni sul tipo per l'oggetto <see langword="ProvideValue" /> restituito dell'oggetto <see cref="T:System.Xaml.XamlType" /> se rappresenta un'estensione di markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-523">Returns a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-524">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo restituito per l'utilizzo dell'estensione di markup; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un'estensione di markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-524">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-525">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-525">This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-526">L'implementazione predefinita restituisce un <xref:System.Xaml.XamlType> in base alla lettura <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-526">The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span></span> <span data-ttu-id="0a50f-527">È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-527">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="0a50f-528">Se un valore non è disponibile, verrà restituito `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-528">If a value is not available, it returns `null`.</span></span>  
  
 <span data-ttu-id="0a50f-529">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-529">Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0a50f-530">Nome del membro da ottenere in formato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-530">The name of the member to get (as a string).</span>
          </span>
        </param>
        <param name="skipReadOnlyCheck">
          <span data-ttu-id="0a50f-531">
            <see langword="true" /> per restituire un membro anche se tale membro contiene il valore <see langword="true" /> per <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> per non restituire un membro <see cref="P:System.Xaml.XamlMember.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-531">
              <see langword="true" /> to return a member even if that member has a <see langword="true" /> value for <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> to not return a <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> member.</span>
          </span>
          <span data-ttu-id="0a50f-532">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-532">The default is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-533">Restituisce l'oggetto <see cref="T:System.Xaml.XamlMember" /> per un membro denominato specifico dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-533">Returns the <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-534">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro, se un membro viene trovato; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-534">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if a member was found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-535">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.GetMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-535">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-536">L'implementazione predefinita restituisce un <xref:System.Xaml.XamlType> basati su reflection CLR interne e valutazione rispetto al contesto dello schema.</span><span class="sxs-lookup"><span data-stu-id="0a50f-536">The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.</span></span>  
  
 <span data-ttu-id="0a50f-537">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.GetMember%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-537">Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a50f-538"><xref:System.Xaml.XamlType.LookupMember%2A> è virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="0a50f-538"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="0a50f-539">La sostituzione è potenzialmente (se per scopi dannosi o in caso contrario) per modificare i membri di un tipo XAML segnalati in modo che non si allineino nel modo previsto con la <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-539">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="0a50f-540">Per eventuali controlli critico per la sicurezza del membro reporting, usare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="0a50f-540">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">
          <span data-ttu-id="0a50f-541">Conteggio (grado) della modalità sintassi o costruttore specifica su cui si desiderano informazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-541">The count (arity) of the particular syntax or constructor mode that you want information about.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-542">Per i tipi di estensione di markup, restituisce i tipi dei parametri posizionali supportati in un utilizzo dell'estensione di markup specifico per l'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-542">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-543">Elenco di valori di <see cref="T:System.Xaml.XamlType" /> dove ogni oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta il tipo per tale posizione nella sintassi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-543">A list of <see cref="T:System.Xaml.XamlType" /> values where each such <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span>
          </span>
          <span data-ttu-id="0a50f-544">È necessario specificare tali tipi nello stesso ordine quando si fornisce l'input per l'estensione di markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-544">You must specify those types in the same order when supplying markup input for the markup extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-545">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-545">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-546">L'implementazione predefinita Usa informazioni sulla reflection interno basati su ricerca di costruttori e controllando l'arietà.</span><span class="sxs-lookup"><span data-stu-id="0a50f-546">The default implementation uses internal reflection information based on finding constructors and checking the arity.</span></span> <span data-ttu-id="0a50f-547">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.GetPositionalParameters%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-547">Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="0a50f-548">Questa API è applicabile solo se questa <xref:System.Xaml.XamlType> rappresenta un'estensione di markup (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> è `true`).</span><span class="sxs-lookup"><span data-stu-id="0a50f-548">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="0a50f-549">L'input `parameterCount` non corretta per richiedere il tipo di un parametro posizionale.</span><span class="sxs-lookup"><span data-stu-id="0a50f-549">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="0a50f-550">È di specificare il grado di utilizzo di un'estensione di markup.</span><span class="sxs-lookup"><span data-stu-id="0a50f-550">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="0a50f-551">Utilizzo dell'estensione di markup spesso ha più firme e Usa parametri diversi arietà (conteggio) dei parametri posizionali per distinguerle.</span><span class="sxs-lookup"><span data-stu-id="0a50f-551">Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="0a50f-552">Tuttavia, è possibile configurare un contesto dello schema per consentire gradi duplicati e utilizzare tipi di parametri posizionali per la differenziazione.</span><span class="sxs-lookup"><span data-stu-id="0a50f-552">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="0a50f-553">Per ulteriori informazioni, vedere <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-553">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="0a50f-554">Per un numero di grado specifico possono variare le posizioni dei parametri e tipi.</span><span class="sxs-lookup"><span data-stu-id="0a50f-554">For a specific arity count, the parameter positions and types can vary.</span></span> <span data-ttu-id="0a50f-555">Per ottenere il tipo di utilizzo dell'estensione di markup di un grado specifico posizionale, chiamare prima <xref:System.Xaml.XamlType.GetPositionalParameters%2A> con il conteggio del grado.</span><span class="sxs-lookup"><span data-stu-id="0a50f-555">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count.</span></span> <span data-ttu-id="0a50f-556">Ottenere quindi l'elemento nella posizione specificata dalla raccolta restituita.</span><span class="sxs-lookup"><span data-stu-id="0a50f-556">Then get the item at that position from the returned collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-557">Restituisce un callback del gestore da utilizzare per le operazioni di impostazione delle estensioni di markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-557">Returns a handler callback to use for the set operations of markup extensions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-558">Callback del gestore da utilizzare per le operazioni di impostazione delle estensioni di markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-558">A handler callback to use for the set operations of markup extensions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-559">L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-559">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span></span> <span data-ttu-id="0a50f-560">È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-560">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="0a50f-561">Se è disponibile un valore, verrà restituito `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-561">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-562">Restituisce un gestore da utilizzare per i casi di impostazione del convertitore di tipi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-562">Returns a handler to use for type converter setting cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-563">Gestore da utilizzare per i casi di impostazione del convertitore di tipi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-563">A handler to use for type converter setting cases.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-564">L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-564">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span></span> <span data-ttu-id="0a50f-565">È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-565">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="0a50f-566">Se è disponibile un valore, verrà restituito `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-566">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-567">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve essere serializzato con una modalità che rimuove lo spazio vuoto circostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-567">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> should be serialized using a mode that  trims surrounding whitespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-568">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve essere serializzato con una modalità che rimuove lo spazio vuoto circostante; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-568">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> should be serialized in a mode that trims surrounding whitespace; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-569">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-569">This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-570">L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-570">The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span></span> <span data-ttu-id="0a50f-571">È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-571">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="0a50f-572">Se è disponibile un valore, verrà restituito `false`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-572">If a value is unavailable, it returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-573">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con contiene un vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-573">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.ComponentModel.TypeConverter" /> constraint, which represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-574">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-574">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-575">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-575">This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-576">L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-576">The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="0a50f-577">Inoltre è possibile controllare l'implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-577">The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="0a50f-578">Include anche una logica speciale per la conversione predefinito delle enumerazioni, tipi valore comuni e generics.</span><span class="sxs-lookup"><span data-stu-id="0a50f-578">It also includes special logic for default conversion of enumerations, common value types, and generics.</span></span> <span data-ttu-id="0a50f-579">Se è disponibile un valore, verrà restituito `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-579">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="0a50f-580">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.TypeConverter%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-580">Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-581">Restituisce l'oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-581">Returns the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-582">Oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-582">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-583">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-583">This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-584">L'implementazione predefinita restituisce un campo interno.</span><span class="sxs-lookup"><span data-stu-id="0a50f-584">The default implementation returns an internal field.</span></span> <span data-ttu-id="0a50f-585">Tale campo viene inizializzato in genere durante la costruzione e il relativo valore è basato su quale costruttore è stato chiamato e le informazioni fornite.</span><span class="sxs-lookup"><span data-stu-id="0a50f-585">That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.</span></span>  
  
 <span data-ttu-id="0a50f-586">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.UnderlyingType%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-586">Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-587">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-587">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-588">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-588">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-589">Dall'alto in basso è una metafora che simula il comportamento del processore XAML durante la creazione dell'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="0a50f-589">Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.</span></span> <span data-ttu-id="0a50f-590">Quando compilato dall'alto in basso, viene creata un'istanza di un tipo associato al padre, e ha impostato le relative proprietà.</span><span class="sxs-lookup"><span data-stu-id="0a50f-590">When built top-down, a type is instantiated, attached to the parent, and has its properties set.</span></span> <span data-ttu-id="0a50f-591">Costruzione dall'alto in basso evita di richiamare i gestori di proprietà modificata più volte.</span><span class="sxs-lookup"><span data-stu-id="0a50f-591">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="0a50f-592">Tale gestione si riflette l'oggetto grafico e quindi elimina più chiamate del gestore e offre un'ottimizzazione delle prestazioni per l'avvio dell'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="0a50f-592">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="0a50f-593">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-593">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-594">L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-594">The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span></span> <span data-ttu-id="0a50f-595">È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-595">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="0a50f-596">Se è disponibile un valore, verrà restituito `false`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-596">If a value is unavailable, it returns `false`.</span></span>  
  
 <span data-ttu-id="0a50f-597">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-597">Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-598">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> contenente un vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-598">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, which represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-599">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-599">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-600">Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-600">This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span></span>  
  
 <span data-ttu-id="0a50f-601">L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-601">The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="0a50f-602">È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato.</span><span class="sxs-lookup"><span data-stu-id="0a50f-602">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="0a50f-603">Include anche una logica speciale per la serializzazione predefinita di enumerazioni, tipi valore comuni o i generics.</span><span class="sxs-lookup"><span data-stu-id="0a50f-603">It also includes special logic for default serialization of enumerations, common value types, or generics.</span></span> <span data-ttu-id="0a50f-604">Se è disponibile un valore, verrà restituito `null`.</span><span class="sxs-lookup"><span data-stu-id="0a50f-604">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="0a50f-605">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.ValueSerializer%2A> usare una logica diversa.</span><span class="sxs-lookup"><span data-stu-id="0a50f-605">Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-606">Ottiene un valore che fornisce le informazioni sul tipo per l'oggetto <see langword="ProvideValue" /> restituito dell'oggetto <see cref="T:System.Xaml.XamlType" /> se rappresenta un'estensione di markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-606">Gets a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-607">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo restituito per l'utilizzo dell'estensione di markup; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un'estensione di markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-607">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-608">Questa proprietà è applicabile solo se questa <xref:System.Xaml.XamlType> rappresenta un'estensione di markup (`x:MarkupExtension` è incluso nell'elenco di tipi assegnabili).</span><span class="sxs-lookup"><span data-stu-id="0a50f-608">This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list).</span></span>  
  
 <span data-ttu-id="0a50f-609">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-609">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-610">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-610">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-611">Ottiene il nome della stringa del tipo rappresentato dall'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-611">Gets the string name of the type that this <see cref="T:System.Xaml.XamlType" /> represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-612">Nome della stringa del tipo XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-612">The string name of this XAML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-613">Questa proprietà è in genere Ricava il nome dello schema costruito (per il <xref:System.Xaml.XamlType.%23ctor%2A> firma), o il nome del <xref:System.Type>, se viene costruito usando il costruttore pertinente del sistema di tipi CLR.</span><span class="sxs-lookup"><span data-stu-id="0a50f-613">This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">
          <span data-ttu-id="0a50f-614">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-614">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlType2">
          <span data-ttu-id="0a50f-615">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-615">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-616">Determina se due oggetti <see cref="T:System.Xaml.XamlType" /> specificati hanno lo stesso valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-616">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-617">
            <see langword="true" /> se il valore di <paramref name="xamlType1" /> è uguale al valore di <paramref name="xamlType2" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-617">
              <see langword="true" /> if the value of <paramref name="xamlType1" /> is the same as the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">
          <span data-ttu-id="0a50f-618">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-618">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlType2">
          <span data-ttu-id="0a50f-619">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-619">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a50f-620">Determina se due oggetti <see cref="T:System.Xaml.XamlType" /> specificati hanno valori diversi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-620">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-621">
            <see langword="true" /> se il valore del parametro <paramref name="xamlType1" /> è diverso dal valore del parametro <paramref name="xamlType2" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-621">
              <see langword="true" /> if the value of <paramref name="xamlType1" /> is different from the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-622">Ottiene il singolo spazio dei nomi XAML, ovvero lo spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-622">Gets the single XAML namespace that is the primary XAML namespace for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-623">Identificatore in formato di stringa dello spazio dei nomi XAML primario per il tipo XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-623">The identifier, as a string, of the primary XAML namespace for this XAML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-624">Questa implementazione fornisce lo stesso valore alla chiamata al metodo <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> e quindi per ottenere la stringa del primo valore dal set enumerabile restituito.</span><span class="sxs-lookup"><span data-stu-id="0a50f-624">This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-625">Ottiene l'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> attivo per l'elaborazione dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-625">Gets the active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-626">Oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> attivo per l'elaborazione dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-626">The active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-627"><xref:System.Xaml.XamlSchemaContext> è una voce di parametro obbligatorio quando si costruisce un <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-627"><xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-628">Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-628">Returns a string representation of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a50f-629">Rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-629">A string representation of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-630">Il <xref:System.Xaml.XamlType> implementazione di <xref:System.Object.ToString%2A> restituisce il <xref:System.Xaml.XamlType.Name%2A> proprietà del <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="0a50f-630">The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-631">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> utilizza per la serializzazione un comportamento di gestione degli spazi vuoti che rimuove lo spazio vuoto circostante nel contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-631">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-632">
            <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che utilizza la rimozione degli spazi vuoti; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-632">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a type that uses whitespace trimming; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-633">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-633">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-634">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-634">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-635">Ottiene un elenco di argomenti di tipo per i casi in cui l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-635">Gets a list of type arguments for cases where this <see cref="T:System.Xaml.XamlType" /> represents a generic.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-636">Elenco di argomenti di tipo; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-636">A list of type argument types; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-637">Esistono alcuni scenari per un <xref:System.Xaml.XamlType> in cui la chiamata di <xref:System.Xaml.XamlType.TypeArguments%2A> parametro restituisce un elenco in cui i tipi sono ancora aperti.</span><span class="sxs-lookup"><span data-stu-id="0a50f-637">There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open.</span></span> <span data-ttu-id="0a50f-638">In questo caso, uno o più del valore restituito <xref:System.Xaml.XamlType> valori sono associati i valori segnaposto per <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, ad esempio `T`, per rappresentare che il tipo generico sia ancora aperto.</span><span class="sxs-lookup"><span data-stu-id="0a50f-638">In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, such as `T`, to represent that the generic is still open.</span></span> <span data-ttu-id="0a50f-639">Questo scenario può verificarsi se si verifica una <xref:System.Xaml.XamlType> da una chiamata a <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, anziché da un'implementazione del reader XAML.</span><span class="sxs-lookup"><span data-stu-id="0a50f-639">This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-640">Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-640">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-641">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-641">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-642">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupTypeConverter%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-642">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-643">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupTypeConverter%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-643">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-644">Ottiene l'oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-644">Gets the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-645">Oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-645">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a50f-646">Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-646">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a50f-647">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a50f-647">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a50f-648">Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupValueSerializer%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.</span><span class="sxs-lookup"><span data-stu-id="0a50f-648">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="0a50f-649">Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupValueSerializer%2A> su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0a50f-649">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>