<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f660970c55af6a8e8be700e1df5ac2c266d1596" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52254548" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce informazioni sui tipi XAML come parte del sistema XAML complessivo implementato nei servizi XAML di .NET Framework.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Molte API nel <xref:System.Xaml.XamlType> classe forniscono informazioni sui tipi XAML, in cui il concetto generano report per è simile a sezioni specifiche della specifica XAML [MS-XAML].  
  
 <xref:System.Xaml.XamlType> è ampiamente usato nelle API di servizi XAML di .NET Framework per la segnalazione di informazioni su un tipo XAML. <xref:System.Xaml.XamlType> Restituisce le informazioni che potrebbe essere necessario conoscere un tipo XAML per funzionare con un'istanza o per accedere ai relativi membri da un flusso di nodi XAML o una rappresentazione XAML simile. La creazione di report è simile al modo in cui il <xref:System.Type> in CLR sistema tipo, insieme alle classi di reflection, ad esempio <xref:System.Reflection.MemberInfo>, forniscono informazioni su un tipo CLR e sul relativo utilizzo.  
  
 Per estendere il sistema di tipi XAML, è possibile derivare da <xref:System.Xaml.XamlType>. A tale scopo, potrebbe essere inoltre necessario implementare un <xref:System.Xaml.Schema.XamlTypeInvoker>. Il <xref:System.Xaml.Schema.XamlTypeInvoker> consente al sistema di tipo XAML generalizzato lavorare con il sistema di tipi di backup che si specifica come parte del comportamento della chiamata. L'oggetto personalizzato specifico <xref:System.Xaml.Schema.XamlTypeInvoker> fornisce un modo per ridurre le dipendenze nel sistema di tipi CLR, che vengono usate per l'impostazione predefinita <xref:System.Xaml.XamlType> comportamento.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType">Oggetto <see cref="T:System.Type" /> CLR sottostante per il tipo XAML da costruire.</param>
        <param name="schemaContext">Contesto dello schema XAML per lettori o writer XAML.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base alle informazioni sul tipo CLR sottostante.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Uno o più oggetti <paramref name="underlyingType" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName">Nome del tipo da creare.</param>
        <param name="typeArguments">Argomenti di tipo per un oggetto <see cref="T:System.Xaml.XamlType" /> che rappresenta un tipo generico. Potrebbe essere (e spesso è) <see langword="null" />, che indica che il tipo rappresentato non è un tipo generico.</param>
        <param name="schemaContext">Contesto dello schema XAML per lettori e writer XAML.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base al nome di una stringa per il tipo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rappresenta un costruttore protetto. Nessuna classe derivata pubblica corrente esistono che utilizzano questo percorso specifico per la costruzione. I consumer esistenti <xref:System.Xaml.XamlType>, è necessario usare firme del costruttore (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, o <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) per inizializzare un <xref:System.Xaml.XamlType> oggetto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno o più oggetti <paramref name="typeName" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType">Tipo sottostante per il tipo XAML da costruire.</param>
        <param name="schemaContext">Contesto dello schema XAML per il lettore XAML.</param>
        <param name="invoker">Implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> che gestisce le chiamate con reflection di runtime all'oggetto <see cref="T:System.Xaml.XamlType" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base alle informazioni sul tipo sottostante e a un'implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Uno o più oggetti <paramref name="underlyingType" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace">Spazio dei nomi XAML per il tipo in formato stringa.</param>
        <param name="unknownTypeName">Nome del tipo nello spazio dei nomi XAML <paramref name="unknownTypeNamespace" /> fornito.</param>
        <param name="typeArguments">Argomenti di tipo per un oggetto <see cref="T:System.Xaml.XamlType" /> che rappresenta un tipo generico. Potrebbe essere (e spesso è) <see langword="null" />, che indica che il tipo rappresentato non è un tipo generico.</param>
        <param name="schemaContext">Contesto dello schema XAML per lettori o writer XAML.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base allo spazio dei nomi XAML e al nome di una stringa per il tipo. Questo costruttore è esclusivamente destinato all'analisi e alla registrazione dei nodi XAML degli utilizzi dei tipi noti per non avere supporto nel sistema dei tipi e nel contesto dello schema XAML di supporto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore solo per i tipi "sconosciuti" in cui non è disponibile un tipo XAML che esegue il mapping a un sistema di tipi sottostante. Questo costruttore non produca un risultato in cui <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> è `true`. Al contrario, la logica di reflector predefinita segnala il tipo sottostante come <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>. Tuttavia, questo comportamento può cambiare del <xref:System.Xaml.XamlType.LookupIsUnknown%2A> eseguire l'override.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno o più oggetti <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di sola lettura dei tipi che possono essere utilizzati come valore di <see cref="P:System.Xaml.XamlType.ContentProperty" /> per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Insieme di sola lettura dei possibili tipi di contenuto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tipi assegnabili un tipo di contenuto specifico (ad esempio, può essere assegnato a un tipo di base che è un tipo di contenuto consentito) non sono considerati più tipi ai fini di <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML. La determinazione di questo valore si basa sul tipo sottostante dell'oggetto <see cref="T:System.Xaml.XamlType" /> e del contesto dello schema.</summary>
        <value>Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupBaseType%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupBaseType%2A> su questo tipo. Per impostazione predefinita <xref:System.Xaml.XamlType.BaseType%2A> restituisce una costante interna che rappresenta un <xref:System.Object> se <xref:System.Xaml.XamlType.UnderlyingType%2A> è `null`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupBaseType%2A> è virtuale e pertanto può essere sottoposto a override. La sostituzione è potenzialmente (se per scopi dannosi o in altro modo) per modificare le informazioni sul tipo restituito su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni sul sistema di tipo del tipo CLR sottostante. Per eventuali controlli SecurityCritical di operazioni di assegnazione e accesso, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Tipo da verificare rispetto all'oggetto <see cref="T:System.Xaml.XamlType" /> corrente.</param>
        <summary>Restituisce un valore che indica se un'istanza dell'oggetto <see cref="T:System.Xaml.XamlType" /> dispone dell'oggetto <see cref="T:System.Xaml.XamlType" /> specificato nell'elenco dei tipi assegnabili.</summary>
        <returns>
          <see langword="true" /> se <paramref name="xamlType" /> è presente nell'elenco dei tipi assegnabili; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anche se il tipo può essere assegnato non dispone di tutte le funzionalità del tipo di riferimento, è possibile usarlo per l'assegnazione. Ad esempio, è possibile utilizzare l'assegnazione a rendere le corrispondenze di tipo per i valori di una proprietà. Il concetto dei tipi assegnabili in XAML è simile al concetto di cast dei backup nel sistema di tipi CLR. In un sistema di tipi CLR, ad esempio, ogni tipo ha un <xref:System.Object> nell'elenco dei tipi assegnabili.  
  
 Se uno dei due <xref:System.Xaml.XamlType> istanze utilizzate per il confronto ha <xref:System.Xaml.XamlType.IsUnknown%2A> uguale a `true`, questo metodo è una speciale modalità sconosciute che restituisce `true` se i due <xref:System.Xaml.XamlType> istanze sono equivalenti.  
  
 L'implementazione predefinita utilizza CLR <xref:System.Type> dal <xref:System.Xaml.XamlType.UnderlyingType%2A> per questa <xref:System.Xaml.XamlType> e l'input <xref:System.Xaml.XamlType>e chiama <xref:System.Type.IsAssignableFrom%2A>. Eseguire l'override di questo metodo se si desidera che una determinazione dei tipi assegnabili diversa.  
  
 Il passaggio di un valore null `xamlType` non viene generata un'eccezione e restituisce sempre `false`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.CanAssignTo%2A> è virtuale e pertanto può essere sottoposto a override. La sostituzione è potenzialmente (se per scopi dannosi o in altro modo) per modificare l'assegnabilità di un tipo XAML in modo che non si allinei nel modo previsto con il comportamento di tipo-cast di tipo CLR sottostante. Per eventuali controlli SecurityCritical di operazioni di assegnazione e accesso, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve avere argomenti (vincoli generici tramite <see langword="x:TypeArguments" />, testo di inizializzazione o altre tecniche XAML) per costruire un'istanza valida del tipo.</summary>
        <value>
          <see langword="true" /> se la costruzione di un'istanza richiede un valore dell'argomento; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />. Può essere <see langword="null" /> se non esiste alcuna proprietà di contenuto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si utilizza l'associazione o il supporto del sistema di tipi CLR, la proprietà di contenuto XAML può essere specificata in un tipo applicando <xref:System.Windows.Markup.ContentPropertyAttribute> alla definizione del tipo.  
  
 Questa proprietà viene allineato al `[content property]` elemento informazione nella specifica [MS-XAML].  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupContentProperty%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupContentProperty%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i tipi utilizzati per eseguire il wrapping di contenuto per una proprietà di contenuto quando non si tratta di una corrispondenza dei tipi rigida, ad esempio stringhe in un oggetto <see langword="Collection&lt;T&gt;" /> fortemente tipizzato.</summary>
        <value>Insieme di sola lettura dei possibili tipi di wrapper del contenuto; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non sono wrapper che tengano conto per la corrispondenza dei tipi esposti, questa proprietà è `null`.  
  
 Tipi che restituiscono <xref:System.Xaml.XamlType.CanAssignTo%2A> per uno specifico tipo di contenuto non vengono considerati ai fini di più tipi di <xref:System.Xaml.XamlType.ContentWrappers%2A>.  
  
 Nell'associazione per CLR <xref:System.Xaml> e <xref:System.Xaml.XamlType>, il tipo di wrapper del contenuto XAML può essere specificato in un tipo come un <xref:System.Windows.Markup.ContentWrapperAttribute>.  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupContentWrappers%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupContentWrappers%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che rappresenta il comportamento di conversione del caricamento posticipato per questo tipo.</summary>
        <value>Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con il vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> che rappresenta il comportamento di caricamento posticipato per questo tipo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comportamento dei modelli XAML in WPF è un esempio di comportamento di caricamento posticipato.  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indica se l'oggetto corrente è uguale a un altro oggetto.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
        <summary>Indica se l'oggetto corrente è uguale a un altro oggetto.</summary>
        <returns>
          <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'oggetto corrente.</param>
        <summary>Indica se l'oggetto corrente è uguale a un altro oggetto dello stesso tipo.</summary>
        <returns>
          <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">Direttiva per la quale trovare il membro con alias.</param>
        <summary>Restituisce il membro XAML a cui viene associata come alias una direttiva XAML dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Membro con alias, se trovato; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un insieme che contiene tutte le proprietà associabili esposte dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Insieme che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciascuna <xref:System.Xaml.XamlMember> nella raccolta restituita deve contenere valori che supportano il concetto che la <xref:System.Xaml.XamlMember> è un membro associabile. Ad esempio, i membri devono restituire `true` per <xref:System.Xaml.XamlMember.IsAttachable%2A>, un tipo per <xref:System.Xaml.XamlMember.TargetType%2A>e così via.  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un insieme che contiene tutti i membri esposti dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Insieme che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAllMembers%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome del membro associabile da ottenere, in formato <c>ownerTypeName.MemberName</c>.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta uno specifico membro associabile denominato di <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro associabile richiesto; in caso contrario, <see langword="null" />, se non esiste alcun membro associabile in base a quel nome.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAttachableMember%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> è virtuale e pertanto può essere sottoposto a override. La sostituzione è potenzialmente (se per scopi dannosi o in caso contrario) per modificare i membri di un tipo XAML segnalati in modo che non si allineino nel modo previsto con la <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante. Per eventuali controlli critico per la sicurezza del membro reporting, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash per questo oggetto.</summary>
        <returns>Codice hash di un intero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome del membro da ottenere in formato stringa.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.XamlMember" /> per un membro denominato specifico dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro, se tale membro viene trovato; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore per `name` che dovrà essere non qualificato. Nomi completi di tipo che indicano un membro associato devono essere inviati a <xref:System.Xaml.XamlType.GetAttachableMember%2A> invece. Membro non devono essere utilizzati nomi; con prefisso un prefisso è legato all'utilizzo e il sistema di tipi XAML non è possibile conoscere il contesto di tale utilizzo e come viene mappato il prefisso.  
  
 Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupMember%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupMember%2A> è virtuale e pertanto può essere sottoposto a override. La sostituzione è potenzialmente (se per scopi dannosi o in caso contrario) per modificare i membri di un tipo XAML segnalati in modo che non si allineino nel modo previsto con la <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante. Per eventuali controlli critico per la sicurezza del membro reporting, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">Conteggio (grado) della modalità sintassi o costruttore specifica su cui si desiderano informazioni.</param>
        <summary>Per i tipi di estensione di markup, restituisce i tipi dei parametri posizionali supportati in un utilizzo dell'estensione di markup specifico per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Elenco di valori di <see cref="T:System.Xaml.XamlType" /> dove ogni oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta il tipo per tale posizione nella sintassi. È necessario specificare i tipi nello stesso ordine impiegato quando si fornisce l'input per l'estensione di markup.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa API è applicabile solo se questa <xref:System.Xaml.XamlType> rappresenta un'estensione di markup (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> è `true`).  
  
 L'input `parameterCount` non corretta per richiedere il tipo di un parametro posizionale. È di specificare il grado di utilizzo di un'estensione di markup. Utilizzo dell'estensione di markup spesso ha più firme di"+" e Usa il grado di parametro diversi (conteggio) dei parametri posizionali per differenziare. Tuttavia, è possibile configurare un contesto dello schema per consentire gradi duplicati e utilizzare tipi di parametri posizionali per la differenziazione. Per ulteriori informazioni, vedere <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. In uno specifico grado (numero), le posizioni dei parametri e tipi possono variare. Per ottenere il tipo di utilizzo dell'estensione di markup di un grado specifico posizionale, chiamare prima <xref:System.Xaml.XamlType.GetPositionalParameters%2A> che specifica il conteggio del grado. Ottenere quindi l'elemento nella posizione specificata dalla raccolta restituita.  
  
 Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un elenco di identificatori di stringa per gli spazi dei nomi XAML nei quali è incluso il tipo.</summary>
        <returns>Elenco di valori di stringa, dove ogni stringa rappresenta l'identificatore URI per uno spazio dei nomi XAML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificatori di spazio dei nomi XAML tipici sono stringhe in formato URI.  
  
 L'implementazione predefinita verifica quanto segue, in ordine: lo spazio dei nomi XAML fornito nella costruzione di strutture (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> solo la firma); e gli spazi dei nomi che sono disponibili dal contesto dello schema. Se questi sono i singoli `null`, viene generato un nuovo elenco che contiene un'unica stringa vuota. È possibile eseguire l'override di questo metodo per modificare la metodologia di ricerca.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, la chiamata <xref:System.Xaml.XamlType.Invoker%2A> possibile richiamare o <xref:System.Xaml.XamlType.LookupInvoker%2A> o una specifica sostituzione di tale metodo. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupInvoker%2A> su questo tipo.  
  
 Se un <xref:System.Xaml.XamlType.LookupInvoker%2A> override restituisce `null`, o se l'implementazione predefinita restituisce `null` scarsa dimestichezza <xref:System.Xaml.XamlType.UnderlyingType%2A> per questo <xref:System.Xaml.XamlType>, quindi <xref:System.Xaml.XamlType.Invoker%2A> restituisce <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente secondo la definizione XAML.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsAmbient%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsAmbient%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta una matrice.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta una matrice; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupCollectionKind%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupCollectionKind%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupCollectionKind%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupCollectionKind%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito secondo la definizione XAML.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene allineato al `[is default constructible]` elemento informazione nella specifica [MS-XAML].  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsConstructible%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsConstructible%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario secondo la definizione XAML.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene allineato al `[is dictionary]` elemento informazione nella specifica [MS-XAML].  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupCollectionKind%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupCollectionKind%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo generico.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo generico; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è una proprietà di supporto che verifica la presenza di un valore null di <xref:System.Xaml.XamlType.TypeArguments%2A>. Non vi è alcuna specifica `Lookup` metodo correlati <xref:System.Xaml.XamlType.IsGeneric%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In termini di specifica di XAML, questo tipo deve essere assegnabile al `x:MarkupExtension` per restituire `true` per <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML secondo la definizione XAML.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un namescope XAML impone l'univocità del nome della proprietà o le proprietà utilizzate per `x:Name`  /  `[name property]`. Se <xref:System.Xaml.XamlType.IsNameScope%2A> è `true`, un meccanismo per imporre l'univocità deve esistere e deve restituire dalla prospettiva di questo tipo che possiede un namescope XAML. L'ambito dei nomi XAML si estende al contenuto del tipo quindi fino a quando non viene rilevato un altro tipo che possiede namescope XAML.  
  
 Questa proprietà viene allineato al `[is name scope]` elemento informazione nella specifica [MS-XAML].  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsNameScope%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene inizializzato tramite una stringa <see langword="xamlName" /> valida come <see cref="P:System.Xaml.XamlType.Name" />.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene inizializzato tramite una stringa <see langword="xamlName" /> valida; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable secondo la definizione XAML.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene allineato al `[is nullable]` elemento informazione nella specifica [MS-XAML].  
  
 Se non si usa la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsNullable%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico nel sistema dei tipi pertinente.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsPublic%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> è virtuale e pertanto può essere sottoposto a override. La sostituzione è potenzialmente (se per scopi dannosi o in altro modo) per modificare le informazioni di accesso riportate su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni di sistema e di accesso di tipo del tipo CLR sottostante. Per eventuali controlli SecurityCritical di operazioni di assegnazione e accesso, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto nel sistema dei tipi sottostante.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsUnknown%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate.  
  
 Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, una <xref:System.Xaml.XamlType> dotato `true` per <xref:System.Xaml.XamlType.IsUnknown%2A> non può essere scritto in un oggetto grafico. Nelle implementazioni predefinite in <xref:System.Xaml> , il <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> chiamare genera un <xref:System.Xaml.XamlObjectWriterException> quando il relativo <xref:System.Xaml.XamlType> report `true` per <xref:System.Xaml.XamlType.IsUnknown%2A>. Non è necessario passare un <xref:System.Xaml.XamlType> che ha <xref:System.Xaml.XamlType.IsUnknown%2A> come `true` solo se si è preparati a gestire le eccezioni da <xref:System.Xaml.XamlObjectWriter>, o esistono altri modi per regolare la <xref:System.Xaml.XamlObjectWriter> comportamento o il flusso di nodi XAML prima della scrittura dell'oggetto grafico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dall'alto in basso è una metafora che simula il comportamento del processore XAML durante la creazione dell'oggetto grafico. Quando compilato dall'alto in basso, un tipo viene creata un'istanza, a associato al padre, e quindi impostate le proprietà. Costruzione dall'alto in basso evita di richiamare i gestori di proprietà modificata più volte. Tale gestione si riflette l'oggetto grafico e quindi elimina più chiamate del gestore e offre un'ottimizzazione delle prestazioni per l'avvio dell'oggetto grafico.  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti in base alla definizione XML.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta XML <see langword="XDATA" /> secondo la definizione XAML.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta <see langword="XDATA" />; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene allineato al `[is xdata]` elemento informazione nella specifica [MS-XAML].  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsXData%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsXData%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che fornisce le informazioni sul tipo per la proprietà <see langword="Items" /> dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo degli elementi nell'insieme; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un insieme.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è applicabile solo se questa <xref:System.Xaml.XamlType> rappresenta una raccolta (<xref:System.Xaml.XamlType.IsCollection%2A> è `true`). Il `Items` proprietà è qualsiasi proprietà che contiene gli elementi in tale tipo di raccolta o una matrice.  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupItemType%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupItemType%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che fornisce le informazioni sul tipo per la proprietà della chiave dell'oggetto <see cref="T:System.Xaml.XamlType" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario.</summary>
        <value>Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo della chiave per l'utilizzo del dizionario; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un dizionario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è applicabile solo se questa <xref:System.Xaml.XamlType> rappresenta un dizionario (<xref:System.Xaml.XamlType.IsDictionary%2A> è `true`).  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupKeyType%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupKeyType%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">Direttiva per la quale trovare il membro con alias.</param>
        <summary>Restituisce il membro XAML a cui viene associata come alias una direttiva XAML dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Membro con alias, se trovato; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.  
  
 L'implementazione predefinita può restituire risultati per le seguenti direttive XAML: `Key`; `Name`; `Uid`; e `xml:lang`. I valori per queste dipendono dalla reflection sottostante e possono comunque restituire `null` se non viene trovata alcuna proprietà con alias.  
  
 Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per le informazioni sul sistema di tipo XAML o le informazioni sullo schema di un tipo di report.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un set enumerabile che contiene tutte le proprietà associabili esposte dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Set enumerabile che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.  
  
 Sebbene <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> restituisce una raccolta generica, questo `Lookup` metodo restituisce un insieme enumerabile generico.  
  
 L'implementazione predefinita Usa la reflection CLR interna. Quando <xref:System.Xaml.XamlType.UnderlyingType%2A> viene `null`, può usare l'implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile. Questo comportamento viene chiamato <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> in modo ricorsivo per tentare di trovare un tipo di base valido e restituisce `null` se non esiste alcun tipo di base valido.  
  
 Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo. Un valore null restituito deve essere riservato per i casi in cui non è possibile determinare le informazioni a causa di mancanza di supporto dei tipi di reflection o di sistema. Se un tipo è valido e reflection o altre tecniche sono disponibili, ma un tipo non dispone di membri associabili, è necessario restituire un oggetto vuoto <xref:System.Collections.Generic.IEnumerable%601> impostato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un set enumerabile contenente tutti i membri esposti dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Set enumerabile che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.GetAllMembers%2A>.  
  
 Sebbene <xref:System.Xaml.XamlType.GetAllMembers%2A> restituisce una raccolta generica, questo `Lookup` metodo restituisce un insieme enumerabile generico.  
  
 L'implementazione predefinita Usa la reflection CLR interna. Per i casi in cui <xref:System.Xaml.XamlType.UnderlyingType%2A> viene `null`, può usare l'implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile. Questo comportamento viene chiamato <xref:System.Xaml.XamlType.LookupAllMembers%2A> in modo ricorsivo per tentare di trovare un tipo di base valido e restituisce `null` se non esiste alcun tipo di base valido.  
  
 Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo. Un valore null restituito deve essere riservato per i casi in cui non è possibile determinare le informazioni a causa di mancanza di supporto dei tipi di reflection o di sistema. Se un tipo valido, reflection o altre tecniche sono disponibili. Se un tipo non dispone di membri, è necessario restituire un oggetto vuoto <xref:System.Collections.Generic.IEnumerable%601> impostato.  
  
 Restituire i valori relativi <xref:System.Xaml.XamlType.LookupAllMembers%2A> e <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> devono escludersi a vicenda. Se si dispone di una situazione in cui una proprietà di sistema di tipo sottostante può supportare un utilizzo standard dell'istanza, nonché un utilizzo associabile, tale membro deve essere segnalato come due diversi <xref:System.Xaml.XamlMember> valori, con un valore che appare nell'elenco associabile e un'altra di elenco di membri standard.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un elenco dei tipi che possono essere utilizzati come valore di <see cref="P:System.Xaml.XamlType.ContentProperty" /> per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Elenco dei possibili tipi di contenuto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 Tipi che restituiscono <xref:System.Xaml.XamlType.CanAssignTo%2A> per uno specifico tipo di contenuto non vengono considerati ai fini di più tipi di <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 L'implementazione predefinita consente ad altre proprietà degli <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, o <xref:System.Xaml.XamlType.ItemType%2A>) per ottenere un risultato. Il `Lookup` esegue l'override per l'elenco di proprietà precedente può essere richiamato anche in questo aspetto.  
  
 Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome del membro associabile da ottenere, in formato <c>ownerTypeName.MemberName</c>.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.XamlMember" /> per uno specifico membro associabile denominato dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro associabile richiesto; in caso contrario, <see langword="null" />, se non esiste alcun membro associabile in base a quel nome.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.GetAttachableMember%2A>.  
  
 L'implementazione predefinita Usa la reflection CLR interna. Quando <xref:System.Xaml.XamlType.UnderlyingType%2A> viene `null`, può usare l'implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile. Questo comportamento viene chiamato <xref:System.Xaml.XamlType.LookupAttachableMember%2A> in modo ricorsivo per tentare di trovare un tipo di base valido e restituisce `null` se non esiste alcun tipo di base valido.  
  
 Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> è virtuale e pertanto può essere sottoposto a override. La sostituzione è potenzialmente (se per scopi dannosi o in caso contrario) per modificare i membri di un tipo XAML segnalati in modo che non si allineino nel modo previsto con la <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante. Per eventuali controlli critico per la sicurezza del membro reporting, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML. La determinazione di questo valore si basa sul tipo sottostante dell'oggetto <see cref="T:System.Xaml.XamlType" /> e del contesto dello schema.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.BaseType%2A>.  
  
 L'implementazione predefinita potrebbe restituire una costante interna che rappresenta il <xref:System.Object> se <xref:System.Xaml.XamlType.UnderlyingType%2A> è `null`.  
  
 Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupBaseType%2A> è virtuale e pertanto può essere sottoposto a override. La sostituzione è potenzialmente (se per scopi dannosi o in altro modo) per modificare le informazioni sul tipo restituito su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni sul sistema di tipo del tipo CLR sottostante. Per eventuali controlli SecurityCritical di operazioni di assegnazione e accesso, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore dell'enumerazione <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> che dichiara il tipo di insieme specifico utilizzato dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Valore dell'enumerazione <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato da un metodo interno privato (non pubblico `CollectionKind` oppure `GetCollectionKind` API esiste in <xref:System.Xaml.XamlType>).  
  
 L'implementazione predefinita Usa la reflection CLR interna. Per i casi in cui <xref:System.Xaml.XamlType.UnderlyingType%2A> viene `null`, può usare l'implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile. Questo comportamento viene chiamato indirettamente <xref:System.Xaml.XamlType.LookupCollectionKind%2A> in modo ricorsivo per tentare di trovare un tipo di base valido; restituisce <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> se non esiste alcun tipo di base valido. In generale, l'implementazione predefinita tenta di individuare il `Add` metodo del tipo sottostante tramite reflection. Se viene trovato, il <xref:System.Reflection.MethodInfo> del `Add` metodo le informazioni è sufficienti per determinare quale <xref:System.Xaml.Schema.XamlCollectionKind> valore deve essere restituito. In caso contrario restituirà <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.  
  
 Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve avere argomenti (vincoli generici tramite <see langword="x:TypeArguments" />, testo di inizializzazione o altre tecniche XAML) per costruire un'istanza valida del tipo.</summary>
        <returns>
          <see langword="true" /> se la costruzione di un'istanza richiede un valore dell'argomento; in caso contrario, false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.  
  
 L'implementazione predefinita restituisce `false` per considerati tipi di valore in CLR i tipi di sistema di tipi. Per altri tipi di valore, reflection CLR <xref:System.Reflection.ConstructorInfo> viene usato per determinare se è presente un costruttore predefinito.  
  
 Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce le informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />. Può essere <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.ContentProperty%2A>.  
  
 L'implementazione predefinita cerca <xref:System.Windows.Markup.ContentPropertyAttribute> sulla definizione di tipo. È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato. Se questi controlli non in grado di individuare un tipo di contenuto, l'implementazione predefinita restituisce `null`.  
  
 Eseguire l'override di questo metodo se non si utilizza la reflection CLR interna predefinita e Usa i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipo XAML o informazioni sullo schema di un tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un elenco di valori di <see cref="T:System.Xaml.XamlType" /> che rappresentano i wrapper del contenuto per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Elenco di valori di <see cref="T:System.Xaml.XamlType" /> che rappresentano i wrapper del contenuto per l'oggetto <see cref="T:System.Xaml.XamlType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wrapper del contenuto è una classe che rappresenta il tipo di raccolta del contenuto quando i tipi utilizzati in tale raccolta non sono contigui al sistema di tipi. I tipi di elementi della raccolta per il wrapper del contenuto devono essere limitate in qualche modo oltre <xref:System.Object> o un oggetto neutro equivalente. Tuttavia, questa limitazione viene applicata solo per la progettazione o scopo delle proprietà che utilizzano quel tipo e non dal sistema dei tipi. Possono esistere più di un wrapper del contenuto su un tipo.  
  
 Per un esempio di classe e uno scenario rispetto all'implementazione WPF XAML, vedere <xref:System.Windows.Documents.InlineCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementato in una classe derivata, restituisce un'implementazione di <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
        <returns>Un'implementazione <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di questo metodo per fornire la reflection interna con un modo alternativo per ottenere i valori di attributo CLR. In assenza di una sostituzione, l'utilità di riflessione interno Usa la logica tipici della reflection CLR.  
  
 L'implementazione predefinita restituisce `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlType.DeferringLoader%2A>. Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.DeferringLoader%2A> restituisca un valore diverso da quello è abilitata dalla reflection interna predefinita e forniscono anche personalizzato <xref:System.Xaml.Schema.XamlTypeInvoker> informazioni.  
  
 L'implementazione predefinita restituisce un oggetto in base alla lettura <xref:System.Windows.Markup.XamlDeferLoadAttribute>. È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato. Se non è disponibile un valore, questo metodo restituisce `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associato a <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Le informazioni <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> per questo oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.Invoker%2A>.  
  
 L'implementazione predefinita non richiede un <xref:System.Xaml.XamlType> essere creato usando uno dei costruttori che passano iniziale <xref:System.Xaml.Schema.XamlTypeInvoker>. Tuttavia, un' <xref:System.Xaml.XamlType.UnderlyingType%2A> devono essere presenti per il <xref:System.Xaml.XamlType>; in caso contrario, l'implementazione predefinita restituisce `null`.  
  
 Eseguire l'override di questo metodo se si crea anche una classe derivata da <xref:System.Xaml.Schema.XamlTypeInvoker> e si vogliono restituire la classe derivata. Se si torna `null`, <xref:System.Xaml.XamlType.Invoker%2A> restituisce <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> ai chiamanti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente secondo la definizione XAML.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
 L'implementazione predefinita Usa la reflection CLR sul <xref:System.Xaml.XamlType.UnderlyingType%2A> e possono controllare i tipi di base. L'implementazione verifica per la <xref:System.Windows.Markup.AmbientAttribute> che viene applicato alla definizione del tipo attinente a livello di classe e restituisce `true` in questo caso. Restituiscono tutti gli altri casi `false`.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsAmbient%2A> restituisca un valore diverso da quello è abilitata dalla reflection interna predefinita.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito secondo la definizione XAML.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsConstructible%2A>.  
  
 L'implementazione predefinita Usa la reflection CLR sul <xref:System.Xaml.XamlType.UnderlyingType%2A>. Il tipo deve essere concreti, non annidata e chiuso. L'implementazione predefinita controlla se il tipo è un tipo di valore e la restituzione di <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>. Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, questo metodo restituisce `true`.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsConstructible%2A> restituisca un valore diverso da quello è abilitata dalla reflection interna predefinita.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  
  
 L'implementazione predefinita è costituito solo da questa chiamata:  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsMarkupExtension%2A> usare una logica diversa.  
  
 In termini di specifica di XAML, questo tipo deve essere assegnabile al `x:MarkupExtension` per restituire `true` per <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML secondo la definizione XAML.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsNameScope%2A>.  
  
 L'implementazione predefinita esegue una <xref:System.Xaml.XamlType.CanAssignTo%2A> chiamare indirettamente rispetto al tipo <xref:System.Windows.Markup.INameScope>. <xref:System.Windows.Markup.INameScope> è un'interfaccia definita nell'assembly WindowsBase. dll. Questa tecnica per l'identificazione di namescope XAML viene usata sia dalle implementazioni di WPF e Windows Workflow Foundation di XAML.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsNameScope%2A> usare una logica diversa.  
  
 Un namescope XAML impone l'univocità del nome della proprietà o proprietà che vengono usate per `x:Name`  /  `[name property]`. Se <xref:System.Xaml.XamlType.IsNameScope%2A> è `true`, quindi un meccanismo per imporre l'univocità deve esistere e deve restituire dalla prospettiva di questo tipo che possiede un namescope XAML. L'ambito dei nomi XAML si estende al contenuto del tipo quindi fino a quando non viene rilevato un altro tipo di proprietario namescope XAML.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable secondo la definizione XAML.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsNullable%2A>.  
  
 L'implementazione predefinita esegue una determinazione basata sul concetto che ammette valori null della libreria core CLR, confrontato con <xref:System.Xaml.XamlType.UnderlyingType%2A>. Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, viene restituito `true`.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsNullable%2A> usare una logica diversa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico nel sistema dei tipi pertinente.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsPublic%2A>.  
  
 L'implementazione predefinita Usa la reflection CLR su un valore non null <xref:System.Xaml.XamlType.UnderlyingType%2A>. Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, viene restituito `true`.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsPublic%2A> usare una logica diversa.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> è virtuale e pertanto può essere sottoposto a override. La sostituzione è potenzialmente (se per scopi dannosi o in altro modo) per modificare le informazioni di accesso riportate su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni di sistema o l'accesso di tipo del tipo CLR sottostante. Per eventuali controlli SecurityCritical di operazioni di assegnazione e accesso, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto nel sistema dei tipi sottostante.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsUnknown%2A>.  
  
 L'implementazione predefinita è possibile usare la reflection CLR. Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, viene restituito `true`.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsUnknown%2A> usare una logica diversa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti in base alla definizione XML.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.  
  
 L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>. È anche possibile verificare il <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato. Se un valore non è disponibile, verrà restituito `false`.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> usare una logica diversa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta XML <see langword="XDATA" /> secondo la definizione XAML.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta <see langword="XDATA" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsXData%2A>.  
  
 L'implementazione predefinita esegue una <xref:System.Xaml.XamlType.CanAssignTo%2A> chiamare indirettamente rispetto al tipo <xref:System.Xml.Serialization.IXmlSerializable>.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsXData%2A> usare una logica diversa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che fornisce le informazioni sul tipo per la proprietà <see langword="Items" /> dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo degli elementi nell'insieme; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un insieme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.ItemType%2A>.  
  
 L'implementazione predefinita è possibile usare i concetti di reflection CLR, ad esempio la verifica per un `Add` metodo in base al <xref:System.Reflection.MethodInfo> e usando la <xref:System.Reflection.ParameterInfo>; controllo <xref:System.Xaml.XamlType.IsArray%2A>; e il controllo <xref:System.Xaml.XamlType.BaseType%2A> e provando la stessa logica.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.ItemType%2A> usare una logica diversa. Casi in cui <xref:System.Xaml.XamlType.LookupCollectionKind%2A> restituisce <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> devono restituire `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che fornisce le informazioni sul tipo per la proprietà della chiave dell'oggetto <see cref="T:System.Xaml.XamlType" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo della chiave per l'utilizzo del dizionario o <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un dizionario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.KeyType%2A>.  
  
 L'implementazione predefinita è possibile usare i concetti di reflection CLR, ad esempio la verifica per un `Add` metodo in base al <xref:System.Reflection.MethodInfo> e usando la <xref:System.Reflection.ParameterInfo>; e il controllo <xref:System.Xaml.XamlType.BaseType%2A> e provando la stessa logica.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.KeyType%2A> usare una logica diversa. Casi in cui <xref:System.Xaml.XamlType.LookupCollectionKind%2A> non restituisce <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> devono restituire `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che fornisce le informazioni sul tipo per l'oggetto <see langword="ProvideValue" /> restituito dell'oggetto <see cref="T:System.Xaml.XamlType" /> se rappresenta un'estensione di markup.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo restituito per l'utilizzo dell'estensione di markup; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un'estensione di markup.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.  
  
 L'implementazione predefinita restituisce un <xref:System.Xaml.XamlType> in base alla lettura <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>. È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato. Se un valore non è disponibile, verrà restituito `null`.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> usare una logica diversa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Nome del membro da ottenere in formato stringa.</param>
        <param name="skipReadOnlyCheck">
          <see langword="true" /> per restituire un membro anche se tale membro contiene il valore <see langword="true" /> per <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> per non restituire un membro <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. Il valore predefinito è <see langword="false" />.</param>
        <summary>Restituisce l'oggetto <see cref="T:System.Xaml.XamlMember" /> per un membro denominato specifico dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro, se un membro viene trovato; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.GetMember%2A>.  
  
 L'implementazione predefinita restituisce un <xref:System.Xaml.XamlType> basati su reflection CLR interne e valutazione rispetto al contesto dello schema.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.GetMember%2A> usare una logica diversa.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupMember%2A> è virtuale e pertanto può essere sottoposto a override. La sostituzione è potenzialmente (se per scopi dannosi o in caso contrario) per modificare i membri di un tipo XAML segnalati in modo che non si allineino nel modo previsto con la <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante. Per eventuali controlli critico per la sicurezza del membro reporting, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">Conteggio (grado) della modalità sintassi o costruttore specifica su cui si desiderano informazioni.</param>
        <summary>Per i tipi di estensione di markup, restituisce i tipi dei parametri posizionali supportati in un utilizzo dell'estensione di markup specifico per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Elenco di valori di <see cref="T:System.Xaml.XamlType" /> dove ogni oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta il tipo per tale posizione nella sintassi. È necessario specificare tali tipi nello stesso ordine quando si fornisce l'input per l'estensione di markup.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.  
  
 L'implementazione predefinita Usa informazioni sulla reflection interno basati su ricerca di costruttori e controllando l'arietà. Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.GetPositionalParameters%2A> usare una logica diversa.  
  
 Questa API è applicabile solo se questa <xref:System.Xaml.XamlType> rappresenta un'estensione di markup (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> è `true`).  
  
 L'input `parameterCount` non corretta per richiedere il tipo di un parametro posizionale. È di specificare il grado di utilizzo di un'estensione di markup. Utilizzo dell'estensione di markup spesso ha più firme e Usa parametri diversi arietà (conteggio) dei parametri posizionali per distinguerle. Tuttavia, è possibile configurare un contesto dello schema per consentire gradi duplicati e utilizzare tipi di parametri posizionali per la differenziazione. Per ulteriori informazioni, vedere <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. Per un numero di grado specifico possono variare le posizioni dei parametri e tipi. Per ottenere il tipo di utilizzo dell'estensione di markup di un grado specifico posizionale, chiamare prima <xref:System.Xaml.XamlType.GetPositionalParameters%2A> con il conteggio del grado. Ottenere quindi l'elemento nella posizione specificata dalla raccolta restituita.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un callback del gestore da utilizzare per le operazioni di impostazione delle estensioni di markup.</summary>
        <returns>Callback del gestore da utilizzare per le operazioni di impostazione delle estensioni di markup.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>. È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato. Se è disponibile un valore, verrà restituito `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un gestore da utilizzare per i casi di impostazione del convertitore di tipi.</summary>
        <returns>Gestore da utilizzare per i casi di impostazione del convertitore di tipi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>. È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato. Se è disponibile un valore, verrà restituito `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve essere serializzato con una modalità che rimuove lo spazio vuoto circostante.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve essere serializzato con una modalità che rimuove lo spazio vuoto circostante; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.  
  
 L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>. È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato. Se è disponibile un valore, verrà restituito `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con contiene un vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.TypeConverter%2A>.  
  
 L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.ComponentModel.TypeConverterAttribute>. Inoltre è possibile controllare l'implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato. Include anche una logica speciale per la conversione predefinito delle enumerazioni, tipi valore comuni e generics. Se è disponibile un valore, verrà restituito `null`.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.TypeConverter%2A> usare una logica diversa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.UnderlyingType%2A>.  
  
 L'implementazione predefinita restituisce un campo interno. Tale campo viene inizializzato in genere durante la costruzione e il relativo valore è basato su quale costruttore è stato chiamato e le informazioni fornite.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.UnderlyingType%2A> usare una logica diversa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dall'alto in basso è una metafora che simula il comportamento del processore XAML durante la creazione dell'oggetto grafico. Quando compilato dall'alto in basso, viene creata un'istanza di un tipo associato al padre, e ha impostato le relative proprietà. Costruzione dall'alto in basso evita di richiamare i gestori di proprietà modificata più volte. Tale gestione si riflette l'oggetto grafico e quindi elimina più chiamate del gestore e offre un'ottimizzazione delle prestazioni per l'avvio dell'oggetto grafico.  
  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.  
  
 L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.UsableDuringInitializationAttribute>. È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato. Se è disponibile un valore, verrà restituito `false`.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> usare una logica diversa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> contenente un vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato tramite chiamate a <xref:System.Xaml.XamlType.ValueSerializer%2A>.  
  
 L'implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.ValueSerializerAttribute>. È possibile inoltre verificare <xref:System.Xaml.XamlType.BaseType%2A> per l'attributo se non viene trovato alcun attributo sul tipo sottostante immediato. Include anche una logica speciale per la serializzazione predefinita di enumerazioni, tipi valore comuni o i generics. Se è disponibile un valore, verrà restituito `null`.  
  
 Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlType.ValueSerializer%2A> usare una logica diversa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che fornisce le informazioni sul tipo per l'oggetto <see langword="ProvideValue" /> restituito dell'oggetto <see cref="T:System.Xaml.XamlType" /> se rappresenta un'estensione di markup.</summary>
        <value>Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo restituito per l'utilizzo dell'estensione di markup; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un'estensione di markup.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è applicabile solo se questa <xref:System.Xaml.XamlType> rappresenta un'estensione di markup (`x:MarkupExtension` è incluso nell'elenco di tipi assegnabili).  
  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome della stringa del tipo rappresentato dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Nome della stringa del tipo XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è in genere Ricava il nome dello schema costruito (per il <xref:System.Xaml.XamlType.%23ctor%2A> firma), o il nome del <xref:System.Type>, se viene costruito usando il costruttore pertinente del sistema di tipi CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
        <param name="xamlType2">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
        <summary>Determina se due oggetti <see cref="T:System.Xaml.XamlType" /> specificati hanno lo stesso valore.</summary>
        <returns>
          <see langword="true" /> se il valore di <paramref name="xamlType1" /> è uguale al valore di <paramref name="xamlType2" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
        <param name="xamlType2">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
        <summary>Determina se due oggetti <see cref="T:System.Xaml.XamlType" /> specificati hanno valori diversi.</summary>
        <returns>
          <see langword="true" /> se il valore del parametro <paramref name="xamlType1" /> è diverso dal valore del parametro <paramref name="xamlType2" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il singolo spazio dei nomi XAML, ovvero lo spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Identificatore in formato di stringa dello spazio dei nomi XAML primario per il tipo XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa implementazione fornisce lo stesso valore alla chiamata al metodo <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> e quindi per ottenere la stringa del primo valore dal set enumerabile restituito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> attivo per l'elaborazione dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> attivo per l'elaborazione dell'oggetto <see cref="T:System.Xaml.XamlType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlSchemaContext> è una voce di parametro obbligatorio quando si costruisce un <xref:System.Xaml.XamlType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlType> implementazione di <xref:System.Object.ToString%2A> restituisce il <xref:System.Xaml.XamlType.Name%2A> proprietà del <xref:System.Xaml.XamlType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> utilizza per la serializzazione un comportamento di gestione degli spazi vuoti che rimuove lo spazio vuoto circostante nel contenuto.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che utilizza la rimozione degli spazi vuoti; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un elenco di argomenti di tipo per i casi in cui l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo generico.</summary>
        <value>Elenco di argomenti di tipo; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un tipo generico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esistono alcuni scenari per un <xref:System.Xaml.XamlType> in cui la chiamata di <xref:System.Xaml.XamlType.TypeArguments%2A> parametro restituisce un elenco in cui i tipi sono ancora aperti. In questo caso, uno o più del valore restituito <xref:System.Xaml.XamlType> valori sono associati i valori segnaposto per <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, ad esempio `T`, per rappresentare che il tipo generico sia ancora aperto. Questo scenario può verificarsi se si verifica una <xref:System.Xaml.XamlType> da una chiamata a <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, anziché da un'implementazione del reader XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupTypeConverter%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupTypeConverter%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è usare la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupValueSerializer%2A> esegue l'override in <xref:System.Xaml.XamlType> classi derivate. Per altre informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupValueSerializer%2A> su questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>