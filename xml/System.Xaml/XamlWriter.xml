<Type Name="XamlWriter" FullName="System.Xaml.XamlWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97ff37111147273d0fa14f587014ff90f0e4de45" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39995014" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XamlWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlWriter abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XamlWriter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="29059-101">Fornisce l'implementazione predefinita e le definizioni delle classi di base per un writer XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="29059-101">Provides default implementation and base class definitions for a XAML writer.</span>
      </span>
      <span data-ttu-id="29059-102">Non si tratta di un writer XAML predefinito di lavoro; è necessario derivare da <see cref="T:System.Xaml.XamlWriter" /> e implementarne i membri astratti o utilizzare una classe derivata <see cref="T:System.Xaml.XamlWriter" /> esistente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="29059-102">This is not a working default XAML writer; you must either derive from <see cref="T:System.Xaml.XamlWriter" /> and implement its abstract members, or use an existing <see cref="T:System.Xaml.XamlWriter" /> derived class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29059-103">I due pratici più importanti classi derivate di <xref:System.Xaml.XamlWriter> sono le <xref:System.Xaml.XamlXmlWriter> e <xref:System.Xaml.XamlObjectWriter> classi, come la seguente procedura illustra:</span><span class="sxs-lookup"><span data-stu-id="29059-103">The two most relevant practical derived classes of <xref:System.Xaml.XamlWriter> are the <xref:System.Xaml.XamlXmlWriter> and <xref:System.Xaml.XamlObjectWriter> classes, as the following details explain:</span></span>  
  
-   <span data-ttu-id="29059-104"><xref:System.Xaml.XamlXmlWriter> Elabora un set di nodi XAML e produce un file di testo XML.</span><span class="sxs-lookup"><span data-stu-id="29059-104"><xref:System.Xaml.XamlXmlWriter> processes a XAML node set and produces an XML text file.</span></span> <span data-ttu-id="29059-105">Questa classe può essere utilizzata per la serializzazione o come parte della funzione di uno strumento che funziona con la rappresentazione in memoria di XAML e produce l'output del file XAML.</span><span class="sxs-lookup"><span data-stu-id="29059-105">This class might be used for serialization or as part of the function of a tool that works with in-memory representation of XAML and produces XAML file output.</span></span>  
  
-   <span data-ttu-id="29059-106"><xref:System.Xaml.XamlObjectWriter> Elabora un set di nodi XAML e produce un oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="29059-106"><xref:System.Xaml.XamlObjectWriter> processes a XAML node set and produces an object graph.</span></span> <span data-ttu-id="29059-107">Questa classe può essere utilizzata come parte di una personalizzazione parziale o completa del parser XAML della tecnologia.</span><span class="sxs-lookup"><span data-stu-id="29059-107">This class might be used as part of a full or partial customization of a technology's XAML parser.</span></span>  
  
 <span data-ttu-id="29059-108"><xref:System.Xaml.XamlWriterSettings> è una classe per le impostazioni utilizzate da un <xref:System.Xaml.XamlWriter>; tuttavia, per impostazione predefinita, il <xref:System.Xaml.XamlWriterSettings> classe non contiene impostazioni specifiche.</span><span class="sxs-lookup"><span data-stu-id="29059-108"><xref:System.Xaml.XamlWriterSettings> is a class for settings that are used by a <xref:System.Xaml.XamlWriter>; however, by default, the <xref:System.Xaml.XamlWriterSettings> class does not hold any specific settings.</span></span> <span data-ttu-id="29059-109">Il <xref:System.Xaml.XamlWriter> costruttore di base non utilizza questa classe di impostazioni come argomento e neppure da qualsiasi altro <xref:System.Xaml.XamlWriter> membro.</span><span class="sxs-lookup"><span data-stu-id="29059-109">The <xref:System.Xaml.XamlWriter> base constructor does not use this settings class as an argument, nor does any other <xref:System.Xaml.XamlWriter> member.</span></span> <span data-ttu-id="29059-110">Al contrario, il <xref:System.Xaml.XamlXmlWriter> e <xref:System.Xaml.XamlObjectWriter> classi includono le proprie classi di impostazioni come argomenti di costruzione.</span><span class="sxs-lookup"><span data-stu-id="29059-110">Instead, the <xref:System.Xaml.XamlXmlWriter> and <xref:System.Xaml.XamlObjectWriter> classes include their own settings classes as construction arguments.</span></span> <span data-ttu-id="29059-111">Le classi di queste impostazioni vengono <xref:System.Xaml.XamlXmlWriterSettings> e <xref:System.Xaml.XamlObjectWriterSettings>.</span><span class="sxs-lookup"><span data-stu-id="29059-111">These settings classes are <xref:System.Xaml.XamlXmlWriterSettings> and <xref:System.Xaml.XamlObjectWriterSettings>.</span></span> <span data-ttu-id="29059-112">Le classi di impostazioni definiscono i valori effettivi delle impostazioni e si basano <xref:System.Xaml.XamlWriterSettings>, in modo da poter usare il <xref:System.Xaml.XamlWriterSettings> funzionalità di tipo merge.</span><span class="sxs-lookup"><span data-stu-id="29059-112">The settings classes define actual settings values and are based on <xref:System.Xaml.XamlWriterSettings>, so that they can use the <xref:System.Xaml.XamlWriterSettings> merge feature.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29059-113">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="xamlWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29059-114">Chiude l'oggetto writer XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-114">Closes the XAML writer object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29059-115">Nell'implementazione di base, la chiamata <xref:System.Xaml.XamlWriter.Close%2A> chiama il <xref:System.Xaml.XamlWriter.Dispose%2A> metodo con il `isDisposing` parametro come `true`.</span><span class="sxs-lookup"><span data-stu-id="29059-115">In the base implementation, calling <xref:System.Xaml.XamlWriter.Close%2A> calls the <xref:System.Xaml.XamlWriter.Dispose%2A> method with the `isDisposing` parameter as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xamlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="29059-116">
            <see langword="true" /> per rilasciare le risorse gestite; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-116">
              <see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29059-117">Rilascia le risorse non gestite usate da <see cref="T:System.Xaml.XamlWriter" /> e, facoltativamente, le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-117">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29059-118">È necessario chiamare la classe di base per ottenere <xref:System.Xaml.XamlWriter.IsDisposed%2A>  =  `true`.</span><span class="sxs-lookup"><span data-stu-id="29059-118">You must call the base class to get <xref:System.Xaml.XamlWriter.IsDisposed%2A> = `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlWriter.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Xaml.XamlWriter.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29059-119">Ottiene un valore che indica se <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> è stato chiamato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-119">Gets whether <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> has been called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29059-120">
            <see langword="true" /> se <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> è stato chiamato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-120">
              <see langword="true" /> if <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> has been called; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29059-121">Quando implementato in una classe derivata, ottiene o imposta il contesto dello schema XAML attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-121">When implemented in a derived class, gets the active XAML schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29059-122">Contesto dello schema XAML attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-122">The active XAML schema context.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29059-123">Vedere <see cref="M:System.IDisposable.Dispose" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-123">See <see cref="M:System.IDisposable.Dispose" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public abstract void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndMember();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndMember : unit -&gt; unit" Usage="xamlWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29059-124">Quando implementato in una classe derivata, genera la rappresentazione di un nodo membro finale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-124">When implemented in a derived class, produces the representation of an end member node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public abstract void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndObject();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndObject : unit -&gt; unit" Usage="xamlWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29059-125">Quando implementato in una classe derivata, genera la rappresentazione di un nodo oggetto finale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-125">When implemented in a derived class, produces the representation of an end object node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public abstract void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteGetObject();" />
      <MemberSignature Language="F#" Value="abstract member WriteGetObject : unit -&gt; unit" Usage="xamlWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29059-126">Quando implementato in una classe derivata, genera un oggetto per i casi in cui l'oggetto in questione è un valore predefinito o un valore implicito della proprietà da impostare, anziché da specificare come valore dell'oggetto discreto nel set di nodi XAML di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-126">When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public abstract void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="abstract member WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">
          <span data-ttu-id="29059-127">Dichiarazione dello spazio dei nomi da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-127">The namespace declaration to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29059-128">Quando implementato in una classe derivata, scrive un nodo dichiarazione dello spazio dei nomi XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-128">When implemented in a derived class, writes a XAML namespace declaration node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public void WriteNode (System.Xaml.XamlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNode(class System.Xaml.XamlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNode (reader As XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNode(System::Xaml::XamlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteNode : System.Xaml.XamlReader -&gt; unit" Usage="xamlWriter.WriteNode reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="29059-129">Reader da utilizzare per la determinazione del nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-129">The reader to use for node determination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29059-130">Esegue il passaggio in base al tipo di nodo dal reader XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) e chiama il metodo <see langword="Write" /> pertinente per l'implementazione del writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-130">Performs switching based on node type from the XAML reader (<see cref="P:System.Xaml.XamlReader.NodeType" />) and calls the relevant <see langword="Write" /> method for the writer implementation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="notes-for-inheritors"></a><span data-ttu-id="29059-131">Note per gli eredi</span><span class="sxs-lookup"><span data-stu-id="29059-131">Notes for Inheritors</span></span>  
 <span data-ttu-id="29059-132">Il <xref:System.Xaml.XamlWriter.WriteNode%2A> metodo non è un metodo virtuale perché contiene implementazione pratica per tutte esistenti <xref:System.Xaml.XamlNodeType> valori.</span><span class="sxs-lookup"><span data-stu-id="29059-132">The <xref:System.Xaml.XamlWriter.WriteNode%2A> method is not a virtual method because it has practical implementation for all existing <xref:System.Xaml.XamlNodeType> values.</span></span> <span data-ttu-id="29059-133">In base <xref:System.Xaml.XamlNodeType>, <xref:System.Xaml.XamlWriter.WriteNode%2A> chiama il `Write` membri virtuali dedicate a tipi di nodo particolare.</span><span class="sxs-lookup"><span data-stu-id="29059-133">Based on <xref:System.Xaml.XamlNodeType>, <xref:System.Xaml.XamlWriter.WriteNode%2A> calls into the `Write` virtual members that are dedicated to particular node types.</span></span>  
  
 <span data-ttu-id="29059-134">Se si dispone di uno scenario avanzato di scrittura XAML che si espande il sistema di tipi XAML e il concetto di flusso di nodi XAML in modo che i nuovi tipi di nodo sono definiti, non utilizzare <xref:System.Xaml.XamlWriter.WriteNode%2A> chiama la logica.</span><span class="sxs-lookup"><span data-stu-id="29059-134">If you have an advanced XAML writing scenario that expands the XAML type system and XAML node stream concept so that new node types are defined, do not use <xref:System.Xaml.XamlWriter.WriteNode%2A> calls in your logic.</span></span> <span data-ttu-id="29059-135">È invece necessario fornire alternativa personalizzata per la logica di commutazione-tipo di nodo nella classe o di override virtuali.</span><span class="sxs-lookup"><span data-stu-id="29059-135">You must instead provide your own alternative for node-type switching logic in the class or in virtual overrides.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29059-136">
            <paramref name="reader" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-136">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="29059-137">L'implementazione predefinita ha incontrato un oggetto <see cref="T:System.Xaml.XamlNodeType" /> non presente nell'enumerazione predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-137">The default implementation encountered a <see cref="T:System.Xaml.XamlNodeType" /> that is not in the default enumeration.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public abstract void WriteStartMember (System.Xaml.XamlMember xamlMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartMember(class System.Xaml.XamlMember xamlMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartMember(System::Xaml::XamlMember ^ xamlMember);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlWriter.WriteStartMember xamlMember" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember">
          <span data-ttu-id="29059-138">Nodo membro da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-138">The member node to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29059-139">Quando implementato in una classe derivata, scrive la rappresentazione di un nodo membro iniziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-139">When implemented in a derived class, writes the representation of a start member node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public abstract void WriteStartObject (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartObject(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartObject (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartObject(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlWriter.WriteStartObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="29059-140">Tipo XAML dell'oggetto da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-140">The XAML type of the object to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29059-141">Quando implementato in una classe derivata, scrive la rappresentazione di un nodo oggetto iniziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-141">When implemented in a derived class, writes the representation of a start object node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public abstract void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : obj -&gt; unit" Usage="xamlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="29059-142">Valore da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-142">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29059-143">Quando implementato in una classe derivata, scrive un nodo valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29059-143">When implemented in a derived class, writes a value node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>