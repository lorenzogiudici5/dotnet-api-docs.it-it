<Type Name="IAttachedPropertyStore" FullName="System.Xaml.IAttachedPropertyStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78ca066c1c412be8d590b5df199ea1f34c01700e" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39787043" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAttachedPropertyStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttachedPropertyStore" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAttachedPropertyStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttachedPropertyStore" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttachedPropertyStore" />
  <TypeSignature Language="F#" Value="type IAttachedPropertyStore = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2f68d-101">Rappresenta un archivio di membri associabili per un oggetto in cui vengono impostati i membri associabili.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f68d-101">Represents an attachable member store for an object where attachable members are set.</span>
      </span>
      <span data-ttu-id="2f68d-102">È possibile fare riferimento a questo archivio di membri associabili con un oggetto <see cref="T:System.Xaml.AttachablePropertyServices" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f68d-102">This attachable member store can then be referenced with <see cref="T:System.Xaml.AttachablePropertyServices" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f68d-103">Un membro associabile viene in genere implementato e utilizzato come proprietà associabile.</span><span class="sxs-lookup"><span data-stu-id="2f68d-103">An attachable member is typically implemented and used as an attachable property.</span></span> <span data-ttu-id="2f68d-104">Il termine "membro associabile" offre la possibilità che una tecnologia definisce anche un sistema per eventi associabili.</span><span class="sxs-lookup"><span data-stu-id="2f68d-104">The term "attachable member" provides for the possibility that a technology also defines a system for attachable events.</span></span> <span data-ttu-id="2f68d-105">Come un elemento in un archivio delle proprietà, un evento associabile archivia un riferimento al gestore assegnato tramite l'utilizzo del membro associabile.</span><span class="sxs-lookup"><span data-stu-id="2f68d-105">As an item in a property store, an attachable event stores a reference to the handler that is assigned through attachable member usage.</span></span> <span data-ttu-id="2f68d-106">Un evento associabile in XAML è possibile usare lo stesso archivio come la proprietà associabile, anche se l'evento associabile non è effettivamente una proprietà di sistema dei tipi sottostante o perché viene considerata in uso reali.</span><span class="sxs-lookup"><span data-stu-id="2f68d-106">An attachable event in XAML can use the same store as the attachable properties do, even if the attachable event is not truly a property to the underlying type system or as it is considered in real-world use.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
    <altmember cref="T:System.Xaml.AttachablePropertyServices" />
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public void CopyPropertiesTo (System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPropertiesTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPropertiesTo (array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyPropertiesTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyPropertiesTo : System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier, obj&gt;[] * int -&gt; unit" Usage="iAttachedPropertyStore.CopyPropertiesTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2f68d-107">Matrice di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-107">The destination array.</span>
          </span>
          <span data-ttu-id="2f68d-108">Si tratta di una matrice generica, che deve essere passata non dimensionata e che deve disporre di componenti di <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e <see langword="object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-108">The array is a generic array, should be passed undimensioned, and should have components of <see cref="T:System.Xaml.AttachableMemberIdentifier" /> and <see langword="object" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2f68d-109">Indice di origine in cui deve iniziare la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-109">The source index where copying should begin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f68d-110">Copia tutte le coppie membro associabile/valore da questo archivio di membri associabili in una matrice di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-110">Copies all attachable member/value pairs from this attachable member store into a destination array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PropertyCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyCount : int" Usage="System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f68d-111">Ottiene il numero delle voci dei membri associabili in questo archivio di membri associabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-111">Gets the count of the attachable member entries in this attachable member store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f68d-112">Numero intero di voci nell'archivio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-112">The integer count of entries in the store.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : System.Xaml.AttachableMemberIdentifier -&gt; bool" Usage="iAttachedPropertyStore.RemoveProperty attachableMemberIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="2f68d-113">Identificatore di sistema dei tipi XAML per la voce del membro associabile da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-113">The XAML type system identifier for the attachable member entry to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f68d-114">Rimuove la voce per il membro associabile specificato da questo archivio di membri associabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-114">Removes the entry for the specified attachable member from this attachable member store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f68d-115">
            <see langword="true" /> se nell'archivio è stata trovata e rimossa una voce del membro associabile per <paramref name="attachableMemberIdentifier" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-115">
              <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : System.Xaml.AttachableMemberIdentifier * obj -&gt; unit" Usage="iAttachedPropertyStore.SetProperty (attachableMemberIdentifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="2f68d-116">Identificatore di sistema dei tipi XAML per la voce del membro associabile da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-116">The XAML type system identifier for the attachable member entry to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2f68d-117">Il valore da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-117">The value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f68d-118">Imposta un valore per il membro associabile specificato nell'archivio specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-118">Sets a value for the specified attachable member in the specified store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f68d-119">Un'implementazione non deve generare un'eccezione se il membro associabile specificato esiste già.</span><span class="sxs-lookup"><span data-stu-id="2f68d-119">An implementation should not throw an exception if the specific attachable member already exists.</span></span> <span data-ttu-id="2f68d-120">Se esiste già un membro, l'implementazione deve sovrascrivere eventuali valori esistenti con `value`.</span><span class="sxs-lookup"><span data-stu-id="2f68d-120">If a member already exists, the implementation should overwrite any existing value with `value`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetProperty : System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="iAttachedPropertyStore.TryGetProperty (attachableMemberIdentifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="2f68d-121">Identificatore di sistema dei tipi XAML per la voce del membro associabile da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-121">The XAML type system identifier for the attachable member entry to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2f68d-122">Parametro out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-122">Out parameter.</span>
          </span>
          <span data-ttu-id="2f68d-123">Quando termina, il metodo contiene l'oggetto di destinazione per il valore se <c>attachableMemberIdentifier</c> esiste nell'archivio e ha un valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-123">When this method returns, contains the destination object for the value if <c>attachableMemberIdentifier</c> exists in the store and has a value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f68d-124">Tenta di ottenere un valore per il membro associabile specificato nell'archivio specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-124">Attempts to get a value for the specified attachable member in the specified store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f68d-125">
            <see langword="true" /> se nell'archivio è stata trovata una voce del membro associabile per <paramref name="attachableMemberIdentifier" /> e un valore è stato inviato a <paramref name="value" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f68d-125">
              <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f68d-126">Un'implementazione non deve generare un'eccezione se il membro associabile specificato non si trova nell'archivio.</span><span class="sxs-lookup"><span data-stu-id="2f68d-126">An implementation should not throw an exception if the specific attachable member is not located in the store.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>