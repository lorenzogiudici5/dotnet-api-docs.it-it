<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d67227721dd773132217fd6c463e5161f2b6ad4a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39845137" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <TypeSignature Language="F#" Value="type XamlObjectWriter = class&#xA;    inherit XamlWriter&#xA;    interface IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Crea un oggetto grafico da un flusso del nodo XAML di origine.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Write` metodi di <xref:System.Xaml.XamlObjectWriter> implementare un modello in modo che il <xref:System.Xaml.XamlObjectWriter> utilizza il <xref:System.Xaml.XamlWriter> definito dal <xref:System.Xaml.XamlWriter.WriteNode%2A> (metodo). <xref:System.Xaml.XamlWriter.WriteNode%2A> per la logica attiva tra la `Write` metodi, a seconda del nodo in cui tipo è in corrispondenza della posizione corrente nel lettore.  
  
## <a name="scope"></a>Ambito  
 Oggetto <xref:System.Xaml.XamlObjectWriter> presenta un concetto di ambito; ovvero, il <xref:System.Xaml.XamlObjectWriter> mantiene un punto di riferimento nel proprio oggetto grafico di output concettuale. Per un determinato ambito, alcune operazioni potrebbero essere valido o non valido o produrre un risultato senza operazioni. Ad esempio, se si chiama <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> per scrivere le direttive per l'inizializzazione su un oggetto già esistente come un'istanza, l'implementazione predefinita genera un'eccezione.  
  
 Una tecnica possibili per il rilevamento dell'ambito in un oggetto personalizzato <xref:System.Xaml.XamlObjectWriter> è sufficiente allineare le azioni del nodo con una classe stack o il frame. Lo stack o il frame può tenere traccia di push e pull per ogni livello di profondità del modello a oggetti che è entrata o uscita mentre il <xref:System.Xaml.XamlObjectWriter> scrive l'oggetto grafico.  
  
## <a name="callbacks"></a>Callback  
 Per il supporto di livello intermedio e avanzato <xref:System.Xaml.XamlObjectWriter> scenari, il meccanismo di scrittura di un oggetto grafico fornisce callback punti di ingresso che si verificano quando un <xref:System.Xaml.XamlObjectWriter> esegue il commit o sta per eseguire il commit determinate azioni. Alcuni di questi callback sono abilitati nelle impostazioni e non sono specifiche per il tipo di oggetto o il membro da scrivere; informazioni relative al callback, tuttavia, spesso è disponibile nel contesto o nell'evento è dati che viene inviati tramite il callback. Di seguito è riportato un elenco di richiamate rilevanti:  
  
-   Il callback che viene dichiarato da <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> viene richiamato quando l'ambito passa a un nuovo oggetto e nella <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> fase della durata di ogni oggetto creato.  
  
-   Il callback che viene dichiarato da <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> viene richiamato quando l'ambito passa a un nuovo oggetto e nella <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> fase della durata di ogni oggetto creato.  
  
-   Il callback che viene dichiarato da <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> viene richiamato quando l'ambito viene avviato in un oggetto e si verifica quando il primo <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> viene effettuato una chiamata a tale ambito oggetto tuttavia non è ancora stato eseguito il commit.  
  
-   Il callback che viene dichiarato da <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> viene richiamato quando l'ambito viene avviato in un oggetto e si verifica quando il <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> viene effettuato una chiamata a tale ambito oggetto tuttavia non è ancora stato eseguito il commit.  
  
-   Il callback che viene dichiarato da <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> viene richiamato quando <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> viene chiamato.  
  
## <a name="writing-dictionary-keys"></a>Chiavi del dizionario la scrittura  
 L'implementazione predefinita di <xref:System.Xaml.XamlObjectWriter> supporta la conversione del tipo in base ai vincoli di un <xref:System.Collections.Generic.Dictionary%602> prima il dizionario contenuto viene aggiunto all'oggetto grafico. In questo modo, un dizionario generico può essere immesso in fase di esecuzione dagli oggetti e può corrispondere a generica rilevante `Add` e il comportamento dell'indicizzatore. Tuttavia, come implementato per la base <xref:System.Xaml.XamlObjectWriter>, questa funzionalità esiste solo per la creazione dell'oggetto grafico dalla base <xref:System.Collections.Generic.Dictionary%602> classe e non per le classi derivate di <xref:System.Collections.Generic.Dictionary%602>.  
  
## <a name="checks-for-disposed"></a>Verifica se eliminato  
 I writer XAML possono essere potenzialmente usati per le operazioni posticipate o in cui viene eseguita una chiamata da un'istanza del writer XAML che è stata eliminata nel frattempo. Varie API di <xref:System.Xaml.XamlObjectWriter> potrebbe generare <xref:System.ObjectDisposedException> in questi casi.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Contesto dello schema XAML condiviso con il reader XAML che fornisce i nodi per la scrittura.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriter" /> usando il contesto dello schema XAML usato da un oggetto <see cref="T:System.Xaml.XamlReader" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaContext" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectWriterSettings -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter (schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Contesto dello schema XAML condiviso con il reader XAML che fornisce i nodi per la scrittura.</param>
        <param name="settings">Oggetto impostazioni che specifica alcune opzioni per il comportamento di <see cref="T:System.Xaml.XamlObjectWriter" /> e per l'output.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriter" /> utilizzando il contesto che è utilizzato da un oggetto <see cref="T:System.Xaml.XamlReader" /> e le relative impostazioni.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaContext" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlObjectWriter.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reimposta tutti i possibili frame e cancella l'oggetto grafico.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlObjectWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare le risorse gestite; in caso contrario, <see langword="false" />.</param>
        <summary>Rilascia le risorse non gestite utilizzate dall'oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> e facoltativamente rilascia le risorse gestite.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterBeginInit : obj -&gt; unit&#xA;override this.OnAfterBeginInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterBeginInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da segnalare. L'oggetto inserito nell'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando viene richiamato il gestore.</param>
        <summary>Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterEndInit : obj -&gt; unit&#xA;override this.OnAfterEndInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterEndInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da segnalare. Il valore viene inserito nell'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando si richiama il gestore.</param>
        <summary>Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterProperties : obj -&gt; unit&#xA;override this.OnAfterProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da segnalare. Viene inserito nell'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando viene richiamato il gestore.</param>
        <summary>Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> a cui viene fatto riferimento che è associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeProperties : obj -&gt; unit&#xA;override this.OnBeforeProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnBeforeProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Valore da passare all'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando viene richiamato il gestore.</param>
        <summary>Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> a cui viene fatto riferimento che è associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool&#xA;override this.OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool" Usage="xamlObjectWriter.OnSetValue (eventSender, member, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender">Oggetto da segnalare come origine al gestore.</param>
        <param name="member">Nome della proprietà da impostare, che viene passata al gestore come parte di <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
        <param name="value">Valore da fornire per la proprietà denominata da <c>property</c>. Il valore viene passato al gestore come parte di <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
        <summary>Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> a cui viene fatto riferimento che è associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per questo writer, a condizione che <paramref name="handled" /> nei dati dell'evento <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> non sia <see langword="true" />.</summary>
        <returns>Valore booleano impostato da un gestore associato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il `SetValue` operazione per questo writer XAML dispone di un gestore associato (una <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> dichiarato in <xref:System.Xaml.XamlObjectWriterSettings>), questo metodo crea nuovi <xref:System.Windows.Markup.XamlSetValueEventArgs> e li passa al gestore. Il valore restituito viene impostato tramite la lettura di <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> valore passato tramite i dati dell'evento. Se è presente alcun gestore e questo metodo viene richiamato, la chiamata restituisce `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Xaml.XamlObjectWriter.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ultimo oggetto scritto. In genere viene chiamato solo quando il flusso del nodo è alla fine e l'oggetto grafico è stato completato.</summary>
        <value>Ultimo oggetto scritto o <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'utilizzo più comune di <xref:System.Xaml.XamlObjectWriter.Result%2A> viene solitamente chiamato solo quando è noto sia alla fine del flusso di nodi e l'oggetto grafico è stato completato. In caso contrario, l'oggetto grafico è probabile che sia incompleto e non è utile per la maggior parte degli scenari di platform.  
  
 <xref:System.Xaml.XamlObjectWriter.Result%2A> in genere contiene solo un valore non null se viene chiamato immediatamente dopo una chiamata a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, e se l'ambito corrente è nel membro in cui l'oggetto fornisce un valore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNameScope : System.Windows.Markup.INameScope" Usage="System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il servizio <see cref="T:System.Windows.Markup.INameScope" /> che gestisce il NameScope XAML per la radice del nodo corrente del writer di oggetti XAML.</summary>
        <value>Il servizio <see cref="T:System.Windows.Markup.INameScope" /> che gestisce il namescope XAML per la radice corrente del writer di oggetti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa proprietà può provenire dal contesto di scrittura dell'oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il contesto dello schema XAML attivo.</summary>
        <value>Contesto dello schema XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Contesto dello schema XAML è una fonte di informazioni necessarie per gli scenari più pratici di scrittura di oggetti. Il contesto dello schema XAML influisce sulla ricerca del tipo per i tipi di supporto e contiene informazioni sugli assembly in cui sono presenti tipi di supporto. Contesto dello schema XAML predefinito si basa sulle regole di mapping dei tipi CLR. Framework offrono in genere i propri contesto dello schema XAML modo da assicurare che i meccanismi di caricamento di assembly corrispondano ai modelli di applicazione del framework programmazione amd.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="abstract member SetLineInfo : int * int -&gt; unit&#xA;override this.SetLineInfo : int * int -&gt; unit" Usage="xamlObjectWriter.SetLineInfo (lineNumber, linePosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">Numero di riga del reader.</param>
        <param name="linePosition">Posizione di riga del reader.</param>
        <summary>Implementa <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> e fornisce le informazioni sulla riga per le eccezioni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo di servizio non deve essere chiamato direttamente dal codice. Tuttavia, se si sta creando una classe derivata da <xref:System.Xaml.XamlObjectWriter> e si prevede di segnalare un contesto in cui non sono disponibili i numeri di riga o questo metodo non è utile, può essere chiamato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShouldProvideLineInfo : bool" Usage="System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che segnala se un servizio di informazioni sulla riga deve fornire i valori e di conseguenza chiamare anche il metodo <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />, quando necessario.</summary>
        <value>
          <see langword="true" /> se le informazioni sulla riga vengono utilizzate dal writer; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa implementazione restituisce sempre `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude l'ambito del membro corrente e può scrivere il valore dell'ambito del membro mentre viene chiuso. Il nuovo ambito diventa l'ambito dell'oggetto padre del membro.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Impossibile creare valore del membro da un nodo di valori incontrato tra questa chiamata e un precedente <see langword="StartMember" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude l'ambito dell'oggetto corrente nel writer. Il nuovo ambito dell'oggetto diventa l'ambito del membro padre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'oggetto `EndObject` ambito posizione chiude l'oggetto radice, il nuovo ambito dell'oggetto diventa l'ambito radice.  
  
 La chiamata a <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> potrebbe non ancora stato creato l'oggetto perché un membro dell'oggetto potrebbe essere un percorso di inizializzazione necessari, ad esempio il testo di inizializzazione o i parametri di inizializzazione. In questi casi, la chiamata a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> effettivamente scrive l'oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scrive l'oggetto <see langword="StartObject" /> concettuale nell'oggetto grafico quando l'oggetto specificato è un valore predefinito o implicito della proprietà padre. Il valore implicito viene da informazioni ottenute dal contesto dello schema XAML e da informazioni sul tipo di supporto, anziché essere specificato come valore dell'oggetto nel set di nodi XAML di input.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La differenza tra la scrittura con <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> nonché di scrivere con <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> possono essere visualizzati nell'oggetto grafico risultante. <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> non ne crea un'istanza di un tipo in quanto il <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API è disponibile alcuna informazione per informare l'oggetto grafico di ciò che occorre costruire. Al contrario, l'oggetto è stato creato quando la proprietà padre è stata inizializzata. in modo che un <xref:System.Xaml.XamlObjectWriter> non è necessario crearlo. Al contrario, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifica che un'istanza di tale tipo deve essere costruita e inserita un oggetto grafico.  
  
 Se si ritiene che del flusso di nodi XAML come una serie di fotogrammi, un <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> è bilanciato da una <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> chiamare. Pertanto, il numero di <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> chiamate devono essere uguale al numero di <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> chiamate come parte di una valutazione completa la scrittura di oggetti del flusso di nodi XAML.  
  
 Concettuale `StartObject` posizionare per un oggetto implicito nell'oggetto grafico è necessario perché anche se il valore dell'oggetto stesso è un'impostazione predefinita implicita, tale oggetto potrebbe avere ancora i membri che devono essere scritti in base sul flusso di nodi XAML. Uno scenario tipico in cui in questo caso è quando <xref:System.Xaml.XamlObjectWriter> scrive nodi membro per una proprietà di raccolta e l'inizializzazione della raccolta è implicito per la creazione dell'oggetto a cui appartiene la proprietà di raccolta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlObjectWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">Dichiarazione dello spazio dei nomi da scrivere.</param>
        <summary>Definisce una dichiarazione dello spazio dei nomi che si applica all'ambito dell'oggetto o all'ambito del membro successivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una dichiarazione dello spazio dei nomi può essere scritti se l'ambito corrente è un ambito radice, l'ambito dell'oggetto o ambito del membro. Tuttavia <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> può essere chiamato solo immediatamente prima della chiamata a uno dei seguenti: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, o <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>. Il consecutivi <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> consiste nella scrittura di più dichiarazioni dello spazio dei nomi per lo stesso nodo. Infine, uno <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> o <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> deve essere chiamato.  
  
 <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> non usa un' `Start` / `End` metafora. Anche se uno spazio dei nomi XAML dispone di membri nel senso rappresentazione CLR, i membri sono noti e non è necessario essere rappresentato come un tipo speciale di <xref:System.Xaml.XamlMember> per l'estensibilità. Per accedere ai valori di una <xref:System.Xaml.NamespaceDeclaration>, è accedere ai relativi <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> e <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> proprietà.  
  
 Una dichiarazione dello spazio dei nomi può avere un <xref:System.String.Empty?displayProperty=nameWithType> valore per il prefisso. Oggetto <xref:System.String.Empty?displayProperty=nameWithType> prefisso rappresenta una dichiarazione dello spazio dei nomi XAML predefinito. Non tentare di utilizzare null per rappresentare il prefisso predefinito.  in questa API genera un'eccezione. Per ulteriori informazioni, vedere <xref:System.Xaml.NamespaceDeclaration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="namespaceDeclaration" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un componente di <paramref name="namespaceDeclaration" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException">Si è tentato di scrivere un nodo dello spazio dei nomi XAML in un ambito non valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlObjectWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">Proprietà XAML da scrivere. In genere si ottiene questo valore da un reader XAML tramite il flusso del nodo XAML intermedio.</param>
        <summary>Scrive un nuovo nodo membro nell'ambito dell'oggetto corrente e l'ambito diventa un nuovo ambito del membro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  Per guardare un <xref:System.Xaml.XamlDuplicateMemberException>, che si verifica quando la stessa proprietà XAML viene impostata due volte nel XAML di input. Nei casi più semplici, ad esempio quando la stessa proprietà è impostata nella sintassi di attributo e sintassi per elementi proprietà, è possibile visualizzare facilmente questa eccezione nel markup di input. Tuttavia, possono verificarsi casi più sofisticati che sono più difficili da individuare. Ad esempio, questa eccezione può verificarsi se si imposta una proprietà di contenuto XAML, se si prevedono le proprietà di ambiente XAML e se una proprietà consente un utilizzo associabile sia un utilizzo di istanze. Nelle fasi di debug di sviluppo, è spesso possibile individuare l'eccezione visualizzando la rappresentazione del nodo XAML intermedia che si connette il markup di lettura e la scrittura dell'oggetto grafico.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">
          <see cref="P:System.Xaml.XamlMember.IsUnknown" /> di <paramref name="property" /> è impostato su <see langword="true" />.  
  
oppure 
 <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passato che indica che il flusso del nodo XAML ha contenuto il contenuto per un oggetto che non supporta contenuto.  
  
oppure 
Si è tentato di scrivere un membro iniziale in un ambito non valido.</exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException">
          <paramref name="property" /> specifica una proprietà già impostata in modo esplicito nell'ambito dell'oggetto padre.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlObjectWriter.WriteStartObject xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Tipo da scrivere. In genere si ottiene questo valore da un reader XAML.</param>
        <summary>Scrive un nodo oggetto nell'ambito corrente e imposta l'ambito su un nuovo ambito dell'oggetto.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Elaborare un tipo <see cref="P:System.Xaml.XamlType.IsUnknown" /> e non poter creare un oggetto.  
  
oppure 
Si è tentato di scrivere un oggetto iniziale in un ambito non valido.</exception>
        <exception cref="T:System.Xaml.XamlParseException">Si è tentato di scrivere un oggetto radice quando l'oggetto radice era già fornito nelle impostazioni.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xamlType" /> è <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Se l'ambito corrente è all'interno di un insieme, dizionario o una matrice, la nuova istanza deve essere aggiunto per l'insieme, dizionario o una matrice usando la <see langword="Add" /> metodo del tipo pertinente. In caso contrario, il membro deve essere assegnato alla nuova istanza.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlObjectWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Valore da scrivere.</param>
        <summary>Scrive un valore nell'ambito del membro corrente. Se l'ambito corrente è all'interno di un oggetto insieme, dizionario o matrice, il valore deve essere aggiunto nell'insieme, nel dizionario o nella matrice.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Si è tentato di scrivere un valore in un ambito non valido.</exception>
      </Docs>
    </Member>
  </Members>
</Type>