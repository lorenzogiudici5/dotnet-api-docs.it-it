<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ca402de94a9fb4c2404a3eb885b3a1fc9d0fc4b6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="613d3-101">Crea un oggetto grafico da un flusso del nodo XAML di origine.</span>
      <span class="sxs-lookup">
        <span data-stu-id="613d3-101">Creates an object graph from a source XAML node stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="613d3-102">Il `Write` metodi di <xref:System.Xaml.XamlObjectWriter> implementano un modello in modo che il <xref:System.Xaml.XamlObjectWriter> utilizza il <xref:System.Xaml.XamlWriter> definito dal <xref:System.Xaml.XamlWriter.WriteNode%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="613d3-102">The `Write` methods of <xref:System.Xaml.XamlObjectWriter> implement a pattern so that the <xref:System.Xaml.XamlObjectWriter> uses the <xref:System.Xaml.XamlWriter> that is defined by the <xref:System.Xaml.XamlWriter.WriteNode%2A> method.</span></span> <span data-ttu-id="613d3-103"><xref:System.Xaml.XamlWriter.WriteNode%2A> Alterna la logica di `Write` metodi, a seconda di quale sia il nodo è di tipo in corrispondenza della posizione corrente nel lettore.</span><span class="sxs-lookup"><span data-stu-id="613d3-103"><xref:System.Xaml.XamlWriter.WriteNode%2A> logic switches between the `Write` methods, depending on which node type is at the current position in the reader.</span></span>  
  
## <a name="scope"></a><span data-ttu-id="613d3-104">Ambito</span><span class="sxs-lookup"><span data-stu-id="613d3-104">Scope</span></span>  
 <span data-ttu-id="613d3-105">A <xref:System.Xaml.XamlObjectWriter> presenta un concetto di ambito; ovvero, il <xref:System.Xaml.XamlObjectWriter> mantiene un punto di riferimento nel relativo oggetto grafico output concettuale.</span><span class="sxs-lookup"><span data-stu-id="613d3-105">A <xref:System.Xaml.XamlObjectWriter> has a concept of scope; that is, the <xref:System.Xaml.XamlObjectWriter> maintains a conceptual point of reference in its output object graph.</span></span> <span data-ttu-id="613d3-106">Per un particolare ambito determinate operazioni potrebbero essere valido o non valido oppure produrre un risultato senza operazioni.</span><span class="sxs-lookup"><span data-stu-id="613d3-106">For a particular scope, certain operations might be valid or invalid, or produce a no-operation result.</span></span> <span data-ttu-id="613d3-107">Ad esempio, se si chiama <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> per scrivere istruzioni per l'inizializzazione di un oggetto già presente come un'istanza, l'implementazione predefinita genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="613d3-107">For example, if you call <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.</span></span>  
  
 <span data-ttu-id="613d3-108">Una tecnica possibili per il rilevamento dell'ambito in un oggetto personalizzato <xref:System.Xaml.XamlObjectWriter> è per allineare le azioni del nodo con una classe stack o il frame.</span><span class="sxs-lookup"><span data-stu-id="613d3-108">A possible technique for tracking scope in a custom <xref:System.Xaml.XamlObjectWriter> is to align the node actions with a stack or frame class.</span></span> <span data-ttu-id="613d3-109">Lo stack o un frame può tenere traccia di push e pop per ogni livello di profondità del modello a oggetti che è attivata o disattivata mentre il <xref:System.Xaml.XamlObjectWriter> scrive l'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="613d3-109">The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <xref:System.Xaml.XamlObjectWriter> writes the object graph.</span></span>  
  
## <a name="callbacks"></a><span data-ttu-id="613d3-110">Callback</span><span class="sxs-lookup"><span data-stu-id="613d3-110">Callbacks</span></span>  
 <span data-ttu-id="613d3-111">Per il supporto di livello intermedio e avanzato <xref:System.Xaml.XamlObjectWriter> scenari, il meccanismo di scrittura di un oggetto grafico fornisce callback punti di ingresso che si verificano quando un <xref:System.Xaml.XamlObjectWriter> esegue il commit o sta per eseguire il commit di determinate azioni.</span><span class="sxs-lookup"><span data-stu-id="613d3-111">To support intermediate and advanced <xref:System.Xaml.XamlObjectWriter> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <xref:System.Xaml.XamlObjectWriter> commits or is about to commit certain actions.</span></span> <span data-ttu-id="613d3-112">Alcuni di questi callback sono abilitati nelle impostazioni e non sono specifiche per il tipo di oggetto o il membro in corso la scrittura; Tuttavia, informazioni di callback sono spesso disponibili nel contesto o nell'evento sono dati che viene inviati tramite il callback.</span><span class="sxs-lookup"><span data-stu-id="613d3-112">Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback.</span></span> <span data-ttu-id="613d3-113">Di seguito è riportato un elenco di callback rilevanti:</span><span class="sxs-lookup"><span data-stu-id="613d3-113">The following is a list of relevant callbacks:</span></span>  
  
-   <span data-ttu-id="613d3-114">Il callback che viene dichiarato da <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> viene richiamato quando l'ambito passa a un nuovo oggetto e nella <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> fase della durata di ogni oggetto creato.</span><span class="sxs-lookup"><span data-stu-id="613d3-114">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> phase of object lifetime for each created object.</span></span>  
  
-   <span data-ttu-id="613d3-115">Il callback che viene dichiarato da <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> viene richiamato quando l'ambito passa a un nuovo oggetto e nella <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> fase della durata di ogni oggetto creato.</span><span class="sxs-lookup"><span data-stu-id="613d3-115">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> phase of object lifetime for each created object.</span></span>  
  
-   <span data-ttu-id="613d3-116">Il callback che viene dichiarato da <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> viene richiamato quando l'ambito in un oggetto e si verifica quando il primo <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> chiamata a tale ambito dell'oggetto viene effettuata, ma non ancora eseguito il commit.</span><span class="sxs-lookup"><span data-stu-id="613d3-116">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> is invoked when the scope starts in an object, and occurs when the first <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> call to that object scope is made but not yet committed.</span></span>  
  
-   <span data-ttu-id="613d3-117">Il callback che viene dichiarato da <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> viene richiamato quando l'ambito in un oggetto e si verifica quando il <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> chiamata a tale ambito dell'oggetto viene effettuata, ma non ancora eseguito il commit.</span><span class="sxs-lookup"><span data-stu-id="613d3-117">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> is invoked when the scope starts in an object, and happens when the <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call to that object scope is made but not yet committed.</span></span>  
  
-   <span data-ttu-id="613d3-118">Il callback che viene dichiarato da <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> viene richiamato quando <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="613d3-118">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is invoked when <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> is called.</span></span>  
  
## <a name="writing-dictionary-keys"></a><span data-ttu-id="613d3-119">Chiavi del dizionario scrittura</span><span class="sxs-lookup"><span data-stu-id="613d3-119">Writing Dictionary Keys</span></span>  
 <span data-ttu-id="613d3-120">L'implementazione predefinita di <xref:System.Xaml.XamlObjectWriter> supporta il tipo di conversione sui vincoli di un <xref:System.Collections.Generic.Dictionary%602> prima il dizionario contenuto viene aggiunti all'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="613d3-120">The default implementation of <xref:System.Xaml.XamlObjectWriter> supports type conversion on the constraints of a <xref:System.Collections.Generic.Dictionary%602> before the dictionary contents are added to the object graph.</span></span> <span data-ttu-id="613d3-121">In questo modo, un dizionario generico può essere immesso dagli oggetti in fase di esecuzione e può far corrispondere il generico rilevante `Add` e il comportamento dell'indicizzatore.</span><span class="sxs-lookup"><span data-stu-id="613d3-121">In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic `Add` and indexer behavior.</span></span> <span data-ttu-id="613d3-122">Tuttavia, come implementato per la base <xref:System.Xaml.XamlObjectWriter>, questa funzionalità è presente solo per la creazione dell'oggetto grafico dalla base <xref:System.Collections.Generic.Dictionary%602> classe e non per le classi derivate di <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="613d3-122">However, as implemented for the base <xref:System.Xaml.XamlObjectWriter>, this capability exists only for object graph creation from the base <xref:System.Collections.Generic.Dictionary%602> class and not for derived classes of <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
## <a name="checks-for-disposed"></a><span data-ttu-id="613d3-123">Cerca eliminato</span><span class="sxs-lookup"><span data-stu-id="613d3-123">Checks for Disposed</span></span>  
 <span data-ttu-id="613d3-124">I writer XAML sono potenzialmente usati per le operazioni posticipate o in cui viene eseguita una chiamata in un'istanza del writer XAML che è stata eliminata nel frattempo.</span><span class="sxs-lookup"><span data-stu-id="613d3-124">XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim.</span></span> <span data-ttu-id="613d3-125">Alcune API di <xref:System.Xaml.XamlObjectWriter> potrebbe generare <xref:System.ObjectDisposedException> in questi casi.</span><span class="sxs-lookup"><span data-stu-id="613d3-125">Various APIs of <xref:System.Xaml.XamlObjectWriter> might throw <xref:System.ObjectDisposedException> in these cases.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="613d3-126">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-126">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">
          <span data-ttu-id="613d3-127">Contesto dello schema XAML condiviso con il reader XAML che fornisce i nodi per la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-127">A XAML schema context that is shared with the XAML reader that provides nodes for writing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-128">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriter" /> usando il contesto dello schema XAML usato da un oggetto <see cref="T:System.Xaml.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-128">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class using  the XAML schema context that is used by a <see cref="T:System.Xaml.XamlReader" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="613d3-129">
            <paramref name="schemaContext" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-129">
              <paramref name="schemaContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext">
          <span data-ttu-id="613d3-130">Contesto dello schema XAML condiviso con il reader XAML che fornisce i nodi per la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-130">A XAML schema context that is shared with the XAML reader that provides nodes for writing.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="613d3-131">Oggetto impostazioni che specifica alcune opzioni per il comportamento di <see cref="T:System.Xaml.XamlObjectWriter" /> e per l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-131">A settings object that specifies certain options for <see cref="T:System.Xaml.XamlObjectWriter" /> behavior and output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-132">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriter" /> utilizzando il contesto che è utilizzato da un oggetto <see cref="T:System.Xaml.XamlReader" /> e le relative impostazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-132">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class using the context that is used by a <see cref="T:System.Xaml.XamlReader" /> and its settings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="613d3-133">
            <paramref name="schemaContext" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-133">
              <paramref name="schemaContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="613d3-134">Reimposta tutti i possibili frame e cancella l'oggetto grafico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-134">Resets all possible frames and clears the object graph.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="613d3-135">
            <see langword="true" /> per rilasciare le risorse gestite; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-135">
              <see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-136">Rilascia le risorse non gestite utilizzate dall'oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> e facoltativamente rilascia le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-136">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlObjectWriter" />, and optionally, releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="613d3-137">Oggetto da segnalare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-137">The object to report on.</span>
          </span>
          <span data-ttu-id="613d3-138">L'oggetto inserito nell'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando viene richiamato il gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-138">The object is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-139">Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-139">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="613d3-140">Oggetto da segnalare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-140">The object to report on.</span>
          </span>
          <span data-ttu-id="613d3-141">Il valore viene inserito nell'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando si richiama il gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-141">The value  is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-142">Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-142">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="613d3-143">Oggetto da segnalare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-143">The object to report on.</span>
          </span>
          <span data-ttu-id="613d3-144">Viene inserito nell'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando viene richiamato il gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-144">This is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-145">Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> a cui viene fatto riferimento che è associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-145">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="613d3-146">Valore da passare all'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando viene richiamato il gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-146">The value to pass through <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-147">Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> a cui viene fatto riferimento che è associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-147">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender">
          <span data-ttu-id="613d3-148">Oggetto da segnalare come origine al gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-148">The object to report as the source to the handler.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="613d3-149">Nome della proprietà da impostare, che viene passata al gestore come parte di <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-149">The name of the property to set, which is passed to the handler as part of <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="613d3-150">Valore da fornire per la proprietà denominata da <c>property</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-150">The value to provide for the property that is named by <c>property</c>.</span>
          </span>
          <span data-ttu-id="613d3-151">Il valore viene passato al gestore come parte di <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-151">The value is passed to the handler as part of <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-152">Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> a cui viene fatto riferimento che è associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per questo writer, a condizione che <paramref name="handled" /> nei dati dell'evento <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> non sia <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-152">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this writer, as long as <paramref name="handled" /> in <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> event data is not <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="613d3-153">Valore booleano impostato da un gestore associato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-153">A Boolean value that is set by any associated handler; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="613d3-154">Se il `SetValue` operazione per questo writer XAML dispone di un gestore associato (un <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> è dichiarato in <xref:System.Xaml.XamlObjectWriterSettings>), questo metodo crea nuovi <xref:System.Windows.Markup.XamlSetValueEventArgs> e li passa al gestore.</span><span class="sxs-lookup"><span data-stu-id="613d3-154">If the `SetValue` operation for this XAML writer has an associated handler (a <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is declared in <xref:System.Xaml.XamlObjectWriterSettings>), this method creates new <xref:System.Windows.Markup.XamlSetValueEventArgs> and passes them to the handler.</span></span> <span data-ttu-id="613d3-155">Il valore restituito viene impostato leggendo il <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> valore passato tramite i dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="613d3-155">The return value is set by reading the <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> value that is passed through the event data.</span></span> <span data-ttu-id="613d3-156">Se è presente alcun gestore e viene richiamato questo metodo, la chiamata restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="613d3-156">If no handler exists and this method is invoked, the call returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="613d3-157">Ottiene l'ultimo oggetto scritto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-157">Gets the last object that was written.</span>
          </span>
          <span data-ttu-id="613d3-158">In genere viene chiamato solo quando il flusso del nodo è alla fine e l'oggetto grafico è stato completato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-158">Typically only called when the node stream is at its end and the object graph is complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="613d3-159">Ultimo oggetto scritto o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-159">The last object written, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="613d3-160">L'utilizzo più comune di <xref:System.Xaml.XamlObjectWriter.Result%2A> viene chiamata solo quando il flusso del nodo è noto che alla fine e l'oggetto grafico è stata completata.</span><span class="sxs-lookup"><span data-stu-id="613d3-160">The most typical usage of <xref:System.Xaml.XamlObjectWriter.Result%2A> is to call it only when the node stream is known to be at its end, and the object graph is complete.</span></span> <span data-ttu-id="613d3-161">In caso contrario, l'oggetto grafico è incompleto e non è utile per la maggior parte degli scenari di piattaforma.</span><span class="sxs-lookup"><span data-stu-id="613d3-161">Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.</span></span>  
  
 <span data-ttu-id="613d3-162"><xref:System.Xaml.XamlObjectWriter.Result%2A> in genere contiene solo un valore non null se viene chiamato immediatamente dopo una chiamata a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, e se l'ambito corrente è nel membro in cui l'oggetto fornisce un valore.</span><span class="sxs-lookup"><span data-stu-id="613d3-162"><xref:System.Xaml.XamlObjectWriter.Result%2A> typically only contains a non-null value if it is called immediately after a call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, and if the current scope is in the member where the object provides a value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="613d3-163">Ottiene il servizio <see cref="T:System.Windows.Markup.INameScope" /> che gestisce il NameScope XAML per la radice del nodo corrente del writer di oggetti XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-163">Gets the <see cref="T:System.Windows.Markup.INameScope" /> service that maintains the XAML namescope for the absolute node root of the XAML object writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="613d3-164">Il servizio <see cref="T:System.Windows.Markup.INameScope" /> che gestisce il namescope XAML per la radice corrente del writer di oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-164">The <see cref="T:System.Windows.Markup.INameScope" /> service that maintains the XAML namescope for the current root of the object writer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="613d3-165">Il valore di questa proprietà può provenire dal contesto del writer dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="613d3-165">The value of this property may come from the object writer context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="613d3-166">Ottiene il contesto dello schema XAML attivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-166">Gets the active XAML schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="613d3-167">Contesto dello schema XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-167">The XAML schema context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="613d3-168">Contesto dello schema XAML è un'origine di informazioni necessarie per gli scenari di scrittura di oggetti più pratici.</span><span class="sxs-lookup"><span data-stu-id="613d3-168">XAML schema context is a necessary information source for most practical object-writing scenarios.</span></span> <span data-ttu-id="613d3-169">Contesto dello schema XAML influisce sulla ricerca del tipo per tipi di supporto e contiene informazioni sugli assembly in cui sono presenti tipi di supporto.</span><span class="sxs-lookup"><span data-stu-id="613d3-169">The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist.</span></span> <span data-ttu-id="613d3-170">Contesto dello schema XAML predefinito si basa sulle regole di mapping dei tipi CLR.</span><span class="sxs-lookup"><span data-stu-id="613d3-170">The default XAML schema context is based on CLR type-mapping rules.</span></span> <span data-ttu-id="613d3-171">Framework forniscono in genere i propri contesto dello schema XAML modo da assicurare che i meccanismi di caricamento di assembly corrispondano programmazione modelli di applicazione del framework.</span><span class="sxs-lookup"><span data-stu-id="613d3-171">Frameworks typically provide their own XAML schema context in order to assure that that the assembly-loading mechanisms match the framework's programming amd application models.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">
          <span data-ttu-id="613d3-172">Numero di riga del reader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-172">The line number from the reader.</span>
          </span>
        </param>
        <param name="linePosition">
          <span data-ttu-id="613d3-173">Posizione di riga del reader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-173">The line position from the reader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-174">Implementa <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> e fornisce le informazioni sulla riga per le eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-174">Implements <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> and provides line information for exceptions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="613d3-175">Questo metodo di servizio non deve essere chiamato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="613d3-175">This service method is not intended to be called directly from your code.</span></span> <span data-ttu-id="613d3-176">Tuttavia, se si sta creando una classe derivata da <xref:System.Xaml.XamlObjectWriter> e si prevede di segnalare un contesto in cui i numeri di riga non sono disponibili o non è utile, può essere chiamato questo metodo.</span><span class="sxs-lookup"><span data-stu-id="613d3-176">However, if you are creating a derived class from <xref:System.Xaml.XamlObjectWriter> and expect to report a context where line numbers are unavailable or not useful, this method may be called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="613d3-177">Ottiene un valore che segnala se un servizio di informazioni sulla riga deve fornire i valori e di conseguenza chiamare anche il metodo <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />, quando necessario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-177">Gets a value that reports whether a line information service should provide values and therefore, should also call the <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> method when it is relevant.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="613d3-178">
            <see langword="true" /> se le informazioni sulla riga vengono utilizzate dal writer; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-178">
              <see langword="true" /> if line information is used by the writer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="613d3-179">Questa implementazione restituisce sempre `true`.</span><span class="sxs-lookup"><span data-stu-id="613d3-179">This implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="613d3-180">Chiude l'ambito del membro corrente e può scrivere il valore dell'ambito del membro mentre viene chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-180">Closes the current member scope, and may write the value of the member scope while it closes.</span>
          </span>
          <span data-ttu-id="613d3-181">Il nuovo ambito diventa l'ambito dell'oggetto padre del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-181">The new scope becomes the parent object scope of the member.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">
          <span data-ttu-id="613d3-182">Impossibile creare valore del membro da un nodo di valori incontrato tra questa chiamata e un precedente <see langword="StartMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-182">Failed to create member value from a value node that is encountered between this call and a previous <see langword="StartMember" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="613d3-183">Chiude l'ambito dell'oggetto corrente nel writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-183">Closes the current object scope in the writer.</span>
          </span>
          <span data-ttu-id="613d3-184">Il nuovo ambito dell'oggetto diventa l'ambito del membro padre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-184">The new object scope becomes the parent member scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="613d3-185">Se questo `EndObject` posizione ambito chiude l'oggetto radice, il nuovo ambito dell'oggetto diventa l'ambito radice.</span><span class="sxs-lookup"><span data-stu-id="613d3-185">If this `EndObject` position scope is closing the root object, the new object scope becomes the root scope.</span></span>  
  
 <span data-ttu-id="613d3-186">La chiamata a <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> potrebbe non ancora creato l'oggetto perché un membro dell'oggetto potrebbe essere un percorso di inizializzazione necessarie, ad esempio il testo di inizializzazione o parametri di inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="613d3-186">The call to <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters.</span></span> <span data-ttu-id="613d3-187">In questi casi, la chiamata a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> scrive l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="613d3-187">For these cases, the call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> actually writes the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="613d3-188">Scrive l'oggetto <see langword="StartObject" /> concettuale nell'oggetto grafico quando l'oggetto specificato è un valore predefinito o implicito della proprietà padre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-188">Writes the conceptual <see langword="StartObject" /> into the object graph when the specified object is a default or implicit value of the parent property.</span>
          </span>
          <span data-ttu-id="613d3-189">Il valore implicito viene da informazioni ottenute dal contesto dello schema XAML e da informazioni sul tipo di supporto, anziché essere specificato come valore dell'oggetto nel set di nodi XAML di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-189">The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="613d3-190">La differenza tra la scrittura con <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> e quella con <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> possono essere visualizzati nell'oggetto grafico risultante.</span><span class="sxs-lookup"><span data-stu-id="613d3-190">The difference between writing with <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> and writing with <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> can be seen in the resulting object graph.</span></span> <span data-ttu-id="613d3-191"><xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> non ne crea un'istanza di un tipo perché il <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API non dispone di informazioni per informare l'oggetto grafico di ciò che occorre costruire.</span><span class="sxs-lookup"><span data-stu-id="613d3-191"><xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> does not construct an instance of a type because the <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API has no information to inform the object graph of what to construct.</span></span> <span data-ttu-id="613d3-192">In alternativa, è stato creato l'oggetto quando la proprietà padre è stata inizializzata. pertanto un <xref:System.Xaml.XamlObjectWriter> non è necessario crearlo.</span><span class="sxs-lookup"><span data-stu-id="613d3-192">Instead, the object was created when the parent property was initialized; so a <xref:System.Xaml.XamlObjectWriter> does not need to construct it.</span></span> <span data-ttu-id="613d3-193">Al contrario, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifica che un'istanza di tale tipo deve essere costruita e inserita nell'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="613d3-193">In contrast, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifies that an instance of that type should be constructed and inserted into the object graph.</span></span>  
  
 <span data-ttu-id="613d3-194">Se si ritiene che il flusso del nodo XAML come una serie di frame, un <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> viene bilanciato per un <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> chiamare.</span><span class="sxs-lookup"><span data-stu-id="613d3-194">If you think of the XAML node stream as a series of frames, a <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> is balanced to a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call.</span></span> <span data-ttu-id="613d3-195">Pertanto, il numero di <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> più <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> chiamate devono essere uguale al numero di <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> chiamate come parte di una valutazione completa di scrittura di oggetti del flusso di nodi XAML.</span><span class="sxs-lookup"><span data-stu-id="613d3-195">Therefore, the number of <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> calls should equal the number of <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> calls as part of a complete object-writing evaluation of the XAML node stream.</span></span>  
  
 <span data-ttu-id="613d3-196">Concettuale `StartObject` posizione per un oggetto implicito nell'oggetto grafico è necessario perché anche se il valore dell'oggetto stesso è un'impostazione predefinita implicita, tale oggetto potrebbe essere ancora i membri che devono essere scritti in base al flusso di nodi XAML.</span><span class="sxs-lookup"><span data-stu-id="613d3-196">The conceptual `StartObject` position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream.</span></span> <span data-ttu-id="613d3-197">È di uno scenario tipico in cui ciò si verifica quando <xref:System.Xaml.XamlObjectWriter> scrive nodi membro per una proprietà di raccolta e l'inizializzazione di raccolta è implicita per la creazione dell'oggetto a cui appartiene la proprietà di raccolta.</span><span class="sxs-lookup"><span data-stu-id="613d3-197">A typical scenario where this occurs is when <xref:System.Xaml.XamlObjectWriter> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">
          <span data-ttu-id="613d3-198">Dichiarazione dello spazio dei nomi da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-198">The namespace declaration to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-199">Definisce una dichiarazione dello spazio dei nomi che si applica all'ambito dell'oggetto o all'ambito del membro successivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-199">Defines a namespace declaration that applies to the next object scope or member scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="613d3-200">Una dichiarazione dello spazio dei nomi può essere scritta se l'ambito corrente è un ambito radice, dell'oggetto ambito o ambito del membro.</span><span class="sxs-lookup"><span data-stu-id="613d3-200">A namespace declaration can be written if the current scope is a root scope, object scope, or member scope.</span></span> <span data-ttu-id="613d3-201">Tuttavia, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> può essere chiamato solo immediatamente prima della chiamata a uno dei seguenti: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, o <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="613d3-201">However, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> can only be called immediately before a call to one of the following: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</span></span> <span data-ttu-id="613d3-202">Il consecutivi <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case è per la scrittura di più dichiarazioni dello spazio dei nomi allo stesso nodo.</span><span class="sxs-lookup"><span data-stu-id="613d3-202">The consecutive <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case is for writing multiple namespace declarations to the same node.</span></span> <span data-ttu-id="613d3-203">Infine, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> o <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> deve essere chiamato.</span><span class="sxs-lookup"><span data-stu-id="613d3-203">Eventually, either <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> must be called.</span></span>  
  
 <span data-ttu-id="613d3-204"><xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> non utilizzare un `Start` / `End` metafora.</span><span class="sxs-lookup"><span data-stu-id="613d3-204"><xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> does not use a `Start`/`End` metaphor.</span></span> <span data-ttu-id="613d3-205">Anche se uno spazio dei nomi XAML dispone di membri nel senso CLR rappresentazione, i membri sono noti e non è necessario essere rappresentato come un tipo speciale di <xref:System.Xaml.XamlMember> per l'estensibilità.</span><span class="sxs-lookup"><span data-stu-id="613d3-205">Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <xref:System.Xaml.XamlMember> for extensibility.</span></span> <span data-ttu-id="613d3-206">Per accedere ai valori di un <xref:System.Xaml.NamespaceDeclaration>, accedere ai relativi <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> e <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="613d3-206">To access the values of a <xref:System.Xaml.NamespaceDeclaration>, you access its <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> and <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> properties.</span></span>  
  
 <span data-ttu-id="613d3-207">Una dichiarazione dello spazio dei nomi può includere un <xref:System.String.Empty?displayProperty=nameWithType> valore per il prefisso.</span><span class="sxs-lookup"><span data-stu-id="613d3-207">A namespace declaration may have a <xref:System.String.Empty?displayProperty=nameWithType> value for the prefix.</span></span> <span data-ttu-id="613d3-208">Oggetto <xref:System.String.Empty?displayProperty=nameWithType> prefisso rappresenta una dichiarazione di spazio dei nomi XAML predefinito.</span><span class="sxs-lookup"><span data-stu-id="613d3-208">A <xref:System.String.Empty?displayProperty=nameWithType> prefix represents a declaration of the default XAML namespace.</span></span> <span data-ttu-id="613d3-209">Non tentare di utilizzare null per rappresentare il prefisso predefinito.  genera un'eccezione in questa API.</span><span class="sxs-lookup"><span data-stu-id="613d3-209">Do not attempt to use null to represent the default prefix;  it throws an exception in this API.</span></span> <span data-ttu-id="613d3-210">Per ulteriori informazioni, vedere <xref:System.Xaml.NamespaceDeclaration>.</span><span class="sxs-lookup"><span data-stu-id="613d3-210">For more information, see <xref:System.Xaml.NamespaceDeclaration>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="613d3-211">L'elemento <paramref name="namespaceDeclaration" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-211">The <paramref name="namespaceDeclaration" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="613d3-212">Un componente di <paramref name="namespaceDeclaration" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-212">A component of <paramref name="namespaceDeclaration" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException">
          <span data-ttu-id="613d3-213">Si è tentato di scrivere un nodo dello spazio dei nomi XAML in un ambito non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-213">Tried to write a XAML namespace node in an invalid scope.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="613d3-214">Proprietà XAML da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-214">The XAML property to write.</span>
          </span>
          <span data-ttu-id="613d3-215">In genere si ottiene questo valore da un reader XAML tramite il flusso del nodo XAML intermedio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-215">Typically you obtain this value from a XAML reader through the XAML node stream intermediate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-216">Scrive un nuovo nodo membro nell'ambito dell'oggetto corrente e l'ambito diventa un nuovo ambito del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-216">Writes a new member node into the current object scope, and the scope becomes a new member scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="613d3-217">Cercare un <xref:System.Xaml.XamlDuplicateMemberException>, che si verifica quando la stessa proprietà XAML è due volte nell'input XAML.</span><span class="sxs-lookup"><span data-stu-id="613d3-217">Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input.</span></span> <span data-ttu-id="613d3-218">Nei casi più semplici, ad esempio quando la stessa proprietà è impostata nella sintassi degli attributi sia sintassi degli elementi di proprietà, è possibile visualizzare facilmente questa eccezione nel markup di input.</span><span class="sxs-lookup"><span data-stu-id="613d3-218">In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup.</span></span> <span data-ttu-id="613d3-219">Tuttavia, possono verificarsi casi più sofisticati che sono più difficili da individuare.</span><span class="sxs-lookup"><span data-stu-id="613d3-219">However, more subtle cases can occur that are more difficult to spot.</span></span> <span data-ttu-id="613d3-220">Questa eccezione può verificarsi ad esempio, se si imposta una proprietà di contenuto XAML, se si interessano le proprietà di ambiente XAML e, se una proprietà consente un utilizzo associabile sia un utilizzo dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="613d3-220">For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage.</span></span> <span data-ttu-id="613d3-221">Nelle fasi di sviluppo di debug, è possibile individuare spesso questa eccezione visualizzando la rappresentazione del nodo XAML intermedia che collega la lettura del markup e la scrittura dell'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="613d3-221">In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">
          <span data-ttu-id="613d3-222">
            <see cref="P:System.Xaml.XamlMember.IsUnknown" /> di <paramref name="property" /> è impostato su <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-222">
              <paramref name="property" /> has <see cref="P:System.Xaml.XamlMember.IsUnknown" /> set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="613d3-223">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-223">-or-</span>
          </span>
          <span data-ttu-id="613d3-224">
            <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passato che indica che il flusso del nodo XAML ha contenuto il contenuto per un oggetto che non supporta contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-224">
              <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passed, which indicates that the XAML node stream contained content for an object that does not support content.</span>
          </span>
          <span data-ttu-id="613d3-225">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-225">-or-</span>
          </span>
          <span data-ttu-id="613d3-226">Si è tentato di scrivere un membro iniziale in un ambito non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-226">Attempted to write a start member in an invalid scope.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException">
          <span data-ttu-id="613d3-227">
            <paramref name="property" /> specifica una proprietà già impostata in modo esplicito nell'ambito dell'oggetto padre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-227">
              <paramref name="property" /> specifies a property that is already explicitly set in the parent object scope.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="613d3-228">
            <paramref name="property" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-228">
              <paramref name="property" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">
          <span data-ttu-id="613d3-229">Tipo da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-229">The type to write.</span>
          </span>
          <span data-ttu-id="613d3-230">In genere si ottiene questo valore da un reader XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-230">Typically you obtain this value from a XAML reader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-231">Scrive un nodo oggetto nell'ambito corrente e imposta l'ambito su un nuovo ambito dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-231">Writes an object node into the current scope, and sets the scope to a new object scope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">
          <span data-ttu-id="613d3-232">Elaborare un tipo <see cref="P:System.Xaml.XamlType.IsUnknown" /> e non poter creare un oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-232">Processing an <see cref="P:System.Xaml.XamlType.IsUnknown" /> type and cannot create an object.</span>
          </span>
          <span data-ttu-id="613d3-233">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-233">-or-</span>
          </span>
          <span data-ttu-id="613d3-234">Si è tentato di scrivere un oggetto iniziale in un ambito non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-234">Attempted to write a start object in an invalid scope.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlParseException">
          <span data-ttu-id="613d3-235">Si è tentato di scrivere un oggetto radice quando l'oggetto radice era già fornito nelle impostazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-235">Attempted to write a root object when the root object was already provided in the settings.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="613d3-236">
            <paramref name="xamlType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-236">
              <paramref name="xamlType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="613d3-237">Se l'ambito corrente si trova all'interno di una raccolta, dizionario o una matrice, la nuova istanza deve essere aggiunto alla raccolta, dizionario di matrice utilizzando la <see langword="Add" /> metodo del tipo pertinente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="613d3-237">If the current scope is inside a collection, dictionary, or array, the new instance should be added to the collection, dictionary, or array by using the <see langword="Add" /> method of the relevant type.</span>
            </span>
            <span data-ttu-id="613d3-238">In caso contrario, il membro deve essere assegnato alla nuova istanza.</span>
            <span class="sxs-lookup">
              <span data-stu-id="613d3-238">Otherwise, the member should be assigned to the new instance.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="613d3-239">Valore da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-239">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="613d3-240">Scrive un valore nell'ambito del membro corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-240">Writes a value to the current member scope.</span>
          </span>
          <span data-ttu-id="613d3-241">Se l'ambito corrente è all'interno di un oggetto insieme, dizionario o matrice, il valore deve essere aggiunto nell'insieme, nel dizionario o nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-241">If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">
          <span data-ttu-id="613d3-242">Si è tentato di scrivere un valore in un ambito non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="613d3-242">Attempted to write a value in an invalid scope.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>