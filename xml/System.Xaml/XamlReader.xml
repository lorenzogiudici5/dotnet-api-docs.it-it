<Type Name="XamlReader" FullName="System.Xaml.XamlReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="849d2e0c9bee513161cca5e65badec4967daf83c" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51864281" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XamlReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XamlReader = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce le definizioni di base per le classi che utilizzano l'input XAML e producono flussi del nodo XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlReader> è una classe astratta e non fornisce le implementazioni o le definizioni che producono un risultato di lavoro per tutti i membri. I membri che dispongono di un'implementazione in <xref:System.Xaml.XamlReader> sono indicate nella sezione Osservazioni per tale membro. In particolare, <xref:System.Xaml.XamlReader> ha diversi membri astratti che devono essere implementati e vari membri virtuali.  
  
 Dei membri virtuali, <xref:System.Xaml.XamlReader.ReadSubtree%2A> e <xref:System.Xaml.XamlReader.Skip%2A> ognuno dei quali fornisce un'implementazione predefinita che è appropriata per la maggior parte dei casi. Tuttavia, il <xref:System.Xaml.XamlReader.ReadSubtree%2A> e <xref:System.Xaml.XamlReader.Skip%2A> implementazioni predefinite si basano su altre comportamento previsto del reader XAML di implementazione; in particolare, si basano sul <xref:System.Xaml.XamlReader.Read%2A> eseguire l'override. <xref:System.Xaml.XamlReader.Dispose%2A> è anche un membro virtuale che ha un'implementazione predefinita di lavoro.  
  
 Le due classi seguenti sono le classi derivate più pertinenti e pratiche in servizi XAML di .NET Framework e l'assembly System. XAML:  
  
-   <xref:System.Xaml.XamlObjectReader>, che legge un oggetto grafico, ad esempio l'oggetto grafico attivo di un'applicazione in fase di esecuzione.  
  
-   <xref:System.Xaml.XamlXmlReader>, che legge XAML sotto forma di un file di testo XML usando un generale <xref:System.Xml.XmlReader> che carica il file come una classe helper intermediario.  
  
 Includono lettori altre XAML da altri framework <xref:System.Windows.Baml2006.Baml2006Reader> e <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.  
  
 <xref:System.Xaml.XamlReader> differisce da [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] e <xref:System.Xml.XmlReader> principi di progettazione perché <xref:System.Xaml.XamlReader> non ha un `Create` metodo restituisca implementazioni del reader XAML sottostante predefinito. È invece necessario creare un'istanza specifiche classi derivate di reader XAML chiamando i relativi costruttori o altre API di supporto specifico della classe.  
  
## <a name="subtree-readers"></a>Lettori sottoalbero  
 Nella maggior parte, si chiama <xref:System.Xaml.XamlReader> API nel contesto di specifiche classi del lettore XAML che derivano da <xref:System.Xaml.XamlReader>. Tuttavia, in un caso particolare, si accede <xref:System.Xaml.XamlReader> API in un'istanza del reader XAML pratica che non è pubblico e non deriva da <xref:System.Xaml.XamlObjectReader> o <xref:System.Xaml.XamlXmlReader>. In questo caso è quando si chiama <xref:System.Xaml.XamlReader.ReadSubtree%2A>, che restituisce un <xref:System.Xaml.XamlReader> istanza. Nell'implementazione predefinita, il <xref:System.Xaml.XamlReader> vale a dire restituite da questa API è una classe interna.  
  
 Il <xref:System.Xaml.XamlReader> ottenute per la lettura di sottoalbero ha azioni valide per le API, ad esempio <xref:System.Xaml.XamlReader.Read%2A> e <xref:System.Xaml.XamlReader.NodeType%2A>, e tali azioni sono basate sulla classe reader padre. Questa progettazione consente la classe interna rilevare il livello di frame in cui è stato immesso il sottoalbero. Attivo per il sottoalbero <xref:System.Xaml.XamlReader> assicura che, se la posizione del nodo corrente viene spostata oltre i limiti della sottostruttura ad albero, il lettore del sottoalbero specifico segnala la fine del file o `null` in corrispondenza del nodo corrente.  
  
 Note sull'utilizzo del lettore sottostruttura ad albero sono incluse in determinate <xref:System.Xaml.XamlReader> API.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectReader" />
    <altmember cref="T:System.Xaml.XamlXmlReader" />
    <altmember cref="T:System.Xaml.XamlReaderSettings" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Informazioni su strutture e concetti del flusso del nodo XAML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza la classe <see cref="T:System.Xaml.XamlReader" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="xamlReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude il flusso del nodo XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nell'implementazione di base, la chiamata <xref:System.Xaml.XamlReader.Close%2A> chiamate <xref:System.Xaml.XamlReader.Dispose%2A> con il `isDisposing` parametro come `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xamlReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare le risorse gestite; in caso contrario, <see langword="false" />.</param>
        <summary>Rilascia le risorse non gestite utilizzate dall'oggetto <see cref="T:System.Xaml.XamlReader" /> e facoltativamente rilascia le risorse gestite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario chiamare la classe di base per ottenere <xref:System.Xaml.XamlReader.IsDisposed%2A>  =  `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Xaml.XamlReader.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> è stato chiamato.</summary>
        <value>
          <see langword="true" /> se <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> è stato chiamato; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public abstract bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEof { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEof : bool" Usage="System.Xaml.XamlReader.IsEof" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando implementato in una classe derivata, ottiene un valore che indica se la posizione del reader è alla fine del file.</summary>
        <value>
          <see langword="true" /> se la posizione è alla fine concettuale del file del flusso dei nodi XAML; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sottoalbero possono chiamare <xref:System.Xaml.XamlReader.IsEof%2A>, con un comportamento che rispecchi correttamente i limiti del sottoalbero immesso. Per altre informazioni, vedere la sezione "Sottoalbero lettori" nella <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.IsEof" />
        <altmember cref="P:System.Xaml.XamlXmlReader.IsEof" />
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Xaml.XamlMember" Usage="System.Xaml.XamlReader.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando implementato in una classe derivata, ottiene il membro corrente nella posizione del reader, se la posizione del reader è in un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
        <value>Membro corrente; oppure <see langword="null" /> se la posizione del reader non è in un membro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sottoalbero possono chiamare <xref:System.Xaml.XamlReader.Member%2A>, con limitazioni di comportamento. Per altre informazioni, vedere la sezione "Sottoalbero lettori" nella <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Member" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Member" />
        <altmember cref="T:System.Xaml.XamlMember" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Xaml.NamespaceDeclaration" Usage="System.Xaml.XamlReader.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando implementato in una classe derivata, ottiene le informazioni sullo spazio dei nomi XAML del nodo corrente.</summary>
        <value>Informazioni sullo spazio dei nomi XAML, se disponibili; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La progettazione desiderata di questa API deve restituire un risultato non null solo se il <xref:System.Xaml.XamlReader.NodeType%2A> del nodo corrente è <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>. La proprietà non indica lo spazio dei nomi XAML che si applica a oggetti o membri in senso generale dell'ambito, interpretato in un contesto dello schema XAML. L'applicazione deve fornire un mezzo per le informazioni della cache per eseguire le operazioni dello spazio dei nomi XAML che attraversa i nodi XAML, se è necessario che le informazioni in un modo diverso rispetto al modo in cui il contesto dello schema XAML lo segnala a un writer. Vedere <xref:System.Xaml.XamlXmlReader.Namespace%2A> per le note sull'implementazione di riferimento.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Namespace" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xaml.XamlNodeType" Usage="System.Xaml.XamlReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando implementato in una classe derivata, ottiene il tipo del nodo corrente.</summary>
        <value>Valore dell'enumerazione <see cref="T:System.Xaml.XamlNodeType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sottoalbero possono chiamare <xref:System.Xaml.XamlReader.NodeType%2A>, con limitazioni di comportamento. Per altre informazioni, vedere la sezione "Sottoalbero lettori" nella <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.NodeType" />
        <altmember cref="P:System.Xaml.XamlXmlReader.NodeType" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="xamlReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementato in una classe derivata, fornisce il nodo XAML successivo dall'origine, se è disponibile un nodo.</summary>
        <returns>
          <see langword="true" /> se è disponibile un nodo; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sottoalbero possono chiamare <xref:System.Xaml.XamlReader.Read%2A>, con limitazioni di comportamento. Per altre informazioni, vedere la sezione "Sottoalbero lettori" nella <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlXmlReader.Read" />
        <altmember cref="M:System.Xaml.XamlObjectReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlReader ^ ReadSubtree();" />
      <MemberSignature Language="F#" Value="abstract member ReadSubtree : unit -&gt; System.Xaml.XamlReader&#xA;override this.ReadSubtree : unit -&gt; System.Xaml.XamlReader" Usage="xamlReader.ReadSubtree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.XamlReader" /> basato sull'oggetto <see cref="T:System.Xaml.XamlReader" /> corrente, dove l'oggetto <see cref="T:System.Xaml.XamlReader" /> restituito viene utilizzato per scorrere un sottoalbero della struttura dei nodi XAML.</summary>
        <returns>Nuova istanza del reader XAML per il sottoalbero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo ha un'implementazione predefinita e restituisce un valore valido <xref:System.Xaml.XamlReader>. L'oggetto restituito <xref:System.Xaml.XamlReader> è una classe interna che consente di limitare determinati <xref:System.Xaml.XamlReader> azioni. Le restrizioni sono coerenti con lo scopo di lettura di un sottoalbero dimensionato di un'origine di dimensioni maggiori per un set di nodi XAML e di restituire la fine del file o `null` in corrispondenza del nodo corrente quando viene terminata la sottostruttura ad albero.  
  
 In genere, è necessario controllare il nodo corrente da iniziale <xref:System.Xaml.XamlReader.Read%2A> per determinare se è necessario un lettore del sottoalbero. Come effettuare questo controllo può essere specifici dell'implementazione; Tuttavia, evitare di creare più lettori sottoalbero per ogni sottoalbero. Inoltre, evitare di richiamare un lettore del sottoalbero per determinati casi di nodo (ad esempio, per <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) che non può contenere un sottoalbero di nodi.  
  
 Dopo aver ottenuto un lettore del sottoalbero, è necessario chiamare <xref:System.Xaml.XamlReader.Read%2A> su di essa per ottenere un nodo corrente (o chiamare <xref:System.Xaml.XamlReader.Skip%2A> per ottenere un nodo successivo). Non viene automaticamente recuperato una posizione iniziale dei nodi dal lettore sottoalbero durante la creazione.  
  
 Il lettore ottiene chiamando <xref:System.Xaml.XamlReader.ReadSubtree%2A> da questa impostazione predefinita l'implementazione è una classe interna. La classe interna si basa sul relativo comportamento il <xref:System.Xaml.XamlReader> implementazione che viene utilizzato quando <xref:System.Xaml.XamlReader.ReadSubtree%2A> viene chiamato. Lo scopo della classe interna consiste nell'inserire il <xref:System.Xaml.XamlReader.Read%2A> e comportamento generale dell'attraversamento. L'attraversamento rimane all'interno del sottoalbero previsto tenendo traccia del <xref:System.Xaml.XamlNodeType.StartMember> / <xref:System.Xaml.XamlNodeType.EndMember> coppie o <xref:System.Xaml.XamlNodeType.StartObject> / <xref:System.Xaml.XamlNodeType.EndObject> coppie. Inoltre restituisce correttamente `false` per <xref:System.Xaml.XamlReader.Read%2A> e `true` per <xref:System.Xaml.XamlReader.IsEof%2A> quando il reader è alla fine della sottostruttura ad albero, come definito dal punto di ingresso. In generale, si presuppone che qualsiasi <xref:System.Xaml.XamlReader> è chiamata da un lettore sottoalbero API ha la stessa implementazione come complessiva <xref:System.Xaml.XamlReader> tranne l'attraversamento di comportamento di delimitazione.  
  
 Tuttavia, <xref:System.Xaml.XamlReader.ReadSubtree%2A> è virtuale. Pertanto, uno specifico <xref:System.Xaml.XamlReader> implementazione può fornire un comportamento diverso dal <xref:System.Xaml.XamlReader> comportamento wrapper interna; e una <xref:System.Xaml.XamlReader> implementazione può anche disabilitare la funzionalità di lettura del sottoalbero, restituendo <xref:System.NotImplementedException> o altri eccezioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlReader.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando implementato in una classe derivata, ottiene un oggetto che fornisce le informazioni sul contesto dello schema XAML per il set di informazioni.</summary>
        <value>Oggetto che fornisce le informazioni sul contesto dello schema XAML per il set di informazioni.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.SchemaContext" />
        <altmember cref="P:System.Xaml.XamlXmlReader.SchemaContext" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberSignature Language="F#" Value="abstract member Skip : unit -&gt; unit&#xA;override this.Skip : unit -&gt; unit" Usage="xamlReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ignora il nodo corrente e fa avanzare la posizione del reader al nodo successivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una volta ignorata <xref:System.Xaml.XamlReader.Read%2A> viene chiamato per l'impostazione predefinita <xref:System.Xaml.XamlReader.Skip%2A> implementazione. In genere non è necessario chiamare <xref:System.Xaml.XamlReader.Skip%2A> e <xref:System.Xaml.XamlReader.Read%2A> nella sequenza.  
  
 Nel valore predefinito <xref:System.Xaml.XamlReader.Skip%2A> implementazione, eseguito le azioni diverse a seconda di quale <xref:System.Xaml.XamlReader.NodeType%2A> la posizione del reader si trova attualmente. Se la posizione del reader è attualmente in una <xref:System.Xaml.XamlNodeType.StartMember> o <xref:System.Xaml.XamlNodeType.StartObject>, che membro o un oggetto viene ignorato. Per altri <xref:System.Xaml.XamlReader.NodeType%2A> valori, viene eseguita alcuna azione diversa da chiamare <xref:System.Xaml.XamlReader.Read%2A> dalla posizione corrente.  
  
 Sottoalbero possono chiamare <xref:System.Xaml.XamlReader.Skip%2A>, con limitazioni di comportamento. Per altre informazioni, vedere la sezione "Sottoalbero lettori" nella <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 Il comportamento di nodo dell'albero di <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> si basa sull'equivalente XML <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>. In base il <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> equivalenza di comportamento, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> ignora il nodo e il relativo sottoalbero, non solo il nodo della singola voce.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Xaml.XamlReader" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlReader.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando implementato in una classe derivata, ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del nodo corrente.</summary>
        <value>Oggetto <see cref="T:System.Xaml.XamlType" /> del nodo corrente o <see langword="null" /> se la posizione corrente del reader non è in un oggetto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sottoalbero possono chiamare <xref:System.Xaml.XamlReader.Type%2A>, con limitazioni di comportamento. Per altre informazioni, vedere la sezione "Sottoalbero lettori" nella <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Type" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Type" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.XamlReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando implementato in una classe derivata, ottiene il valore del nodo corrente.</summary>
        <value>Valore del nodo corrente o <see langword="null" /> se la posizione corrente del reader non è in un tipo di nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Value" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Value" />
      </Docs>
    </Member>
  </Members>
</Type>