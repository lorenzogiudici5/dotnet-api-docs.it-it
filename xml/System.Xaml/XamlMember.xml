<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d8d32-101">Fornisce l'identificatore di sistema dei tipi XAML per i membri dei tipi XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-101">Provides the XAML type system identifier for members of XAML types.</span></span> <span data-ttu-id="d8d32-102">L'identificatore viene utilizzato dai reader e dai writer XAML durante l'elaborazione dei nodi membri (quando il reader XAML viene posizionato su un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" />) e anche per la logica di sistema di tipo XAML generale.</span><span class="sxs-lookup"><span data-stu-id="d8d32-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-103"><xref:System.Xaml.XamlMember> può usare le metodologie di tre per la restituzione di informazioni su un membro XAML: standard reflection common language runtime (CLR); una tecnica di riferimento sola reflection chiamata interna con flag di bit tale uso ottimizzato API o chiamare virtuale esegue l'override del `Lookup*` API fornita da possibili <xref:System.Xaml.XamlMember> sottoclassi.</span><span class="sxs-lookup"><span data-stu-id="d8d32-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="d8d32-104">Per la maggior parte degli usi dell'API dei servizi XAML di .NET Framework e <xref:System.Xaml.XamlMember> API, utilizzare il contesto dello schema XAML predefinito.</span><span class="sxs-lookup"><span data-stu-id="d8d32-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="d8d32-105">Contesto dello schema XAML predefinito per i servizi XAML di .NET Framework Usa il supporto per il sistema di tipi CLR.</span><span class="sxs-lookup"><span data-stu-id="d8d32-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="d8d32-106">In questo modo il reader XAML e writer XAML implementati funzionare con qualsiasi tipo o membro è definito in o in caso contrario disponibile per, Common Language Runtime e relative tecniche di reflection.</span><span class="sxs-lookup"><span data-stu-id="d8d32-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="d8d32-107">Le classi derivate di XamlMember e le API di ricerca \*</span><span class="sxs-lookup"><span data-stu-id="d8d32-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="d8d32-108"><xref:System.Xaml.XamlMember> definisce diverse potrebbero eseguire l'override di membri virtuali che le classi derivate.</span><span class="sxs-lookup"><span data-stu-id="d8d32-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="d8d32-109">Questi membri hanno nomi che iniziano sempre con la stringa `Lookup`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="d8d32-110">Il resto dell'API di assegnare un nome riferimenti quindi la proprietà che influenza il metodo virtuale.</span><span class="sxs-lookup"><span data-stu-id="d8d32-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="d8d32-111">Ad esempio, un <xref:System.Xaml.XamlMember> classe derivata può sostituire <xref:System.Xaml.XamlMember.LookupTargetType%2A> per influenzare quali la proprietà definita base <xref:System.Xaml.XamlMember.TargetType%2A> restituisce in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="d8d32-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="d8d32-112">È possibile stimare i valori restituiti per tali proprietà in <xref:System.Xaml.XamlMember> o classi derivate esistenti leggendo la documentazione pertinente `Lookup*` metodi.</span><span class="sxs-lookup"><span data-stu-id="d8d32-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="d8d32-113">Lo scopo del `Lookup*` metodi consiste nel fornire una tecnica di estensione del sistema di tipi XAML che incorpora la <xref:System.Xaml.XamlMember> classe di base.</span><span class="sxs-lookup"><span data-stu-id="d8d32-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="d8d32-114">Mediante la derivazione da <xref:System.Xaml.XamlMember> ed eseguendo l'override di `Lookup` membri virtuali, può definire il concetto di un membro XAML per uno schema XAML in un sistema di tipi XAML senza essere legati alle specifiche di un sistema di tipi di backup o una tecnologia.</span><span class="sxs-lookup"><span data-stu-id="d8d32-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="d8d32-115">È possibile utilizzare anche un contesto dello schema XAML fornito in questo schema e restituire i risultati desiderati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="d8d32-116">Ad esempio, prendere in considerazione il <xref:System.Xaml.XamlMember> proprietà <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="d8d32-117">Questa proprietà informa i chiamanti che le operazioni, ad esempio utilizzando un <xref:System.Xaml.XamlWriter> per la serializzazione può scrivere un valore per questo membro su un oggetto di destinazione.</span><span class="sxs-lookup"><span data-stu-id="d8d32-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="d8d32-118">Nell'implementazione predefinita, la determinazione indica se il membro è accessibile in scrittura viene eseguita utilizzando tecniche di reflection rispetto a CLR sottostante <xref:System.Type> e i relativi membri (il <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="d8d32-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="d8d32-119">Pertanto, per impostazione predefinita, il sistema di tipi XAML dipende dal sistema di tipo CLR.</span><span class="sxs-lookup"><span data-stu-id="d8d32-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="d8d32-120">Tuttavia, è possibile rimuovere questa dipendenza per il sistema report del tipo XAML <xref:System.Xaml.XamlMember.IsWritePublic%2A> eseguendo l'override dell'API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="d8d32-121">Nell'override, è possibile utilizzare altre determinazioni, ad esempio metadati specifici per la tecnologia, una tabella di ricerca master ottimizzata per un vocabolario XAML fisso, o una varietà di altre strategie per determinare se un membro XAML è modificabile nel Vocabolario XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="d8d32-122">Costruzione di XamlMember senza contesto dello Schema XAML</span><span class="sxs-lookup"><span data-stu-id="d8d32-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="d8d32-123">La maggior parte dei costruttori di <xref:System.Xaml.XamlMember> richiedono un <xref:System.Xaml.XamlSchemaContext> come parte dell'inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="d8d32-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="d8d32-124">Il <xref:System.Xaml.XamlSchemaContext> è inoltre necessario per molti interno <xref:System.Xaml.XamlSchemaContext> operazioni, ad esempio per ottenere informazioni che viene inoltrate dal tipo di supporto.</span><span class="sxs-lookup"><span data-stu-id="d8d32-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="d8d32-125">Quando si lavora con la <xref:System.Xaml.XamlMember> API, in genere è un <xref:System.Xaml.XamlSchemaContext> che è disponibile da un costrutto circostante, ad esempio un <xref:System.Xaml.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="d8d32-126">In questo caso, è possibile passare il <xref:System.Xaml.XamlSchemaContext> fanno riferimento a tutte le chiamate di tipi XAML sistema che richiedono un contesto dello schema XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="d8d32-127">Un costruttore specifico, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, non richiede un <xref:System.Xaml.XamlSchemaContext>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="d8d32-128">Tuttavia, un <xref:System.Xaml.XamlMember> che viene costruito con la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma restituisce `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="d8d32-129">Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, tale membro non può essere scritto in un oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="d8d32-130">Tramite l'implementazione di servizi XAML di .NET Framework, il <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chiamata genera un <xref:System.Xaml.XamlObjectWriterException> quando pertinente <xref:System.Xaml.XamlMember> report `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="d8d32-131">Non è necessario costruire un <xref:System.Xaml.XamlMember> con un valore di `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A> , a meno che l'implementazione possa gestire le eccezioni da <xref:System.Xaml.XamlObjectWriter>, o in altri modi per regolare il <xref:System.Xaml.XamlObjectWriter> comportamento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="d8d32-132">Ad esempio, potrebbe essere vero dell'implementazione di uno o più delle operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="d8d32-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="d8d32-133">Contesto dello schema XAML è disponibile in un secondo momento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="d8d32-134">Utilizzare un modello di membro invoker.</span><span class="sxs-lookup"><span data-stu-id="d8d32-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="d8d32-135">Si esegue l'override deliberatamente <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in un writer XAML personalizzato.</span><span class="sxs-lookup"><span data-stu-id="d8d32-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8d32-136">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-136">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="d8d32-137">Oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL che rappresenta il membro dell'evento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-137">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="d8d32-138">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-138">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="d8d32-139">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando <see cref="T:System.Reflection.EventInfo" /> del sistema di tipi CLR e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-139">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-140">Utilizzare questo costruttore se il membro rappresenta un evento (proprietà del punto di connessione del gestore eventi).</span><span class="sxs-lookup"><span data-stu-id="d8d32-140">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="d8d32-141">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipo CRL che rappresenta il membro della proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8d32-141">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="d8d32-142">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-142">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="d8d32-143">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipi CLR e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-143">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-144">Utilizzare questo costruttore se il membro rappresenta una proprietà (e in particolare non è una connessione del gestore eventi).</span><span class="sxs-lookup"><span data-stu-id="d8d32-144">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="d8d32-145">Oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL che rappresenta il membro dell'evento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-145">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="d8d32-146">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-146">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="d8d32-147">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate con reflection di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-147">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="d8d32-148">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando l'oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-148">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-149">Utilizzare questo costruttore se il membro rappresenta un evento (o una proprietà del punto di connessione del gestore di evento).</span><span class="sxs-lookup"><span data-stu-id="d8d32-149">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="d8d32-150">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipo CRL che rappresenta il membro della proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8d32-150">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="d8d32-151">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-151">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="d8d32-152">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-152">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="d8d32-153">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando l'oggetto <see cref="T:System.Reflection.PropertyInfo" /> di reflection e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-153">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-154">Utilizzare questo costruttore solo se il membro rappresenta una proprietà e se non è una connessione del gestore eventi.</span><span class="sxs-lookup"><span data-stu-id="d8d32-154">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="d8d32-155">Nome della stringa dell'evento associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-155">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="d8d32-156">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per il metodo <see langword="Add" /> di gestione dell'implementazione di supporto del membro associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-156">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="d8d32-157">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-157">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="d8d32-158">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta un evento associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-158">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-159">Utilizzare questo costruttore se il membro rappresenta un membro evento associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-159">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d8d32-160">Nome della stringa del membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-160">The string name of the member.</span></span></param>
        <param name="declaringType"><span data-ttu-id="d8d32-161">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo dichiarante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-161">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span></span></param>
        <param name="isAttachable">
          <span data-ttu-id="d8d32-162"><see langword="true" /> per indicare che il membro è associabile; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-162"><see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d8d32-163">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando il nome di una stringa e le informazioni sull'oggetto <see cref="T:System.Xaml.XamlType" /> dichiarante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-163">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span></span> <span data-ttu-id="d8d32-164">Un oggetto <see cref="T:System.Xaml.XamlMember" /> costruito con questa firma ha limitazioni significative.</span><span class="sxs-lookup"><span data-stu-id="d8d32-164">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-165">Oggetto <xref:System.Xaml.XamlMember> che viene costruito con la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma restituisce `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-165">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="d8d32-166">Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, tale membro non può essere scritto in un oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-166">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="d8d32-167">Tramite l'implementazione di servizi XAML di .NET Framework, il <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chiamata genera un <xref:System.Xaml.XamlObjectWriterException> quando pertinente <xref:System.Xaml.XamlMember> report `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-167">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="d8d32-168">Non è necessario costruire un <xref:System.Xaml.XamlMember> con <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` , a meno che l'implementazione possa gestire le eccezioni da <xref:System.Xaml.XamlObjectWriter>, o in altri modi per regolare il <xref:System.Xaml.XamlObjectWriter> comportamento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-168">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="d8d32-169">Ad esempio, potrebbe essere vero dell'implementazione di uno o più delle operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="d8d32-169">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="d8d32-170">Contesto dello schema XAML è disponibile in un secondo momento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-170">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="d8d32-171">Utilizzare un modello di membro invoker.</span><span class="sxs-lookup"><span data-stu-id="d8d32-171">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="d8d32-172">Si esegue l'override deliberatamente <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in un writer XAML personalizzato.</span><span class="sxs-lookup"><span data-stu-id="d8d32-172">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8d32-173"><paramref name="name" /> o <paramref name="declaringType" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-173"><paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="d8d32-174">Nome della stringa della proprietà associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-174">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="d8d32-175">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="get" /> dell'implementazione di supporto del membro associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-175">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="d8d32-176">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="set" /> dell'implementazione di supporto del membro associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="d8d32-177">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-177">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="d8d32-178">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta una proprietà associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-178">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-179">Se il membro rappresenta una proprietà associabile, utilizzare questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="d8d32-179">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="d8d32-180">Nome della stringa dell'evento associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-180">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="d8d32-181">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per il metodo <see langword="Add" /> di gestione dell'implementazione di supporto del membro associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-181">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="d8d32-182">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-182">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="d8d32-183">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-183">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="d8d32-184">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta un evento associabile, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-184">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-185">Utilizzare questo costruttore se il membro rappresenta un membro evento associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-185">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="d8d32-186">Nome della stringa della proprietà associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-186">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="d8d32-187">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="get" /> dell'implementazione di supporto del membro associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-187">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="d8d32-188">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="set" /> dell'implementazione di supporto del membro associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="d8d32-189">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-189">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="d8d32-190">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-190">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="d8d32-191">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta una proprietà associabile, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-191">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-192">Se il membro rappresenta un membro di proprietà associabile, utilizzare questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="d8d32-192">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-193">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo che dichiara il membro associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-193">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="d8d32-194">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo che dichiara il membro associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-194">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-195">Questo valore viene in genere impostato durante l'inizializzazione e non è in genere `null`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-195">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d8d32-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> informazioni possono essere passate dai costruttori per l'inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="d8d32-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="d8d32-197">Chiamando direttamente nei costruttori base, l'inizializzazione per <xref:System.Xaml.XamlMember> classi derivate è possono omettere alcuni dei controlli del valore che vengono apportati nella classe base.</span><span class="sxs-lookup"><span data-stu-id="d8d32-197">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="d8d32-198">Pertanto, l'inizializzazione derivata può modificare le informazioni sulle relazioni di membro di tipo restituito di un membro XAML in modo che non si allinei nel modo previsto con le informazioni sul sistema di tipo della relativa dichiarazione CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-198">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="d8d32-199">Per eventuali controlli critici per la sicurezza di informazioni sul tipo dichiarante, utilizzare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-199">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-200">Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, che viene utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-200">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="d8d32-201">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-201">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-202">La chiamata <xref:System.Xaml.XamlMember.DeferringLoader%2A> richiama <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-202">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="d8d32-203">Questo comportamento si verifica nei casi in cui la logica della reflection interna iniziale non è già impostato le informazioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-203">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-204">Ottiene un elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-204">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="d8d32-205">Tali oggetti segnalano i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-205">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="d8d32-206">Elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-206">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-207">La chiamata <xref:System.Xaml.XamlMember.DependsOn%2A> richiama <xref:System.Xaml.XamlMember.LookupDependsOn%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-207">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="d8d32-208">Questo comportamento si verifica nei casi in cui la logica della reflection interna iniziale non è già impostato le informazioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-208">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="d8d32-209">Il `DependsOn` modello può essere applicato a case del modello di oggetto che intenzionalmente contraddicono una regola XAML generale.</span><span class="sxs-lookup"><span data-stu-id="d8d32-209">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="d8d32-210">La regola XAML generale è che i membri di un tipo che non vengono passati come testo di inizializzazione (o da un metodo factory in XAML 2009) devono essere in grado di essere assegnato in qualsiasi ordine.</span><span class="sxs-lookup"><span data-stu-id="d8d32-210">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="d8d32-211">Applicando un `DependsOn` di schema a un membro, è possibile indicare i writer XAML elaborare sempre il membro a cui si fa riferimento prima di questo membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-211">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="d8d32-212">È possibile applicare questo modello nelle situazioni in cui il valore del membro corrente richiede un contesto o altre informazioni che sono disponibile solo dopo aver impostato l'altro membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-212">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="d8d32-213">Il `DependsOn` modello deve essere applicato con cautela e riservato per gli scenari di proprietà in cui ha uno scopo dell'architettura.</span><span class="sxs-lookup"><span data-stu-id="d8d32-213">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="d8d32-214">Un numero elevato di dipendenze possono rallentare l'elaborazione di XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-214">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="d8d32-215">Inoltre, è possibile produrre dipendenze circolari, nel qual caso non è definito il comportamento di elaborazione XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-215">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="d8d32-216">Esempio `DependsOn` scenari da WPF includono determinate proprietà su <xref:System.Windows.Controls.ControlTemplate> e <xref:System.Windows.DataTemplate>via <xref:System.Windows.Trigger>e nella <xref:System.Windows.Setter>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-216">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8d32-217">Indica se l'oggetto corrente è uguale a un altro oggetto.</span><span class="sxs-lookup"><span data-stu-id="d8d32-217">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d8d32-218">Oggetto da confrontare con l'oggetto corrente.</span><span class="sxs-lookup"><span data-stu-id="d8d32-218">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="d8d32-219">Indica se l'oggetto corrente è uguale a un altro oggetto.</span><span class="sxs-lookup"><span data-stu-id="d8d32-219">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-220"><see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-220"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d8d32-221">Oggetto da confrontare con l'oggetto corrente.</span><span class="sxs-lookup"><span data-stu-id="d8d32-221">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="d8d32-222">Indica se l'oggetto corrente è uguale a un altro oggetto dello stesso tipo.</span><span class="sxs-lookup"><span data-stu-id="d8d32-222">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-223"><see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="other" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-223"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-224">Restituisce il codice hash per questo oggetto.</span><span class="sxs-lookup"><span data-stu-id="d8d32-224">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="d8d32-225">Codice hash di un intero.</span><span class="sxs-lookup"><span data-stu-id="d8d32-225">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-226">Restituisce un elenco di spazi dei nomi XAML in cui può essere presente questo membro XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-226">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="d8d32-227">Elenco di identificatori degli spazi dei nomi XAML in formato stringa.</span><span class="sxs-lookup"><span data-stu-id="d8d32-227">A list of XAML namespace identifiers as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-228">L'implementazione predefinita restituisce il <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> risultato dalla chiamata di <xref:System.Xaml.XamlMember.DeclaringType%2A> che è associata a questo <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-228">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-229">Ottiene l'implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-229">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="d8d32-230">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-230">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-231">Il `Invoker` modello è una tecnica di estensione del sistema di tipi XAML avanzata.</span><span class="sxs-lookup"><span data-stu-id="d8d32-231">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="d8d32-232">Il `Invoker` modello fornisce un modo per inserire i comportamenti di mapping di tipi di schema diverso, pur continuando a utilizzare definizioni di sistema di tipi di XAML dai servizi XAML di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="d8d32-232">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="d8d32-233">Se un <xref:System.Xaml.XamlMember.LookupInvoker%2A> override restituisce `null`, o se l'implementazione predefinita restituisce `null` perché manca il <xref:System.Xaml.XamlMember.UnderlyingMember%2A> per questo <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlMember.Invoker%2A> restituisce proprietà <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-233">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d8d32-234">Il valore predefinito è <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-234"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="d8d32-235">Questo vale per la maggior parte delle operazioni che utilizzano servizi XAML di .NET Framework e il contesto dello schema XAML predefinito e in cui eseguire l'override alcuna specifica `Invoker` è passato per la costruzione di entità di sistema di tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-235">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="d8d32-236">La chiamata <xref:System.Xaml.XamlMember.Invoker%2A> richiama <xref:System.Xaml.XamlMember.LookupInvoker%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-236">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-237">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è segnalato come proprietà di ambiente.</span><span class="sxs-lookup"><span data-stu-id="d8d32-237">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <value>
          <span data-ttu-id="d8d32-238"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene segnalato come proprietà di ambiente; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-238"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-239">La chiamata <xref:System.Xaml.XamlMember.IsAmbient%2A> richiama <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-239">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="d8d32-240">Questo comportamento si verifica nelle implementazioni in cui la logica della reflection interna iniziale non è già impostato le informazioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-240">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="d8d32-241">Verificare la presenza di proprietà di ambiente è in genere fanno parte della logica di elaborazione XAML per assicurarsi che gli oggetti e i valori che si basano sull'utilizzo di ambiente per la qualificazione di tipo possono funzionare correttamente.</span><span class="sxs-lookup"><span data-stu-id="d8d32-241">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="d8d32-242">Le API dei servizi XAML di .NET Framework e il contesto dello schema XAML predefinito consente di popolare il valore in base all'attribuzione con <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-242">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="d8d32-243">L'implementazione predefinita di <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> utilizzerà questo <xref:System.Windows.Markup.AmbientAttribute> tecnica e viene restituito `true` se <xref:System.Windows.Markup.AmbientAttribute> esiste in una dichiarazione di membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-243">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="d8d32-244"><xref:System.Windows.Markup.AmbientAttribute> si trova nei membri di tipi diversi di WPF, tra cui <xref:System.Windows.Application>, <xref:System.Windows.Setter>, e <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-244"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="d8d32-245">Disponibile anche sul <xref:System.Windows.ResourceDictionary> tipo, che indica che qualsiasi membro che usa <xref:System.Windows.ResourceDictionary> poiché il tipo deve essere considerato di ambiente anche se il membro non è stato attribuito in maniera specifica.</span><span class="sxs-lookup"><span data-stu-id="d8d32-245">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-246">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è un membro associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-246">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span></span></summary>
        <value>
          <span data-ttu-id="d8d32-247"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è un membro associabile; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-247"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-248">Il <xref:System.Xaml.XamlMember.IsAttachable%2A> valore viene inizializzato in base al quale costruttore è stato usato per costruire un <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-248">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-249">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è una direttiva XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-249">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span></span></summary>
        <value>
          <span data-ttu-id="d8d32-250"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è una direttiva XAML; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-250"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-251">Il <xref:System.Xaml.XamlMember.IsDirective%2A> valore viene inizializzato in base al quale costruttore è stato usato per costruire un <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-251">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="d8d32-252">La base <xref:System.Xaml.XamlMember> costruttori inizializzano in modo che <xref:System.Xaml.XamlMember.IsDirective%2A> è `false`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-252">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="d8d32-253">Tuttavia, il <xref:System.Xaml.XamlDirective> classe (una <xref:System.Xaml.XamlMember> classe derivata) inizializza in modo che <xref:System.Xaml.XamlMember.IsDirective%2A> è `true`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-253">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="d8d32-254">Se si desidera segnalare <xref:System.Xaml.XamlMember.IsDirective%2A> come `true` ai chiamanti di una classe di schema XAML personalizzata per i membri XAML, assicurarsi che derivi da <xref:System.Xaml.XamlDirective> perché è l'unico modo per abilitare questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-254">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-255">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di evento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-255">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span></span></summary>
        <value>
          <span data-ttu-id="d8d32-256"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-256"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-257">La chiamata <xref:System.Xaml.XamlMember.IsEvent%2A> richiama <xref:System.Xaml.XamlMember.LookupIsEvent%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-257">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-258">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene inizializzato con una stringa <see langword="xamlName" /> valida come <see cref="P:System.Xaml.XamlMember.Name" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-258">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span></span></summary>
        <value>
          <span data-ttu-id="d8d32-259"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene inizializzato con una stringa <see langword="xamlName" /> valida; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-259"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-260">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="d8d32-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span></span></summary>
        <value>
          <span data-ttu-id="d8d32-261"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola lettura; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-261"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-262">La chiamata <xref:System.Xaml.XamlMember.IsReadOnly%2A> richiama <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-262">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-263">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro con una funzione di accesso <see langword="get" /> pubblica che può essere chiamata.</span><span class="sxs-lookup"><span data-stu-id="d8d32-263">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span></span></summary>
        <value>
          <span data-ttu-id="d8d32-264"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una funzione di accesso <see langword="get" /> pubblica; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-264"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-265">Il <xref:System.Xaml.XamlMember.IsReadPublic%2A> valore se i controlli di <xref:System.Xaml.XamlMember.DeclaringType%2A> è pubblico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-265">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="d8d32-266">Se <xref:System.Xaml.XamlMember.DeclaringType%2A> non è pubblico, il `get` funzione di accesso non è possibile chiamare in modo pratico, e <xref:System.Xaml.XamlMember.IsReadPublic%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-266">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="d8d32-267">La chiamata <xref:System.Xaml.XamlMember.IsReadPublic%2A> richiama <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-267">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d8d32-268">Il <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> metodo virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="d8d32-268">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="d8d32-269">La sostituzione è in grado di modificare (o intenzionalmente in caso contrario) le informazioni di accesso restituito di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-269">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="d8d32-270">Per eventuali controlli critici per la sicurezza dei livelli di accesso, utilizzare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-270">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-271">Ottiene un valore che indica se il membro non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-271">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <value>
          <span data-ttu-id="d8d32-272"><see langword="true" /> se il membro non può essere risolto; <see langword="false" /> se il membro può essere risolto.</span><span class="sxs-lookup"><span data-stu-id="d8d32-272"><see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-273">Oggetto <xref:System.Xaml.XamlMember> che viene costruito con la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma restituisce `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-273">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="d8d32-274">Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlMember> con `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A> non può essere scritto in un oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-274">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="d8d32-275">Nelle implementazioni predefinite nelle API dei servizi XAML di .NET Framework, il <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chiamata genera un <xref:System.Xaml.XamlObjectWriterException> quando pertinente <xref:System.Xaml.XamlMember> report `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-275">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="d8d32-276">Non è necessario costruire un <xref:System.Xaml.XamlMember> con un valore di `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A> , a meno che l'implementazione possa gestire le eccezioni da <xref:System.Xaml.XamlObjectWriter>, o in altri modi per regolare il <xref:System.Xaml.XamlObjectWriter> comportamento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-276">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="d8d32-277">La chiamata <xref:System.Xaml.XamlMember.IsUnknown%2A> richiama <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-277">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-278">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura.</span><span class="sxs-lookup"><span data-stu-id="d8d32-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span></span></summary>
        <value>
          <span data-ttu-id="d8d32-279"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-279"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-280">La chiamata <xref:System.Xaml.XamlMember.IsWriteOnly%2A> richiama <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-280">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-281">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica che può essere chiamata.</span><span class="sxs-lookup"><span data-stu-id="d8d32-281">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span></span></summary>
        <value>
          <span data-ttu-id="d8d32-282"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una funzione di accesso <see langword="set" /> pubblica; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-282"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-283">Il <xref:System.Xaml.XamlMember.IsWritePublic%2A> considera come valore se il <xref:System.Xaml.XamlMember.DeclaringType%2A> pubblica come parte della determinazione.</span><span class="sxs-lookup"><span data-stu-id="d8d32-283">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="d8d32-284">Se <xref:System.Xaml.XamlMember.DeclaringType%2A> non è pubblico, il `set` funzione di accesso non è possibile chiamare in modo pratico, e <xref:System.Xaml.XamlMember.IsWritePublic%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-284">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="d8d32-285">La chiamata <xref:System.Xaml.XamlMember.IsWritePublic%2A> richiama <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-285">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d8d32-286">Il <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> metodo virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="d8d32-286">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="d8d32-287">La sostituzione è in grado di modificare (o intenzionalmente in caso contrario) le informazioni di accesso restituito di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-287">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="d8d32-288">Per eventuali controlli critici per la sicurezza dei livelli di accesso, utilizzare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-288">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-289">Quando implementato in una classe derivata, restituisce un'implementazione di <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-289">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="d8d32-290">Un'implementazione <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-290">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-291">Eseguire l'override di questo metodo per fornire la reflection interna con una modalità alternativa per ottenere i valori di attributo CLR.</span><span class="sxs-lookup"><span data-stu-id="d8d32-291">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="d8d32-292">In assenza di una sostituzione, il riflettore interno utilizza la logica tipica della reflection CLR, ad esempio chiamate a <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-292">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="d8d32-293">L'implementazione predefinita restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-293">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-294">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-294">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <returns><span data-ttu-id="d8d32-295">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-295">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-296">Questo metodo viene richiamato quando un chiamante ottiene un valore di <xref:System.Xaml.XamlMember.DeferringLoader%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8d32-296">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="d8d32-297">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlMember.DeferringLoader%2A> per restituire un valore diverso da quello abilitato dalla reflection interna predefinita, e se è necessario specificare personalizzato <xref:System.Xaml.Schema.XamlMemberInvoker> informazioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-297">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="d8d32-298">L'implementazione predefinita restituisce un oggetto tramite la lettura <xref:System.Windows.Markup.XamlDeferLoadAttribute> o tramite un <xref:System.Xaml.XamlDeferringLoader> dal tipo di dichiarazione.</span><span class="sxs-lookup"><span data-stu-id="d8d32-298">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="d8d32-299">Se nessuno dei due oggetti sono disponibili, questo metodo può restituire `null`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-299">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-300">Restituisce un elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-300">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="d8d32-301">Le voci nell'elenco segnalano i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-301">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="d8d32-302">Elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-302">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-303">Questo metodo viene richiamato quando un chiamante ottiene un valore di <xref:System.Xaml.XamlMember.DependsOn%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8d32-303">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="d8d32-304">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlMember.DependsOn%2A> per restituire un valore diverso da quello abilitato dalla reflection interna predefinita, e se è necessario specificare personalizzato <xref:System.Xaml.Schema.XamlMemberInvoker> informazioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-304">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="d8d32-305">Le implementazioni di reader e writer XAML di WPF di questo caso l'attributo <xref:System.Windows.Markup.DependsOnAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-305">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="d8d32-306">L'implementazione predefinita utilizza questo esistente <xref:System.Windows.Markup.DependsOnAttribute> tecnica.</span><span class="sxs-lookup"><span data-stu-id="d8d32-306">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="d8d32-307">Eseguire l'override di questo metodo se non si utilizza <xref:System.Windows.Markup.DependsOnAttribute> per questo scopo e da sostituire tale tecnica per indicare l'ordine di elaborazione della proprietà con la propria tecnica.</span><span class="sxs-lookup"><span data-stu-id="d8d32-307">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="d8d32-308">Se non si intende supportare un ordine di elaborazione delle proprietà, è possibile utilizzare l'implementazione predefinita perché non restituisce alcun risultato, di cui è appropriato.</span><span class="sxs-lookup"><span data-stu-id="d8d32-308">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="d8d32-309">L'elenco è in sola lettura.</span><span class="sxs-lookup"><span data-stu-id="d8d32-309">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-310">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associato a <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-310">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="d8d32-311">Informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> per l'oggetto <see cref="T:System.Xaml.XamlMember" /> oppure <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-311">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-312">Questo metodo viene richiamato da chiamate a <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-312">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="d8d32-313">L'implementazione predefinita non richiede che un <xref:System.Xaml.XamlMember> essere costruito utilizzando uno dei costruttori che passano iniziale <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-313">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="d8d32-314">Tuttavia, un <xref:System.Xaml.XamlMember.UnderlyingMember%2A> valore deve essere presente per il <xref:System.Xaml.XamlMember>; in caso contrario, l'implementazione predefinita restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-314">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="d8d32-315">Eseguire l'override di questo metodo se si deriva anche da <xref:System.Xaml.Schema.XamlMemberInvoker> e si desidera restituire la classe derivata.</span><span class="sxs-lookup"><span data-stu-id="d8d32-315">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="d8d32-316">Se si restituisce `null`, <xref:System.Xaml.XamlMember.Invoker%2A> restituisce <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> ai chiamanti.</span><span class="sxs-lookup"><span data-stu-id="d8d32-316">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-317">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene segnalato come proprietà di ambiente.</span><span class="sxs-lookup"><span data-stu-id="d8d32-317">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-318"><see langword="true" /> per indicare questo oggetto <see cref="T:System.Xaml.XamlMember" /> come proprietà di ambiente; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-318"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-319">Questo metodo viene richiamato da chiamate interne che consentono di controllare per informazioni sulla proprietà di ambiente XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-319">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="d8d32-320">Comportamento di proprietà di ambiente viene considerato per il comportamento di API pubblica di reader XAML e writer XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-320">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="d8d32-321">Le chiamate interne che fanno riferimento a <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> sono in genere parte della logica di elaborazione XAML per assicurarsi che gli oggetti e i valori che si basano sull'utilizzo di ambiente per la qualificazione di tipo possono funzionare correttamente.</span><span class="sxs-lookup"><span data-stu-id="d8d32-321">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="d8d32-322">L'implementazione di servizi XAML di .NET Framework predefinita utilizza attributi CLR per ottenere queste informazioni dalla reflection su tipi di supporto.</span><span class="sxs-lookup"><span data-stu-id="d8d32-322">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="d8d32-323">In particolare, l'implementazione predefinita cerca <xref:System.Windows.Markup.AmbientAttribute> e restituisce `true` per <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> se <xref:System.Windows.Markup.AmbientAttribute> esiste in una definizione di membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-323">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="d8d32-324">Eseguire l'override di questo metodo se non si utilizza <xref:System.Windows.Markup.AmbientAttribute> per questo scopo e da sostituire tale tecnica per indicare le proprietà di ambiente XAML con la propria tecnica.</span><span class="sxs-lookup"><span data-stu-id="d8d32-324">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="d8d32-325">Esempi di API da WPF tale attributo con <xref:System.Windows.Markup.AmbientAttribute> sono <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> e <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-325">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-326">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-326">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-327"><see langword="true" /> per indicare che l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-327"><see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-328">L'implementazione predefinita controlla se <xref:System.Xaml.XamlMember.UnderlyingMember%2A> è di tipo <xref:System.Reflection.EventInfo>e questo caso, restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-328">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="d8d32-329">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-329">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="d8d32-330">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati specializzati disponibili che possono essere interpretati per determinare il XAML rappresentazioni di sistema di tipi per ogni caso.</span><span class="sxs-lookup"><span data-stu-id="d8d32-330">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-331">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà di sola lettura prevista.</span><span class="sxs-lookup"><span data-stu-id="d8d32-331">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-332"><see langword="true" /> per indicare che l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà di sola lettura prevista; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-332"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-333">L'implementazione predefinita restituisce `true` se <xref:System.Xaml.XamlMember.UnderlyingMember%2A> esiste, ma un pubblico `set` della funzione di accesso non esiste, come determinato dalla reflection interna.</span><span class="sxs-lookup"><span data-stu-id="d8d32-333">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="d8d32-334">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-334">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="d8d32-335">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati specializzati disponibili che possono essere interpretati per determinare il XAML rappresentazioni di sistema di tipi per ogni caso.</span><span class="sxs-lookup"><span data-stu-id="d8d32-335">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-336">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="get" /> pubblica.</span><span class="sxs-lookup"><span data-stu-id="d8d32-336">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-337"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="get" /> pubblica; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-337"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-338">L'implementazione predefinita restituisce i risultati in base alla reflection interna o la negazione del <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, elaborati nell'ordine specificato.</span><span class="sxs-lookup"><span data-stu-id="d8d32-338">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="d8d32-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> indica se il membro stesso è pubblico. Restituisce `true` per un membro pubblico in un tipo dichiarante non pubblico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="d8d32-340">Utilizzare <xref:System.Xaml.XamlMember.IsReadPublic%2A> , invece, se si desidera valutare la visibilità del tipo dichiarante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-340">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="d8d32-341">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-341">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="d8d32-342">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-342">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d8d32-343">Il <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> metodo virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="d8d32-343">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="d8d32-344">La sostituzione è in grado di modificare (o intenzionalmente in caso contrario) le informazioni di accesso restituito di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-344">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="d8d32-345">Per eventuali controlli critici per la sicurezza dei livelli di accesso, utilizzare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-345">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-346">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-346">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-347"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che non può essere risolto; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-347"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-348">Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-348">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="d8d32-349">L'implementazione predefinita restituisce risultati che si basano sulla reflection interna o verificando un `null` valore <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, elaborati nell'ordine specificato.</span><span class="sxs-lookup"><span data-stu-id="d8d32-349">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="d8d32-350">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-350">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-351">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica ma non di una funzione di accesso <see langword="get" /> pubblica.</span><span class="sxs-lookup"><span data-stu-id="d8d32-351">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-352"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-352"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-353">L'implementazione predefinita restituisce `true` se un <xref:System.Xaml.XamlMember.UnderlyingMember%2A> esistente che dispone di un pubblico `set` funzione di accesso e un nonpublic `get` funzione di accesso, come determinato dalla reflection interna.</span><span class="sxs-lookup"><span data-stu-id="d8d32-353">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="d8d32-354">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-354">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="d8d32-355">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-355">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-356">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica.</span><span class="sxs-lookup"><span data-stu-id="d8d32-356">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-357"><see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro scrivibile; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-357"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-358">L'implementazione predefinita restituisce risultati basati su reflection interna o la negazione del <xref:System.Xaml.XamlMember.IsReadOnly%2A>, elaborati nell'ordine specificato.</span><span class="sxs-lookup"><span data-stu-id="d8d32-358">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="d8d32-359">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-359">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="d8d32-360">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-360">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d8d32-361">Il <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> metodo virtuale e pertanto può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="d8d32-361">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="d8d32-362">La sostituzione è in grado di modificare (o intenzionalmente in caso contrario) le informazioni di accesso restituito di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-362">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="d8d32-363">Per eventuali controlli critici per la sicurezza dei livelli di accesso, utilizzare invece il tipo CLR sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-363">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-364">Restituisce i caratteri parentesi quadra di apertura e chiusura per un'estensione di markup.</span><span class="sxs-lookup"><span data-stu-id="d8d32-364">Returns the opening and closing bracket characters for a markup extension.</span></span></summary>
        <returns><span data-ttu-id="d8d32-365">Raccolta contenente i caratteri parentesi quadra di apertura e chiusura.</span><span class="sxs-lookup"><span data-stu-id="d8d32-365">A collection containing the opening and closing bracket characters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-366">Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-366">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <returns><span data-ttu-id="d8d32-367">Tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-367">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-368">L'implementazione predefinita viene fatta distinzione tra i membri associabili e non associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-368">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="d8d32-369">Per i membri non associabile, <xref:System.Xaml.XamlMember.LookupTargetType%2A> restituisce sempre <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-369">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="d8d32-370">Per i membri associabili, <xref:System.Xaml.XamlMember.LookupTargetType%2A> restituisce un risultato basato sull'esame di <xref:System.Xaml.XamlMember.UnderlyingMember%2A> il tipo di parametro di funzione di accesso e interpreta quel tipo in base al contesto dello schema XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-370">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="d8d32-371">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.TargetType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-371">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="d8d32-372">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-372">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-373">Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-373">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="d8d32-374">Oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-374">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-375">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-375">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="d8d32-376">Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlMember.Type%2A> per restituire un valore diverso da quello abilitato dalla reflection interna predefinita, e se è necessario specificare personalizzato <xref:System.Xaml.Schema.XamlMemberInvoker> informazioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-376">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="d8d32-377">L'implementazione predefinita utilizza diversi percorsi di codice e significati concettuali per l'oggetto restituito <xref:System.Xaml.XamlType> basato su se questo <xref:System.Xaml.XamlMember> rappresenta una proprietà, un metodo o un evento.</span><span class="sxs-lookup"><span data-stu-id="d8d32-377">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="d8d32-378">Per una proprietà, l'oggetto restituita <xref:System.Xaml.XamlType> è il tipo che imposta la proprietà o viene restituito dalla proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8d32-378">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="d8d32-379">Per un evento, l'oggetto restituito <xref:System.Xaml.XamlType> è il tipo di gestore eventi obbligatorio (un delegato in un'implementazione di Common Language Runtime).</span><span class="sxs-lookup"><span data-stu-id="d8d32-379">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="d8d32-380">Per un metodo, <xref:System.Xaml.XamlType> è il tipo restituito.</span><span class="sxs-lookup"><span data-stu-id="d8d32-380">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="d8d32-381">In ogni caso, il contesto dello schema XAML viene utilizzato per valutare il tipo XAML dal tipo di sistema sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8d32-381">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="d8d32-382">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-382">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="d8d32-383">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-383">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-384">Restituisce un'implementazione del convertitore di tipi associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-384">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="d8d32-385">Istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> oppure <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-385">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-386">L'implementazione predefinita utilizza la logica seguente e l'ordine di elaborazione:</span><span class="sxs-lookup"><span data-stu-id="d8d32-386">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="d8d32-387">Se l'assegnazione di attributi esiste a livello di membro (<xref:System.ComponentModel.TypeConverterAttribute>), le informazioni sull'attributo viene utilizzati per una chiamata a <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> rispetto al contesto dello schema XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-387">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="d8d32-388">Se <xref:System.Xaml.XamlMember.Type%2A> è valido, viene restituito un convertitore di tipi associato al tipo.</span><span class="sxs-lookup"><span data-stu-id="d8d32-388">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="d8d32-389">Se il membro è un evento, viene restituito un convertitore di tipi di evento specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-389">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="d8d32-390">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-390">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="d8d32-391">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-391">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-392">Restituisce una funzione di accesso <see langword="get" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-392">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="d8d32-393">Oggetto <see cref="T:System.Reflection.MethodInfo" /> per la funzione di accesso <see langword="get" /> associata oppure <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-393">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-394">L'implementazione predefinita interpreta il <xref:System.Xaml.XamlMember.UnderlyingMember%2A> proprietà come <xref:System.Reflection.PropertyInfo> e restituisce il valore di <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (con il parametro impostato su `true`), il che significa che il metodo restituito può essere non pubblico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-394">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="d8d32-395">Questo comportamento può comportare `null` per determinati casi.</span><span class="sxs-lookup"><span data-stu-id="d8d32-395">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="d8d32-396">compresi i casi in cui è presente alcuna funzione di accesso associato o il membro non è una proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8d32-396">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="d8d32-397">Questo metodo viene richiamato quando un chiamante ottiene un valore di <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> proprietà in un oggetto associato <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-397">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="d8d32-398">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-398">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="d8d32-399">Assicurarsi di implementare <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> in modo che restituiscano risultati correlati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-399">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-400">Restituisce un oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema di tipo CRL che è associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-400">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="d8d32-401">Oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema di tipo CRL che è associato all'oggetto <see cref="T:System.Xaml.XamlMember" /> oppure <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-401">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-402">L'implementazione predefinita restituisce informazioni sul membro sottostante, si basa sulla costruzione.</span><span class="sxs-lookup"><span data-stu-id="d8d32-402">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="d8d32-403">Se il <xref:System.Reflection.MemberInfo> oggetto viene costruito con una firma che non fornisce informazioni sufficienti per impostare il membro sottostante, questo metodo restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-403">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="d8d32-404">Se un membro sottostante è stato impostato durante la costruzione, non è necessario chiamare questo metodo.</span><span class="sxs-lookup"><span data-stu-id="d8d32-404">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="d8d32-405">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-405">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="d8d32-406">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-406">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="d8d32-407">Assicurarsi di implementare <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> in modo che restituiscano risultati correlati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-407">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-408">Restituisce una funzione di accesso <see langword="set" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-408">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="d8d32-409">Oggetto <see cref="T:System.Reflection.MethodInfo" /> per la funzione di accesso <see langword="set" /> associata oppure <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-409">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-410">L'implementazione predefinita interpreta <xref:System.Xaml.XamlMember.UnderlyingMember%2A> come <xref:System.Reflection.PropertyInfo> e restituisce il valore di <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (con il parametro impostato su `true`), il che significa che il metodo restituito può essere non pubblico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-410">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="d8d32-411">Ciò può comportare `null` per determinati casi, compresi i casi in cui non vi è alcuna funzione di tale accesso o il membro non è una proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8d32-411">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="d8d32-412">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> su un oggetto associato <xref:System.Xaml.Schema.XamlMemberInvoker>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-412">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="d8d32-413">Assicurarsi di implementare <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> in modo che restituiscano risultati correlati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-413">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-414">Restituisce un'implementazione del serializzatore di valori associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-414">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="d8d32-415">Istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-415">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-416">L'implementazione predefinita utilizza la logica seguente e l'ordine di elaborazione:</span><span class="sxs-lookup"><span data-stu-id="d8d32-416">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="d8d32-417">Se l'assegnazione di attributi esiste a livello di membro (<xref:System.Windows.Markup.ValueSerializerAttribute>), le informazioni sull'attributo viene utilizzati per una chiamata a <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> rispetto al contesto dello schema XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-417">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="d8d32-418">Se <xref:System.Xaml.XamlMember.Type%2A> è valido, viene restituito un convertitore di valori che è associato al tipo.</span><span class="sxs-lookup"><span data-stu-id="d8d32-418">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="d8d32-419">Se non si applicano le condizioni precedenti, `null` viene restituito.</span><span class="sxs-lookup"><span data-stu-id="d8d32-419">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="d8d32-420">Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-420">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="d8d32-421">Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-421">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-422">Definisce i caratteri parentesi quadra di apertura e chiusura per un'estensione di markup.</span><span class="sxs-lookup"><span data-stu-id="d8d32-422">Defines the opening and closing bracket characters for a markup extension.</span></span></summary>
        <value><span data-ttu-id="d8d32-423">Raccolta contenente i caratteri parentesi quadra di apertura e chiusura.</span><span class="sxs-lookup"><span data-stu-id="d8d32-423">A collection containing the opening and closing bracket characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-424">Ottiene la stringa del nome <see langword="xamlName" /> che dichiara l'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-424">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="d8d32-425">Stringa del nome <see langword="xamlName" /> che dichiara l'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-425">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-426">Questo valore è sempre impostato durante la costruzione.</span><span class="sxs-lookup"><span data-stu-id="d8d32-426">This value is always set during construction.</span></span> <span data-ttu-id="d8d32-427">I costruttori che vengono implementati da <xref:System.Xaml.XamlMember> in genere genera un'eccezione se non è stato specificato un nome iniziale; pertanto, non bisogna aspettarsi questa proprietà sia `null` o una stringa vuota, se si utilizza l'impostazione predefinita servizi XAML di .NET Framework implementazioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-427">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="d8d32-428">[Grammatica XamlName](~/docs/framework/xaml-services/xamlname-grammar.md) e le regole di denominazione per il tipo CLR e i membri non si intersecano esattamente.</span><span class="sxs-lookup"><span data-stu-id="d8d32-428">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="d8d32-429">È possibile dichiarare un nome di membro che è valido in CLR, ma non è valido nella denominazione XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-429">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="d8d32-430">Se possibile, è consigliabile evitare questa situazione.</span><span class="sxs-lookup"><span data-stu-id="d8d32-430">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="d8d32-431">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-431">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="d8d32-432">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-432">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d8d32-433">Determina se due oggetti <see cref="T:System.Xaml.XamlMember" /> specificati hanno lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="d8d32-433">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-434"><see langword="true" /> se il valore di <paramref name="xamlMember1" /> è uguale al valore di <paramref name="xamlMember2" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-434"><see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="d8d32-435">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="d8d32-436">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-436">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d8d32-437">Determina se due oggetti <see cref="T:System.Xaml.XamlMember" /> specificati hanno valori diversi.</span><span class="sxs-lookup"><span data-stu-id="d8d32-437">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span></span></summary>
        <returns>
          <span data-ttu-id="d8d32-438"><see langword="true" /> se il valore di <paramref name="xamlMember1" /> è diverso dal valore di <paramref name="xamlMember2" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-438"><see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-439">Ottiene il singolo URI dello spazio dei nomi XAML che identifica lo spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-439">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="d8d32-440">Identificatore dello spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlMember" /> in formato stringa.</span><span class="sxs-lookup"><span data-stu-id="d8d32-440">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-441">Il <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> proprietà fornisce lo stesso valore di una chiamata <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> e quindi ottenendo la stringa del primo valore nell'elenco restituito.</span><span class="sxs-lookup"><span data-stu-id="d8d32-441">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="d8d32-442">Spazio dei nomi XAML preferito deve essere utilizzato quando si scrive il membro nuovamente su testo o altri rappresentazioni che mantengono le informazioni dello spazio dei nomi XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-442">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-443">Ottiene un valore di <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> che indica come una finestra di progettazione visiva deve elaborare il membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-443">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span></span></summary>
        <value><span data-ttu-id="d8d32-444">Valore dell'enumerazione <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-444">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span></span> <span data-ttu-id="d8d32-445">Il valore predefinito è <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-445">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-446">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-446">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <value><span data-ttu-id="d8d32-447">Tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-447">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-448">Il valore restituito è diverso per i membri associabili e non associabile.</span><span class="sxs-lookup"><span data-stu-id="d8d32-448">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="d8d32-449">Per i membri non associabile, <xref:System.Xaml.XamlMember.TargetType%2A> restituisce <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-449">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="d8d32-450">Per i membri associabili, <xref:System.Xaml.XamlMember.LookupTargetType%2A> restituisce un risultato che si basa su questa logica:</span><span class="sxs-lookup"><span data-stu-id="d8d32-450">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="d8d32-451">Se non è possibile risolvere la reflection aggiuntiva (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), questo metodo restituisce una costante interna che rappresenta un tipo di oggetto generico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-451">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="d8d32-452">Se la condizione precedente non è applicabile, <xref:System.Xaml.XamlMember.LookupTargetType%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="d8d32-452">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="d8d32-453">L'implementazione predefinita restituisce un <xref:System.Xaml.XamlType> che si basa sull'analisi dei metodi che implementano il `get` e `set` le funzioni di accesso.</span><span class="sxs-lookup"><span data-stu-id="d8d32-453">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="d8d32-454">Può eseguire l'override di una classe <xref:System.Xaml.XamlMember.LookupTargetType%2A> per utilizzare un comportamento diverso, ad esempio altri form di metadati che potrebbe segnalare tipi di destinazione per i membri associabili.</span><span class="sxs-lookup"><span data-stu-id="d8d32-454">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8d32-455">Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-455">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="d8d32-456">Rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-456">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-457">Questa implementazione restituisce <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-457">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-458">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-458">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <value><span data-ttu-id="d8d32-459">Oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</span><span class="sxs-lookup"><span data-stu-id="d8d32-459">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-460">La chiamata <xref:System.Xaml.XamlMember.Type%2A> richiama <xref:System.Xaml.XamlMember.LookupType%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-460">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="d8d32-461">Questo errore si verifica quando la logica della reflection interna iniziale non è già impostato le informazioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-461">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="d8d32-462">Il comportamento predefinito (nessun <xref:System.Xaml.XamlMember.LookupType%2A> eseguire l'override), restituito <xref:System.Xaml.XamlType> può avere diversi significati concettuali.</span><span class="sxs-lookup"><span data-stu-id="d8d32-462">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="d8d32-463">Il significato applicato dipende dal fatto che questo <xref:System.Xaml.XamlMember> rappresenta una proprietà, un metodo o un evento, come illustrato nel seguente elenco:</span><span class="sxs-lookup"><span data-stu-id="d8d32-463">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="d8d32-464">Per una proprietà, l'oggetto restituita <xref:System.Xaml.XamlType> è il tipo che imposta la proprietà o viene restituito dalla proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8d32-464">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="d8d32-465">Per un evento, l'oggetto restituito <xref:System.Xaml.XamlType> è il tipo di gestore eventi obbligatorio (un delegato in un'implementazione di Common Language Runtime).</span><span class="sxs-lookup"><span data-stu-id="d8d32-465">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="d8d32-466">Per un metodo, <xref:System.Xaml.XamlType> è il tipo restituito del metodo, che può essere `null`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-466">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="d8d32-467">In ogni caso, il contesto dello schema XAML viene utilizzato per valutare il tipo XAML dal tipo di supporto.</span><span class="sxs-lookup"><span data-stu-id="d8d32-467">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-468">Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che può essere utilizzato per la costruzione della conversione di tipi degli oggetti XAML dichiarati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-468">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="d8d32-469">Valore di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con un vincolo <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo generico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-469">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-470">La chiamata <xref:System.Xaml.XamlMember.TypeConverter%2A> richiama <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-470">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="d8d32-471">Questo comportamento si verifica quando la logica della reflection interna iniziale non è già impostato le informazioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-471">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="d8d32-472">Il valore per le implementazioni che restituiscono una proprietà non null <xref:System.Xaml.XamlMember.TypeConverter%2A> non sono necessariamente un lavoro <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-472">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="d8d32-473">Di seguito è riportato un elenco di possibili valori restituiti non null per <xref:System.Xaml.XamlMember.TypeConverter%2A> e tali valori rappresentano:</span><span class="sxs-lookup"><span data-stu-id="d8d32-473">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="d8d32-474">Il valore restituito indica un convertitore di tipi con attribuito in modo specifico per tale membro o più in generale per il tipo di destinazione del convertitore.</span><span class="sxs-lookup"><span data-stu-id="d8d32-474">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="d8d32-475">Questo comportamento è in genere quali la maggior parte dei sistemi di tipi XAML e i processori XAML cercano per creare un'istanza di un convertitore di tipi e richiamare i metodi.</span><span class="sxs-lookup"><span data-stu-id="d8d32-475">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="d8d32-476">Il valore restituito indica un convertitore di valori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="d8d32-476">The return value reports a built-in value converter.</span></span> <span data-ttu-id="d8d32-477">Questi convertitori esistono per determinate operazioni interne effettuate da un writer XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-477">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="d8d32-478">In particolare, i convertitori di valori incorporati convertire i valori di stringa dell'attributo non elaborato per le primitive di livello di linguaggio XAML.</span><span class="sxs-lookup"><span data-stu-id="d8d32-478">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="d8d32-479">Per l'implementazione di servizi XAML di .NET Framework, queste conversioni dei tipi incorporati spesso passano a un convertitore di tipi definiti nell'assembly System.</span><span class="sxs-lookup"><span data-stu-id="d8d32-479">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="d8d32-480">Ad esempio, una conversione di un <xref:System.Int32> valore include conversione inoltrata e, pertanto, il <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> valore riferimenti <xref:System.ComponentModel.Int32Converter>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-480">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="d8d32-481">Il valore restituito indica il caso speciale di un modello a oggetti non vincolato; vale a dire il <xref:System.Xaml.XamlMember> ha un <xref:System.Xaml.XamlMember.Type%2A> valore <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-481">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="d8d32-482">In questo caso, il <xref:System.Xaml.Schema.XamlValueConverter%601> segnala che il <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> è {`Object}`.</span><span class="sxs-lookup"><span data-stu-id="d8d32-482">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="d8d32-483">Tuttavia, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> è `null` perché nessun tipo o istanza effettiva è disponibile per eseguire la conversione.</span><span class="sxs-lookup"><span data-stu-id="d8d32-483">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="d8d32-484">Al contrario, il comportamento del modello oggetto non è possibile determinare in fase di esecuzione, quando il runtime della tecnologia specifico determina la gestione dell'oggetto grafico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-484">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="d8d32-485">Se è possibile accedere a un lavoro <xref:System.ComponentModel.TypeConverter> da <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, è possibile richiamare i metodi di conversione.</span><span class="sxs-lookup"><span data-stu-id="d8d32-485">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="d8d32-486">Tuttavia, molti metodi di conversione si basano sul contesto del servizio.</span><span class="sxs-lookup"><span data-stu-id="d8d32-486">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="d8d32-487">Se non è disponibile lo stesso servizio contesto che il convertitore di tipi prevista per il ruolo tipico della scrittura di oggetti per oggetti grafici, i metodi del convertitore possono generare eccezioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-487">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-488">Ottiene l'oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema del tipo CRL che è disponibile per un membro costruito da <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> o <see cref="T:System.Reflection.EventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-488">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span></span></summary>
        <value><span data-ttu-id="d8d32-489">Informazioni sull'oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema del tipo CRL, come cast dai parametri del costruttore iniziali.</span><span class="sxs-lookup"><span data-stu-id="d8d32-489">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span></span> <span data-ttu-id="d8d32-490">Un oggetto <see cref="T:System.Xaml.XamlMember" /> che viene costruito con la firma di <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> restituisce <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8d32-490">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-491">La chiamata <xref:System.Xaml.XamlMember.UnderlyingMember%2A> richiama <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-491">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8d32-492">Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che viene utilizzato per la serializzazione di valori degli oggetti XAML dichiarati.</span><span class="sxs-lookup"><span data-stu-id="d8d32-492">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="d8d32-493">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> per il tipo generico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-493">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8d32-494">La chiamata <xref:System.Xaml.XamlMember.ValueSerializer%2A> richiama <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> o un override del metodo specifico.</span><span class="sxs-lookup"><span data-stu-id="d8d32-494">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="d8d32-495">Questo comportamento si verifica quando la logica della reflection interna iniziale non è già impostato le informazioni.</span><span class="sxs-lookup"><span data-stu-id="d8d32-495">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="d8d32-496">Non tutti i casi che restituiscono una proprietà non null il valore per <xref:System.Xaml.XamlMember.ValueSerializer%2A> sono necessariamente un lavoro <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-496">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="d8d32-497">Vedere <xref:System.Xaml.XamlMember.TypeConverter%2A>; le stesse considerazioni si applicano a <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8d32-497">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>