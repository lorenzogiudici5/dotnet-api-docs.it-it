<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="284b342cd8ec18017e3ac4ac33597d46dbc3c75f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30721105" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce l'identificatore di sistema dei tipi XAML per i membri dei tipi XAML. L'identificatore viene utilizzato dai reader e dai writer XAML durante l'elaborazione dei nodi membri (quando il reader XAML viene posizionato su un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" />) e anche per la logica di sistema di tipo XAML generale.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember> può usare le metodologie di tre per la restituzione di informazioni su un membro XAML: standard reflection common language runtime (CLR); una tecnica di riferimento sola reflection chiamata interna con flag di bit tale uso ottimizzato API o chiamare virtuale esegue l'override del `Lookup*` API fornita da possibili <xref:System.Xaml.XamlMember> sottoclassi. Per la maggior parte degli usi dell'API dei servizi XAML di .NET Framework e <xref:System.Xaml.XamlMember> API, utilizzare il contesto dello schema XAML predefinito. Contesto dello schema XAML predefinito per i servizi XAML di .NET Framework Usa il supporto per il sistema di tipi CLR. In questo modo il reader XAML e writer XAML implementati funzionare con qualsiasi tipo o membro è definito in o in caso contrario disponibile per, Common Language Runtime e relative tecniche di reflection.  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a>Le classi derivate di XamlMember e le API di ricerca *  
 <xref:System.Xaml.XamlMember> definisce diverse potrebbero eseguire l'override di membri virtuali che le classi derivate. Questi membri hanno nomi che iniziano sempre con la stringa `Lookup`. Il resto dell'API di assegnare un nome riferimenti quindi la proprietà che influenza il metodo virtuale. Ad esempio, un <xref:System.Xaml.XamlMember> classe derivata può sostituire <xref:System.Xaml.XamlMember.LookupTargetType%2A> per influenzare quali la proprietà definita base <xref:System.Xaml.XamlMember.TargetType%2A> restituisce in una classe derivata. È possibile stimare i valori restituiti per tali proprietà in <xref:System.Xaml.XamlMember> o classi derivate esistenti leggendo la documentazione pertinente `Lookup*` metodi.  
  
 Lo scopo del `Lookup*` metodi consiste nel fornire una tecnica di estensione del sistema di tipi XAML che incorpora la <xref:System.Xaml.XamlMember> classe di base. Mediante la derivazione da <xref:System.Xaml.XamlMember> ed eseguendo l'override di `Lookup` membri virtuali, può definire il concetto di un membro XAML per uno schema XAML in un sistema di tipi XAML senza essere legati alle specifiche di un sistema di tipi di backup o una tecnologia. È possibile utilizzare anche un contesto dello schema XAML fornito in questo schema e restituire i risultati desiderati.  
  
 Ad esempio, prendere in considerazione il <xref:System.Xaml.XamlMember> proprietà <xref:System.Xaml.XamlMember.IsWritePublic%2A>. Questa proprietà informa i chiamanti che le operazioni, ad esempio utilizzando un <xref:System.Xaml.XamlWriter> per la serializzazione può scrivere un valore per questo membro su un oggetto di destinazione. Nell'implementazione predefinita, la determinazione indica se il membro è accessibile in scrittura viene eseguita utilizzando tecniche di reflection rispetto a CLR sottostante <xref:System.Type> e i relativi membri (il <xref:System.Reflection.MemberInfo>). Pertanto, per impostazione predefinita, il sistema di tipi XAML dipende dal sistema di tipo CLR. Tuttavia, è possibile rimuovere questa dipendenza per il sistema report del tipo XAML <xref:System.Xaml.XamlMember.IsWritePublic%2A> eseguendo l'override dell'API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>. Nell'override, è possibile utilizzare altre determinazioni, ad esempio metadati specifici per la tecnologia, una tabella di ricerca master ottimizzata per un vocabolario XAML fisso, o una varietà di altre strategie per determinare se un membro XAML è modificabile nel Vocabolario XAML.  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a>Costruzione di XamlMember senza contesto dello Schema XAML  
 La maggior parte dei costruttori di <xref:System.Xaml.XamlMember> richiedono un <xref:System.Xaml.XamlSchemaContext> come parte dell'inizializzazione. Il <xref:System.Xaml.XamlSchemaContext> è inoltre necessario per molti interno <xref:System.Xaml.XamlSchemaContext> operazioni, ad esempio per ottenere informazioni che viene inoltrate dal tipo di supporto. Quando si lavora con la <xref:System.Xaml.XamlMember> API, in genere è un <xref:System.Xaml.XamlSchemaContext> che è disponibile da un costrutto circostante, ad esempio un <xref:System.Xaml.XamlWriter>. In questo caso, è possibile passare il <xref:System.Xaml.XamlSchemaContext> fanno riferimento a tutte le chiamate di tipi XAML sistema che richiedono un contesto dello schema XAML.  
  
 Un costruttore specifico, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, non richiede un <xref:System.Xaml.XamlSchemaContext>. Tuttavia, un <xref:System.Xaml.XamlMember> che viene costruito con la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma restituisce `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, tale membro non può essere scritto in un oggetto grafico. Tramite l'implementazione di servizi XAML di .NET Framework, il <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chiamata genera un <xref:System.Xaml.XamlObjectWriterException> quando pertinente <xref:System.Xaml.XamlMember> report `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Non è necessario costruire un <xref:System.Xaml.XamlMember> con un valore di `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A> , a meno che l'implementazione possa gestire le eccezioni da <xref:System.Xaml.XamlObjectWriter>, o in altri modi per regolare il <xref:System.Xaml.XamlObjectWriter> comportamento. Ad esempio, potrebbe essere vero dell'implementazione di uno o più delle operazioni seguenti:  
  
-   Contesto dello schema XAML è disponibile in un secondo momento.  
  
-   Utilizzare un modello di membro invoker.  
  
-   Si esegue l'override deliberatamente <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in un writer XAML personalizzato.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo">Oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL che rappresenta il membro dell'evento.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando <see cref="T:System.Reflection.EventInfo" /> del sistema di tipi CLR e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta un evento (proprietà del punto di connessione del gestore eventi).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipo CRL che rappresenta il membro della proprietà.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipi CLR e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta una proprietà (e in particolare non è una connessione del gestore eventi).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo">Oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL che rappresenta il membro dell'evento.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <param name="invoker">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate con reflection di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando l'oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta un evento (o una proprietà del punto di connessione del gestore di evento).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipo CRL che rappresenta il membro della proprietà.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <param name="invoker">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando l'oggetto <see cref="T:System.Reflection.PropertyInfo" /> di reflection e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore solo se il membro rappresenta una proprietà e se non è una connessione del gestore eventi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">Nome della stringa dell'evento associabile.</param>
        <param name="adder">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per il metodo <see langword="Add" /> di gestione dell'implementazione di supporto del membro associabile.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta un evento associabile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta un membro evento associabile.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Nome della stringa del membro.</param>
        <param name="declaringType">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo dichiarante.</param>
        <param name="isAttachable">
          <see langword="true" /> per indicare che il membro è associabile; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando il nome di una stringa e le informazioni sull'oggetto <see cref="T:System.Xaml.XamlType" /> dichiarante. Un oggetto <see cref="T:System.Xaml.XamlMember" /> costruito con questa firma ha limitazioni significative.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Xaml.XamlMember> che viene costruito con la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma restituisce `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, tale membro non può essere scritto in un oggetto grafico. Tramite l'implementazione di servizi XAML di .NET Framework, il <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chiamata genera un <xref:System.Xaml.XamlObjectWriterException> quando pertinente <xref:System.Xaml.XamlMember> report `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Non è necessario costruire un <xref:System.Xaml.XamlMember> con <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` , a meno che l'implementazione possa gestire le eccezioni da <xref:System.Xaml.XamlObjectWriter>, o in altri modi per regolare il <xref:System.Xaml.XamlObjectWriter> comportamento. Ad esempio, potrebbe essere vero dell'implementazione di uno o più delle operazioni seguenti:  
  
-   Contesto dello schema XAML è disponibile in un secondo momento.  
  
-   Utilizzare un modello di membro invoker.  
  
-   Si esegue l'override deliberatamente <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in un writer XAML personalizzato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> o <paramref name="declaringType" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">Nome della stringa della proprietà associabile.</param>
        <param name="getter">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="get" /> dell'implementazione di supporto del membro associabile.</param>
        <param name="setter">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="set" /> dell'implementazione di supporto del membro associabile.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta una proprietà associabile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il membro rappresenta una proprietà associabile, utilizzare questo costruttore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">Nome della stringa dell'evento associabile.</param>
        <param name="adder">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per il metodo <see langword="Add" /> di gestione dell'implementazione di supporto del membro associabile.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <param name="invoker">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta un evento associabile, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta un membro evento associabile.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">Nome della stringa della proprietà associabile.</param>
        <param name="getter">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="get" /> dell'implementazione di supporto del membro associabile.</param>
        <param name="setter">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="set" /> dell'implementazione di supporto del membro associabile.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <param name="invoker">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta una proprietà associabile, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il membro rappresenta un membro di proprietà associabile, utilizzare questo costruttore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo che dichiara il membro associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo che dichiara il membro associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore viene in genere impostato durante l'inizializzazione e non è in genere `null`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlMember.DeclaringType%2A> informazioni possono essere passate dai costruttori per l'inizializzazione. Chiamando direttamente nei costruttori base, l'inizializzazione per <xref:System.Xaml.XamlMember> classi derivate è possono omettere alcuni dei controlli del valore che vengono apportati nella classe base. Pertanto, l'inizializzazione derivata può modificare le informazioni sulle relazioni di membro di tipo restituito di un membro XAML in modo che non si allinei nel modo previsto con le informazioni sul sistema di tipo della relativa dichiarazione CLR sottostante. Per eventuali controlli critici per la sicurezza di informazioni sul tipo dichiarante, utilizzare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, che viene utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</summary>
        <value>Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.DeferringLoader%2A> richiama <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> o un override del metodo specifico. Questo comportamento si verifica nei casi in cui la logica della reflection interna iniziale non è già impostato le informazioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un elenco di oggetti <see cref="T:System.Xaml.XamlMember" />. Tali oggetti segnalano i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.DependsOn%2A> richiama <xref:System.Xaml.XamlMember.LookupDependsOn%2A> o un override del metodo specifico. Questo comportamento si verifica nei casi in cui la logica della reflection interna iniziale non è già impostato le informazioni.  
  
 Il `DependsOn` modello può essere applicato a case del modello di oggetto che intenzionalmente contraddicono una regola XAML generale. La regola XAML generale è che i membri di un tipo che non vengono passati come testo di inizializzazione (o da un metodo factory in XAML 2009) devono essere in grado di essere assegnato in qualsiasi ordine. Applicando un `DependsOn` di schema a un membro, è possibile indicare i writer XAML elaborare sempre il membro a cui si fa riferimento prima di questo membro. È possibile applicare questo modello nelle situazioni in cui il valore del membro corrente richiede un contesto o altre informazioni che sono disponibile solo dopo aver impostato l'altro membro.  
  
 Il `DependsOn` modello deve essere applicato con cautela e riservato per gli scenari di proprietà in cui ha uno scopo dell'architettura. Un numero elevato di dipendenze possono rallentare l'elaborazione di XAML. Inoltre, è possibile produrre dipendenze circolari, nel qual caso non è definito il comportamento di elaborazione XAML.  
  
 Esempio `DependsOn` scenari da WPF includono determinate proprietà su <xref:System.Windows.Controls.ControlTemplate> e <xref:System.Windows.DataTemplate>via <xref:System.Windows.Trigger>e nella <xref:System.Windows.Setter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indica se l'oggetto corrente è uguale a un altro oggetto.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
        <summary>Indica se l'oggetto corrente è uguale a un altro oggetto.</summary>
        <returns>
          <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'oggetto corrente.</param>
        <summary>Indica se l'oggetto corrente è uguale a un altro oggetto dello stesso tipo.</summary>
        <returns>
          <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash per questo oggetto.</summary>
        <returns>Codice hash di un intero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un elenco di spazi dei nomi XAML in cui può essere presente questo membro XAML.</summary>
        <returns>Elenco di identificatori degli spazi dei nomi XAML in formato stringa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce il <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> risultato dalla chiamata di <xref:System.Xaml.XamlMember.DeclaringType%2A> che è associata a questo <xref:System.Xaml.XamlMember>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Invoker` modello è una tecnica di estensione del sistema di tipi XAML avanzata. Il `Invoker` modello fornisce un modo per inserire i comportamenti di mapping di tipi di schema diverso, pur continuando a utilizzare definizioni di sistema di tipi di XAML dai servizi XAML di .NET Framework.  
  
 Se un <xref:System.Xaml.XamlMember.LookupInvoker%2A> override restituisce `null`, o se l'implementazione predefinita restituisce `null` perché manca il <xref:System.Xaml.XamlMember.UnderlyingMember%2A> per questo <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlMember.Invoker%2A> restituisce proprietà <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.  
  
 Il valore predefinito è <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>. Questo vale per la maggior parte delle operazioni che utilizzano servizi XAML di .NET Framework e il contesto dello schema XAML predefinito e in cui eseguire l'override alcuna specifica `Invoker` è passato per la costruzione di entità di sistema di tipo XAML.  
  
 La chiamata <xref:System.Xaml.XamlMember.Invoker%2A> richiama <xref:System.Xaml.XamlMember.LookupInvoker%2A> o un override del metodo specifico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è segnalato come proprietà di ambiente.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene segnalato come proprietà di ambiente; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.IsAmbient%2A> richiama <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> o un override del metodo specifico. Questo comportamento si verifica nelle implementazioni in cui la logica della reflection interna iniziale non è già impostato le informazioni.  
  
 Verificare la presenza di proprietà di ambiente è in genere fanno parte della logica di elaborazione XAML per assicurarsi che gli oggetti e i valori che si basano sull'utilizzo di ambiente per la qualificazione di tipo possono funzionare correttamente. Le API dei servizi XAML di .NET Framework e il contesto dello schema XAML predefinito consente di popolare il valore in base all'attribuzione con <xref:System.Windows.Markup.AmbientAttribute>. L'implementazione predefinita di <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> utilizzerà questo <xref:System.Windows.Markup.AmbientAttribute> tecnica e viene restituito `true` se <xref:System.Windows.Markup.AmbientAttribute> esiste in una dichiarazione di membro.  
  
 <xref:System.Windows.Markup.AmbientAttribute> si trova nei membri di tipi diversi di WPF, tra cui <xref:System.Windows.Application>, <xref:System.Windows.Setter>, e <xref:System.Windows.Style>. Disponibile anche sul <xref:System.Windows.ResourceDictionary> tipo, che indica che qualsiasi membro che usa <xref:System.Windows.ResourceDictionary> poiché il tipo deve essere considerato di ambiente anche se il membro non è stato attribuito in maniera specifica.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è un membro associabile.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è un membro associabile; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlMember.IsAttachable%2A> valore viene inizializzato in base al quale costruttore è stato usato per costruire un <xref:System.Xaml.XamlMember>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è una direttiva XAML.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è una direttiva XAML; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlMember.IsDirective%2A> valore viene inizializzato in base al quale costruttore è stato usato per costruire un <xref:System.Xaml.XamlMember>. La base <xref:System.Xaml.XamlMember> costruttori inizializzano in modo che <xref:System.Xaml.XamlMember.IsDirective%2A> è `false`. Tuttavia, il <xref:System.Xaml.XamlDirective> classe (una <xref:System.Xaml.XamlMember> classe derivata) inizializza in modo che <xref:System.Xaml.XamlMember.IsDirective%2A> è `true`.  
  
 Se si desidera segnalare <xref:System.Xaml.XamlMember.IsDirective%2A> come `true` ai chiamanti di una classe di schema XAML personalizzata per i membri XAML, assicurarsi che derivi da <xref:System.Xaml.XamlDirective> perché è l'unico modo per abilitare questo comportamento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di evento.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.IsEvent%2A> richiama <xref:System.Xaml.XamlMember.LookupIsEvent%2A> o un override del metodo specifico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene inizializzato con una stringa <see langword="xamlName" /> valida come <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene inizializzato con una stringa <see langword="xamlName" /> valida; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola lettura.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola lettura; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.IsReadOnly%2A> richiama <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> o un override del metodo specifico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro con una funzione di accesso <see langword="get" /> pubblica che può essere chiamata.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una funzione di accesso <see langword="get" /> pubblica; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlMember.IsReadPublic%2A> valore se i controlli di <xref:System.Xaml.XamlMember.DeclaringType%2A> è pubblico. Se <xref:System.Xaml.XamlMember.DeclaringType%2A> non è pubblico, il `get` funzione di accesso non è possibile chiamare in modo pratico, e <xref:System.Xaml.XamlMember.IsReadPublic%2A> restituisce `false`.  
  
 La chiamata <xref:System.Xaml.XamlMember.IsReadPublic%2A> richiama <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> o un override del metodo specifico.  
  
> [!IMPORTANT]
>  Il <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> metodo virtuale e pertanto può essere sottoposto a override. La sostituzione è in grado di modificare (o intenzionalmente in caso contrario) le informazioni di accesso restituito di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione CLR sottostante. Per eventuali controlli critici per la sicurezza dei livelli di accesso, utilizzare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il membro non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</summary>
        <value>
          <see langword="true" /> se il membro non può essere risolto; <see langword="false" /> se il membro può essere risolto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Xaml.XamlMember> che viene costruito con la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma restituisce `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlMember> con `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A> non può essere scritto in un oggetto grafico. Nelle implementazioni predefinite nelle API dei servizi XAML di .NET Framework, il <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chiamata genera un <xref:System.Xaml.XamlObjectWriterException> quando pertinente <xref:System.Xaml.XamlMember> report `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Non è necessario costruire un <xref:System.Xaml.XamlMember> con un valore di `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A> , a meno che l'implementazione possa gestire le eccezioni da <xref:System.Xaml.XamlObjectWriter>, o in altri modi per regolare il <xref:System.Xaml.XamlObjectWriter> comportamento.  
  
 La chiamata <xref:System.Xaml.XamlMember.IsUnknown%2A> richiama <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> o un override del metodo specifico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.IsWriteOnly%2A> richiama <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> o un override del metodo specifico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica che può essere chiamata.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una funzione di accesso <see langword="set" /> pubblica; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlMember.IsWritePublic%2A> considera come valore se il <xref:System.Xaml.XamlMember.DeclaringType%2A> pubblica come parte della determinazione. Se <xref:System.Xaml.XamlMember.DeclaringType%2A> non è pubblico, il `set` funzione di accesso non è possibile chiamare in modo pratico, e <xref:System.Xaml.XamlMember.IsWritePublic%2A> restituisce `false`.  
  
 La chiamata <xref:System.Xaml.XamlMember.IsWritePublic%2A> richiama <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> o un override del metodo specifico.  
  
> [!IMPORTANT]
>  Il <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> metodo virtuale e pertanto può essere sottoposto a override. La sostituzione è in grado di modificare (o intenzionalmente in caso contrario) le informazioni di accesso restituito di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione CLR sottostante. Per eventuali controlli critici per la sicurezza dei livelli di accesso, utilizzare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementato in una classe derivata, restituisce un'implementazione di <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
        <returns>Un'implementazione <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di questo metodo per fornire la reflection interna con una modalità alternativa per ottenere i valori di attributo CLR. In assenza di una sostituzione, il riflettore interno utilizza la logica tipica della reflection CLR, ad esempio chiamate a <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.  
  
 L'implementazione predefinita restituisce `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato quando un chiamante ottiene un valore di <xref:System.Xaml.XamlMember.DeferringLoader%2A> proprietà. Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlMember.DeferringLoader%2A> per restituire un valore diverso da quello abilitato dalla reflection interna predefinita, e se è necessario specificare personalizzato <xref:System.Xaml.Schema.XamlMemberInvoker> informazioni.  
  
 L'implementazione predefinita restituisce un oggetto tramite la lettura <xref:System.Windows.Markup.XamlDeferLoadAttribute> o tramite un <xref:System.Xaml.XamlDeferringLoader> dal tipo di dichiarazione. Se nessuno dei due oggetti sono disponibili, questo metodo può restituire `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un elenco di oggetti <see cref="T:System.Xaml.XamlMember" />. Le voci nell'elenco segnalano i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato quando un chiamante ottiene un valore di <xref:System.Xaml.XamlMember.DependsOn%2A> proprietà. Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlMember.DependsOn%2A> per restituire un valore diverso da quello abilitato dalla reflection interna predefinita, e se è necessario specificare personalizzato <xref:System.Xaml.Schema.XamlMemberInvoker> informazioni.  
  
 Le implementazioni di reader e writer XAML di WPF di questo caso l'attributo <xref:System.Windows.Markup.DependsOnAttribute>. L'implementazione predefinita utilizza questo esistente <xref:System.Windows.Markup.DependsOnAttribute> tecnica.  
  
 Eseguire l'override di questo metodo se non si utilizza <xref:System.Windows.Markup.DependsOnAttribute> per questo scopo e da sostituire tale tecnica per indicare l'ordine di elaborazione della proprietà con la propria tecnica. Se non si intende supportare un ordine di elaborazione delle proprietà, è possibile utilizzare l'implementazione predefinita perché non restituisce alcun risultato, di cui è appropriato.  
  
 L'elenco è in sola lettura.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associato a <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> per l'oggetto <see cref="T:System.Xaml.XamlMember" /> oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato da chiamate a <xref:System.Xaml.XamlMember.Invoker%2A>.  
  
 L'implementazione predefinita non richiede che un <xref:System.Xaml.XamlMember> essere costruito utilizzando uno dei costruttori che passano iniziale <xref:System.Xaml.Schema.XamlMemberInvoker>. Tuttavia, un <xref:System.Xaml.XamlMember.UnderlyingMember%2A> valore deve essere presente per il <xref:System.Xaml.XamlMember>; in caso contrario, l'implementazione predefinita restituisce `null`.  
  
 Eseguire l'override di questo metodo se si deriva anche da <xref:System.Xaml.Schema.XamlMemberInvoker> e si desidera restituire la classe derivata. Se si restituisce `null`, <xref:System.Xaml.XamlMember.Invoker%2A> restituisce <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> ai chiamanti.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene segnalato come proprietà di ambiente.</summary>
        <returns>
          <see langword="true" /> per indicare questo oggetto <see cref="T:System.Xaml.XamlMember" /> come proprietà di ambiente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato da chiamate interne che consentono di controllare per informazioni sulla proprietà di ambiente XAML. Comportamento di proprietà di ambiente viene considerato per il comportamento di API pubblica di reader XAML e writer XAML. Le chiamate interne che fanno riferimento a <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> sono in genere parte della logica di elaborazione XAML per assicurarsi che gli oggetti e i valori che si basano sull'utilizzo di ambiente per la qualificazione di tipo possono funzionare correttamente. L'implementazione di servizi XAML di .NET Framework predefinita utilizza attributi CLR per ottenere queste informazioni dalla reflection su tipi di supporto. In particolare, l'implementazione predefinita cerca <xref:System.Windows.Markup.AmbientAttribute> e restituisce `true` per <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> se <xref:System.Windows.Markup.AmbientAttribute> esiste in una definizione di membro.  
  
 Eseguire l'override di questo metodo se non si utilizza <xref:System.Windows.Markup.AmbientAttribute> per questo scopo e da sostituire tale tecnica per indicare le proprietà di ambiente XAML con la propria tecnica.  
  
 Esempi di API da WPF tale attributo con <xref:System.Windows.Markup.AmbientAttribute> sono <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> e <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento.</summary>
        <returns>
          <see langword="true" /> per indicare che l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita controlla se <xref:System.Xaml.XamlMember.UnderlyingMember%2A> è di tipo <xref:System.Reflection.EventInfo>e questo caso, restituisce `true`.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsEvent%2A>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati specializzati disponibili che possono essere interpretati per determinare il XAML rappresentazioni di sistema di tipi per ogni caso.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà di sola lettura prevista.</summary>
        <returns>
          <see langword="true" /> per indicare che l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà di sola lettura prevista; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce `true` se <xref:System.Xaml.XamlMember.UnderlyingMember%2A> esiste, ma un pubblico `set` della funzione di accesso non esiste, come determinato dalla reflection interna.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsReadOnly%2A>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati specializzati disponibili che possono essere interpretati per determinare il XAML rappresentazioni di sistema di tipi per ogni caso.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="get" /> pubblica.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="get" /> pubblica; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce i risultati in base alla reflection interna o la negazione del <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, elaborati nell'ordine specificato.  
  
 <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> indica se il membro stesso è pubblico. Restituisce `true` per un membro pubblico in un tipo dichiarante non pubblico. Utilizzare <xref:System.Xaml.XamlMember.IsReadPublic%2A> , invece, se si desidera valutare la visibilità del tipo dichiarante.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsReadPublic%2A>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.  
  
> [!IMPORTANT]
>  Il <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> metodo virtuale e pertanto può essere sottoposto a override. La sostituzione è in grado di modificare (o intenzionalmente in caso contrario) le informazioni di accesso restituito di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione CLR sottostante. Per eventuali controlli critici per la sicurezza dei livelli di accesso, utilizzare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che non può essere risolto; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsUnknown%2A>. L'implementazione predefinita restituisce risultati che si basano sulla reflection interna o verificando un `null` valore <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, elaborati nell'ordine specificato.  
  
 Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica ma non di una funzione di accesso <see langword="get" /> pubblica.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce `true` se un <xref:System.Xaml.XamlMember.UnderlyingMember%2A> esistente che dispone di un pubblico `set` funzione di accesso e un nonpublic `get` funzione di accesso, come determinato dalla reflection interna.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsWriteOnly%2A>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro scrivibile; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce risultati basati su reflection interna o la negazione del <xref:System.Xaml.XamlMember.IsReadOnly%2A>, elaborati nell'ordine specificato.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.IsWritePublic%2A>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.  
  
> [!IMPORTANT]
>  Il <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> metodo virtuale e pertanto può essere sottoposto a override. La sostituzione è in grado di modificare (o intenzionalmente in caso contrario) le informazioni di accesso restituito di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione CLR sottostante. Per eventuali controlli critici per la sicurezza dei livelli di accesso, utilizzare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce i caratteri parentesi quadra di apertura e chiusura per un'estensione di markup.</summary>
        <returns>Raccolta contenente i caratteri parentesi quadra di apertura e chiusura.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita viene fatta distinzione tra i membri associabili e non associabile. Per i membri non associabile, <xref:System.Xaml.XamlMember.LookupTargetType%2A> restituisce sempre <xref:System.Xaml.XamlMember.DeclaringType%2A>. Per i membri associabili, <xref:System.Xaml.XamlMember.LookupTargetType%2A> restituisce un risultato basato sull'esame di <xref:System.Xaml.XamlMember.UnderlyingMember%2A> il tipo di parametro di funzione di accesso e interpreta quel tipo in base al contesto dello schema XAML.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.TargetType%2A>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.Type%2A>. Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlMember.Type%2A> per restituire un valore diverso da quello abilitato dalla reflection interna predefinita, e se è necessario specificare personalizzato <xref:System.Xaml.Schema.XamlMemberInvoker> informazioni.  
  
 L'implementazione predefinita utilizza diversi percorsi di codice e significati concettuali per l'oggetto restituito <xref:System.Xaml.XamlType> basato su se questo <xref:System.Xaml.XamlMember> rappresenta una proprietà, un metodo o un evento.  
  
-   Per una proprietà, l'oggetto restituita <xref:System.Xaml.XamlType> è il tipo che imposta la proprietà o viene restituito dalla proprietà.  
  
-   Per un evento, l'oggetto restituito <xref:System.Xaml.XamlType> è il tipo di gestore eventi obbligatorio (un delegato in un'implementazione di Common Language Runtime).  
  
-   Per un metodo, <xref:System.Xaml.XamlType> è il tipo restituito.  
  
 In ogni caso, il contesto dello schema XAML viene utilizzato per valutare il tipo XAML dal tipo di sistema sottostante.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.Type%2A>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un'implementazione del convertitore di tipi associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita utilizza la logica seguente e l'ordine di elaborazione:  
  
-   Se l'assegnazione di attributi esiste a livello di membro (<xref:System.ComponentModel.TypeConverterAttribute>), le informazioni sull'attributo viene utilizzati per una chiamata a <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> rispetto al contesto dello schema XAML.  
  
-   Se <xref:System.Xaml.XamlMember.Type%2A> è valido, viene restituito un convertitore di tipi associato al tipo.  
  
-   Se il membro è un evento, viene restituito un convertitore di tipi di evento specifico.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.TypeConverter%2A>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una funzione di accesso <see langword="get" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.MethodInfo" /> per la funzione di accesso <see langword="get" /> associata oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita interpreta il <xref:System.Xaml.XamlMember.UnderlyingMember%2A> proprietà come <xref:System.Reflection.PropertyInfo> e restituisce il valore di <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (con il parametro impostato su `true`), il che significa che il metodo restituito può essere non pubblico. Questo comportamento può comportare `null` per determinati casi. compresi i casi in cui è presente alcuna funzione di accesso associato o il membro non è una proprietà.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore di <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> proprietà in un oggetto associato <xref:System.Xaml.Schema.XamlMemberInvoker>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati. Assicurarsi di implementare <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> in modo che restituiscano risultati correlati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema di tipo CRL che è associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema di tipo CRL che è associato all'oggetto <see cref="T:System.Xaml.XamlMember" /> oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce informazioni sul membro sottostante, si basa sulla costruzione. Se il <xref:System.Reflection.MemberInfo> oggetto viene costruito con una firma che non fornisce informazioni sufficienti per impostare il membro sottostante, questo metodo restituisce `null`.  
  
 Se un membro sottostante è stato impostato durante la costruzione, non è necessario chiamare questo metodo.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.UnderlyingMember%2A>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati. Assicurarsi di implementare <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> in modo che restituiscano risultati correlati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una funzione di accesso <see langword="set" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.MethodInfo" /> per la funzione di accesso <see langword="set" /> associata oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita interpreta <xref:System.Xaml.XamlMember.UnderlyingMember%2A> come <xref:System.Reflection.PropertyInfo> e restituisce il valore di <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (con il parametro impostato su `true`), il che significa che il metodo restituito può essere non pubblico. Ciò può comportare `null` per determinati casi, compresi i casi in cui non vi è alcuna funzione di tale accesso o il membro non è una proprietà.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> su un oggetto associato <xref:System.Xaml.Schema.XamlMemberInvoker>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati. Assicurarsi di implementare <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> in modo che restituiscano risultati correlati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un'implementazione del serializzatore di valori associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> o <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita utilizza la logica seguente e l'ordine di elaborazione:  
  
-   Se l'assegnazione di attributi esiste a livello di membro (<xref:System.Windows.Markup.ValueSerializerAttribute>), le informazioni sull'attributo viene utilizzati per una chiamata a <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> rispetto al contesto dello schema XAML.  
  
-   Se <xref:System.Xaml.XamlMember.Type%2A> è valido, viene restituito un convertitore di valori che è associato al tipo.  
  
-   Se non si applicano le condizioni precedenti, `null` viene restituito.  
  
 Questo metodo viene richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlMember.ValueSerializer%2A>. Eseguire l'override di questo metodo se si desidera riportare risultati uniformi per un'intera <xref:System.Xaml.XamlMember> derivata o se si dispone di metadati disponibili per determinare questa operazione per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definisce i caratteri parentesi quadra di apertura e chiusura per un'estensione di markup.</summary>
        <value>Raccolta contenente i caratteri parentesi quadra di apertura e chiusura.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la stringa del nome <see langword="xamlName" /> che dichiara l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Stringa del nome <see langword="xamlName" /> che dichiara l'oggetto <see cref="T:System.Xaml.XamlMember" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore è sempre impostato durante la costruzione. I costruttori che vengono implementati da <xref:System.Xaml.XamlMember> in genere genera un'eccezione se non è stato specificato un nome iniziale; pertanto, non bisogna aspettarsi questa proprietà sia `null` o una stringa vuota, se si utilizza l'impostazione predefinita servizi XAML di .NET Framework implementazioni.  
  
 [Grammatica XamlName](~/docs/framework/xaml-services/xamlname-grammar.md) e le regole di denominazione per il tipo CLR e i membri non si intersecano esattamente. È possibile dichiarare un nome di membro che è valido in CLR, ma non è valido nella denominazione XAML. Se possibile, è consigliabile evitare questa situazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
        <param name="xamlMember2">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
        <summary>Determina se due oggetti <see cref="T:System.Xaml.XamlMember" /> specificati hanno lo stesso valore.</summary>
        <returns>
          <see langword="true" /> se il valore di <paramref name="xamlMember1" /> è uguale al valore di <paramref name="xamlMember2" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
        <param name="xamlMember2">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
        <summary>Determina se due oggetti <see cref="T:System.Xaml.XamlMember" /> specificati hanno valori diversi.</summary>
        <returns>
          <see langword="true" /> se il valore di <paramref name="xamlMember1" /> è diverso dal valore di <paramref name="xamlMember2" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il singolo URI dello spazio dei nomi XAML che identifica lo spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Identificatore dello spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlMember" /> in formato stringa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> proprietà fornisce lo stesso valore di una chiamata <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> e quindi ottenendo la stringa del primo valore nell'elenco restituito. Spazio dei nomi XAML preferito deve essere utilizzato quando si scrive il membro nuovamente su testo o altri rappresentazioni che mantengono le informazioni dello spazio dei nomi XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore di <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> che indica come una finestra di progettazione visiva deve elaborare il membro.</summary>
        <value>Valore dell'enumerazione <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. Il valore predefinito è <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito è diverso per i membri associabili e non associabile. Per i membri non associabile, <xref:System.Xaml.XamlMember.TargetType%2A> restituisce <xref:System.Xaml.XamlMember.DeclaringType%2A>. Per i membri associabili, <xref:System.Xaml.XamlMember.LookupTargetType%2A> restituisce un risultato che si basa su questa logica:  
  
-   Se non è possibile risolvere la reflection aggiuntiva (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), questo metodo restituisce una costante interna che rappresenta un tipo di oggetto generico.  
  
-   Se la condizione precedente non è applicabile, <xref:System.Xaml.XamlMember.LookupTargetType%2A> viene chiamato. L'implementazione predefinita restituisce un <xref:System.Xaml.XamlType> che si basa sull'analisi dei metodi che implementano il `get` e `set` le funzioni di accesso. Può eseguire l'override di una classe <xref:System.Xaml.XamlMember.LookupTargetType%2A> per utilizzare un comportamento diverso, ad esempio altri form di metadati che potrebbe segnalare tipi di destinazione per i membri associabili.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa implementazione restituisce <xref:System.Xaml.XamlMember.Name%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</summary>
        <value>Oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.Type%2A> richiama <xref:System.Xaml.XamlMember.LookupType%2A> o un override del metodo specifico. Questo errore si verifica quando la logica della reflection interna iniziale non è già impostato le informazioni.  
  
 Il comportamento predefinito (nessun <xref:System.Xaml.XamlMember.LookupType%2A> eseguire l'override), restituito <xref:System.Xaml.XamlType> può avere diversi significati concettuali. Il significato applicato dipende dal fatto che questo <xref:System.Xaml.XamlMember> rappresenta una proprietà, un metodo o un evento, come illustrato nel seguente elenco:  
  
-   Per una proprietà, l'oggetto restituita <xref:System.Xaml.XamlType> è il tipo che imposta la proprietà o viene restituito dalla proprietà.  
  
-   Per un evento, l'oggetto restituito <xref:System.Xaml.XamlType> è il tipo di gestore eventi obbligatorio (un delegato in un'implementazione di Common Language Runtime).  
  
-   Per un metodo, <xref:System.Xaml.XamlType> è il tipo restituito del metodo, che può essere `null`.  
  
 In ogni caso, il contesto dello schema XAML viene utilizzato per valutare il tipo XAML dal tipo di supporto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che può essere utilizzato per la costruzione della conversione di tipi degli oggetti XAML dichiarati.</summary>
        <value>Valore di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con un vincolo <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo generico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.TypeConverter%2A> richiama <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> o un override del metodo specifico. Questo comportamento si verifica quando la logica della reflection interna iniziale non è già impostato le informazioni.  
  
 Il valore per le implementazioni che restituiscono una proprietà non null <xref:System.Xaml.XamlMember.TypeConverter%2A> non sono necessariamente un lavoro <xref:System.ComponentModel.TypeConverter>. Di seguito è riportato un elenco di possibili valori restituiti non null per <xref:System.Xaml.XamlMember.TypeConverter%2A> e tali valori rappresentano:  
  
-   Il valore restituito indica un convertitore di tipi con attribuito in modo specifico per tale membro o più in generale per il tipo di destinazione del convertitore. Questo comportamento è in genere quali la maggior parte dei sistemi di tipi XAML e i processori XAML cercano per creare un'istanza di un convertitore di tipi e richiamare i metodi.  
  
-   Il valore restituito indica un convertitore di valori predefiniti. Questi convertitori esistono per determinate operazioni interne effettuate da un writer XAML. In particolare, i convertitori di valori incorporati convertire i valori di stringa dell'attributo non elaborato per le primitive di livello di linguaggio XAML. Per l'implementazione di servizi XAML di .NET Framework, queste conversioni dei tipi incorporati spesso passano a un convertitore di tipi definiti nell'assembly System. Ad esempio, una conversione di un <xref:System.Int32> valore include conversione inoltrata e, pertanto, il <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> valore riferimenti <xref:System.ComponentModel.Int32Converter>.  
  
-   Il valore restituito indica il caso speciale di un modello a oggetti non vincolato; vale a dire il <xref:System.Xaml.XamlMember> ha un <xref:System.Xaml.XamlMember.Type%2A> valore <xref:System.Object>. In questo caso, il <xref:System.Xaml.Schema.XamlValueConverter%601> segnala che il <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> è {`Object}`. Tuttavia, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> è `null` perché nessun tipo o istanza effettiva è disponibile per eseguire la conversione. Al contrario, il comportamento del modello oggetto non è possibile determinare in fase di esecuzione, quando il runtime della tecnologia specifico determina la gestione dell'oggetto grafico.  
  
 Se è possibile accedere a un lavoro <xref:System.ComponentModel.TypeConverter> da <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, è possibile richiamare i metodi di conversione. Tuttavia, molti metodi di conversione si basano sul contesto del servizio. Se non è disponibile lo stesso servizio contesto che il convertitore di tipi prevista per il ruolo tipico della scrittura di oggetti per oggetti grafici, i metodi del convertitore possono generare eccezioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema del tipo CRL che è disponibile per un membro costruito da <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> o <see cref="T:System.Reflection.EventInfo" />.</summary>
        <value>Informazioni sull'oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema del tipo CRL, come cast dai parametri del costruttore iniziali. Un oggetto <see cref="T:System.Xaml.XamlMember" /> che viene costruito con la firma di <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> restituisce <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.UnderlyingMember%2A> richiama <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> o un override del metodo specifico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che viene utilizzato per la serializzazione di valori degli oggetti XAML dichiarati.</summary>
        <value>Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> per il tipo generico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.ValueSerializer%2A> richiama <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> o un override del metodo specifico. Questo comportamento si verifica quando la logica della reflection interna iniziale non è già impostato le informazioni.  
  
 Non tutti i casi che restituiscono una proprietà non null il valore per <xref:System.Xaml.XamlMember.ValueSerializer%2A> sono necessariamente un lavoro <xref:System.Windows.Markup.ValueSerializer>. Vedere <xref:System.Xaml.XamlMember.TypeConverter%2A>; le stesse considerazioni si applicano a <xref:System.Xaml.XamlMember.ValueSerializer%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>