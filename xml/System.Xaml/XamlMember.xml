<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6515c083ec89a227bfdf71aafe72c0d65a9846d7" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48757412" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce l'identificatore di sistema dei tipi XAML per i membri dei tipi XAML. L'identificatore viene utilizzato dai reader e dai writer XAML durante l'elaborazione dei nodi membri (quando il reader XAML viene posizionato su un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" />) e anche per la logica di sistema di tipo XAML generale.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember> può usare le metodologie di tre per la restituzione di informazioni su un membro XAML: standard reflection common language runtime (CLR); una tecnica di riferimento sola reflection chiamata interna con flag di API tale bit utilizzo ottimizzato o chiamata virtuale esegue l'override del `Lookup*` API fornita da possibili <xref:System.Xaml.XamlMember> sottoclassi. Per la maggior parte degli usi dell'API dei servizi XAML di .NET Framework e <xref:System.Xaml.XamlMember> API, si utilizza il contesto dello schema XAML predefinito. Il contesto dello schema XAML predefinito per i servizi XAML di .NET Framework Usa il supporto per il sistema di tipi CLR. In questo modo il reader XAML e writer XAML lavorare con qualsiasi tipo o membro definito in o in caso contrario, disponibile per, CLR e le tecniche di reflection.  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a>Le classi derivate di XamlMember e API di ricerca *  
 <xref:System.Xaml.XamlMember> definisce diverse potrebbero eseguire l'override di membri virtuali che le classi derivate. Questi membri hanno nomi che iniziano sempre con la stringa `Lookup`. Il resto dell'API di assegnare i riferimenti alla proprietà che influenza il metodo virtuale. Ad esempio, un <xref:System.Xaml.XamlMember> classe derivata potrebbe quindi sostituire <xref:System.Xaml.XamlMember.LookupTargetType%2A> influire sul quale la proprietà definita base <xref:System.Xaml.XamlMember.TargetType%2A> restituisce in una classe derivata. È possibile stimare i valori restituiti per tali proprietà in <xref:System.Xaml.XamlMember> esistenti alle classi derivate, leggere la documentazione pertinente o `Lookup*` metodi.  
  
 Lo scopo del `Lookup*` metodi consiste nel fornire una tecnica di estensione del sistema di tipi XAML che incorpora il <xref:System.Xaml.XamlMember> classe di base. Derivando da <xref:System.Xaml.XamlMember> ed eseguire l'override di `Lookup` membri virtuali, può definire il concetto di un membro XAML per uno schema XAML in un sistema di tipi XAML senza essere legati alle specifiche di un sistema di tipo di supporto o una tecnologia. È anche possibile usare un contesto dello schema XAML fornito in questo schema e restituire i risultati desiderati.  
  
 Ad esempio, prendere in considerazione la <xref:System.Xaml.XamlMember> proprietà <xref:System.Xaml.XamlMember.IsWritePublic%2A>. Questa proprietà indica ai chiamanti che le operazioni, ad esempio usando un <xref:System.Xaml.XamlWriter> per la serializzazione può scrivere un valore per questo membro su un oggetto di destinazione. Nell'implementazione predefinita, la determinazione del fatto che il membro è accessibile in scrittura viene eseguita usando tecniche di reflection in CLR sottostante <xref:System.Type> e i relativi membri (il <xref:System.Reflection.MemberInfo>). Pertanto, per impostazione predefinita, il sistema di tipi XAML dipende dal sistema di tipi CLR. Tuttavia, è possibile rimuovere questa dipendenza per il XAML tipo report del sistema <xref:System.Xaml.XamlMember.IsWritePublic%2A> eseguendo l'override dell'API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>. All'interno dell'override, è possibile usare altre determinazioni, ad esempio i metadati specifici per la tecnologia, una tabella di ricerca master che è ottimizzata per un vocabolario XAML predefinito, o una varietà di altre strategie per determinare se un membro XAML sia accessibile in scrittura di Vocabolario XAML.  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a>Costruzione XamlMember senza contesto dello Schema XAML  
 La maggior parte dei costruttori delle <xref:System.Xaml.XamlMember> richiedono un <xref:System.Xaml.XamlSchemaContext> come parte dell'inizializzazione. Il <xref:System.Xaml.XamlSchemaContext> è inoltre necessario per molti interno <xref:System.Xaml.XamlSchemaContext> operazioni, ad esempio per ottenere informazioni che viene inoltrate dal tipo sottostante. Quando si lavora con i <xref:System.Xaml.XamlMember> API, in genere è un <xref:System.Xaml.XamlSchemaContext> che è disponibile un costrutto circostante, ad esempio un <xref:System.Xaml.XamlWriter>. In questo caso, è possibile passare il <xref:System.Xaml.XamlSchemaContext> fanno riferimento tramite a tutte le chiamate di sistema tipo XAML che richiedono un contesto dello schema XAML.  
  
 Un costruttore specifico, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, non richiede un <xref:System.Xaml.XamlSchemaContext>. Tuttavia, un <xref:System.Xaml.XamlMember> che viene costruito con la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma restituisce `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, tale membro non può essere scritto in un oggetto grafico. Usando l'implementazione di servizi XAML di .NET Framework, il <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chiamare genera una <xref:System.Xaml.XamlObjectWriterException> quando il relativo <xref:System.Xaml.XamlMember> report `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Non si devono creare una <xref:System.Xaml.XamlMember> che ha un valore pari `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A> , a meno che l'implementazione può gestire le eccezioni dal <xref:System.Xaml.XamlObjectWriter>, o esistono altri modi per regolare la <xref:System.Xaml.XamlObjectWriter> comportamento. Ad esempio, potrebbe essere true dell'implementazione di uno o più delle seguenti operazioni:  
  
-   Il contesto dello schema XAML è disponibile in un secondo momento.  
  
-   Si utilizza un modello di invoker di membro.  
  
-   Si esegue l'override deliberatamente <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in un writer XAML personalizzato.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="http://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Informazioni su strutture e concetti del flusso del nodo XAML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo">Oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL che rappresenta il membro dell'evento.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando <see cref="T:System.Reflection.EventInfo" /> del sistema di tipi CLR e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta un evento (proprietà del punto di connessione del gestore eventi).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipo CRL che rappresenta il membro della proprietà.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipi CLR e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta una proprietà (e in particolare non è una connessione di gestore dell'evento).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo">Oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL che rappresenta il membro dell'evento.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <param name="invoker">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate con reflection di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando l'oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta un evento (o una proprietà del punto di connessione del gestore eventi).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipo CRL che rappresenta il membro della proprietà.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <param name="invoker">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando l'oggetto <see cref="T:System.Reflection.PropertyInfo" /> di reflection e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore solo se il membro rappresenta una proprietà e se non è una connessione di gestore dell'evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">Nome della stringa dell'evento associabile.</param>
        <param name="adder">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per il metodo <see langword="Add" /> di gestione dell'implementazione di supporto del membro associabile.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta un evento associabile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta un membro evento associabile.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Nome della stringa del membro.</param>
        <param name="declaringType">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo dichiarante.</param>
        <param name="isAttachable">
          <see langword="true" /> per indicare che il membro è associabile; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando il nome di una stringa e le informazioni sull'oggetto <see cref="T:System.Xaml.XamlType" /> dichiarante. Un oggetto <see cref="T:System.Xaml.XamlMember" /> costruito con questa firma ha limitazioni significative.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Xaml.XamlMember> che viene costruito con la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma restituisce `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, tale membro non può essere scritto in un oggetto grafico. Usando l'implementazione di servizi XAML di .NET Framework, il <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chiamare genera una <xref:System.Xaml.XamlObjectWriterException> quando il relativo <xref:System.Xaml.XamlMember> report `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Non si devono creare una <xref:System.Xaml.XamlMember> con <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` , a meno che l'implementazione può gestire le eccezioni dal <xref:System.Xaml.XamlObjectWriter>, o in altri modi per regolare la <xref:System.Xaml.XamlObjectWriter> comportamento. Ad esempio, potrebbe essere true dell'implementazione di uno o più delle seguenti operazioni:  
  
-   Il contesto dello schema XAML è disponibile in un secondo momento.  
  
-   Si utilizza un modello di invoker di membro.  
  
-   Si esegue l'override deliberatamente <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in un writer XAML personalizzato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> o <paramref name="declaringType" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">Nome della stringa della proprietà associabile.</param>
        <param name="getter">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="get" /> dell'implementazione di supporto del membro associabile.</param>
        <param name="setter">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="set" /> dell'implementazione di supporto del membro associabile.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta una proprietà associabile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta una proprietà associabile.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">Nome della stringa dell'evento associabile.</param>
        <param name="adder">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per il metodo <see langword="Add" /> di gestione dell'implementazione di supporto del membro associabile.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <param name="invoker">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta un evento associabile, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta un membro evento associabile.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">Nome della stringa della proprietà associabile.</param>
        <param name="getter">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="get" /> dell'implementazione di supporto del membro associabile.</param>
        <param name="setter">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="set" /> dell'implementazione di supporto del membro associabile.</param>
        <param name="schemaContext">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
        <param name="invoker">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta una proprietà associabile, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore se il membro rappresenta un membro di proprietà associabili.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo che dichiara il membro associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo che dichiara il membro associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore viene in genere impostato durante l'inizializzazione e non è in genere `null`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlMember.DeclaringType%2A> informazioni possono essere passate in base i costruttori per l'inizializzazione. Chiamando direttamente nei costruttori di base, l'inizializzazione per <xref:System.Xaml.XamlMember> possono omettere alcune i controlli di valore che vengono eseguiti nella classe di base le classi derivate. Pertanto, l'inizializzazione derivata può modificare le informazioni sulle relazioni segnalati tipi o membri di un membro XAML in modo che non si allinei nel modo previsto con le informazioni sul sistema di tipo della relativa dichiarazione di CLR sottostante. Per eventuali controlli critico per la sicurezza di informazioni sul tipo dichiarante, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, che viene utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</summary>
        <value>Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.DeferringLoader%2A> richiama <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> o una specifica sostituzione di tale metodo. Questo comportamento si verifica nei casi in cui la logica iniziale della reflection interno non è già impostata le informazioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un elenco di oggetti <see cref="T:System.Xaml.XamlMember" />. Tali oggetti segnalano i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.DependsOn%2A> richiama <xref:System.Xaml.XamlMember.LookupDependsOn%2A> o una specifica sostituzione di tale metodo. Questo comportamento si verifica nei casi in cui la logica iniziale della reflection interno non è già impostata le informazioni.  
  
 Il `DependsOn` modello può essere applicato ai case del modello oggetto intenzionalmente contraddicono regola XAML generale. La regola XAML generale è che i membri di un tipo che non vengono passati come testo di inizializzazione (o da un metodo factory in XAML 2009) devono essere in grado di essere assegnati in qualsiasi ordine. Applicando un `DependsOn` pattern a un membro, è possibile indicare i writer XAML per elaborare sempre il membro a cui si fa riferimento prima di questo membro. È possibile applicare questo modello nelle situazioni in cui il valore del membro corrente richiede un contesto o altre informazioni che sono disponibile solo dopo aver impostato l'altro membro.  
  
 Il `DependsOn` modello deve essere applicato con cautela e sono riservato per gli scenari di proprietà in cui ha uno scopo dell'architettura. Un numero elevato di dipendenze possono rallentare l'elaborazione XAML. Inoltre, è possibile produrre le dipendenze circolari, nel qual caso non è definito il comportamento di elaborazione XAML.  
  
 Riportato `DependsOn` scenari da WPF includono determinate proprietà in <xref:System.Windows.Controls.ControlTemplate> e <xref:System.Windows.DataTemplate>via <xref:System.Windows.Trigger>e nella <xref:System.Windows.Setter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indica se l'oggetto corrente è uguale a un altro oggetto.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
        <summary>Indica se l'oggetto corrente è uguale a un altro oggetto.</summary>
        <returns>
          <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'oggetto corrente.</param>
        <summary>Indica se l'oggetto corrente è uguale a un altro oggetto dello stesso tipo.</summary>
        <returns>
          <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash per questo oggetto.</summary>
        <returns>Codice hash di un intero.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un elenco di spazi dei nomi XAML in cui può essere presente questo membro XAML.</summary>
        <returns>Elenco di identificatori degli spazi dei nomi XAML in formato stringa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce il <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> risultato dalla chiamata di <xref:System.Xaml.XamlMember.DeclaringType%2A> che è associato a questo <xref:System.Xaml.XamlMember>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Invoker` modello è una tecnica di estensione del sistema di tipi XAML avanzata. Il `Invoker` modello offre un modo per inserire comportamenti di mapping dei tipi di schema diverso, continuando comunque a utilizzare definizioni di sistema di tipi XAML dai servizi XAML di .NET Framework.  
  
 Se un <xref:System.Xaml.XamlMember.LookupInvoker%2A> override restituisce `null`, o se l'implementazione predefinita restituisce `null` perché manca il <xref:System.Xaml.XamlMember.UnderlyingMember%2A> per questo <xref:System.Xaml.XamlMember>, la <xref:System.Xaml.XamlMember.Invoker%2A> restituisce proprietà <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.  
  
 Il valore predefinito è <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>. Questo vale per la maggior parte delle operazioni che usano servizi XAML di .NET Framework e il contesto dello schema XAML predefinito e in cui eseguire l'override non specifiche `Invoker` modelli vengono passati per la costruzione dell'entità di sistema di tipo XAML.  
  
 La chiamata <xref:System.Xaml.XamlMember.Invoker%2A> richiama <xref:System.Xaml.XamlMember.LookupInvoker%2A> o una specifica sostituzione di tale metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è segnalato come proprietà di ambiente.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene segnalato come proprietà di ambiente; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.IsAmbient%2A> richiama <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> o una specifica sostituzione di tale metodo. Questo comportamento si verifica nelle implementazioni in cui la logica iniziale della reflection interno non è già impostata le informazioni.  
  
 Verifica per le proprietà di ambiente è in genere fanno parte della logica di elaborazione XAML per assicurarsi che gli oggetti e i valori che si basano sull'utilizzo di ambiente per la qualifica di tipo possono funzionare correttamente. Le API di servizi XAML di .NET Framework e il contesto dello schema XAML predefinito consente di popolare questo valore in base a attribuzione con <xref:System.Windows.Markup.AmbientAttribute>. L'implementazione predefinita di <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> utilizzerà questa <xref:System.Windows.Markup.AmbientAttribute> tecnica e viene restituito `true` se <xref:System.Windows.Markup.AmbientAttribute> esiste in una dichiarazione di membro.  
  
 <xref:System.Windows.Markup.AmbientAttribute> si trova nei membri di tipi diversi di WPF, tra cui <xref:System.Windows.Application>, <xref:System.Windows.Setter>, e <xref:System.Windows.Style>. Disponibile anche sul <xref:System.Windows.ResourceDictionary> tipo, che indica che qualsiasi membro che usa <xref:System.Windows.ResourceDictionary> come relativo tipo deve essere considerato di ambiente anche se il membro non viene attribuito in modo specifico.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è un membro associabile.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è un membro associabile; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlMember.IsAttachable%2A> valore viene inizializzato in base al quale costruttore è stato utilizzato per costruire un <xref:System.Xaml.XamlMember>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è una direttiva XAML.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è una direttiva XAML; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlMember.IsDirective%2A> valore viene inizializzato in base al quale costruttore è stato utilizzato per costruire un <xref:System.Xaml.XamlMember>. La base <xref:System.Xaml.XamlMember> costruttori inizializzano in modo che <xref:System.Xaml.XamlMember.IsDirective%2A> è `false`. Tuttavia, il <xref:System.Xaml.XamlDirective> classe (una <xref:System.Xaml.XamlMember> classe derivata) inizializza in modo che <xref:System.Xaml.XamlMember.IsDirective%2A> è `true`.  
  
 Se si vuole segnalare <xref:System.Xaml.XamlMember.IsDirective%2A> come `true` ai chiamanti di una classe di schema XAML personalizzato per i membri XAML, assicurarsi che derivi da <xref:System.Xaml.XamlDirective> perché questo è l'unico modo per abilitare questo comportamento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di evento.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.IsEvent%2A> richiama <xref:System.Xaml.XamlMember.LookupIsEvent%2A> o una specifica sostituzione di tale metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene inizializzato con una stringa <see langword="xamlName" /> valida come <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene inizializzato con una stringa <see langword="xamlName" /> valida; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3">XamlName</related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola lettura.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola lettura; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.IsReadOnly%2A> richiama <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> o una specifica sostituzione di tale metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro con una funzione di accesso <see langword="get" /> pubblica che può essere chiamata.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una funzione di accesso <see langword="get" /> pubblica; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlMember.IsReadPublic%2A> valore che controlla il <xref:System.Xaml.XamlMember.DeclaringType%2A> è pubblico. Se <xref:System.Xaml.XamlMember.DeclaringType%2A> non è pubblico, il `get` funzione di accesso non può essere chiamato in un modo pratico, e <xref:System.Xaml.XamlMember.IsReadPublic%2A> restituisce `false`.  
  
 La chiamata <xref:System.Xaml.XamlMember.IsReadPublic%2A> richiama <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> o una specifica sostituzione di tale metodo.  
  
> [!IMPORTANT]
>  Il <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> metodo è virtuale e pertanto può essere sottoposto a override. La sostituzione ha la possibilità di modificare (intenzionalmente o in caso contrario) le informazioni di accesso segnalate di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione di CLR sottostante. Per eventuali controlli critico per la sicurezza dei livelli di accesso, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il membro non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</summary>
        <value>
          <see langword="true" /> se il membro non può essere risolto; <see langword="false" /> se il membro può essere risolto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Xaml.XamlMember> che viene costruito con la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> firma restituisce `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, una <xref:System.Xaml.XamlMember> con `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A> non può essere scritto in un oggetto grafico. Nelle implementazioni predefinite nelle API dei servizi XAML di .NET Framework, il <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chiamare genera una <xref:System.Xaml.XamlObjectWriterException> quando il relativo <xref:System.Xaml.XamlMember> report `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A>.  
  
 Non si devono creare una <xref:System.Xaml.XamlMember> che ha un valore pari `true` per <xref:System.Xaml.XamlMember.IsUnknown%2A> , a meno che l'implementazione può gestire le eccezioni dal <xref:System.Xaml.XamlObjectWriter>, o esistono altri modi per regolare la <xref:System.Xaml.XamlObjectWriter> comportamento.  
  
 La chiamata <xref:System.Xaml.XamlMember.IsUnknown%2A> richiama <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> o una specifica sostituzione di tale metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.IsWriteOnly%2A> richiama <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> o una specifica sostituzione di tale metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica che può essere chiamata.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una funzione di accesso <see langword="set" /> pubblica; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlMember.IsWritePublic%2A> considera come valore se il <xref:System.Xaml.XamlMember.DeclaringType%2A> public come parte della determinazione. Se <xref:System.Xaml.XamlMember.DeclaringType%2A> non è pubblico, il `set` funzione di accesso non può essere chiamato in un modo pratico, e <xref:System.Xaml.XamlMember.IsWritePublic%2A> restituisce `false`.  
  
 La chiamata <xref:System.Xaml.XamlMember.IsWritePublic%2A> richiama <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> o una specifica sostituzione di tale metodo.  
  
> [!IMPORTANT]
>  Il <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> metodo è virtuale e pertanto può essere sottoposto a override. La sostituzione ha la possibilità di modificare (intenzionalmente o in caso contrario) le informazioni di accesso segnalate di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione di CLR sottostante. Per eventuali controlli critico per la sicurezza dei livelli di accesso, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementato in una classe derivata, restituisce un'implementazione di <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
        <returns>Un'implementazione <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di questo metodo per fornire la reflection interna con un modo alternativo per ottenere i valori di attributo CLR. In assenza di una sostituzione, l'utilità di riflessione interno Usa la logica tipici della reflection CLR, ad esempio chiamate a <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.  
  
 L'implementazione predefinita restituisce `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso il <xref:System.Xaml.XamlMember.DeferringLoader%2A> proprietà. Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlMember.DeferringLoader%2A> per restituire un valore diverso da quello che è abilitato per la reflection interno predefinito, e se è necessario specificare il custom <xref:System.Xaml.Schema.XamlMemberInvoker> informazioni.  
  
 L'implementazione predefinita restituisce un oggetto leggendo <xref:System.Windows.Markup.XamlDeferLoadAttribute> o tramite un <xref:System.Xaml.XamlDeferringLoader> dal tipo dichiarante. Se nessuno dei due oggetti sono disponibili, questo metodo può restituire `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un elenco di oggetti <see cref="T:System.Xaml.XamlMember" />. Le voci nell'elenco segnalano i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso il <xref:System.Xaml.XamlMember.DependsOn%2A> proprietà. Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlMember.DependsOn%2A> per restituire un valore diverso da quello che è abilitato per la reflection interno predefinito, e se è necessario specificare il custom <xref:System.Xaml.Schema.XamlMemberInvoker> informazioni.  
  
 In questo caso l'attributo le implementazioni di reader e writer XAML WPF <xref:System.Windows.Markup.DependsOnAttribute>. L'implementazione predefinita utilizza questa esistente <xref:System.Windows.Markup.DependsOnAttribute> tecnica.  
  
 Eseguire l'override di questo metodo se non si usa <xref:System.Windows.Markup.DependsOnAttribute> per questo scopo e si intende sostituire tale tecnica per indicare l'ordine di elaborazione della proprietà con il proprio tecnica. Se non si intende supportare un ordine di elaborazione di proprietà, è possibile usare l'implementazione predefinita perché non restituisce alcun risultato, che è appropriato.  
  
 L'elenco è in sola lettura.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associato a <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> per l'oggetto <see cref="T:System.Xaml.XamlMember" /> oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato tramite chiamate a <xref:System.Xaml.XamlMember.Invoker%2A>.  
  
 L'implementazione predefinita non richiede un <xref:System.Xaml.XamlMember> essere creato usando uno dei costruttori che passano iniziale <xref:System.Xaml.Schema.XamlMemberInvoker>. Tuttavia, un' <xref:System.Xaml.XamlMember.UnderlyingMember%2A> devono essere presenti per il <xref:System.Xaml.XamlMember>; in caso contrario, l'implementazione predefinita restituisce `null`.  
  
 Eseguire l'override di questo metodo se si deriva anche da <xref:System.Xaml.Schema.XamlMemberInvoker> e si vogliono restituire la classe derivata. Se si torna `null`, <xref:System.Xaml.XamlMember.Invoker%2A> restituisce <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> ai chiamanti.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene segnalato come proprietà di ambiente.</summary>
        <returns>
          <see langword="true" /> per indicare questo oggetto <see cref="T:System.Xaml.XamlMember" /> come proprietà di ambiente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato da chiamate interne che consentono di controllare per informazioni sulla proprietà di ambiente XAML. Comportamento di proprietà di ambiente è presi in considerazione il comportamento di API pubbliche di reader XAML e writer XAML. Le chiamate interne che fanno riferimento a <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> sono in genere parte della logica di elaborazione XAML per assicurarsi che gli oggetti e i valori che si basano sull'utilizzo di ambiente per la qualifica di tipo possono funzionare correttamente. L'implementazione di servizi XAML di .NET Framework predefinito utilizza attributi CLR per ottenere queste informazioni dalla reflection su tipi di supporto. In particolare, l'implementazione predefinita controlla <xref:System.Windows.Markup.AmbientAttribute> e restituisce `true` per <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> se <xref:System.Windows.Markup.AmbientAttribute> presente nella definizione di un membro.  
  
 Eseguire l'override di questo metodo se non si usa <xref:System.Windows.Markup.AmbientAttribute> per questo scopo e si desideri sostituire tale tecnica per indicare le proprietà di ambiente XAML con il proprio tecnica.  
  
 Esempi di API da WPF a tale attributo con <xref:System.Windows.Markup.AmbientAttribute> vengono <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> e <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento.</summary>
        <returns>
          <see langword="true" /> per indicare che l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita controlla se <xref:System.Xaml.XamlMember.UnderlyingMember%2A> JE typu <xref:System.Reflection.EventInfo>e se si tratta, restituisce `true`.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.IsEvent%2A>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> derivato (classe), o se si sono disponibili metadati che possono essere interpretati per determinare XAML specializzati rappresentazioni di sistema di tipi in base al case.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà di sola lettura prevista.</summary>
        <returns>
          <see langword="true" /> per indicare che l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà di sola lettura prevista; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce `true` se <xref:System.Xaml.XamlMember.UnderlyingMember%2A> esiste, ma un pubblico `set` della funzione di accesso non esiste, come determinato dalla reflection interna.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.IsReadOnly%2A>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> derivato (classe), o se si sono disponibili metadati che possono essere interpretati per determinare XAML specializzati rappresentazioni di sistema di tipi in base al case.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="get" /> pubblica.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="get" /> pubblica; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce i risultati in base alla reflection interna o la negazione di <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, elaborazione in quell'ordine.  
  
 <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> indica se il membro stesso è pubblico; Restituisce `true` per un membro pubblico in un tipo dichiarante non pubblico. Usare <xref:System.Xaml.XamlMember.IsReadPublic%2A> invece, se si desidera anche prendere in considerazione la visibilità del tipo dichiarante.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.IsReadPublic%2A>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati.  
  
> [!IMPORTANT]
>  Il <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> metodo è virtuale e pertanto può essere sottoposto a override. La sostituzione ha la possibilità di modificare (intenzionalmente o in caso contrario) le informazioni di accesso segnalate di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione di CLR sottostante. Per eventuali controlli critico per la sicurezza dei livelli di accesso, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che non può essere risolto; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.IsUnknown%2A>. L'implementazione predefinita restituisce risultati che si basano sulla reflection interna o controllo della presenza di un `null` pari a <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, elaborazione in quell'ordine.  
  
 Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica ma non di una funzione di accesso <see langword="get" /> pubblica.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce `true` se un <xref:System.Xaml.XamlMember.UnderlyingMember%2A> esistente che dispone di un pubblico `set` della funzione di accesso e un nonpublic `get` della funzione di accesso, come determinato dalla reflection interna.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.IsWriteOnly%2A>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica.</summary>
        <returns>
          <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro scrivibile; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce risultati basati su reflection interna o la negazione di <xref:System.Xaml.XamlMember.IsReadOnly%2A>, elaborazione in quell'ordine.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.IsWritePublic%2A>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati.  
  
> [!IMPORTANT]
>  Il <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> metodo è virtuale e pertanto può essere sottoposto a override. La sostituzione ha la possibilità di modificare (intenzionalmente o in caso contrario) le informazioni di accesso segnalate di un membro XAML in modo che non si allinei nel modo previsto con le informazioni di accesso di sistema di tipo della relativa dichiarazione di CLR sottostante. Per eventuali controlli critico per la sicurezza dei livelli di accesso, usare invece il tipo CLR sottostante.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce i caratteri parentesi quadra di apertura e chiusura per un'estensione di markup.</summary>
        <returns>Raccolta contenente i caratteri parentesi quadra di apertura e chiusura.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita consente di distinguere tra i membri associabili e non associabile. Per i membri non associabile <xref:System.Xaml.XamlMember.LookupTargetType%2A> restituisce sempre <xref:System.Xaml.XamlMember.DeclaringType%2A>. Per i membri associabili <xref:System.Xaml.XamlMember.LookupTargetType%2A> restituisce un risultato basato su analisi di <xref:System.Xaml.XamlMember.UnderlyingMember%2A> tipo del parametro della funzione di accesso e interpreta quel tipo in base al contesto dello schema XAML.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.TargetType%2A>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</summary>
        <returns>Oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.Type%2A>. Eseguire l'override di questo metodo se si desidera <xref:System.Xaml.XamlMember.Type%2A> per restituire un valore diverso da quello che è abilitato per la reflection interno predefinito, e se è necessario specificare il custom <xref:System.Xaml.Schema.XamlMemberInvoker> informazioni.  
  
 L'implementazione predefinita Usa diversi percorsi di codice e significati concettuali per l'oggetto restituito <xref:System.Xaml.XamlType> basato su se questo <xref:System.Xaml.XamlMember> rappresenta una proprietà, metodo o evento.  
  
-   Per una proprietà, l'oggetto restituita <xref:System.Xaml.XamlType> è il tipo che viene restituito dalla proprietà o imposta la proprietà.  
  
-   Per un evento, l'oggetto restituito <xref:System.Xaml.XamlType> è il tipo di gestore di evento richiesto (un delegato in un'implementazione di Common Language Runtime).  
  
-   Per un metodo, <xref:System.Xaml.XamlType> è il tipo restituito.  
  
 In ogni caso, il contesto dello schema XAML consente di valutare il tipo XAML dal tipo di sistema sottostante.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.Type%2A>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un'implementazione del convertitore di tipi associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita Usa la logica seguente e l'ordine di elaborazione:  
  
-   Se l'associazione di attributi esistente a livello di membro (<xref:System.ComponentModel.TypeConverterAttribute>), le informazioni sull'attributo viene utilizzati per una chiamata a <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> rispetto al contesto dello schema XAML.  
  
-   Se <xref:System.Xaml.XamlMember.Type%2A> valido, viene restituito un convertitore di tipi che è associato al tipo.  
  
-   Se il membro è un evento, viene restituito un convertitore di tipi specifici degli eventi.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.TypeConverter%2A>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una funzione di accesso <see langword="get" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.MethodInfo" /> per la funzione di accesso <see langword="get" /> associata oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interpreta l'implementazione predefinita di <xref:System.Xaml.XamlMember.UnderlyingMember%2A> la proprietà <xref:System.Reflection.PropertyInfo> e restituisce il valore di <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (con il parametro impostato su `true`), a indicare che il metodo restituito può essere non pubblico. Questo comportamento può comportare `null` per alcuni casi. inclusi i casi in cui è presente alcuna funzione di accesso associato o il membro non è una proprietà.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso il <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> proprietà in un oggetto associato <xref:System.Xaml.Schema.XamlMemberInvoker>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati. Assicurarsi di implementare <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> in modo che restituiscano risultati correlati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema di tipo CRL che è associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema di tipo CRL che è associato all'oggetto <see cref="T:System.Xaml.XamlMember" /> oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita restituisce le informazioni sui membri sottostante, che si basa in fase di costruzione. Se il <xref:System.Reflection.MemberInfo> costruito con una firma che non fornisce informazioni sufficienti per impostare il membro sottostante, questo metodo restituisce `null`.  
  
 Se un membro di sottostante è stato impostato durante la costruzione, non è necessario chiamare questo metodo.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.UnderlyingMember%2A>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati. Assicurarsi di implementare <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> in modo che restituiscano risultati correlati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una funzione di accesso <see langword="set" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.MethodInfo" /> per la funzione di accesso <see langword="set" /> associata oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita interpreta <xref:System.Xaml.XamlMember.UnderlyingMember%2A> come <xref:System.Reflection.PropertyInfo> e restituisce il valore di <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (con il parametro impostato su `true`), a indicare che il metodo restituito può essere non pubblico. Ciò può comportare `null` per alcuni casi, inclusi i casi in cui non vi è alcun tale funzione di accesso o il membro non è una proprietà.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> su un oggetto associato <xref:System.Xaml.Schema.XamlMemberInvoker>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati. Assicurarsi di implementare <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> in modo che restituiscano risultati correlati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un'implementazione del serializzatore di valori associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> o <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita Usa la logica seguente e l'ordine di elaborazione:  
  
-   Se l'associazione di attributi esistente a livello di membro (<xref:System.Windows.Markup.ValueSerializerAttribute>), le informazioni sull'attributo viene utilizzati per una chiamata a <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> rispetto al contesto dello schema XAML.  
  
-   Se <xref:System.Xaml.XamlMember.Type%2A> valido, viene restituito un convertitore di valori che è associato al tipo.  
  
-   Se non si applicano le condizioni precedenti, `null` viene restituito.  
  
 Questo metodo viene richiamato quando un chiamante non riceve un valore compreso <xref:System.Xaml.XamlMember.ValueSerializer%2A>. Eseguire l'override di questo metodo se si desidera segnalare i risultati uniforme per un'intera <xref:System.Xaml.XamlMember> classe derivata oppure se si dispone di metadati disponibili per determinare questo per ogni caso specializzati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definisce i caratteri parentesi quadra di apertura e chiusura per un'estensione di markup.</summary>
        <value>Raccolta contenente i caratteri parentesi quadra di apertura e chiusura.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la stringa del nome <see langword="xamlName" /> che dichiara l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Stringa del nome <see langword="xamlName" /> che dichiara l'oggetto <see cref="T:System.Xaml.XamlMember" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore è sempre impostato durante la costruzione. I costruttori implementate dalle <xref:System.Xaml.XamlMember> in genere generano un'eccezione se non viene specificato un nome iniziale; pertanto, non si prevede questa proprietà come `null` o una stringa vuota, se si usa servizi XAML predefinito .NET Framework implementazioni.  
  
 [Grammatica XamlName](~/docs/framework/xaml-services/xamlname-grammar.md) e regole di denominazione per il tipo CLR e i membri non sono un'esatta intersect. È possibile dichiarare un nome di membro che è valido in CLR, ma non è valido con la denominazione di XAML. Se possibile, è consigliabile evitare questa situazione.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3">XamlName</related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
        <param name="xamlMember2">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
        <summary>Determina se due oggetti <see cref="T:System.Xaml.XamlMember" /> specificati hanno lo stesso valore.</summary>
        <returns>
          <see langword="true" /> se il valore di <paramref name="xamlMember1" /> è uguale al valore di <paramref name="xamlMember2" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
        <param name="xamlMember2">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
        <summary>Determina se due oggetti <see cref="T:System.Xaml.XamlMember" /> specificati hanno valori diversi.</summary>
        <returns>
          <see langword="true" /> se il valore di <paramref name="xamlMember1" /> è diverso dal valore di <paramref name="xamlMember2" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il singolo URI dello spazio dei nomi XAML che identifica lo spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Identificatore dello spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlMember" /> in formato stringa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> proprietà fornisce lo stesso valore alla chiamata al metodo <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> e quindi ottenere la stringa del primo valore nell'elenco restituito. Lo spazio dei nomi XAML preferita deve essere utilizzato quando si scrive il membro altre rappresentazioni che conservano le informazioni dello spazio dei nomi XAML o posteriore al testo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore di <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> che indica come una finestra di progettazione visiva deve elaborare il membro.</summary>
        <value>Valore dell'enumerazione <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. Il valore predefinito è <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
        <value>Tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito è diverso per i membri associabili e non associabile. Per i membri non associabile <xref:System.Xaml.XamlMember.TargetType%2A> restituisce <xref:System.Xaml.XamlMember.DeclaringType%2A>. Per i membri associabili, <xref:System.Xaml.XamlMember.LookupTargetType%2A> restituisce un risultato che si basa su questa logica:  
  
-   Se non è possibile risolvere la reflection aggiuntiva (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), questo metodo restituisce una costante interna che rappresenta un tipo di oggetto generico.  
  
-   Se la condizione precedente non è applicabile, <xref:System.Xaml.XamlMember.LookupTargetType%2A> viene chiamato. L'implementazione predefinita restituisce un <xref:System.Xaml.XamlType> basato sull'analisi dei metodi che implementano il `get` e `set` funzioni di accesso. Una classe potrebbe quindi sostituire <xref:System.Xaml.XamlMember.LookupTargetType%2A> per utilizzare un comportamento diverso, ad esempio altri metadati form che potrebbero essere segnalati i tipi di destinazione per i membri associabili.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlMember" />.</summary>
        <returns>Rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa implementazione restituisce <xref:System.Xaml.XamlMember.Name%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</summary>
        <value>Oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.Type%2A> richiama <xref:System.Xaml.XamlMember.LookupType%2A> o una specifica sostituzione di tale metodo. Ciò si verifica quando la logica iniziale della reflection interno non è già impostato le informazioni.  
  
 Il comportamento predefinito (nessun <xref:System.Xaml.XamlMember.LookupType%2A> eseguire l'override), l'oggetto restituito <xref:System.Xaml.XamlType> può avere diversi significati concettuali. Il significato applicato dipende dal fatto che questo <xref:System.Xaml.XamlMember> rappresenta una proprietà, metodo o evento, come illustrato nell'elenco seguente:  
  
-   Per una proprietà, l'oggetto restituita <xref:System.Xaml.XamlType> è il tipo che viene restituito dalla proprietà o imposta la proprietà.  
  
-   Per un evento, l'oggetto restituito <xref:System.Xaml.XamlType> è il tipo di gestore di evento richiesto (un delegato in un'implementazione di Common Language Runtime).  
  
-   Per un metodo, <xref:System.Xaml.XamlType> è il tipo restituito del metodo, che può essere `null`.  
  
 In ogni caso, il contesto dello schema XAML consente di valutare il tipo XAML dal tipo sottostante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che può essere utilizzato per la costruzione della conversione di tipi degli oggetti XAML dichiarati.</summary>
        <value>Valore di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con un vincolo <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo generico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.TypeConverter%2A> richiama <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> o una specifica sostituzione di tale metodo. Questo comportamento si verifica quando la logica iniziale della reflection interno non è già impostato le informazioni.  
  
 Valore di implementazioni che restituiscono una proprietà non null per <xref:System.Xaml.XamlMember.TypeConverter%2A> non sono necessariamente un lavoro <xref:System.ComponentModel.TypeConverter>. Di seguito è riportato un elenco di possibili valori restituiti non null per <xref:System.Xaml.XamlMember.TypeConverter%2A> e ciò che rappresentano tali valori:  
  
-   Il valore restituito indica un convertitore di tipi con attribuito in modo specifico a tale membro o più in generale per il tipo di destinazione del convertitore. Questo comportamento è in genere che la maggior parte dei sistemi di tipi XAML e cercano i processori XAML per creare un'istanza di un convertitore di tipi e richiamarne i metodi.  
  
-   Il valore restituito indica un convertitore di valori predefiniti. I convertitori di tipi disponibili per determinate operazioni interne eseguite da un writer XAML. In particolare, i convertitori di valori predefiniti convertire i valori di stringa non elaborata degli attributi per le primitive a livello di linguaggio XAML. Per l'implementazione di servizi XAML di .NET Framework, queste conversioni di tipo incorporato spesso inoltra a un convertitore di tipi definita nell'assembly di sistema. Ad esempio, una conversione per una <xref:System.Int32> valore include inoltrati conversione e di conseguenza, il <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> valore riferimenti <xref:System.ComponentModel.Int32Converter>.  
  
-   Il valore restituito indica il caso speciale di un modello a oggetti non vincolato; vale a dire il <xref:System.Xaml.XamlMember> ha un <xref:System.Xaml.XamlMember.Type%2A> pari a <xref:System.Object>. In questo caso, il <xref:System.Xaml.Schema.XamlValueConverter%601> segnala che il <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> è {`Object}`. Tuttavia <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> è `null` perché nessuna istanza o il tipo effettivo è disponibile per eseguire la conversione. Al contrario, il comportamento del modello oggetto non è possibile determinare fino alla fase di esecuzione, quando il runtime della tecnologia specifico determina la gestione del proprio oggetto grafico.  
  
 Se è possibile accedere a un funzionante <xref:System.ComponentModel.TypeConverter> da <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, è possibile richiamare i metodi di conversione. Tuttavia, molti metodi di conversione si basano sul contesto del servizio. Se non è lo stesso contesto di servizio che prevede che il convertitore di tipi per il ruolo tipico della scrittura di oggetti per oggetti grafici disponibile, i metodi del convertitore possono generare eccezioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema del tipo CRL che è disponibile per un membro costruito da <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> o <see cref="T:System.Reflection.EventInfo" />.</summary>
        <value>Informazioni sull'oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema del tipo CRL, come cast dai parametri del costruttore iniziali. Un oggetto <see cref="T:System.Xaml.XamlMember" /> che viene costruito con la firma di <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> restituisce <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.UnderlyingMember%2A> richiama <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> o una specifica sostituzione di tale metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che viene utilizzato per la serializzazione di valori degli oggetti XAML dichiarati.</summary>
        <value>Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> per il tipo generico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata <xref:System.Xaml.XamlMember.ValueSerializer%2A> richiama <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> o una specifica sostituzione di tale metodo. Questo comportamento si verifica quando la logica iniziale della reflection interno non è già impostato le informazioni.  
  
 Non tutti i case che restituiscono una proprietà non null valore per <xref:System.Xaml.XamlMember.ValueSerializer%2A> si trovano necessariamente un lavoro <xref:System.Windows.Markup.ValueSerializer>. Visualizzare <xref:System.Xaml.XamlMember.TypeConverter%2A>; le stesse considerazioni si applicano a <xref:System.Xaml.XamlMember.ValueSerializer%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>