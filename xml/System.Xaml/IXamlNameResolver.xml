<Type Name="IXamlNameResolver" FullName="System.Xaml.IXamlNameResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97ee3187a4ca9db16ddba063562eaa3ff9eb405e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444741" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXamlNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlNameResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IXamlNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXamlNameResolver" />
  <TypeSignature Language="F#" Value="type IXamlNameResolver = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c0ab1-101">Descrive un servizio che può restituire oggetti specificati in base al nome XAML o in alternativa restituire un token che posticipa la risoluzione dei nomi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0ab1-101">Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution.</span>
      </span>
      <span data-ttu-id="c0ab1-102">Il servizio può inoltre restituire un set enumerabile di tutti gli oggetti denominati presenti nel NameScope XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0ab1-102">The service can also return an enumerable set of all named objects that are in the XAML namescope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ab1-103">Questa interfaccia non è destinata implementazione esterna di scenari XAML tipici perché è un servizio.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-103">This interface is not intended for external implementation of typical XAML scenarios because it is a service.</span></span> <span data-ttu-id="c0ab1-104">Questo servizio consente le estensioni di markup e convertitori di tipi per risolvere i nomi XAML per gli altri oggetti dalla stessa origine XAML mentre sono ancora in una rappresentazione del nodo XAML.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-104">This service enables markup extensions and type converters to resolve XAML names to other objects from the same XAML source while they are still in a XAML node representation.</span></span> <span data-ttu-id="c0ab1-105">Il servizio può essere utilizzato per risolvere i riferimenti in avanti per qualsiasi meccanismo che si basa sui nomi XAML per l'accesso non lineare per la produzione XAML circostante.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-105">The service can be used to resolve forward references for any mechanism that relies on XAML names for nonlinear access to the surrounding XAML production.</span></span> <span data-ttu-id="c0ab1-106">Per altre informazioni, vedere [convertitori di tipi ed estensioni di Markup per XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="c0ab1-106">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).</span></span>  
  
 <span data-ttu-id="c0ab1-107">Convertitori di tipi ed estensioni di markup possono eseguire query per <xref:System.Xaml.IXamlNameResolver> come servizio nel contesto del servizio fornito da un writer di oggetti XAML, quando il writer di oggetti XAML richiama il comportamento di conversione di valori.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-107">Type converters and markup extensions can query for <xref:System.Xaml.IXamlNameResolver> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="c0ab1-108">Per altre informazioni, vedere [convertitori di tipi ed estensioni di Markup per XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) e [contesti di servizio disponibili per convertitori di tipi ed estensioni di Markup](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="c0ab1-108">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="c0ab1-109">Questo servizio espone un'API che è possibile rinviare la risoluzione dei nomi.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-109">This service exposes an API that can defer name resolution.</span></span> <span data-ttu-id="c0ab1-110">La metafora implementata dal servizio è che i nomi che non possono essere risolto in un primo passaggio in un grafico di nome-oggetto parziale devono essere archiviati ed utilizzati per creare il token di correzione.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-110">The metaphor implemented by the service is that names that cannot be resolved in a first pass against a partial name-object graph should be stored and used to create the fixup token.</span></span> <span data-ttu-id="c0ab1-111">Il comportamento predefinito, tutti i nomi di questo tipo vengono inviati a un altro tentativo di risoluzione in un secondo passaggio.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-111">In the default behavior, all such names are submitted for another resolution attempt on a second pass.</span></span> <span data-ttu-id="c0ab1-112">Nel secondo passaggio, il grafico complessivo del nome dell'oggetto è stato completato e sono in grado di risolvere tutti i token di correzione.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-112">On the second pass, the overall name-object graph is complete, and all the fixup tokens are able to resolve.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0ab1-113">Anche se sono consentiti da una particolare implementazione, i riferimenti in avanti in XAML avere inevitabilmente conseguenze sulle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-113">Even if they are permitted by a particular implementation, forward references in XAML inevitably have performance consequences.</span></span> <span data-ttu-id="c0ab1-114">Come procedura consigliata per la produzione XAML, evitare i riferimenti in avanti quando possibile.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-114">As a best practice for production-quality XAML, avoid forward references whenever possible.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <altmember cref="T:System.Windows.NameScope" />
  </Docs>
  <Members>
    <Member MemberName="GetAllNamesAndValuesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetAllNamesAndValuesInScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetAllNamesAndValuesInScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllNamesAndValuesInScope () As IEnumerable(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetAllNamesAndValuesInScope();" />
      <MemberSignature Language="F#" Value="abstract member GetAllNamesAndValuesInScope : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="iXamlNameResolver.GetAllNamesAndValuesInScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0ab1-115">Restituisce un set enumerabile di tutti gli oggetti denominati nel NameScope XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-115">Returns an enumerable set of all named objects in the XAML namescope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0ab1-116">Set enumerabile di oggetti <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-116">An enumerable set of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects.</span>
          </span>
          <span data-ttu-id="c0ab1-117">Per ogni oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" />, il componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> è una stringa e il componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> è l'oggetto che utilizza il nome <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> nel NameScope XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-117">For each <see cref="T:System.Collections.Generic.KeyValuePair`2" />, the <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> component is a string, and the <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> component is the object that uses the <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> name in the XAML namescope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFixupToken">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0ab1-118">Restituisce un oggetto che può correggere alcuni modelli di markup che producono riferimenti in avanti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-118">Returns an object that can correct for certain markup patterns that produce forward references.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String)) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; -&gt; obj" Usage="iXamlNameResolver.GetFixupToken names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="names">
          <span data-ttu-id="c0ab1-119">Insieme di nomi che rappresentano possibili riferimenti in avanti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-119">A collection of names that are possible forward references.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0ab1-120">Restituisce un oggetto che può correggere alcuni modelli di markup che producono riferimenti in avanti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-120">Returns an object that can correct for certain markup patterns that produce forward references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0ab1-121">Oggetto che fornisce un token per il comportamento di ricerca da valutare in un secondo momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-121">An object that provides a token for lookup behavior to be evaluated later.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ab1-122">Provider di servizi interno esistenti che sono disponibili in contesti di schema per le estensioni di markup e convertitori di tipi possono implementare questo servizio. Tuttavia, restituiscono un tipo interno che possono essere elaborati solo i writer XAML esistenti che funzionano sotto il contesto dello schema XAML predefinito.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-122">Existing internal service providers that are available in schema contexts for markup extensions and type converters can implement this service; however, they return an internal type that only the existing XAML writers that work under the default XAML schema context can process.</span></span>  
  
 <span data-ttu-id="c0ab1-123">Quando tutti i nomi di cui viene fatto riferimento in avanti sono risolvibili, il codice utente viene chiamato per eseguire l'analisi di ogni nome nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-123">When all the forward referenced names are resolvable, the user code is called to reparse each name in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names, bool canAssignDirectly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, bool canAssignDirectly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String), canAssignDirectly As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names, bool canAssignDirectly);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; * bool -&gt; obj" Usage="iXamlNameResolver.GetFixupToken (names, canAssignDirectly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="canAssignDirectly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="names">
          <span data-ttu-id="c0ab1-124">Insieme di nomi che rappresentano possibili riferimenti in avanti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-124">A collection of names that are possible forward references.</span>
          </span>
        </param>
        <param name="canAssignDirectly">
          <span data-ttu-id="c0ab1-125">
            <see langword="true" /> per assegnare immediatamente il riferimento di nome risolto alla proprietà di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-125">
              <see langword="true" /> to immediately assign the resolved name reference to the target property.</span>
          </span>
          <span data-ttu-id="c0ab1-126">
            <see langword="false" /> per chiamare il codice utente per una nuova analisi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-126">
              <see langword="false" /> to call the user code for a reparse.</span>
          </span>
          <span data-ttu-id="c0ab1-127">Il comportamento predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-127">The default behavior is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0ab1-128">Restituisce un oggetto che può correggere alcuni modelli di markup che producono riferimenti in avanti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-128">Returns an object that can correct for certain markup patterns that produce forward references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0ab1-129">Oggetto che fornisce un token per il comportamento di ricerca da valutare in un secondo momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-129">An object that provides a token for lookup behavior to be evaluated later.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ab1-130">Provider di servizi interno esistenti che sono disponibili in contesti di schema per le estensioni di markup e convertitori di tipi implementano questo servizio. Tuttavia, restituiscono un tipo interno che può essere elaborato solo per i writer XAML esistenti che funzionano sotto il contesto dello schema XAML predefinito.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-130">Existing internal service providers that are available in schema contexts for markup extensions and type converters implement this service; however, they return an internal type that can only be processed by the existing XAML writers that work under the default XAML schema context.</span></span>  
  
 <span data-ttu-id="c0ab1-131">Se `canAssignDirectly` è `false`, quando tutti i nomi di cui viene fatto riferimento in avanti sono risolvibili, il codice utente viene chiamato per eseguire l'analisi di ogni nome nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-131">If `canAssignDirectly` is `false`, when all the forward referenced names are resolvable, the user code is called to reparse each name in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixupTokenAvailable">
      <MemberSignature Language="C#" Value="public bool IsFixupTokenAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixupTokenAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixupTokenAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixupTokenAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixupTokenAvailable : bool" Usage="System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ab1-132">Ottiene un valore che determina se la chiamata a <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> è disponibile per risolvere un nome in un token per la risoluzione in avanti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-132">Gets a value that determines whether calling <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> is available in order to resolve a name into a token for forward resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0ab1-133">
            <see langword="true" /> se <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> è disponibile come un'implementazione che restituisce un token utile per la risoluzione in avanti; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-133">
              <see langword="true" /> if <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> is available as an implementation that returns a useful token for forward resolution; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ab1-134">Questa proprietà restituisce `false` quando <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> non restituisce un token perché un <xref:System.Xaml.Schema.XamlValueConverter%601> è coinvolto nel secondo passaggio su un token esistente.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-134">This property returns `false` when <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> does not return a token because a <xref:System.Xaml.Schema.XamlValueConverter%601> is involved in the second pass on an existing token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNameScopeInitializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler OnNameScopeInitializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OnNameScopeInitializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event OnNameScopeInitializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OnNameScopeInitializationComplete;" />
      <MemberSignature Language="F#" Value="member this.OnNameScopeInitializationComplete : EventHandler " Usage="member this.OnNameScopeInitializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0ab1-135">Si verifica quando un processore XAML ha registrato tutti i nomi relativi al NameScope XAML sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-135">Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0ab1-136">Risolve un oggetto da un riferimento del nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-136">Resolves an object from a name reference.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string -&gt; obj" Usage="iXamlNameResolver.Resolve name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0ab1-137">Riferimento del nome da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-137">The name reference to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0ab1-138">Risolve un oggetto da un riferimento del nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-138">Resolves an object from a name reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0ab1-139">Oggetto risolto o null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-139">The resolved object; or null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0ab1-140">Se viene restituito un valore come `null`, potrebbe essere presente un riferimento in avanti.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-140">If a value is returned as `null`, a forward reference might exist.</span></span> <span data-ttu-id="c0ab1-141">Le implementazioni che prevede di supportare i riferimenti in avanti possono utilizzare il `FixupToken` schema tramite il <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> e <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> API.</span><span class="sxs-lookup"><span data-stu-id="c0ab1-141">Implementations that want to support forward references can use the `FixupToken` pattern through the <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> and <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> APIs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name, out bool isFullyInitialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name, [out] bool&amp; isFullyInitialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String, ByRef isFullyInitialized As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name, [Runtime::InteropServices::Out] bool % isFullyInitialized);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string *  -&gt; obj" Usage="iXamlNameResolver.Resolve (name, isFullyInitialized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isFullyInitialized" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0ab1-142">Riferimento del nome da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-142">The name reference to resolve.</span>
          </span>
        </param>
        <param name="isFullyInitialized">
          <span data-ttu-id="c0ab1-143">Quando questo metodo restituisce il risultato, <see langword="true" /> se l'oggetto restituito presenta dipendenze nei riferimenti non risolti; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-143">When this method returns, <see langword="true" /> if the returned object has any dependencies on unresolved references; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0ab1-144">Risolve un oggetto da un riferimento del nome e fornisce un valore di rilevamento che riporta se l'oggetto viene inizializzato completamente ai fini degli oggetti grafici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-144">Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0ab1-145">Oggetto che fornisce un token per il comportamento di ricerca da valutare in un secondo momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0ab1-145">An object that provides a token for lookup behavior to be evaluated later.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>