<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MetaAssociation.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5be78e0da3129064b4c247800e736da72c7c2064b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be78e0da3129064b4c247800e736da72c7c2064b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Mapping.MetaAssociation">
          <source>Represents an association relationship between two entity types.</source>
          <target state="translated">Rappresenta una relazione di associazione tra due tipi di entità.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaAssociation.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaAssociation" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaAssociation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull">
          <source>Gets whether the object should be deleted when the association is set to null.</source>
          <target state="translated">Ottiene un valore che indica se l'oggetto deve essere eliminato quando l'associazione è impostata su null.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the object is deleted when the association is set to null.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, l'oggetto viene eliminato quando l'associazione è impostata su null.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule">
          <source>Gets the behavior when the child is deleted.</source>
          <target state="translated">Ottiene il comportamento quando l'elemento figlio viene eliminato.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule">
          <source>The string representing the rule, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no action is specified on delete.</source>
          <target state="translated">Stringa che rappresenta la regola o <ph id="ph1">&lt;see langword="null" /&gt;</ph> se non viene specificata alcuna azione nell'operazione di eliminazione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule">
          <source>Examples of rules are "CASCADE", "SET NULL", and so forth.</source>
          <target state="translated">Esempi di regole sono "CASCADE", "SET NULL" e così via.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsForeignKey">
          <source>Gets whether the other type is the parent of this type.</source>
          <target state="translated">Ottiene un valore che indica se l'altro tipo è padre di questo tipo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsForeignKey">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> is the other type is the parent of this type.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'altro tipo è padre di questo tipo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsMany">
          <source>Gets whether the association represents a one-to-many relationship.</source>
          <target state="translated">Ottiene un valore che indica se l'associazione rappresenta una relazione uno-a-molti.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsMany">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the association represents a one-to-many relationship.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'associazione rappresenta una relazione uno-a-molti.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsNullable">
          <source>Gets whether the association can be null.</source>
          <target state="translated">Ottiene un valore che indica se l'associazione può essere null.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsNullable">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the association can be null.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'associazione può essere null.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsUnique">
          <source>Gets whether the association is unique.</source>
          <target state="translated">Ottiene un valore che indica se l'associazione è univoca.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsUnique">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the association is unique.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'associazione è univoca.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsUnique">
          <source>This property indicates a uniqueness constraint in the database.</source>
          <target state="translated">Questa proprietà indica un vincolo di univocità nel database.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey">
          <source>Gets a list of members that represents the values on the other side of the association.</source>
          <target state="translated">Ottiene un elenco di membri che rappresenta i valori sull'altro lato dell'associazione.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey">
          <source>Returns a collection representing values on the other side of the association.</source>
          <target state="translated">Restituisce una raccolta che rappresenta i valori sull'altro lato dell'associazione.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey">
          <source>Gets whether the <ph id="ph1">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /&gt;</ph> forms the identity of the other type.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /&gt;</ph> forma l'identità dell'altro tipo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /&gt;</ph> forms the identity (primary key) of the other type.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /&gt;</ph> forma l'identità (chiave primaria) dell'altro tipo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherMember">
          <source>Gets the member on the other side of this association that represents the reverse association.</source>
          <target state="translated">Ottiene il membro sull'altro lato dell'associazione che rappresenta l'associazione inversa.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherMember">
          <source>The member on the other side.</source>
          <target state="translated">Membro sull'altro lato.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherMember">
          <source>This value can be null.</source>
          <target state="translated">Questo valore può essere null.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherType">
          <source>Gets the type on the other side of the association.</source>
          <target state="translated">Ottiene il tipo sull'altro lato dell'associazione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherType">
          <source>The type.</source>
          <target state="translated">Tipo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey">
          <source>Gets a list of members representing the values on this side of the association.</source>
          <target state="translated">Ottiene un elenco di membri che rappresenta i valori su questo lato dell'associazione.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey">
          <source>A collection.</source>
          <target state="translated">Raccolta.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /&gt;</ph> forms the identity of this type.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /&gt;</ph> forma l'identità di questo tipo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /&gt;</ph> forms the identity (primary key) of the association.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /&gt;</ph> forma l'identità (chiave primaria) dell'associazione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisMember">
          <source>Gets the member on this side that represents the association.</source>
          <target state="translated">Ottiene il membro su questo lato che rappresenta l'associazione.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisMember">
          <source>The member.</source>
          <target state="translated">Membro.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>