<Type Name="ColumnAttribute" FullName="System.Data.Linq.Mapping.ColumnAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="434bdeafe85ec70ee665c0143c4b57306fd46422" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColumnAttribute extends System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.ColumnAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnAttribute&#xA;Inherits DataAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColumnAttribute sealed : System::Data::Linq::Mapping::DataAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Linq.Mapping.DataAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b0aaf-101">Associa una classe a una colonna in una tabella di database.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0aaf-101">Associates a class with a column in a database table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0aaf-102">Usare questo attributo per definire un membro di una classe dell'entità per rappresentare una colonna in una tabella di database.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-102">Use this attribute to designate a member of an entity class to represent a column in a database table.</span></span> <span data-ttu-id="b0aaf-103">È possibile applicare questo attributo a qualsiasi campo o proprietà che è `public`, `private`, o `internal`.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-103">You can apply this attribute to any field or property that is `public`, `private`, or `internal`.</span></span>  
  
 <span data-ttu-id="b0aaf-104">Solo i membri della classe dell'entità identificati come colonne vengono resi persistenti quando [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] Salva le modifiche apportate al database.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-104">Only those entity class members identified as columns are persisted when [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] saves changes to the database.</span></span>  
  
 <span data-ttu-id="b0aaf-105">Utilizzare virgole per separare le varie proprietà dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-105">Use commas to separate multiple properties on the attribute.</span></span>  
  
   
  
## Examples  
  
```vb  
<Table(Name:="Employees")>  _  
Public Class Employees  
    Private _LastName As String  
    ' …  
    <Column(Storage:="_LastName", DbType:="NVarChar(20) NOT NULL", _  
        CanBeNull:=false)> _  
    Public Property LastName() As String  
        Get  
            Return Me._LastName  
        End Get  
        Set  
            If ((Me._LastName = value) _  
                = false) Then  
                Me.OnPropertyChanging("LastName")  
                Me._LastName = value  
                Me.OnPropertyChanged("LastName")  
            End If  
        End Set  
    End Property  
End Class  
```  
  
```csharp  
[Table(Name="Employees")]  
public class Employees  
{  
    private string _LastName;      
    // …  
    [Column(Storage="_LastName", DbType="NVarChar(20) NOT NULL",   
        CanBeNull=false)]  
    public string LastName  
    {  
        get  
        {  
            return this._LastName;  
        }  
        set  
        {  
            if ((this._LastName != value))  
            {  
                this.OnPropertyChanging("LastName");  
                this._LastName = value;  
                this.OnPropertyChanged("LastName");  
            }  
        }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColumnAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0aaf-106">Inizializza una nuova istanza della classe <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-106">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); void set(System::Data::Linq::Mapping::AutoSync value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0aaf-107">Ottiene o imposta l'enumerazione <see cref="T:System.Data.Linq.Mapping.AutoSync" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-107">Gets or sets the <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0aaf-108">Valore <see cref="T:System.Data.Linq.Mapping.AutoSync" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-108">The <see cref="T:System.Data.Linq.Mapping.AutoSync" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public bool CanBeNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanBeNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0aaf-109">Ottiene o imposta un valore che indica se una colonna può contenere valori null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-109">Gets or sets whether a column can contain null values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0aaf-110">Valore predefinito = <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-110">Default = <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0aaf-111">Se si imposta questo valore su `false`, si presuppone che i dati nella colonna corrispondente sono diverso da null.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-111">If you set this value to `false`, the data in the corresponding column is assumed to be non-null.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0aaf-112">Questa proprietà è duplicata dal <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> proprietà per motivi di praticità.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-112">This property is duplicated from the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property for convenience.</span></span> <span data-ttu-id="b0aaf-113">Il <xref:System.Data.Linq.DataContext.CreateDatabase%2A> metodo utilizza solo il <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-113">The <xref:System.Data.Linq.DataContext.CreateDatabase%2A> method uses only the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property.</span></span> <span data-ttu-id="b0aaf-114">Per questo motivo, è necessario specificare se una colonna può contenere valori null nel <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> proprietà anche.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-114">For this reason, you must specify whether a column can contain null values in the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property also.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public string DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DbType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0aaf-115">Ottiene o imposta il tipo della colonna di database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-115">Gets or sets the type of the database column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0aaf-116">Valore stringa che specifica il testo esatto che definisce la colonna in una dichiarazione di tabella Transact-SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-116">String value that specifies the exact text that defines the column in a Transact-SQL table declaration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0aaf-117">Utilizzare questa proprietà per specificare il testo esatto che definisce la colonna in una dichiarazione di tabella Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-117">Use this property to specify the exact text that defines the column in a Transact-SQL table declaration.</span></span> <span data-ttu-id="b0aaf-118">Specificare il <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> proprietà solo se si prevede di utilizzare <xref:System.Data.Linq.DataContext.CreateDatabase%2A> per creare un'istanza del database.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-118">Specify the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property only if you plan to use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to create an instance of the database.</span></span>  
  
 <span data-ttu-id="b0aaf-119">Il valore predefinito di <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> viene dedotto dal tipo di membro.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-119">The default value of <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> is inferred from the member type.</span></span> <span data-ttu-id="b0aaf-120">Per ulteriori informazioni, vedere [Mapping dei tipi CLR SQL](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).</span><span class="sxs-lookup"><span data-stu-id="b0aaf-120">For more information, see [SQL-CLR Type Mapping](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#4)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0aaf-121">Ottiene o imposta un valore che indica se una colonna è una colonna calcolata in un database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-121">Gets or sets whether a column is a computed column in a database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0aaf-122">Impostazione predefinita = vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-122">Default = empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0aaf-123">Utilizzare questa proprietà quando si utilizza <xref:System.Data.Linq.DataContext.CreateDatabase%2A> per definire una colonna come contenente valori calcolati.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-123">Use this property when you use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to define a column as containing computed values.</span></span>  
  
 <span data-ttu-id="b0aaf-124">Ad esempio, se si desidera creare una colonna definita in SQL come `InventoryVal AS UnitPrice * UnitsInStock`, utilizzare la seguente *espressione* stringa: `"UnitPrice * UnitsInStock"`.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-124">For example, if you want to create a column defined in SQL as `InventoryVal AS UnitPrice * UnitsInStock`, use the following *expression* string: `"UnitPrice * UnitsInStock"`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0aaf-125">In [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] non sono supportate colonne calcolate come chiavi primarie.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-125">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#5)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public bool IsDbGenerated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDbGenerated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0aaf-126">Ottiene o imposta un valore che indica se una colonna contiene valori generati automaticamente dal database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-126">Gets or sets whether a column contains values that the database auto-generates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0aaf-127">Valore predefinito = <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-127">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0aaf-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> i membri vengono sincronizzati immediatamente dopo l'inserimento della riga di dati e i membri sono disponibili dopo <xref:System.Data.Linq.DataContext.SubmitChanges%2A> viene completata.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> members are synchronized immediately after the row of data is inserted, and the members are available after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0aaf-129">Se la colonna contiene valori di chiave primaria e si definisce <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> come `true`, è necessario aggiungere anche il <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> proprietà utilizzando il `IDENTITY` modificatore.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-129">If the column holds primary key values and you designate <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> as `true`, you should also add the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property by using the `IDENTITY` modifier.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#6)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public bool IsDiscriminator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDiscriminator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0aaf-130">Ottiene o imposta un valore che indica se una colonna contiene un valore discriminatore per una gerarchia di ereditarietà di [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-130">Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] inheritance hierarchy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0aaf-131">Valore predefinito = <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-131">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0aaf-132">Quando `true`, questa proprietà identifica il membro della classe come contenente il valore discriminante per una gerarchia di ereditarietà.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-132">When `true`, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.</span></span>  
  
 <span data-ttu-id="b0aaf-133">È possibile impostare questa proprietà `true` per non più di un membro, che è necessario appartenere al livello più alto mappato classe nella gerarchia.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-133">You can set this property to `true` for no more than one member, which must belong to the topmost mapped class in the hierarchy.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#7)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0aaf-134">Ottiene o imposta un valore che indica se questo membro della classe rappresenta una colonna che corrisponde in tutto o in parte alla chiave primaria della tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-134">Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0aaf-135">Valore predefinito = <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-135">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0aaf-136">Supponendo che una classe di entità, è necessario fornire almeno un membro con questo attributo e devono essere mappato per la chiave primaria o univoca nella tabella corrispondente o nella vista.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-136">Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="b0aaf-137">In caso contrario questo prompt [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] considera le istanze della classe di sola lettura per l'invio di modifiche al database.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-137">Failure to do this prompts [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] to consider instances of the class as read-only for submitting changes to the database.</span></span>  
  
 <span data-ttu-id="b0aaf-138">Se si specifica più di un membro della classe utilizzando questa proprietà, la chiave viene definita un composto delle colonne associate.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-138">If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0aaf-139">In [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] non sono supportate colonne calcolate come chiavi primarie.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-139">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#8)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public bool IsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVersion { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0aaf-140">Ottiene o imposta un valore che indica se il tipo di colonna del membro è il timestamp o il numero di versione del database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-140">Gets or sets whether the column type of the member is a database timestamp or version number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0aaf-141">Valore predefinito = <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-141">Default value = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0aaf-142">Numeri di versione vengono incrementati e colonne di tipo timestamp vengono aggiornate ogni volta che viene aggiornata la riga associata.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-142">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="b0aaf-143">(Questa proprietà indica [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] che una colonna deve essere aggiornata per mostrare che è una nuova versione; non è destinato a registrare le informazioni, ad esempio che ha eseguito l'aggiornamento.)</span><span class="sxs-lookup"><span data-stu-id="b0aaf-143">(This property tells [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)</span></span>  
  
 <span data-ttu-id="b0aaf-144">Si noti quanto segue quando `IsVersion` è true:</span><span class="sxs-lookup"><span data-stu-id="b0aaf-144">Note the following when `IsVersion` is true:</span></span>  
  
-   <span data-ttu-id="b0aaf-145">Utilizzare <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> per specificare i modificatori corretti per definire una colonna timestamp o numero di versione.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-145">Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> to specify the correct modifiers to designate a version number or timestamp column.</span></span> <span data-ttu-id="b0aaf-146">Se non si specifica <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] deduce i modificatori corretti.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-146">If you do not specify <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] infers the correct modifiers.</span></span>  
  
 <span data-ttu-id="b0aaf-147">Numeri di versione vengono incrementati e colonne di tipo timestamp vengono aggiornate ogni volta che viene aggiornata la riga associata.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-147">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="b0aaf-148">I membri con `IsVersion=true` vengono sincronizzati immediatamente dopo la riga di dati viene aggiornata.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-148">Members with `IsVersion=true` are synchronized immediately after the data row is updated.</span></span> <span data-ttu-id="b0aaf-149">I nuovi valori sono visibili dopo <xref:System.Data.Linq.DataContext.SubmitChanges%2A> termina.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-149">The new values are visible after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> finishes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#9)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); void set(System::Data::Linq::Mapping::UpdateCheck value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0aaf-150">Ottiene o imposta l'approccio adottato da [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] per il rilevamento dei conflitti di concorrenza ottimistica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-150">Gets or sets how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0aaf-151">Impostazione predefinita = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, a meno che <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> non sia <see langword="true" /> per un membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-151">Default = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, unless <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> is <see langword="true" /> for a member.</span>
          </span>
          <span data-ttu-id="b0aaf-152">Gli altri valori sono <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> e <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0aaf-152">Other values are <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> and <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0aaf-153">Quando questa proprietà viene utilizzata con una delle tre enumerazioni, determina la modalità [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] rileva i conflitti di concorrenza.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-153">When this property is used with one of three enums, it determines how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] detects concurrency conflicts.</span></span>  
  
 <span data-ttu-id="b0aaf-154">Se nessun membro viene progettato come `IsVersion=true`, valori del membro originali vengono confrontati con lo stato del database corrente.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-154">If no member is designed as `IsVersion=true`, original member values are compared with the current database state.</span></span>  
  
 <span data-ttu-id="b0aaf-155">Le enumerazioni seguenti sono disponibili:</span><span class="sxs-lookup"><span data-stu-id="b0aaf-155">The following enums are available:</span></span>  
  
-   <span data-ttu-id="b0aaf-156">`Always` Utilizzare sempre questa colonna per il rilevamento dei conflitti.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-156">`Always` Always use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="b0aaf-157">`Never` Non utilizzare mai questa colonna per il rilevamento dei conflitti.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-157">`Never` Never use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="b0aaf-158">`WhenChanged` Questa colonna può essere utilizzata solo quando il membro è stato modificato dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="b0aaf-158">`WhenChanged` Use this column only when the member has been changed by the application.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#10)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>