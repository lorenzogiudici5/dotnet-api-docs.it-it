<Type Name="ResultTypeAttribute" FullName="System.Data.Linq.Mapping.ResultTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fa376f81186b45289fe01888c48dc6d2ecd1844" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37681107" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ResultTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResultTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.ResultTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResultTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResultTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ResultTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="278c1-101">Utilizzato per specificare ogni tipo di risultato, nelle funzioni contenenti vari tipi di risultato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="278c1-101">Used to specify each type of result; for functions having various result types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278c1-102">Questo attributo viene applicato alle funzioni di restituire vari tipi di risultato.</span><span class="sxs-lookup"><span data-stu-id="278c1-102">This attribute applies to functions returning various result types.</span></span> <span data-ttu-id="278c1-103">Viene utilizzato per dichiarare i tipi di possibili risultati restituiti dalla funzione.</span><span class="sxs-lookup"><span data-stu-id="278c1-103">It is used to declare the possible result types returned from the function.</span></span> <span data-ttu-id="278c1-104">Per i tipi di ereditarietà, deve essere specificato solo il tipo radice della gerarchia di ereditarietà.</span><span class="sxs-lookup"><span data-stu-id="278c1-104">For inheritance types, only the root type of the inheritance hierarchy needs to be specified.</span></span>  
  
 <span data-ttu-id="278c1-105">Vedere <xref:System.Data.Linq.Mapping.ResultTypeAttribute.Type?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="278c1-105">See <xref:System.Data.Linq.Mapping.ResultTypeAttribute.Type?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResultTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.ResultTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResultTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.Mapping.ResultTypeAttribute : Type -&gt; System.Data.Linq.Mapping.ResultTypeAttribute" Usage="new System.Data.Linq.Mapping.ResultTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="278c1-106">Tipo di risultato restituito da una funzione contenente vari tipi di risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278c1-106">The type of the result returned by a function having various result types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="278c1-107">Inizializza una nuova istanza della classe <see cref="T:System.Data.Linq.Mapping.ResultTypeAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278c1-107">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ResultTypeAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ResultTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Data.Linq.Mapping.ResultTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="278c1-108">Ottiene il mapping dei tipi validi o previsti per una funzione contenente vari tipi di risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="278c1-108">Gets the valid or expected type mapping for a function having various result types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="278c1-109">Tipo di risultato (<see cref="T:System.Type" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="278c1-109">The type of result (<see cref="T:System.Type" />).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="278c1-110">Questo attributo viene applicato alle funzioni di restituire vari tipi di risultato.</span><span class="sxs-lookup"><span data-stu-id="278c1-110">This attribute applies to functions returning various result types.</span></span> <span data-ttu-id="278c1-111">Viene utilizzato per dichiarare i tipi di possibili risultati restituiti dalla funzione.</span><span class="sxs-lookup"><span data-stu-id="278c1-111">It is used to declare the possible result types returned from the function.</span></span> <span data-ttu-id="278c1-112">Per i tipi di ereditarietà, deve essere specificato solo il tipo radice della gerarchia di ereditarietà.</span><span class="sxs-lookup"><span data-stu-id="278c1-112">For inheritance types, only the root type of the inheritance hierarchy needs to be specified.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqSprox#4](~/samples/snippets/csharp/VS_Snippets_Data/DLinqSprox/cs/northwind-sprox.cs#4)]
 [!code-vb[DLinqSprox#4](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqSprox/vb/northwind-sprox.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>