<Type Name="StoryFragment" FullName="System.Windows.Documents.DocumentStructures.StoryFragment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c07ce239f829a4284d9ac8435e6c3247d7b18e65" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911480" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StoryFragment : System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StoryFragment extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Documents.DocumentStructures.BlockElement&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.DocumentStructures.StoryFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class StoryFragment&#xA;Implements IAddChild, IEnumerable(Of BlockElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StoryFragment : System::Collections::Generic::IEnumerable&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt;, System::Windows::Markup::IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("BlockElementList")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta tutto o parte di una storia all'interno di un documento XPS.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un brano XPS in un [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento è quasi equivalente a una storia di un giornale o magazine. Si tratta di un passaggio di testo e contenuto grafico, in genere su un solo argomento, in un singolo [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento. In genere, estende su più pagine, ma può essere inferiore a una pagina come un'intestazione laterale: storia boxed, ovvero una rivista. Una storia può anche essere discontinua come un brano giornale prima pagina che continua a pagina 4. Di conseguenza, una pagina specificata può contenere più di una storia e parti di più di una storia. Un'intestazione o piè di pagina è anche un tipo speciale di storia interamente contenuta in una singola pagina.  
  
 Oggetto <xref:System.Windows.Documents.DocumentStructures.StoryFragment> rappresenta tutto o parte di una storia. Non si può estendere mai più di una pagina, ma può occupare l'intera di una pagina o condividere una pagina con altri frammenti. Se una sequenza in più di una pagina, ogni parte di esso in ogni pagina è un frammento separato. Sebbene le storie possono avere discontinue di frammenti, nessun frammento può essere discontinuo.  
  
 Solo un <xref:System.Windows.Documents.DocumentStructures.StoryFragments> elemento può essere un elemento padre di un <xref:System.Windows.Documents.DocumentStructures.StoryFragment>.  Il percorso del <xref:System.Windows.Documents.DocumentStructures.StoryBreak> elementi all'interno di un <xref:System.Windows.Documents.DocumentStructures.StoryFragment> indica se la sequenza è contenuta in più frammenti e i frammenti aggiuntivi precedono o seguono il frammento corrente.  
  
 Quando un <xref:System.Windows.Documents.DocumentStructures.StoryFragment> termina all'interno di un elemento strutturale; ad esempio un `<TableRowGroupStructure>`, quindi [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] genera documenti applicazioni è necessario inserire un tag di fine appropriate per l'elemento (in questo caso `</TableRowGroupStructure>`) prima di `</StoryFragment>` anche tag Se la struttura viene continua in un frammento di versioni successive. (Questa operazione è necessaria garantire che l'albero degli elementi all'interno di <xref:System.Windows.Documents.DocumentStructures.StoryFragment> XML valido.) Nel frammento che continua il brano deve iniziare con un tag di apertura per la struttura interrotta. L'intero albero di strutture interrotte debba essere considerato nello stesso modo (con un'eccezione, descritto di seguito): è necessario aggiungere i tag di fine per ogni tag di inizio non corrispondenti sopra il punto di interruzione.  
  
 L'eccezione si applica quando l'interruzione della storia viene immediatamente dopo un `</TableCellStructure>` tag, quindi l'applicazione di produzione deve inserire una struttura di cella vuota nella tabella (`<TableCellStructure></TableCellStructure>`) nel punto corrispondente nel frammento che continua la storia. Ciò è necessario in modo che l'utilizzo di applicazioni che è necessario unire tutti i frammenti di un determinato brano è possibile utilizzare un semplice algoritmo per eseguire questa operazione.  
  
 Si supponga, ad esempio, che un'applicazione aggiunga il materiale seguente a un [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento:  
  
```  
<SectionStructure>  
   <TableStructure>  
      <TableRowGroupStructure>  
         <TableRowStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="SomeContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="MoreContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
         </TableRowStructure>  
         <TableRowStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="EvenMoreContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="LastContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
         </TableRowStructure>  
      </TableRowGroupStructure>  
   </TableStructure>  
</SectionStructure>  
```  
  
 Se un'interruzione di pagina forza la fine del frammento subito dopo il `</TableCellStructure>` per "DelContenuto", l'applicazione deve creare la divisione come illustrato nell'esempio seguente:  
  
```  
<StoryFragment StoryName="MyStory" FragmentType="Content">  
 <SectionStructure>  
    <TableStructure>  
       <TableRowGroupStructure>  
          <TableRowStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="SomeContent" />  
                </ParagraphStructure>   
             </TableCellStructure>  
<!-- lines from here to end of fragment added by producer-->  
          </TableRowStructure>  
       </TableRowGroupStructure>  
    </TableStructure>  
 </SectionStructure>  
</StoryFragment>  
  
<StoryFragment StoryName="MyStory" FragmentType="Content">  
 <SectionStructure>  
    <TableStructure>  
       <TableRowGroupStructure>  
          <TableRowStructure>  
             <TableCellStructure>   
              <!-- extra cell added by producer-->  
             </TableCellStructure>  
<!-- lines from here to start of fragment added by producer-->  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="MoreContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
          </TableRowStructure>  
          <TableRowStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="EvenMoreContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="LastContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
          </TableRowStructure>  
       </TableRowGroupStructure>  
    </TableStructure>  
 </SectionStructure>  
</StoryFragment>  
```  
  
 Un'applicazione che legge il documento potrebbe essere necessario per il contenuto di tipo merge. Si consideri, ad esempio, un visualizzatore XPS con un **copia tutto negli Appunti** pulsante; o un **XPS per il Blind** applicazione passati storie per un sintetizzatore vocale.  Alcune applicazioni che leggono il documento potrebbero essere necessario unire un sottoinsieme dei frammenti di una storia. Ad esempio, una funzionalità che consente di copiare un paragrafo intero negli Appunti facendo clic tre volte necessario eseguire un'operazione di unione ogni volta che il paragrafo occupate un'interruzione di pagina, perché tale paragrafo verrebbe suddiviso tra due <xref:System.Windows.Documents.DocumentStructures.StoryFragment>s.  
  
 **Per unire utilizzare questo algoritmo:**  
  
1.  Eliminare il `</StoryFragment>` dalla fine del primo frammento da unire ed eliminare il `<StoryFragment>` dall'inizio del secondo.  
  
2.  Se l'ultimo tag di chiusura del primo frammento è dello stesso tipo del primo tag di apertura del secondo frammento (e non sono `<NamedElement>` tag), eliminare entrambi.  
  
3.  Ripetere il passaggio 2 fino a quando non sono i due frammenti *entrambi* dei seguenti stati:  
  
    -   Non è più una corrispondenza di tipo tra l'ultimo tag di fine del frammento iniziale il primo tag di inizio del frammento finale.  
  
    -   L'ultimo tag di fine del iniziale frammento il primo tag di inizio del frammento finale sono entrambi `<NamedElement>` tag.  
  
 Nell'esempio precedente, se la cella vuota non è stato aggiunto dall'applicazione di produzione, quindi un'unione dei frammenti produrrebbe una tabella a cui la prima riga ha solo una cella contenente riferimenti "DelContenuto" e "PiùContenuto" anziché l'originale prima riga con due celle, ognuno dei quali contiene un solo riferimento  
  
 Quando viene unito l'intera sequenza, l'algoritmo deve essere ripetuta per ogni frammento successivi che fa parte della stessa sequenza. I frammenti che appartengono a una storia sono indicizzati nel `<Story>` elemento. Vedere la sezione 9.1.15 del [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] specifica in cui è possibile ottenere in [XPS: Specification and License Downloads](http://www.microsoft.com/whdc/xps/downloads.mspx). L'ultimo frammento per un determinato brano avrà un <xref:System.Windows.Documents.DocumentStructures.StoryBreak> elemento come ultimo figlio.  
  
   
  
## Examples  
 Nell'esempio seguente il `<StoryFragment>` fa parte di un [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documento.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.DocumentStructures.StoryBreak" />
    <altmember cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoryFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StoryFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Documents.DocumentStructures.BlockElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Documents.DocumentStructures.BlockElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.Add(System.Windows.Documents.DocumentStructures.BlockElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (element As BlockElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Documents::DocumentStructures::BlockElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Documents.DocumentStructures.BlockElement" />
      </Parameters>
      <Docs>
        <param name="element">Blocco da aggiungere.</param>
        <summary>Aggiunge un blocco al frammento di blocco di contenuto.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il blocco passato è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FragmentName">
      <MemberSignature Language="C#" Value="public string FragmentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      <MemberSignature Language="VB.NET" Value="Public Property FragmentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FragmentName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del frammento del brano.</summary>
        <value>Oggetto <see cref="T:System.String" /> che rappresenta il nome di questo frammento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sul `FragmentName` attributo del `</StoryFragment>` fa parte di un [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documento, vedere il capitolo 9 il [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] specifica in cui è possibile ottenere in [XPS: Specification and License Downloads](http://www.microsoft.com/whdc/xps/downloads.mspx).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      </Docs>
    </Member>
    <Member MemberName="FragmentType">
      <MemberSignature Language="C#" Value="public string FragmentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
      <MemberSignature Language="VB.NET" Value="Public Property FragmentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FragmentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di frammento.</summary>
        <value>Oggetto <see cref="T:System.String" /> che rappresenta il tipo di frammento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori possibili sono "Header", "Piè di pagina" e "Contenuto".  
  
 Per ulteriori informazioni sul `FragmentType` attributo del `</StoryFragment>` fa parte di un [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documento, vedere il capitolo 9 il [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] specifica in cui è possibile ottenere in [XPS: Specification and License Downloads](http://www.microsoft.com/whdc/xps/downloads.mspx).  
  
   
  
## Examples  
 Nell'esempio seguente il `FragmentType` attributo del `<StoryFragment>` fa parte di un [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documento.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      </Docs>
    </Member>
    <Member MemberName="StoryName">
      <MemberSignature Language="C#" Value="public string StoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoryName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property StoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del brano.</summary>
        <value>Oggetto <see cref="T:System.String" /> che rappresenta il nome del brano.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i frammenti di un determinato brano devono avere lo stesso valore per questa proprietà. Deve corrispondere il `StoryName` attributo del `<Story>` elemento. Vedere la sezione 9.1.15 del [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] specifica in cui è possibile ottenere in [XPS: Specification and License Downloads](http://www.microsoft.com/whdc/xps/downloads.mspx).  
  
 Questa proprietà può essere specificata se <xref:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType%2A> intestazione o piè di pagina.  
  
   
  
## Examples  
 Nell'esempio seguente il `StoryName` attributo del `<StoryFragment>` fa parte di un [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documento.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt; IEnumerable&lt;BlockElement&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.Documents.DocumentStructures.BlockElement&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#Generic#IEnumerable&lt;System#Windows#Documents#DocumentStructures#BlockElement&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of BlockElement) Implements IEnumerable(Of BlockElement).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Questo metodo non è stato implementato.</summary>
        <returns>Genera sempre <see cref="T:System.NotSupportedException" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Questo metodo non è stato implementato.</summary>
        <returns>Genera sempre <see cref="T:System.NotSupportedException" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Object" /> figlio che viene aggiunto.</param>
        <summary>Questo membro supporta l'infrastruttura .NET Framework e non è possibile usarlo direttamente dal codice.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aggiunge un oggetto figlio all'oggetto <xref:System.Windows.Documents.DocumentStructures.StoryFragment>.  
  
 Deve esistere almeno un figlio di <xref:System.Windows.Documents.DocumentStructures.StoryFragment> e gli elementi figlio possono essere solo di questi tipi: <xref:System.Windows.Documents.DocumentStructures.ParagraphStructure>, <xref:System.Windows.Documents.DocumentStructures.FigureStructure>, <xref:System.Windows.Documents.DocumentStructures.ListStructure>, <xref:System.Windows.Documents.DocumentStructures.TableStructure>, <xref:System.Windows.Documents.DocumentStructures.SectionStructure>, e <xref:System.Windows.Documents.DocumentStructures.StoryBreak>.  
  
 Oggetto <xref:System.Windows.Documents.DocumentStructures.StoryBreak> può essere solo il primo o ultimo figlio di un <xref:System.Windows.Documents.DocumentStructures.StoryFragment>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> non è uno dei tipi che possono essere figlio di questa classe. Vedere la sezione **Note**.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo da aggiungere all'oggetto.</param>
        <summary>Aggiunge il contenuto di testo di un nodo all'oggetto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>