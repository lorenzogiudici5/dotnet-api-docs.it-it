<Type Name="RegularExpressionAttribute" FullName="System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
  <TypeSignature Language="C#" Value="public class RegularExpressionAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionAttribute extends System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionAttribute&#xA;Inherits ValidationAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionAttribute : System::ComponentModel::DataAnnotations::ValidationAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.DataAnnotations.ValidationAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="37a30-101">Specifica che il valore di un campo dati in ASP.NET Dynamic Data deve corrispondere all'espressione regolare specificata.</span><span class="sxs-lookup"><span data-stu-id="37a30-101">Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a30-102">Viene applicato l'attributo RegularExpressionAttribute a una proprietà quando è necessario convalidare i valori della proprietà in base a un'espressione regolare.</span><span class="sxs-lookup"><span data-stu-id="37a30-102">You apply the RegularExpressionAttribute attribute to a property when you need to validate values for the property against a regular expression.</span></span> <span data-ttu-id="37a30-103">L'espressione regolare consente di specificare in modo molto preciso il formato di valori validi.</span><span class="sxs-lookup"><span data-stu-id="37a30-103">The regular expression enables you to specify very precisely the format of valid values.</span></span> <span data-ttu-id="37a30-104">La proprietà Pattern contiene l'espressione regolare. Se il valore della proprietà è Null o una stringa vuota (""), tale valore supera automaticamente la convalida per l'attributo RegularExpressionAttribute.</span><span class="sxs-lookup"><span data-stu-id="37a30-104">The Pattern property contains the regular expression.If the value of the property is null or an empty string (""), the value automatically passes validation for the RegularExpressionAttribute attribute.</span></span> <span data-ttu-id="37a30-105">Per convalidare che il valore non è `null` o una stringa vuota, utilizzare il **RequiredAttribute** attributo.</span><span class="sxs-lookup"><span data-stu-id="37a30-105">To validate that the value is not `null` or an empty string, use the **RequiredAttribute** attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37a30-106">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attributo da convalidare i campi dati FirstName e LastName.</span><span class="sxs-lookup"><span data-stu-id="37a30-106">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to validate the FirstName and LastName data fields.</span></span> <span data-ttu-id="37a30-107">L'espressione regolare consente un massimo di 40 caratteri maiuscoli e minuscoli.</span><span class="sxs-lookup"><span data-stu-id="37a30-107">The regular expression allows up to 40 uppercase and lowercase characters.</span></span> <span data-ttu-id="37a30-108">L'esempio esegue le attività seguenti:</span><span class="sxs-lookup"><span data-stu-id="37a30-108">The example performs the following tasks:</span></span>  
  
-   <span data-ttu-id="37a30-109">Implementa una classe parziale di metadati e la classe di metadati associato.</span><span class="sxs-lookup"><span data-stu-id="37a30-109">Implements a metadata partial class and the associated metadata class.</span></span>  
  
-   <span data-ttu-id="37a30-110">Nella classe di metadati associati, applica la <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attributo ai campi dati FirstName e LastName, specificando il modello e i messaggi di errore personalizzati.</span><span class="sxs-lookup"><span data-stu-id="37a30-110">In the associated metadata class, applies the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to the FirstName and LastName data fields, specifying the pattern and custom error messages.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionAttribute (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionAttribute(System::String ^ pattern);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="37a30-111">Espressione regolare utilizzata per convalidare il valore del campo dati.</span><span class="sxs-lookup"><span data-stu-id="37a30-111">The regular expression that is used to validate the data field value.</span></span></param>
        <summary><span data-ttu-id="37a30-112">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="37a30-112">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="37a30-113">Nell'esempio seguente viene illustrato come applicare il <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> a un campo dati.</span><span class="sxs-lookup"><span data-stu-id="37a30-113">The following example shows how to apply the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> to a data field.</span></span> <span data-ttu-id="37a30-114">Se la convalida non riesce, il codice nell'esempio viene visualizzato il messaggio di errore di convalida che viene fornito da Dynamic Data.</span><span class="sxs-lookup"><span data-stu-id="37a30-114">If validation fails, the code in the example displays the validation error message that is provided by Dynamic Data.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37a30-115"><paramref name="pattern" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37a30-115"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FormatErrorMessage">
      <MemberSignature Language="C#" Value="public override string FormatErrorMessage (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string FormatErrorMessage(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FormatErrorMessage (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ FormatErrorMessage(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="37a30-116">Nome del campo che ha causato l'errore di convalida.</span><span class="sxs-lookup"><span data-stu-id="37a30-116">The name of the field that caused the validation failure.</span></span></param>
        <summary><span data-ttu-id="37a30-117">Formatta il messaggio di errore da visualizzare se la convalida dell'espressione regolare non riesce.</span><span class="sxs-lookup"><span data-stu-id="37a30-117">Formats the error message to display if the regular expression validation fails.</span></span></summary>
        <returns><span data-ttu-id="37a30-118">Messaggio di errore formattato.</span><span class="sxs-lookup"><span data-stu-id="37a30-118">The formatted error message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a30-119">Il <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> crea il messaggio di errore utilizzando il nome del campo dati che ha causato l'errore di convalida.</span><span class="sxs-lookup"><span data-stu-id="37a30-119">The <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> creates the error message by using the name of the data field that caused the validation failure.</span></span> <span data-ttu-id="37a30-120">È possibile eseguire l'override di questo metodo in attributi di convalida personalizzati per personalizzare la modalità di creazione degli errori o per fornire un messaggio più complesso che contiene i parametri valutati in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="37a30-120">You can override this method in custom validation attributes to customize how errors are created or to provide a more complex message that contains parameters that you evaluate at run time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="37a30-121">Valore del campo dati da convalidare.</span><span class="sxs-lookup"><span data-stu-id="37a30-121">The data field value to validate.</span></span></param>
        <summary><span data-ttu-id="37a30-122">Verifica se il valore immesso dall'utente corrisponde al modello di espressione regolare.</span><span class="sxs-lookup"><span data-stu-id="37a30-122">Checks whether the value entered by the user matches the regular expression pattern.</span></span></summary>
        <returns>
          <span data-ttu-id="37a30-123"><see langword="true" /> se la convalida ha esito positivo, in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37a30-123"><see langword="true" /> if validation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="37a30-124">Il valore del campo dati non corrisponde al modello di espressione regolare.</span><span class="sxs-lookup"><span data-stu-id="37a30-124">The data field value did not match the regular expression pattern.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeoutInMilliseconds">
      <MemberSignature Language="C#" Value="public int MatchTimeoutInMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchTimeoutInMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeoutInMilliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MatchTimeoutInMilliseconds { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a30-125">Ottiene o imposta il periodo di tempo in millisecondi in cui eseguire una singola operazione di corrispondenza prima del timeout dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="37a30-125">Gets or set the amount of time in milliseconds to execute a single matching operation before the operation times out.</span></span></summary>
        <value><span data-ttu-id="37a30-126">Periodo di tempo in millisecondi in cui eseguire una singola operazione di corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="37a30-126">The amount of time in milliseconds to execute a single matching operation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a30-127">Ottiene il modello di espressione regolare.</span><span class="sxs-lookup"><span data-stu-id="37a30-127">Gets the regular expression pattern.</span></span></summary>
        <value><span data-ttu-id="37a30-128">Modello a cui attenersi.</span><span class="sxs-lookup"><span data-stu-id="37a30-128">The pattern to match.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>