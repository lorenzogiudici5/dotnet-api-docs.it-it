<Type Name="RequiredAttribute" FullName="System.ComponentModel.DataAnnotations.RequiredAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f379cf90532e94736c7828d9b1d54fa71262e1d9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36710059" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RequiredAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequiredAttribute extends System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class RequiredAttribute&#xA;Inherits ValidationAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequiredAttribute : System::ComponentModel::DataAnnotations::ValidationAttribute" />
  <TypeSignature Language="F#" Value="type RequiredAttribute = class&#xA;    inherit ValidationAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.DataAnnotations.ValidationAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica che il valore di un campo dati è obbligatorio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attributo specifica che quando un campo in un form viene convalidato, il campo deve contenere un valore. Un'eccezione di convalida viene generata se la proprietà è `null`, contiene una stringa vuota (""), o contiene solo spazi vuoti.  
  
> [!NOTE]
>  Se MVC dati entità o modello di classe parziale contiene un campo che è annotato con la <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attributo, ma la pagina non contiene la proprietà, non viene generato un errore. La convalida viene eseguita solo per i campi che vengono inviati al server.  
  
## Examples  
 L'esempio seguente usa il <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attributo per eseguire l'override della regola dello schema di database che consente a un campo di dati sia vuoto. Nell'esempio viene eseguita la procedura seguente:  
  
-   Implementa una classe parziale di metadati e la classe di metadati associato.  
  
-   Nella classe di metadati associato, viene applicato il <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attributo che specifica i requisiti seguenti:  
  
    -   Il campo dei dati del titolo non può essere vuoto. Se la convalida non riesce, il codice di esempio genera un'eccezione di convalida e viene visualizzato un messaggio di errore. Il messaggio di errore è specificato nel momento in cui è applicato l'attributo per il campo dei dati.  
  
    -   Il campo dei dati MiddleName non può essere vuoto. Se la convalida non riesce, il codice di esempio genera un'eccezione di convalida e viene visualizzato un messaggio di errore.  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RequiredAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RequiredAttribute/CS/Customer.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.RequiredAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RequiredAttribute/VB/Customer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequiredAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequiredAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il costruttore <xref:System.ComponentModel.DataAnnotations.RequiredAttribute.%23ctor%2A>. Se la convalida non riesce, nell'esempio viene visualizzato un messaggio di errore di convalida che viene fornito da Dynamic Data.  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RequiredAttribute#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RequiredAttribute/CS/Customer.cs#3)]
 [!code-vb[System.ComponentModel.DataAnnotations.RequiredAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RequiredAttribute/VB/Customer.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEmptyStrings">
      <MemberSignature Language="C#" Value="public bool AllowEmptyStrings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEmptyStrings" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowEmptyStrings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEmptyStrings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowEmptyStrings : bool with get, set" Usage="System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se una stringa vuota è consentita.</summary>
        <value>
          <see langword="true" /> se una stringa vuota è consentita. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si imposta <xref:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings%2A> al `true` per un campo di dati, dati dinamici non esegue la convalida e trasforma una stringa vuota per un `null` valore. Questo valore viene quindi passato al database.  
  
 Se il database non consente `null` valori, verrà generato un errore. Per evitare questo errore, è necessario impostare anche il <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> a `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.IsValid : obj -&gt; bool" Usage="requiredAttribute.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Valore del campo dati da convalidare.</param>
        <summary>Verifica che il valore del campo dati richiesto non sia vuoto.</summary>
        <returns>
          <see langword="true" /> se la convalida ha esito positivo, in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il valore è una stringa vuota, il metodo restituisce `false` e viene visualizzato un errore di convalida.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">Il valore del campo dati era <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>