<Type Name="CipherMode" FullName="System.Security.Cryptography.CipherMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c70ff3bf1a311578eeb87faf3ca052f53d7933f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30495925" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum CipherMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CipherMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CipherMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum CipherMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class CipherMode" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6bad2-101">Specifica la modalità di crittografia di blocco da usare per la crittografia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bad2-101">Specifies the block cipher mode to use for encryption.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bad2-102">Algoritmi di crittografia di blocco crittografano i dati nell'unità in blocchi, anziché un singolo byte alla volta.</span><span class="sxs-lookup"><span data-stu-id="6bad2-102">Block cipher algorithms encrypt data in block units, rather than a single byte at a time.</span></span> <span data-ttu-id="6bad2-103">La dimensione del blocco più comune è di 8 byte.</span><span class="sxs-lookup"><span data-stu-id="6bad2-103">The most common block size is 8 bytes.</span></span> <span data-ttu-id="6bad2-104">Poiché ogni blocco viene elaborato completamente, blocchi forniscono un livello di sicurezza superiore rispetto alle crittografie a flussi.</span><span class="sxs-lookup"><span data-stu-id="6bad2-104">Because each block is heavily processed, block ciphers provide a higher level of security than stream ciphers.</span></span> <span data-ttu-id="6bad2-105">Tuttavia, gli algoritmi di crittografia di blocco tendono a eseguire più lentamente rispetto alle crittografie a flussi.</span><span class="sxs-lookup"><span data-stu-id="6bad2-105">However, block cipher algorithms tend to execute more slowly than stream ciphers.</span></span>  
  
 <span data-ttu-id="6bad2-106">Blocchi per ogni blocco viene utilizzato lo stesso algoritmo di crittografia.</span><span class="sxs-lookup"><span data-stu-id="6bad2-106">Block ciphers use the same encryption algorithm for each block.</span></span> <span data-ttu-id="6bad2-107">Per questo motivo, un blocco di testo normale restituirà sempre lo stesso testo crittografato quando crittografato con la stessa chiave e l'algoritmo.</span><span class="sxs-lookup"><span data-stu-id="6bad2-107">Because of this, a block of plain text will always return the same cipher text when encrypted with the same key and algorithm.</span></span> <span data-ttu-id="6bad2-108">Poiché questo comportamento può essere utilizzato per compromettere la crittografia, vengono introdotte che modificano il processo di crittografia in base ai suggerimenti da crittografie in modalità di crittografia.</span><span class="sxs-lookup"><span data-stu-id="6bad2-108">Because this behavior can be used to crack a cipher, cipher modes are introduced that modify the encryption process based on feedback from earlier block encryptions.</span></span> <span data-ttu-id="6bad2-109">Risultato della crittografia fornisce un livello di sicurezza superiore rispetto alla crittografia semplice blocco.</span><span class="sxs-lookup"><span data-stu-id="6bad2-109">The resulting encryption provides a higher level of security than a simple block encryption.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CBC">
      <MemberSignature Language="C#" Value="CBC" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CBC = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CBC" />
      <MemberSignature Language="VB.NET" Value="CBC" />
      <MemberSignature Language="C++ CLI" Value="CBC" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bad2-110">La modalità <see langword="CBC" /> (Cipher Block Chaining) introduce la retroazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-110">The Cipher Block Chaining (<see langword="CBC" />) mode introduces feedback.</span>
          </span>
          <span data-ttu-id="6bad2-111">Prima di essere crittografato, ogni blocco di testo normale viene combinato al testo crittografato del blocco precedente mediante un'operazione OR esclusiva bit per bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-111">Before each plain text block is encrypted, it is combined with the cipher text of the previous block by a bitwise exclusive OR operation.</span>
          </span>
          <span data-ttu-id="6bad2-112">In questo modo, viene garantito che anche se il testo normale è composto di numerosi blocchi identici, questi verranno crittografati in un blocco di testo crittografato diverso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-112">This ensures that even if the plain text contains many identical blocks, they will each encrypt to a different cipher text block.</span>
          </span>
          <span data-ttu-id="6bad2-113">Il vettore di inizializzazione viene combinato al primo blocco di testo normale mediante un'operazione OR esclusiva bit per bit prima che il blocco venga crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-113">The initialization vector is combined with the first plain text block by a bitwise exclusive OR operation before the block is encrypted.</span>
          </span>
          <span data-ttu-id="6bad2-114">Se un solo bit del blocco di testo crittografato risulta danneggiato, sarà danneggiato anche il corrispondente blocco di testo normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-114">If a single bit of the cipher text block is mangled, the corresponding plain text block will also be mangled.</span>
          </span>
          <span data-ttu-id="6bad2-115">Inoltre, verrà danneggiato un bit del blocco successivo che occupa la stessa posizione del bit originale danneggiato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-115">In addition, a bit in the subsequent block, in the same position as the original mangled bit, will be mangled.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CFB">
      <MemberSignature Language="C#" Value="CFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CFB = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CFB" />
      <MemberSignature Language="VB.NET" Value="CFB" />
      <MemberSignature Language="C++ CLI" Value="CFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bad2-116">Anziché elaborare un intero blocco alla volta, con la modalità <see langword="CFB" /> (Cipher Feedback) il testo normale viene elaborato in testo crittografato a piccoli incrementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-116">The Cipher Feedback (<see langword="CFB" />) mode processes small increments of plain text into cipher text, instead of processing an entire block at a time.</span>
          </span>
          <span data-ttu-id="6bad2-117">Questa modalità si avvale di un registro a scorrimento, della lunghezza di un blocco e suddiviso in sezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-117">This mode uses a shift register that is one block in length and is divided into sections.</span>
          </span>
          <span data-ttu-id="6bad2-118">Se, ad esempio, la lunghezza del blocco è di 8 byte e l'elaborazione è di un byte alla volta, il registro a scorrimento sarà suddiviso in otto sezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-118">For example, if the block size is 8 bytes, with one byte processed at a time, the shift register is divided into eight sections.</span>
          </span>
          <span data-ttu-id="6bad2-119">Se un bit del testo crittografato risulta danneggiato, saranno danneggiati anche un bit del testo normale e il registro a scorrimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-119">If a bit in the cipher text is mangled, one plain text bit is mangled and the shift register is corrupted.</span>
          </span>
          <span data-ttu-id="6bad2-120">In questo modo, risulteranno danneggiati anche i successivi incrementi di testo normale finché il bit errato non verrà eliminato dal registro a scorrimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-120">This results in the next several plain text increments being mangled until the bad bit is shifted out of the shift register.</span>
          </span>
          <span data-ttu-id="6bad2-121">La dimensione del feedback predefinita può variare in base all'algoritmo, ma in genere corrisponde a 8 bit o al numero di bit della dimensione del blocco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-121">The default feedback size can vary by algorithm, but is typically either 8 bits or the number of bits of the block size.</span>
          </span>
          <span data-ttu-id="6bad2-122">È possibile modificare il numero di bit del feedback tramite la proprietà <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-122">You can alter the number of feedback bits by using the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> property.</span>
          </span>
          <span data-ttu-id="6bad2-123">Gli algoritmi che supportano CFB utilizzano questa proprietà per impostare il feedback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-123">Algorithms that support CFB use this property to set the feedback.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CTS">
      <MemberSignature Language="C#" Value="CTS" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CTS = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CTS" />
      <MemberSignature Language="VB.NET" Value="CTS" />
      <MemberSignature Language="C++ CLI" Value="CTS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bad2-124">La modalità <see langword="CTS" /> (Cipher Text Stealing) consente di gestire qualsiasi lunghezza di testo normale, producendo testo crittografato di lunghezza pari a quella del testo normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-124">The Cipher Text Stealing (<see langword="CTS" />) mode handles any length of plain text and produces cipher text whose length matches the plain text length.</span>
          </span>
          <span data-ttu-id="6bad2-125">Il funzionamento di questa modalità è analogo a quello della modalità <see langword="CBC" />, fatta eccezione per gli ultimi due blocchi di testo normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-125">This mode behaves like the <see langword="CBC" /> mode for all but the last two blocks of the plain text.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ECB">
      <MemberSignature Language="C#" Value="ECB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode ECB = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.ECB" />
      <MemberSignature Language="VB.NET" Value="ECB" />
      <MemberSignature Language="C++ CLI" Value="ECB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bad2-126">La modalità <see langword="ECB" /> (Electronic Codebook) consente di crittografare ciascun blocco singolarmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-126">The Electronic Codebook (<see langword="ECB" />) mode encrypts each block individually.</span>
          </span>
          <span data-ttu-id="6bad2-127">Tutti i blocchi di testo normale identici e che si trovano nello stesso messaggio, o in un messaggio diverso crittografato con la stessa chiave, verranno trasformati in blocchi di testo crittografato identici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-127">Any blocks of plain text that are identical and in the same message, or that are in a different message encrypted with the same key, will be transformed into identical cipher text blocks.</span>
          </span>
          <span data-ttu-id="6bad2-128">**Importante**: questa modalità non è consigliabile perché può causare più violazioni della sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-128">**Important**:  This mode is not recommended because it opens the door for multiple security exploits.</span>
          </span>
          <span data-ttu-id="6bad2-129">Se il testo normale da crittografare contiene molte ripetizioni, è verosimile che il testo crittografato venga suddiviso in un blocco per volta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-129">If the plain text to be encrypted contains substantial repetition, it is feasible for the cipher text to be broken one block at a time.</span>
          </span>
          <span data-ttu-id="6bad2-130">È anche possibile utilizzare l'analisi dei blocchi per determinare la chiave di crittografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-130">It is also possible to use block analysis to determine the encryption key.</span>
          </span>
          <span data-ttu-id="6bad2-131">Inoltre, un avversario attivo può sostituire e scambiare i singoli blocchi senza che venga rilevato, consentendo di salvare e inserire i blocchi nel flusso in altri punti senza essere individuati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-131">Also, an active adversary can substitute and exchange individual blocks without detection, which allows blocks to be saved and inserted into the stream at other points without detection.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OFB">
      <MemberSignature Language="C#" Value="OFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode OFB = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.OFB" />
      <MemberSignature Language="VB.NET" Value="OFB" />
      <MemberSignature Language="C++ CLI" Value="OFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6bad2-132">La modalità <see langword="OFB" /> (Output Feedback) consente di elaborare piccoli incrementi di testo normale in testo crittografato, anziché elaborare un intero blocco alla volta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-132">The Output Feedback (<see langword="OFB" />) mode processes small increments of plain text into cipher text instead of processing an entire block at a time.</span>
          </span>
          <span data-ttu-id="6bad2-133">Questa modalità è analoga alla modalità <see langword="CFB" />; l'unica differenza consiste nel modo in cui viene creato il registro a scorrimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-133">This mode is similar to <see langword="CFB" />; the only difference between the two modes is the way that the shift register is filled.</span>
          </span>
          <span data-ttu-id="6bad2-134">Se un bit del testo crittografato risulta danneggiato, sarà danneggiato anche il corrispondente bit del testo normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-134">If a bit in the cipher text is mangled, the corresponding bit of plain text will be mangled.</span>
          </span>
          <span data-ttu-id="6bad2-135">Se tuttavia nel testo crittografato sono presenti bit aggiuntivi o mancano alcuni bit, il testo normale risulterà danneggiato dal quel punto in poi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bad2-135">However, if there are extra or missing bits from the cipher text, the plain text will be mangled from that point on.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>