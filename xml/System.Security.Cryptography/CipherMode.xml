<Type Name="CipherMode" FullName="System.Security.Cryptography.CipherMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c70ff3bf1a311578eeb87faf3ca052f53d7933f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30495925" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum CipherMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CipherMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CipherMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum CipherMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class CipherMode" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica la modalità di crittografia di blocco da usare per la crittografia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Algoritmi di crittografia di blocco crittografano i dati nell'unità in blocchi, anziché un singolo byte alla volta. La dimensione del blocco più comune è di 8 byte. Poiché ogni blocco viene elaborato completamente, blocchi forniscono un livello di sicurezza superiore rispetto alle crittografie a flussi. Tuttavia, gli algoritmi di crittografia di blocco tendono a eseguire più lentamente rispetto alle crittografie a flussi.  
  
 Blocchi per ogni blocco viene utilizzato lo stesso algoritmo di crittografia. Per questo motivo, un blocco di testo normale restituirà sempre lo stesso testo crittografato quando crittografato con la stessa chiave e l'algoritmo. Poiché questo comportamento può essere utilizzato per compromettere la crittografia, vengono introdotte che modificano il processo di crittografia in base ai suggerimenti da crittografie in modalità di crittografia. Risultato della crittografia fornisce un livello di sicurezza superiore rispetto alla crittografia semplice blocco.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CBC">
      <MemberSignature Language="C#" Value="CBC" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CBC = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CBC" />
      <MemberSignature Language="VB.NET" Value="CBC" />
      <MemberSignature Language="C++ CLI" Value="CBC" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>La modalità <see langword="CBC" /> (Cipher Block Chaining) introduce la retroazione. Prima di essere crittografato, ogni blocco di testo normale viene combinato al testo crittografato del blocco precedente mediante un'operazione OR esclusiva bit per bit. In questo modo, viene garantito che anche se il testo normale è composto di numerosi blocchi identici, questi verranno crittografati in un blocco di testo crittografato diverso. Il vettore di inizializzazione viene combinato al primo blocco di testo normale mediante un'operazione OR esclusiva bit per bit prima che il blocco venga crittografato. Se un solo bit del blocco di testo crittografato risulta danneggiato, sarà danneggiato anche il corrispondente blocco di testo normale. Inoltre, verrà danneggiato un bit del blocco successivo che occupa la stessa posizione del bit originale danneggiato.</summary>
      </Docs>
    </Member>
    <Member MemberName="CFB">
      <MemberSignature Language="C#" Value="CFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CFB = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CFB" />
      <MemberSignature Language="VB.NET" Value="CFB" />
      <MemberSignature Language="C++ CLI" Value="CFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Anziché elaborare un intero blocco alla volta, con la modalità <see langword="CFB" /> (Cipher Feedback) il testo normale viene elaborato in testo crittografato a piccoli incrementi. Questa modalità si avvale di un registro a scorrimento, della lunghezza di un blocco e suddiviso in sezioni. Se, ad esempio, la lunghezza del blocco è di 8 byte e l'elaborazione è di un byte alla volta, il registro a scorrimento sarà suddiviso in otto sezioni. Se un bit del testo crittografato risulta danneggiato, saranno danneggiati anche un bit del testo normale e il registro a scorrimento. In questo modo, risulteranno danneggiati anche i successivi incrementi di testo normale finché il bit errato non verrà eliminato dal registro a scorrimento. La dimensione del feedback predefinita può variare in base all'algoritmo, ma in genere corrisponde a 8 bit o al numero di bit della dimensione del blocco. È possibile modificare il numero di bit del feedback tramite la proprietà <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />. Gli algoritmi che supportano CFB utilizzano questa proprietà per impostare il feedback.</summary>
      </Docs>
    </Member>
    <Member MemberName="CTS">
      <MemberSignature Language="C#" Value="CTS" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CTS = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CTS" />
      <MemberSignature Language="VB.NET" Value="CTS" />
      <MemberSignature Language="C++ CLI" Value="CTS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>La modalità <see langword="CTS" /> (Cipher Text Stealing) consente di gestire qualsiasi lunghezza di testo normale, producendo testo crittografato di lunghezza pari a quella del testo normale. Il funzionamento di questa modalità è analogo a quello della modalità <see langword="CBC" />, fatta eccezione per gli ultimi due blocchi di testo normale.</summary>
      </Docs>
    </Member>
    <Member MemberName="ECB">
      <MemberSignature Language="C#" Value="ECB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode ECB = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.ECB" />
      <MemberSignature Language="VB.NET" Value="ECB" />
      <MemberSignature Language="C++ CLI" Value="ECB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>La modalità <see langword="ECB" /> (Electronic Codebook) consente di crittografare ciascun blocco singolarmente. Tutti i blocchi di testo normale identici e che si trovano nello stesso messaggio, o in un messaggio diverso crittografato con la stessa chiave, verranno trasformati in blocchi di testo crittografato identici. **Importante**: questa modalità non è consigliabile perché può causare più violazioni della sicurezza. Se il testo normale da crittografare contiene molte ripetizioni, è verosimile che il testo crittografato venga suddiviso in un blocco per volta. È anche possibile utilizzare l'analisi dei blocchi per determinare la chiave di crittografia. Inoltre, un avversario attivo può sostituire e scambiare i singoli blocchi senza che venga rilevato, consentendo di salvare e inserire i blocchi nel flusso in altri punti senza essere individuati.</summary>
      </Docs>
    </Member>
    <Member MemberName="OFB">
      <MemberSignature Language="C#" Value="OFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode OFB = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.OFB" />
      <MemberSignature Language="VB.NET" Value="OFB" />
      <MemberSignature Language="C++ CLI" Value="OFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>La modalità <see langword="OFB" /> (Output Feedback) consente di elaborare piccoli incrementi di testo normale in testo crittografato, anziché elaborare un intero blocco alla volta. Questa modalità è analoga alla modalità <see langword="CFB" />; l'unica differenza consiste nel modo in cui viene creato il registro a scorrimento. Se un bit del testo crittografato risulta danneggiato, sarà danneggiato anche il corrispondente bit del testo normale. Se tuttavia nel testo crittografato sono presenti bit aggiuntivi o mancano alcuni bit, il testo normale risulterà danneggiato dal quel punto in poi.</summary>
      </Docs>
    </Member>
  </Members>
</Type>