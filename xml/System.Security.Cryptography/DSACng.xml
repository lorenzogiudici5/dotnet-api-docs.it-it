<Type Name="DSACng" FullName="System.Security.Cryptography.DSACng">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2cb4469c87836196d637cfac1fd3c3022b15a80" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30497405" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DSACng : System.Security.Cryptography.DSA" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DSACng extends System.Security.Cryptography.DSA" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSACng" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DSACng&#xA;Inherits DSA" />
  <TypeSignature Language="C++ CLI" Value="public ref class DSACng sealed : System::Security::Cryptography::DSA" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DSA</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e6130-101">Fornisce un'implementazione CNG (Cryptography Next Generation) dell'algoritmo DSA (Digital Signature Algorithm).</span>
      <span class="sxs-lookup">
        <span data-stu-id="e6130-101">Provides a Cryptography Next Generation (CNG) implementation of the Digital Signature Algorithm (DSA).</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e6130-102">Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.DSACng" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-102">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACng" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACng ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACng();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6130-103">Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.DSACng" /> con una coppia di chiavi casuale di 2.048 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-103">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACng" /> class with a random 2,048-bit key pair.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACng (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACng(int keySize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize">
          <span data-ttu-id="e6130-104">Dimensioni in bit della chiave da generare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-104">The size of the key to generate in bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6130-105">Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.DSACng" /> con una chiave generata in modo casuale delle dimensioni specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-105">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACng" /> class with a randomly generated key of the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6130-106">Le dimensioni delle chiavi valido compreso tra 512 e 3,072 bit, in incrementi di 64.</span><span class="sxs-lookup"><span data-stu-id="e6130-106">Valid key sizes range from 512 to 3,072 bits, in increments of 64.</span></span> <span data-ttu-id="e6130-107">È consigliabile una dimensione minima di 2.048 bit utilizzato per tutte le chiavi.</span><span class="sxs-lookup"><span data-stu-id="e6130-107">We recommend that a minimum size of 2,048 bits be used for all keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="e6130-108">
            <paramref name="keySize" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-108">
              <paramref name="keySize" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACng (System.Security.Cryptography.CngKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CngKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As CngKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACng(System::Security::Cryptography::CngKey ^ key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e6130-109">Chiave da usare per le operazioni DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-109">The key to use for DSA operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6130-110">Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.DSACng" /> con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACng" /> class with the specified key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6130-111">Il <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=nameWithType> di `key` deve essere <xref:System.Security.Cryptography.CngAlgorithmGroup.Dsa%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e6130-111">The <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=nameWithType> of `key` must be <xref:System.Security.Cryptography.CngAlgorithmGroup.Dsa%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e6130-112">Questo costruttore crea una copia della chiave.</span><span class="sxs-lookup"><span data-stu-id="e6130-112">This constructor creates a copy of the key.</span></span> <span data-ttu-id="e6130-113">Anche se `key` viene eliminato, la copia di questo oggetto chiave DSA rimanga attiva.</span><span class="sxs-lookup"><span data-stu-id="e6130-113">Even if `key` is disposed, the copy of this key object in DSA remains alive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6130-114">
            <paramref name="key" /> non è una chiave DSA valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-114">
              <paramref name="key" /> is not a valid DSA key.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e6130-115">
            <paramref name="key" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-115">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public override byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="e6130-116">Dati da firmare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-116">The data to be signed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6130-117">Crea la firma digitale per i dati specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-117">Creates the digital signature for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6130-118">Firma digitale per i dati specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-118">The digital signature for the specified data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e6130-119">
            <paramref name="rgbHash" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-119">
              <paramref name="rgbHash" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e6130-120">
            <paramref name="rgbHash" /> ha una lunghezza inferiore al valore Q della chiave DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-120">
              <paramref name="rgbHash" /> is shorter in length than the Q value of the DSA key .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.DSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As DSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::DSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="e6130-121">
            <see langword="true" /> per includere i parametri privati; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-121">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6130-122">Esporta i parametri dell'algoritmo DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-122">Exports the DSA algorithm parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6130-123">Parametri dell'algoritmo DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-123">The DSA algorithm parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="e6130-124">La chiave DSA non è una chiave pubblica o privata valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-124">DSA key is not a valid public or private key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="e6130-125">Parametri DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-125">The DSA parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6130-126">Sostituisce la chiave esistente usata dall'istanza corrente creando un nuovo oggetto <see cref="T:System.Security.Cryptography.CngKey" /> per la struttura di parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-126">Replaces the existing key that the current instance is working with by creating a new <see cref="T:System.Security.Cryptography.CngKey" /> for the parameters structure.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6130-127">I parametri DSA specificati non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-127">The specified DSA parameters are not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACng.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKey ^ Key { System::Security::Cryptography::CngKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6130-128">Ottiene la chiave che verrà usata dall'oggetto <see cref="T:System.Security.Cryptography.DSACng" /> per qualsiasi operazione di crittografia eseguita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-128">Gets the key that will be used by the <see cref="T:System.Security.Cryptography.DSACng" /> object for any cryptographic operation that it performs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6130-129">Chiave usata dall'oggetto <see cref="T:System.Security.Cryptography.DSACng" /> per eseguire operazioni di crittografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-129">The key used by the <see cref="T:System.Security.Cryptography.DSACng" /> object to perform cryptographic operations.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6130-130">Il <xref:System.Security.Cryptography.CngKey> eliminazione dell'oggetto se la chiave viene reimpostata, ad esempio modificando il <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=nameWithType> proprietà, utilizzando il <xref:System.Security.Cryptography.DSACng.ImportParameters%2A?displayProperty=nameWithType> metodo per creare una nuova chiave, o eliminando l'elemento padre <xref:System.Security.Cryptography.DSACng> oggetto.</span><span class="sxs-lookup"><span data-stu-id="e6130-130">The  <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=nameWithType> property, by using the <xref:System.Security.Cryptography.DSACng.ImportParameters%2A?displayProperty=nameWithType> method to create a new key, or by disposing the parent <xref:System.Security.Cryptography.DSACng> object.</span></span> <span data-ttu-id="e6130-131">Pertanto, è necessario assicurarsi che l'oggetto chiave non è più utilizzato in questi casi.</span><span class="sxs-lookup"><span data-stu-id="e6130-131">Therefore, you should ensure that the key object is no longer used in these cases.</span></span>  
  
 <span data-ttu-id="e6130-132">Questo <xref:System.Security.Cryptography.CngKey> oggetto non corrisponde la <xref:System.Security.Cryptography.CngKey> oggetto passato per il <xref:System.Security.Cryptography.DSACng.%23ctor%2A> costruttore, se il costruttore è stato utilizzato.</span><span class="sxs-lookup"><span data-stu-id="e6130-132">This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.DSACng.%23ctor%2A> constructor, if that constructor was used.</span></span> <span data-ttu-id="e6130-133">Tuttavia, farà riferimento alla stessa chiave CNG.</span><span class="sxs-lookup"><span data-stu-id="e6130-133">However, it will point to the same CNG key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public override string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACng.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6130-134">Ottiene il nome dell'algoritmo di scambio delle chiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-134">Gets the name of the key exchange algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6130-135">Sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-135">Always <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACng.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6130-136">Ottiene le dimensioni in bit delle chiavi supportate dall'algoritmo DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-136">Gets the key sizes, in bits, that are supported by the DSA algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6130-137">Matrice che contiene le dimensioni delle chiavi supportate dall'algoritmo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-137">An array that contains the key sizes supported by the algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public override string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACng.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6130-138">Ottiene il nome dell'algoritmo di firma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-138">Gets the name of the signature algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6130-139">Stringa "DSA".</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-139">The string "DSA".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="e6130-140">Dati firmati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-140">The signed data.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="e6130-141">Firma digitale da verificare per.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-141">The digital signature to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6130-142">Verifica se la firma digitale specificata corrisponde ai dati specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-142">Verifies if the specified digital signature matches the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6130-143">
            <see langword="true" /> se <paramref name="rgbSignature" /> corrisponde alla firma calcolata con i dati specificati; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-143">
              <see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified data; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e6130-144">Il valore del parametro <paramref name="rgbHash" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-144">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e6130-145">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-145">-or-</span>
          </span>
          <span data-ttu-id="e6130-146">Il valore del parametro <paramref name="rgbSignature" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-146">The <paramref name="rgbSignature" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e6130-147">
            <paramref name="rgbHash" /> ha una lunghezza inferiore al valore Q della chiave DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6130-147">
              <paramref name="rgbHash" /> is shorter in length than the Q value of the DSA key .</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>