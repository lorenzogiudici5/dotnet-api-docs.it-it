<Type Name="ECDiffieHellmanKeyDerivationFunction" FullName="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
  <TypeSignature Language="C#" Value="public enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ECDiffieHellmanKeyDerivationFunction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="VB.NET" Value="Public Enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="C++ CLI" Value="public enum class ECDiffieHellmanKeyDerivationFunction" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="e3522-101">Specifica la funzione di derivazione di chiave che la classe <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> utilizzerà per convertire chiavi private in materiale della chiave.</span><span class="sxs-lookup"><span data-stu-id="e3522-101">Specifies the key derivation function that the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class will use to convert secret agreements into key material.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3522-102">Il <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> enumerazione definisce il tipo di algoritmo utilizzato per trasformare una chiave privata non elaborata in materiale della chiave.</span><span class="sxs-lookup"><span data-stu-id="e3522-102">The <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material.</span></span> <span data-ttu-id="e3522-103">La chiave privata è il valore generato da una chiave privata e chiave pubblica di altra parte, come parte dello scambio di chiave.</span><span class="sxs-lookup"><span data-stu-id="e3522-103">The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange.</span></span> <span data-ttu-id="e3522-104">È il valore di inizializzazione per il materiale della chiave generato dal <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="e3522-104">It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method.</span></span>  
  
 <span data-ttu-id="e3522-105">Il <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> proprietà questa enumerazione viene utilizzata per ottenere la funzione di derivazione della chiave per la <xref:System.Security.Cryptography.ECDiffieHellmanCng> classe.</span><span class="sxs-lookup"><span data-stu-id="e3522-105">The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="Hash" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hash = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberSignature Language="VB.NET" Value="Hash" />
      <MemberSignature Language="C++ CLI" Value="Hash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e3522-106">Un algoritmo hash viene utilizzato per generare il materiale della chiave.</span><span class="sxs-lookup"><span data-stu-id="e3522-106">A hash algorithm is used to generate key material.</span></span> <span data-ttu-id="e3522-107">La proprietà <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> specifica il nome dell'algoritmo da utilizzare.</span><span class="sxs-lookup"><span data-stu-id="e3522-107">The <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> property specifies the name of the algorithm to use.</span></span> <span data-ttu-id="e3522-108">Se il nome dell'algoritmo non viene specificato, <see cref="T:System.Security.Cryptography.SHA256" /> viene utilizzato come algoritmo predefinito.</span><span class="sxs-lookup"><span data-stu-id="e3522-108">If the algorithm name is not specified, <see cref="T:System.Security.Cryptography.SHA256" /> is used as the default algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3522-109">È inoltre possibile specificare il <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> e <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> proprietà, ma non sono necessari.</span><span class="sxs-lookup"><span data-stu-id="e3522-109">You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.</span></span>  
  
 <span data-ttu-id="e3522-110">La quantità di materiale della chiave generato è equivalente alla dimensione del valore hash per l'algoritmo specificato.</span><span class="sxs-lookup"><span data-stu-id="e3522-110">The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hmac">
      <MemberSignature Language="C#" Value="Hmac" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hmac = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberSignature Language="VB.NET" Value="Hmac" />
      <MemberSignature Language="C++ CLI" Value="Hmac" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e3522-111">Un algoritmo HMAC (Hash-based Message Authentication Code) viene utilizzato per generare il materiale della chiave.</span><span class="sxs-lookup"><span data-stu-id="e3522-111">A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material.</span></span> <span data-ttu-id="e3522-112">La proprietà <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> specifica la chiave da utilizzare.</span><span class="sxs-lookup"><span data-stu-id="e3522-112">The <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> property specifies the key to use.</span></span> <span data-ttu-id="e3522-113">Questa proprietà deve essere impostata, oppure la proprietà <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> deve essere impostata su <see langword="true" />; in caso contrario, un oggetto <see cref="T:System.Security.Cryptography.CryptographicException" /> viene generato quando si utilizza <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />.</span><span class="sxs-lookup"><span data-stu-id="e3522-113">Either this property must be set or the <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> property must be set to <see langword="true" />; otherwise, a <see cref="T:System.Security.Cryptography.CryptographicException" /> is thrown when you use <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />.</span></span> <span data-ttu-id="e3522-114">Se entrambe le proprietà sono impostate, la chiave privata viene utilizzata come chiave HMAC.</span><span class="sxs-lookup"><span data-stu-id="e3522-114">If both properties are set, the secret agreement is used as the HMAC key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3522-115">È inoltre possibile specificare il <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> e <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> proprietà, ma non sono necessari.</span><span class="sxs-lookup"><span data-stu-id="e3522-115">You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.</span></span>  
  
 <span data-ttu-id="e3522-116">La quantità di materiale della chiave generato è equivalente alla dimensione del valore HMAC.</span><span class="sxs-lookup"><span data-stu-id="e3522-116">The amount of key material that is generated is equivalent to the size of the HMAC value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tls">
      <MemberSignature Language="C#" Value="Tls" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Tls = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberSignature Language="VB.NET" Value="Tls" />
      <MemberSignature Language="C++ CLI" Value="Tls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e3522-117">Il protocollo TLS (Transport Layer Security) viene utilizzato per generare il materiale della chiave.</span><span class="sxs-lookup"><span data-stu-id="e3522-117">The Transport Layer Security (TLS) protocol is used to generate key material.</span></span> <span data-ttu-id="e3522-118">Le proprietà <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> e <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> devono essere impostate; in caso contrario, un oggetto <see cref="T:System.Security.Cryptography.CryptographicException" /> viene generato quando si utilizza <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</span><span class="sxs-lookup"><span data-stu-id="e3522-118">The <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> and <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> properties must be set; otherwise, a <see cref="T:System.Security.Cryptography.CryptographicException" /> is thrown when you use <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3522-119">Questo valore genera 160 bit materiale della chiave.</span><span class="sxs-lookup"><span data-stu-id="e3522-119">This value generates 160 bits of key material.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>