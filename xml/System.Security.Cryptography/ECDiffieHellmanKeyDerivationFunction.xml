<Type Name="ECDiffieHellmanKeyDerivationFunction" FullName="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a634ff01a3a994d3a0b31437a4b4d75a485b964" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37464231" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ECDiffieHellmanKeyDerivationFunction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="VB.NET" Value="Public Enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="C++ CLI" Value="public enum class ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="F#" Value="type ECDiffieHellmanKeyDerivationFunction = " />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifica la funzione di derivazione di chiave che la classe <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> utilizzerà per convertire chiavi private in materiale della chiave.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> enumerazione definisce il tipo di algoritmo che verrà usato per trasformare una chiave privata non elaborata in materiale della chiave. La chiave privata è il valore generato da una chiave privata e chiave pubblica di altra parte, come parte dello scambio di chiave. È il valore di inizializzazione per il materiale della chiave generato dal <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> (metodo).  
  
 Il <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> proprietà questa enumerazione viene utilizzata la funzione di derivazione della chiave per ottenere il <xref:System.Security.Cryptography.ECDiffieHellmanCng> classe.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="Hash" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hash = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberSignature Language="VB.NET" Value="Hash" />
      <MemberSignature Language="C++ CLI" Value="Hash" />
      <MemberSignature Language="F#" Value="Hash = 0" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Un algoritmo hash viene utilizzato per generare il materiale della chiave. La proprietà <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> specifica il nome dell'algoritmo da utilizzare. Se il nome dell'algoritmo non viene specificato, <see cref="T:System.Security.Cryptography.SHA256" /> viene utilizzato come algoritmo predefinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È inoltre possibile specificare il <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> e <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> proprietà, ma non sono necessarie.  
  
 La quantità di materiale della chiave generato è equivalente alla dimensione del valore hash per l'algoritmo specificato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hmac">
      <MemberSignature Language="C#" Value="Hmac" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hmac = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberSignature Language="VB.NET" Value="Hmac" />
      <MemberSignature Language="C++ CLI" Value="Hmac" />
      <MemberSignature Language="F#" Value="Hmac = 1" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Un algoritmo HMAC (Hash-based Message Authentication Code) viene utilizzato per generare il materiale della chiave. La proprietà <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> specifica la chiave da utilizzare. Questa proprietà deve essere impostata, oppure la proprietà <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> deve essere impostata su <see langword="true" />; in caso contrario, un oggetto <see cref="T:System.Security.Cryptography.CryptographicException" /> viene generato quando si utilizza <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />. Se entrambe le proprietà sono impostate, la chiave privata viene utilizzata come chiave HMAC.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È inoltre possibile specificare il <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> e <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> proprietà, ma non sono necessarie.  
  
 La quantità di materiale della chiave generato è equivalente alla dimensione del valore HMAC.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tls">
      <MemberSignature Language="C#" Value="Tls" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Tls = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberSignature Language="VB.NET" Value="Tls" />
      <MemberSignature Language="C++ CLI" Value="Tls" />
      <MemberSignature Language="F#" Value="Tls = 2" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Il protocollo TLS (Transport Layer Security) viene utilizzato per generare il materiale della chiave. Le proprietà <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> e <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> devono essere impostate; in caso contrario, un oggetto <see cref="T:System.Security.Cryptography.CryptographicException" /> viene generato quando si utilizza <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore viene generato l'errore 160 bit del materiale della chiave.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>