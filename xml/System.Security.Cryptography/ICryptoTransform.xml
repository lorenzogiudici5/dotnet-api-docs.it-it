<Type Name="ICryptoTransform" FullName="System.Security.Cryptography.ICryptoTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86c5a48ae34b28487eced926b3474af9fc5a9e88" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39847742" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICryptoTransform : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICryptoTransform implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICryptoTransform&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICryptoTransform : IDisposable" />
  <TypeSignature Language="F#" Value="type ICryptoTransform = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c828b-101">Definisce le operazioni di base per le trasformazioni di crittografia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c828b-101">Defines the basic operations of cryptographic transformations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c828b-102">Gli algoritmi di hash sono un esempio di trasformazioni crittografiche (<xref:System.Security.Cryptography.HashAlgorithm>).</span><span class="sxs-lookup"><span data-stu-id="c828b-102">Hash algorithms are an example of cryptographic transformations (<xref:System.Security.Cryptography.HashAlgorithm>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanReuseTransform { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReuseTransform : bool" Usage="System.Security.Cryptography.ICryptoTransform.CanReuseTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c828b-103">Ottiene un valore che indica se è possibile riutilizzare la trasformazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-103">Gets a value indicating whether the current transform can be reused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c828b-104">
            <see langword="true" /> se la trasformazione corrente può essere riutilizzata. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-104">
              <see langword="true" /> if the current transform can be reused; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTransformMultipleBlocks : bool" Usage="System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c828b-105">Ottiene un valore che indica se è possibile trasformare più blocchi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-105">Gets a value indicating whether multiple blocks can be transformed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c828b-106">
            <see langword="true" /> se è possibile trasformare più blocchi; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-106">
              <see langword="true" /> if multiple blocks can be transformed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBlockSize : int" Usage="System.Security.Cryptography.ICryptoTransform.InputBlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c828b-107">Ottiene la dimensione del blocco di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-107">Gets the input block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c828b-108">Dimensione in byte del blocco di dati di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-108">The size of the input data blocks in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputBlockSize : int" Usage="System.Security.Cryptography.ICryptoTransform.OutputBlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c828b-109">Ottiene la dimensione del blocco di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-109">Gets the output block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c828b-110">Dimensione in byte del blocco di dati di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-110">The size of the output data blocks in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberSignature Language="F#" Value="abstract member TransformBlock : byte[] * int * int * byte[] * int -&gt; int" Usage="iCryptoTransform.TransformBlock (inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="c828b-111">Input per il quale calcolare la trasformazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-111">The input for which to compute the transform.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="c828b-112">Offset nella matrice di byte di input dal quale iniziare a usare i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-112">The offset into the input byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="c828b-113">Numero di byte nella matrice di byte di input da usare come dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-113">The number of bytes in the input byte array to use as data.</span>
          </span>
        </param>
        <param name="outputBuffer">
          <span data-ttu-id="c828b-114">Output in cui scrivere la trasformazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-114">The output to which to write the transform.</span>
          </span>
        </param>
        <param name="outputOffset">
          <span data-ttu-id="c828b-115">Offset nella matrice di byte di output dal quale iniziare a scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-115">The offset into the output byte array from which to begin writing data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c828b-116">Consente di trasformare l'area specificata della matrice di byte di input e copia la trasformazione ottenuta nell'area specificata della matrice di byte di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-116">Transforms the specified region of the input byte array and copies the resulting transform to the specified region of the output byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c828b-117">Numero di byte scritti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-117">The number of bytes written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="c828b-118">Il valore restituito di <xref:System.Security.Cryptography.ICryptoTransform.TransformBlock%2A> è il numero di byte restituiti da `outputBuffer` ed è sempre minore o uguale a <xref:System.Security.Cryptography.ICryptoTransform.OutputBlockSize>.</span><span class="sxs-lookup"><span data-stu-id="c828b-118">The return value of <xref:System.Security.Cryptography.ICryptoTransform.TransformBlock%2A> is the number of bytes returned to `outputBuffer` and is always less than or equal to <xref:System.Security.Cryptography.ICryptoTransform.OutputBlockSize>.</span></span> <span data-ttu-id="c828b-119">Se <xref:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks> viene `true`, quindi `inputCount` deve essere un multiplo di <xref:System.Security.Cryptography.ICryptoTransform.InputBlockSize>.</span><span class="sxs-lookup"><span data-stu-id="c828b-119">If <xref:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks> is `true`, then `inputCount` must be any positive multiple of <xref:System.Security.Cryptography.ICryptoTransform.InputBlockSize>.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="F#" Value="abstract member TransformFinalBlock : byte[] * int * int -&gt; byte[]" Usage="iCryptoTransform.TransformFinalBlock (inputBuffer, inputOffset, inputCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="c828b-120">Input per il quale calcolare la trasformazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-120">The input for which to compute the transform.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="c828b-121">Offset nella matrice di byte dal quale iniziare a usare i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-121">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="c828b-122">Numero di byte nella matrice da usare come dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-122">The number of bytes in the byte array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c828b-123">Consente di trasformare l'area definita della matrice di byte specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-123">Transforms the specified region of the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c828b-124">Trasformazione calcolata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c828b-124">The computed transform.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c828b-125"><xref:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock%2A> è una funzione speciale per la trasformazione dell'ultimo blocco o un blocco parziale nel flusso.</span><span class="sxs-lookup"><span data-stu-id="c828b-125"><xref:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock%2A> is a special function for transforming the last block or a partial block in the stream.</span></span> <span data-ttu-id="c828b-126">Restituisce una nuova matrice che contiene i byte trasformati rimanenti.</span><span class="sxs-lookup"><span data-stu-id="c828b-126">It returns a new array that contains the remaining transformed bytes.</span></span> <span data-ttu-id="c828b-127">Una nuova matrice viene restituita, poiché la quantità di informazioni restituite alla fine potrebbe essere superiore a un singolo blocco quando viene aggiunto il riempimento.</span><span class="sxs-lookup"><span data-stu-id="c828b-127">A new array is returned, because the amount of information returned at the end might be larger than a single block when padding is added.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>