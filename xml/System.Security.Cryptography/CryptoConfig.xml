<Type Name="CryptoConfig" FullName="System.Security.Cryptography.CryptoConfig">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e13723757ead1aa80de12762f872725125740cc7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39960840" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CryptoConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CryptoConfig extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CryptoConfig" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoConfig" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoConfig" />
  <TypeSignature Language="F#" Value="type CryptoConfig = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente di accedere alle informazioni di configurazione della crittografia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i nomi semplici riconosciuti da questa classe e le implementazioni di algoritmi predefinito a cui eseguono il mapping. In alternativa, Ã¨ possibile associare altre implementazioni di questi nomi, come descritto in [Mapping dei nomi degli algoritmi a classi di crittografia](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md).  
  
|Nome semplice|Implementazione dell'algoritmo|  
|-----------------|------------------------------|  
|3DES, Triple DES, TripleDES TripleDES|<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>|  
|AES, System.Security.Cryptography.AesCryptoServiceProvider|<xref:System.Security.Cryptography.AesCryptoServiceProvider>|  
|AesManaged, System.Security.Cryptography.AesManaged|<xref:System.Security.Cryptography.AesManaged>|  
|System.Security.Cryptography.AsymmetricAlgorithm|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|  
|DES, System.Security.Cryptography.DES|<xref:System.Security.Cryptography.DESCryptoServiceProvider>|  
|Accelerazione sito dinamico, DSA|<xref:System.Security.Cryptography.DSACryptoServiceProvider>|  
|ECDH, ECDiffieHellman, ECDiffieHellmanCng, System.Security.Cryptography.ECDiffieHellmanCng|<xref:System.Security.Cryptography.ECDiffieHellmanCng>|  
|ECDsa, ECDsaCng, System.Security.Cryptography.ECDsaCng|<xref:System.Security.Cryptography.ECDsaCng>|  
|System.Security.Cryptography.HashAlgorithm|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|  
|HMAC, System.Security.Cryptography.HMAC|<xref:System.Security.Cryptography.HMACSHA1>|  
|HMACMD5, System.Security.Cryptography.HMACMD5|<xref:System.Security.Cryptography.HMACMD5>|  
|HMACRIPEMD160, System.Security.Cryptography.HMACRIPEMD160|<xref:System.Security.Cryptography.HMACRIPEMD160>|  
|HMACSHA1, System.Security.Cryptography.HMACSHA1|<xref:System.Security.Cryptography.HMACSHA1>|  
|HMACSHA256, System.Security.Cryptography.HMACSHA256|<xref:System.Security.Cryptography.HMACSHA256>|  
|HMACSHA384, System.Security.Cryptography.HMACSHA384|<xref:System.Security.Cryptography.HMACSHA384>|  
|HMACSHA512, System.Security.Cryptography.HMACSHA512|<xref:System.Security.Cryptography.HMACSHA512>|  
|System.Security.Cryptography.KeyedHashAlgorithm|<xref:System.Security.Cryptography.HMACSHA1>|  
|MACTripleDES, System.Security.Cryptography.MACTripleDES|<xref:System.Security.Cryptography.MACTripleDES>|  
|MD5, MD5|<xref:System.Security.Cryptography.MD5CryptoServiceProvider>|  
|System.Security.Cryptography.MD5Cng|<xref:System.Security.Cryptography.MD5Cng>|  
|RandomNumberGenerator|<xref:System.Security.Cryptography.RNGCryptoServiceProvider>|  
|RC2, System.Security.Cryptography.RC2|<xref:System.Security.Cryptography.RC2CryptoServiceProvider>|  
|Rijndael, System|<xref:System.Security.Cryptography.RijndaelManaged>|  
|RIPEMD160, RIPEMD-160, System.Security.Cryptography.RIPEMD160Managed|<xref:System.Security.Cryptography.RIPEMD160Managed>|  
|RSA, System.Security.Cryptography.RSA|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|  
|System.Security.Cryptography.SHA1 SHA, SHA1,|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|  
|System.Security.Cryptography.SHA1Cng|<xref:System.Security.Cryptography.SHA1Cng>|  
|SHA256, SHA-256, System.Security.Cryptography.SHA256|<xref:System.Security.Cryptography.SHA256Managed>|  
|System.Security.Cryptography.SHA256Cng|<xref:System.Security.Cryptography.SHA256Cng>|  
|System.Security.Cryptography.SHA256CryptoServiceProvider|<xref:System.Security.Cryptography.SHA256CryptoServiceProvider>|  
|SHA384, SHA-384, System.Security.Cryptography.SHA384|<xref:System.Security.Cryptography.SHA384Managed>|  
|System.Security.Cryptography.SHA384Cng|<xref:System.Security.Cryptography.SHA384Cng>|  
|System.Security.Cryptography.SHA384CryptoServiceProvider|<xref:System.Security.Cryptography.SHA384CryptoServiceProvider>|  
|SHA512, SHA-512, System.Security.Cryptography.SHA512|<xref:System.Security.Cryptography.SHA512Managed>|  
|System.Security.Cryptography.SHA512Cng|<xref:System.Security.Cryptography.SHA512Cng>|  
|System.Security.Cryptography.SHA512CryptoServiceProvider|<xref:System.Security.Cryptography.SHA512CryptoServiceProvider>|  
|SymmetricAlgorithm|<xref:System.Security.Cryptography.RijndaelManaged>|  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare i membri del <xref:System.Security.Cryptography.CryptoConfig> classe.  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.CryptoConfig#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CryptoConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CryptoConfig();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.CryptoConfig" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAlgorithm">
      <MemberSignature Language="C#" Value="public static void AddAlgorithm (Type algorithm, params string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAlgorithm(class System.Type algorithm, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAlgorithm (algorithm As Type, ParamArray names As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAlgorithm(Type ^ algorithm, ... cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="static member AddAlgorithm : Type * string[] -&gt; unit" Usage="System.Security.Cryptography.CryptoConfig.AddAlgorithm (algorithm, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.Type" />
        <Parameter Name="names" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="algorithm">Algoritmo a cui eseguire il mapping.</param>
        <param name="names">Matrice dei nomi di cui eseguire il mapping all'algoritmo.</param>
        <summary>Aggiunge un set di nomi ai mapping degli algoritmi da utilizzare per il dominio di applicazione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I mapping specificati hanno la precedenza sui mapping predefiniti e i mapping nel file Machine. config. Per impedire che parzialmente codice parzialmente attendibile usando operazioni di crittografia attendibile vengono usati i mapping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="algorithm" /> o il parametro <paramref name="names" /> Ã¨ <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Non Ã¨ possibile accedere a <paramref name="algorithm" /> dall'esterno dell'assembly.  
  
oppure 
Una delle voci nel parametro <paramref name="names" /> Ã¨ vuota o <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilitÃ  totale per il chiamante immediato. Questo membro non puÃ² essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="AddOID">
      <MemberSignature Language="C#" Value="public static void AddOID (string oid, params string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddOID(string oid, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddOID (oid As String, ParamArray names As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddOID(System::String ^ oid, ... cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="static member AddOID : string * string[] -&gt; unit" Usage="System.Security.Cryptography.CryptoConfig.AddOID (oid, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oid" Type="System.String" />
        <Parameter Name="names" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="oid">Identificatore di oggetto (OID, Object ID) a cui eseguire il mapping.</param>
        <param name="names">Matrice dei nomi di cui eseguire il mapping all'OID.</param>
        <summary>Aggiunge un set di nomi ai mapping degli identificatori di oggetto (OID, Object ID) da utilizzare per il dominio di applicazione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I mapping specificati hanno la precedenza sui mapping predefiniti e i mapping nel file Machine. config. Per impedire che parzialmente codice parzialmente attendibile usando operazioni di crittografia attendibile vengono usati i mapping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="oid" /> o il parametro <paramref name="names" /> Ã¨ <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Una delle voci nel parametro <paramref name="names" /> Ã¨ vuota o <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilitÃ  totale per il chiamante immediato. Questo membro non puÃ² essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowOnlyFipsAlgorithms">
      <MemberSignature Language="C#" Value="public static bool AllowOnlyFipsAlgorithms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AllowOnlyFipsAlgorithms" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AllowOnlyFipsAlgorithms As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AllowOnlyFipsAlgorithms { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowOnlyFipsAlgorithms : bool" Usage="System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se il runtime deve applicare i criteri per creare soltanto algoritmi certificati da FIPS (Federal Information Processing Standard).</summary>
        <value>
          <see langword="true" /> per applicare i criteri. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `false`, qualsiasi algoritmo puÃ² essere creata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Consente di creare una nuova istanza dell'oggetto di crittografia specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromName">
      <MemberSignature Language="C#" Value="public static object CreateFromName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateFromName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateFromName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CreateFromName : string -&gt; obj" Usage="System.Security.Cryptography.CryptoConfig.CreateFromName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome semplice dell'oggetto di crittografia di cui creare un'istanza.</param>
        <summary>Consente di creare una nuova istanza dell'oggetto di crittografia specificato.</summary>
        <returns>Nuova istanza dell'oggetto di crittografia specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco di nomi semplici riconosciuto da questa classe, vedere <xref:System.Security.Cryptography.CryptoConfig>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.CryptoConfig.CreateFromName%2A> metodo per creare un nuovo provider di SHA1. Questo esempio di codice Ã¨ parte di un esempio piÃ¹ esaustivo disponibile per il <xref:System.Security.Cryptography.CryptoConfig> classe.  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.CryptoConfig#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> Ã¨ <see langword="null" />.</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">L'algoritmo descritto dal parametro <paramref name="name" /> Ã¨ stato utilizzato con la modalitÃ  FIPS (Federal Information Processing Standards) attivata, ma non Ã¨ compatibile con FIPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromName">
      <MemberSignature Language="C#" Value="public static object CreateFromName (string name, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateFromName(string name, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromName (name As String, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateFromName(System::String ^ name, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateFromName : string * obj[] -&gt; obj" Usage="System.Security.Cryptography.CryptoConfig.CreateFromName (name, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">Nome semplice dell'oggetto di crittografia di cui creare un'istanza.</param>
        <param name="args">Argomenti utilizzati per creare l'oggetto di crittografia specificato.</param>
        <summary>Consente di creare una nuova istanza dell'oggetto di crittografia specificato con gli argomenti indicati.</summary>
        <returns>Nuova istanza dell'oggetto di crittografia specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco di nomi semplici riconosciuto da questa classe, vedere <xref:System.Security.Cryptography.CryptoConfig>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare le <xref:System.Security.Cryptography.CryptoConfig.CreateFromName%2A> metodo per inizializzare un nuova RSA provider istanza l'accesso al `TestContainer` contenitore di chiavi. Questo esempio di codice Ã¨ parte di un esempio piÃ¹ esaustivo disponibile per il <xref:System.Security.Cryptography.CryptoConfig> classe.  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.CryptoConfig#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> Ã¨ <see langword="null" />.</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">L'algoritmo descritto dal parametro <paramref name="name" /> Ã¨ stato utilizzato con la modalitÃ  FIPS (Federal Information Processing Standards) attivata, ma non Ã¨ compatibile con FIPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodeOID">
      <MemberSignature Language="C#" Value="public static byte[] EncodeOID (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncodeOID(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeOID (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncodeOID(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member EncodeOID : string -&gt; byte[]" Usage="System.Security.Cryptography.CryptoConfig.EncodeOID str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">OID da codificare.</param>
        <summary>Consente di codificare l'identificatore di oggetto (OID) specificato.</summary>
        <returns>Matrice di byte che contiene l'OID codificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.CryptoConfig.EncodeOID%2A> metodo per codificare l'identificatore di oggetto specificato. Questo esempio di codice Ã¨ parte di un esempio piÃ¹ esaustivo disponibile per il <xref:System.Security.Cryptography.CryptoConfig> classe.  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.CryptoConfig#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="str" /> Ã¨ <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">Si Ã¨ verificato un errore durante la codifica dell'OID.</exception>
      </Docs>
    </Member>
    <Member MemberName="MapNameToOID">
      <MemberSignature Language="C#" Value="public static string MapNameToOID (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MapNameToOID(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MapNameToOID (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MapNameToOID(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member MapNameToOID : string -&gt; string" Usage="System.Security.Cryptography.CryptoConfig.MapNameToOID name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome semplice dell'algoritmo per il quale ottenere l'OID.</param>
        <summary>Ottiene l'identificatore di oggetto (OID) dell'algoritmo che corrisponde al nome semplice specificato.</summary>
        <returns>OID dell'algoritmo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco di nomi semplici riconosciuto da questa classe, vedere <xref:System.Security.Cryptography.CryptoConfig>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> metodo per recuperare un identificatore di oggetto (OID) dal nome della stringa dell'algoritmo SHA1. Questo esempio di codice Ã¨ parte di un esempio piÃ¹ esaustivo disponibile per il <xref:System.Security.Cryptography.CryptoConfig> classe.  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.CryptoConfig#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> Ã¨ <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>