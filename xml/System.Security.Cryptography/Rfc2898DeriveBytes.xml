<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Rfc2898DeriveBytes.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e285ca1271a28895045fb33d43ebf5e6709370cf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e285ca1271a28895045fb33d43ebf5e6709370cf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA1" /&gt;</ph>.</source>
          <target state="translated">Implementa la funzionalità di derivazione della chiave basata su password, PBKDF2, usando un generatore di numeri pseudo-casuali basato su <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> takes a password, a salt, and an iteration count, and then generates keys through calls to the <ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> accetta una password, un valore salt e un conteggio delle iterazioni e quindi genera chiavi tramite chiamate al <ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla funzione PBKDF2, vedere RFC 2898, "PKCS #5: basato su Password di crittografia specifica versione 2.0," disponibile di <bpt id="p1">[</bpt>richiesta per il sito Web di commenti<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">Per informazioni dettagliate, vedere sezione 5.2, "PBKDF2".</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Non codificare una password all'interno del codice sorgente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">Le password hardcoded possono essere recuperate da un assembly tramite la <bpt id="p1">[</bpt>Ildasm.exe (Disassembler IL)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, utilizzando un editor esadecimale o semplicemente aprendo l'assembly in un editor di testo, ad esempio Notepad.exe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class to create two identical keys for the <ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph> class.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe per creare due identiche di chiavi per la <ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>It then encrypts and decrypts some data using the keys.</source>
          <target state="translated">Quindi crittografa e decrittografa alcuni dati utilizzando le chiavi.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The password used to derive the key.</source>
          <target state="translated">Password usata per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The key salt used to derive the key.</source>
          <target state="translated">Salt della chiave usato per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using a password and salt to derive the key.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> usando una password e un salt per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The salt size must be 8 bytes or larger.</source>
          <target state="translated">La dimensione del salt deve essere di 8 byte o superiori.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla funzione PBKDF2, vedere RFC 2898, "PKCS #5: basato su Password di crittografia specifica versione 2.0," disponibile di <bpt id="p1">[</bpt>richiesta per il sito Web di commenti<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">Per informazioni dettagliate, vedere sezione 5.2, "PBKDF2".</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Non codificare una password all'interno del codice sorgente.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">Le password hardcoded possono essere recuperate da un assembly tramite la <bpt id="p1">[</bpt>Ildasm.exe (Disassembler IL)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, utilizzando un editor esadecimale o semplicemente aprendo l'assembly in un editor di testo, ad esempio Notepad.exe.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class to create two identical keys for the <ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph> class.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe per creare due identiche di chiavi per la <ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>It then encrypts and decrypts some data using the keys.</source>
          <target state="translated">Quindi crittografa e decrittografa alcuni dati utilizzando le chiavi.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</source>
          <target state="translated">La dimensione del salt specificato è inferiore a 8 byte o il conteggio delle iterazioni è inferiore a 1.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The password or salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La password o il salt è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The password used to derive the key.</source>
          <target state="translated">Password usata per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The size of the random salt that you want the class to generate.</source>
          <target state="translated">Dimensione del salt casuale che la classe deve generare.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using the password and salt size to derive the key.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> usando la password e la dimensione del salt per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The salt size must be 8 bytes or larger.</source>
          <target state="translated">La dimensione del salt deve essere di 8 byte o superiori.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla funzione PBKDF2, vedere RFC 2898, "PKCS #5: basato su Password di crittografia specifica versione 2.0," disponibile di <bpt id="p1">[</bpt>richiesta per il sito Web di commenti<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">Per informazioni dettagliate, vedere sezione 5.2, "PBKDF2".</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Non codificare una password all'interno del codice sorgente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">Le password hardcoded possono essere recuperate da un assembly tramite la <bpt id="p1">[</bpt>Ildasm.exe (Disassembler IL)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, utilizzando un editor esadecimale o semplicemente aprendo l'assembly in un editor di testo, ad esempio Notepad.exe.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The specified salt size is smaller than 8 bytes.</source>
          <target state="translated">La dimensione del salt specificato è inferiore a 8 byte.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The password or salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La password o il salt è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The password used to derive the key.</source>
          <target state="translated">Password usata per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The key salt used to derive the key.</source>
          <target state="translated">Salt della chiave usato per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">Numero di iterazioni per l'operazione.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using a password, a salt, and number of iterations to derive the key.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> usando una password, il salt e il numero di iterazioni per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</source>
          <target state="translated">La dimensione del salt deve essere di 8 byte o superiore e il conteggio delle iterazioni deve essere maggiore di zero.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The minimum recommended number of iterations is 1000.</source>
          <target state="translated">Il numero minimo consigliato di iterazioni è 1000.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla funzione PBKDF2, vedere RFC 2898, "PKCS #5: basato su Password di crittografia specifica versione 2.0," disponibile di <bpt id="p1">[</bpt>richiesta per il sito Web di commenti<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">Per informazioni dettagliate, vedere sezione 5.2, "PBKDF2".</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Non codificare una password all'interno del codice sorgente.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">Le password hardcoded possono essere recuperate da un assembly tramite la <bpt id="p1">[</bpt>Ildasm.exe (Disassembler IL)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, utilizzando un editor esadecimale o semplicemente aprendo l'assembly in un editor di testo, ad esempio Notepad.exe.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</source>
          <target state="translated">La dimensione del salt specificato è inferiore a 8 byte o il conteggio delle iterazioni è inferiore a 1.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The password or salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La password o il salt è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The password used to derive the key.</source>
          <target state="translated">Password usata per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The key salt used to derive the key.</source>
          <target state="translated">Salt della chiave usato per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">Numero di iterazioni per l'operazione.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using a password, a salt, and number of iterations to derive the key.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> usando una password, il salt e il numero di iterazioni per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</source>
          <target state="translated">La dimensione del salt deve essere di 8 byte o superiore e il conteggio delle iterazioni deve essere maggiore di zero.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The minimum recommended number of iterations is 1000.</source>
          <target state="translated">Il numero minimo consigliato di iterazioni è 1000.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla funzione PBKDF2, vedere RFC 2898, "PKCS #5: basato su Password di crittografia specifica versione 2.0," disponibile di <bpt id="p1">[</bpt>richiesta per il sito Web di commenti<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">Per informazioni dettagliate, vedere sezione 5.2, "PBKDF2".</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Non codificare una password all'interno del codice sorgente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">Le password hardcoded possono essere recuperate da un assembly tramite la <bpt id="p1">[</bpt>Ildasm.exe (Disassembler IL)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, utilizzando un editor esadecimale o semplicemente aprendo l'assembly in un editor di testo, ad esempio Notepad.exe.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class to create two identical keys for the <ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph> class.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe per creare due identiche di chiavi per la <ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>It then encrypts and decrypts some data using the keys.</source>
          <target state="translated">Quindi crittografa e decrittografa alcuni dati utilizzando le chiavi.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</source>
          <target state="translated">La dimensione del salt specificato è inferiore a 8 byte o il conteggio delle iterazioni è inferiore a 1.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The password or salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La password o il salt è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The password used to derive the key.</source>
          <target state="translated">Password usata per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The size of the random salt that you want the class to generate.</source>
          <target state="translated">Dimensione del salt casuale che la classe deve generare.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">Numero di iterazioni per l'operazione.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using a password, a salt size, and number of iterations to derive the key.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> usando una password, la dimensione del salt e il numero di iterazioni per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</source>
          <target state="translated">La dimensione del salt deve essere di 8 byte o superiore e il conteggio delle iterazioni deve essere maggiore di zero.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The minimum recommended number of iterations is 1000.</source>
          <target state="translated">Il numero minimo consigliato di iterazioni è 1000.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 include metodi per la creazione di un vettore di chiave e inizializzazione (IV) da una password e un salt.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">PBKDF2, una funzione di derivazione della chiave basata su password, è possibile utilizzare per derivare chiavi tramite una funzione pseudo-casuale che consente di chiavi di lunghezza virtualmente illimitata da generare.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe può essere utilizzata per generare una chiave derivata da una chiave di base e altri parametri.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">In una funzione di derivazione della chiave basata su password, la chiave di base è una password e gli altri parametri sono un valore salt e un conteggio delle iterazioni.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>For more information on PBKDF2, see RFC 2898,"PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su PBKDF2, vedere RFC 2898, "PKCS #5: basato su Password di crittografia specifica versione 2.0," disponibile di <bpt id="p1">[</bpt>richiesta per il sito Web di commenti<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">Per informazioni dettagliate, vedere sezione 5.2, "PBKDF2".</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Non codificare una password all'interno del codice sorgente.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">Le password hardcoded possono essere recuperate da un assembly tramite la <bpt id="p1">[</bpt>Ildasm.exe (Disassembler IL)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, utilizzando un editor esadecimale o semplicemente aprendo l'assembly in un editor di testo, ad esempio Notepad.exe.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</source>
          <target state="translated">La dimensione del salt specificato è inferiore a 8 byte o il conteggio delle iterazioni è inferiore a 1.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The password or salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La password o il salt è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="iterations" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="iterations" /&gt;</ph> non è compreso nell'intervallo consentito.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Per questo parametro è richiesto un numero non negativo.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The algorithm name for which to derive the key.</source>
          <target state="translated">Nome dell'algoritmo per il quale derivare la chiave.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The hash algorithm name to use to derive the key.</source>
          <target state="translated">Nome dell'algoritmo hash da usare per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The size of the key, in bits, to derive.</source>
          <target state="translated">Dimensione in bit della chiave da derivare.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The initialization vector (IV) to use to derive the key.</source>
          <target state="translated">Vettore di inizializzazione da usare per derivare la chiave.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>Derives a cryptographic key from the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> object.</source>
          <target state="translated">Deriva una chiave di crittografia dall'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The derived key.</source>
          <target state="translated">Chiave derivata.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</source>
          <target state="translated">Questa funzione è un wrapper per la funzione CryptoAPI CryptDeriveKey () e verrà fornita interoperabilità con applicazioni tramite l'API di crittografia.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>If the <ph id="ph1">`keySize`</ph> parameter is set to 0 bits, the default key size for the specified algorithm is used.</source>
          <target state="translated">Se il <ph id="ph1">`keySize`</ph> parametro è impostato su 0 bit, viene utilizzata la dimensione della chiave predefinita per l'algoritmo specificato.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> parameter is incorrect.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> non è corretto.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">Non è possibile acquisire il provider del servizio di crittografia (CSP).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="algname" /&gt;</ph> parameter is not a valid algorithm name.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="algname" /&gt;</ph> non corrisponde a un nome di algoritmo valido.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="alghashname" /&gt;</ph> parameter is not a valid hash algorithm name.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="alghashname" /&gt;</ph> non corrisponde a un nome di algoritmo hash valido.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate dalla classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> e facoltativamente le risorse gestite.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e <ph id="ph2">`Finalize`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> richiama il metodo protetto <ph id="ph2">`Dispose(Boolean)`</ph> metodo con il <ph id="ph3">`disposing`</ph> parametro impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> references.</source>
          <target state="translated">Se il parametro <ph id="ph1">`disposing`</ph> è <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <ph id="ph3">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> fa riferimento.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose()`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, non fare riferimento a oggetti già eliminati in una precedente chiamata a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>The number of pseudo-random key bytes to generate.</source>
          <target state="translated">Numero di byte chiave pseudo-casuali da generare.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>Returns the pseudo-random key for this object.</source>
          <target state="translated">Restituisce la chiave pseudocasuale per questo oggetto.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>A byte array filled with pseudo-random key bytes.</source>
          <target state="translated">Matrice di byte riempita con byte chiave pseudo-casuali.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class implements PBKDF2 functionality by using a pseudorandom number generator based on <ph id="ph2">&lt;xref:System.Security.Cryptography.HMACSHA1&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe implementa la funzionalità PBKDF2 usando un generatore di numeri pseudocasuali in base a <ph id="ph2">&lt;xref:System.Security.Cryptography.HMACSHA1&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class takes a password, a salt, and an iteration count, and then generates keys through calls to the <ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe accetta una password, un valore salt e un conteggio delle iterazioni e quindi genera chiavi tramite chiamate al <ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>Repeated calls to this method will not generate the same key; instead, appending two calls of the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> method with a <ph id="ph2">`cb`</ph> parameter value of <ph id="ph3">`20`</ph> is the equivalent of calling the <ph id="ph4">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> method once with a <ph id="ph5">`cb`</ph> parameter value of <ph id="ph6">`40`</ph>.</source>
          <target state="translated">Chiamate ripetute a questo metodo non genera la stessa chiave. invece, aggiunta di due chiamate di <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> metodo con un <ph id="ph2">`cb`</ph> valore del parametro di <ph id="ph3">`20`</ph> equivale a chiamare il <ph id="ph4">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> metodo una volta con un <ph id="ph5">`cb`</ph> valore del parametro di <ph id="ph6">`40`</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> method to get the key for an instance of <ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> metodo per ottenere la chiave per un'istanza di <ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="cb" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cb" /&gt;</ph> non è compreso nell'intervallo consentito.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Per questo parametro è richiesto un numero non negativo.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>Gets or sets the number of iterations for the operation.</source>
          <target state="translated">Ottiene o imposta il numero di iterazioni per l'operazione.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>The number of iterations for the operation.</source>
          <target state="translated">Numero di iterazioni per l'operazione.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>Iteration count is the number of times an operation is performed.</source>
          <target state="translated">Conteggio delle iterazioni è il numero di volte in cui che viene eseguita un'operazione.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>For this method, the count should be greater than zero.</source>
          <target state="translated">Per questo metodo, il conteggio deve essere maggiore di zero.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>The minimum recommended number of iterations is 1000.</source>
          <target state="translated">Il numero minimo consigliato di iterazioni è 1000.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A&gt;</ph> property to display the number of iterations used in the generation of the key.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A&gt;</ph> proprietà per visualizzare il numero di iterazioni usate nella generazione della chiave.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>The number of iterations is less than 1.</source>
          <target state="translated">Il numero di iterazioni è inferiore a 1.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset">
          <source>Resets the state of the operation.</source>
          <target state="translated">Reimposta lo stato dell'operazione.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset">
          <source>This method is automatically called if the salt or iteration count is modified.</source>
          <target state="translated">Questo metodo viene chiamato automaticamente se viene modificato il numero di salt o iterazione.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare il metodo <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>Gets or sets the key salt value for the operation.</source>
          <target state="translated">Ottiene o imposta il valore del salt della chiave per l'operazione.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>The key salt value for the operation.</source>
          <target state="translated">Valore del salt della chiave per l'operazione.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>Salt, a random set of bytes, is used to make unauthorized decrypting of a message more difficult.</source>
          <target state="translated">Valore salt, un set casuale di byte, viene utilizzato per rendere la decrittografia non autorizzata di un messaggio più difficile.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</source>
          <target state="translated">Un attacco con dizionario è un attacco in cui l'utente malintenzionato tenta di decrittografare un messaggio crittografato confrontando il valore crittografato con valori crittografati calcolati in precedenza per le chiavi più probabile.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>This attack is made much more difficult by the introduction of salt, or random bytes, at the end of the password before the key derivation.</source>
          <target state="translated">Questo attacco è molto più difficile grazie all'introduzione di salt, o byte casuali, alla fine della password prima della derivazione della chiave.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>The specified salt size is smaller than 8 bytes.</source>
          <target state="translated">La dimensione del salt specificato è inferiore a 8 byte.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>The salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il salt è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>