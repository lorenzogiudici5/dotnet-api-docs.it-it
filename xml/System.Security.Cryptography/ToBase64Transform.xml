<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ToBase64Transform.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b09c2eccabf095e70980b37d9972ff4e92319ced.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b09c2eccabf095e70980b37d9972ff4e92319ced</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ToBase64Transform">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> to base 64.</source>
          <target state="translated">Converte un oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> in Base 64.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ToBase64Transform">
          <source>Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</source>
          <target state="translated">Content-Transfer-Encoding base 64 rappresenta sequenze di bit arbitrari in un formato che non è leggibile.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ToBase64Transform">
          <source>The following code example demonstrates how to use members of the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come usare i membri del <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">Ottiene un valore che indica se è possibile riutilizzare la trasformazione corrente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A&gt;</ph> property to determine if the current transform can be reused.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A&gt;</ph> proprietà per determinare se è possibile riutilizzare la trasformazione corrente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
          <source>Gets a value that indicates whether multiple blocks can be transformed.</source>
          <target state="translated">Ottiene un valore che indica se è possibile trasformare più blocchi.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
          <source>In the current implementation, only one block can be transformed at a time, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Nell'implementazione corrente, un solo blocco può essere trasformato contemporaneamente, pertanto questa proprietà è sempre <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A&gt;</ph> method to verify that multiple blocks can be transformed.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A&gt;</ph> metodo per verificare che sia possono trasformare più blocchi.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>.</source>
          <target state="translated">Rilascia tutte le risorse usate da <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>This method is a simple call to <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo metodo è una semplice chiamata a <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">La chiamata <ph id="ph1">`Dispose`</ph> le risorse utilizzate da di <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> riallocazione per altri scopi.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">`Dispose`</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.Clear%2A&gt;</ph> method to free up unused resources by the current transform.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.Clear%2A&gt;</ph> metodo per liberare risorse non utilizzate dalla trasformazione corrente.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ToBase64Transform">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'istanza corrente della classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'istanza corrente della classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">`Dispose`</ph> dopo aver terminato di utilizzare l'oggetto <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> in an unusable state.</source>
          <target state="translated">Il metodo <ph id="ph1">`Dispose`</ph> lascia l'oggetto <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> in una condizione di inutilizzabilità.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> was occupying.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">`Dispose`</ph>, è necessario rilasciare tutti i riferimenti al <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> in modo che il garbage collector può recuperare la memoria che di <ph id="ph3">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> occupata.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph>.</source>
          <target state="translated">Chiamare sempre il metodo <ph id="ph1">`Dispose`</ph> prima di rilasciare l'ultimo riferimento a <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> dell'oggetto <ph id="ph2">`Finalize`</ph> non viene richiamato dal Garbage Collector.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate da <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> e, facoltativamente, le risorse gestite.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e <ph id="ph2">`Finalize`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> richiama il metodo protetto <ph id="ph2">`Dispose(Boolean)`</ph> metodo con il parametro disposing impostato su <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with disposing set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> richiama <ph id="ph2">`Dispose`</ph> con il parametro impostato su <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> references.</source>
          <target state="translated">Se il parametro <ph id="ph1">`disposing`</ph> è <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <ph id="ph3">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> fa riferimento.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose()`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, non fare riferimento a oggetti già eliminati in una precedente chiamata a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.Finalize">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>.</source>
          <target state="translated">Rilascia le risorse non gestite usate dall'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
          <source>Gets the input block size.</source>
          <target state="translated">Ottiene la dimensione del blocco di input.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
          <source>The size of the input data blocks in bytes.</source>
          <target state="translated">Dimensione in byte del blocco di dati di input.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
          <source>The input block size for this transformation is 3 bytes.</source>
          <target state="translated">Le dimensioni del blocco di input per questa trasformazione sono 3 byte.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A&gt;</ph> property to retrieve the input block size of the current transform.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A&gt;</ph> proprietà per recuperare la dimensione del blocco di input della trasformazione corrente.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
          <source>Gets the output block size.</source>
          <target state="translated">Ottiene la dimensione del blocco di output.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
          <source>The size of the output data blocks in bytes.</source>
          <target state="translated">Dimensione in byte del blocco di dati di output.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
          <source>The output block size for this transformation is 4 bytes.</source>
          <target state="translated">La dimensione del blocco di output per questa trasformazione è 4 byte.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A&gt;</ph> property to create a new byte array with the size of the output block size.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A&gt;</ph> proprietà per creare una nuova matrice di byte con le dimensioni del blocco di output.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The input to compute to base 64.</source>
          <target state="translated">Input da calcolare in Base 64.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">Offset nella matrice di byte di input dal quale iniziare a usare i dati.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">Numero di byte nella matrice di byte di input da usare come dati.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The output to which to write the result.</source>
          <target state="translated">Output nel quale scrivere il risultato.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">Offset nella matrice di byte di output dal quale iniziare a scrivere i dati.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</source>
          <target state="translated">Converte l'area specificata della matrice di byte di input in Base 64 e copia il risultato nell'area specificata della matrice di byte di output.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes written.</source>
          <target state="translated">Numero di byte scritti.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class is a block algorithm that processes input blocks of 3 bytes and creates output blocks of 4 bytes.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> classe è un algoritmo di blocco che elabora blocchi di 3 byte di input e crea i blocchi di output di 4 byte.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A&gt;</ph> method transforms an input block of 24 bits into 32 bits of character data.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A&gt;</ph> metodo trasforma un blocco di input pari a 24 bit in 32 bit di dati di tipo carattere.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>You must maintain 3 byte input boundaries to 4 byte output boundaries in order to match the block transform.</source>
          <target state="translated">È necessario mantenere i limiti di input da 3 byte per i limiti di output a 4 byte per la corrispondenza con la trasformazione del blocco.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A&gt;</ph> method to iterate through <ph id="ph2">`inputBytes`</ph> transforming by <ph id="ph3">`blockSize`</ph>.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A&gt;</ph> metodo per scorrere <ph id="ph2">`inputBytes`</ph> trasformati da <ph id="ph3">`blockSize`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> object has already been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> corrente è già stato eliminato.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The data size is not valid.</source>
          <target state="translated">La dimensione dei dati non è valida.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter contains an invalid offset length.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> contiene una lunghezza di offset non valida.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter contains an invalid value.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> contiene un valore non valido.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter requires a non-negative number.</source>
          <target state="translated">Per il parametro <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> è richiesto un numero non negativo.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The input to convert to base 64.</source>
          <target state="translated">Input da convertire in Base 64.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">Offset nella matrice di byte dal quale iniziare a usare i dati.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">Numero di byte nella matrice da usare come dati.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>Converts the specified region of the specified byte array to base 64.</source>
          <target state="translated">Converte l'area definita della matrice di byte specificata in Base 64.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The computed base 64 conversion.</source>
          <target state="translated">Conversione calcolata in Base 64.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A&gt;</ph> method to transform the final block of data.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A&gt;</ph> metodo per trasformare il blocco finale dei dati.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> object has already been disposed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> corrente è già stato eliminato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter contains an invalid offset length.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> contiene una lunghezza di offset non valida.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter contains an invalid value.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> contiene un valore non valido.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter requires a non-negative number.</source>
          <target state="translated">Per il parametro <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> è richiesto un numero non negativo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>