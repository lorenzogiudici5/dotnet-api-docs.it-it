<Type Name="ToBase64Transform" FullName="System.Security.Cryptography.ToBase64Transform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="301e5dc81d2303fa79f7ab5dd55fa35678f658ea" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36529196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToBase64Transform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToBase64Transform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ToBase64Transform" />
  <TypeSignature Language="VB.NET" Value="Public Class ToBase64Transform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToBase64Transform : System::Security::Cryptography::ICryptoTransform" />
  <TypeSignature Language="F#" Value="type ToBase64Transform = class&#xA;    interface ICryptoTransform&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="de9c2-101">Converts a <see cref="T:System.Security.Cryptography.CryptoStream" /> to base 64.</span>
      <span class="sxs-lookup">
        <span data-stu-id="de9c2-101">Converts a <see cref="T:System.Security.Cryptography.CryptoStream" /> to base 64.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de9c2-102">Content-Transfer-Encoding base 64 rappresenta le sequenze di bit arbitrari in un formato che non è leggibile.</span><span class="sxs-lookup"><span data-stu-id="de9c2-102">Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de9c2-103">Esempio di codice seguente viene illustrato come utilizzare i membri del <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="de9c2-103">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToBase64Transform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de9c2-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public virtual bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReuseTransform { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReuseTransform : bool" Usage="System.Security.Cryptography.ToBase64Transform.CanReuseTransform" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de9c2-105">Gets a value indicating whether the current transform can be reused.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-105">Gets a value indicating whether the current transform can be reused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de9c2-106">Sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-106">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="de9c2-107">Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A> proprietà per determinare se è possibile riutilizzare la trasformazione corrente.</span><span class="sxs-lookup"><span data-stu-id="de9c2-107">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A> property to determine if the current transform can be reused.</span></span> <span data-ttu-id="de9c2-108">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="de9c2-108">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTransformMultipleBlocks : bool" Usage="System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de9c2-109">Gets a value that indicates whether multiple blocks can be transformed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-109">Gets a value that indicates whether multiple blocks can be transformed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de9c2-110">Sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-110">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de9c2-111">Nell'implementazione corrente, un solo blocco può essere trasformato contemporaneamente, pertanto questa proprietà è sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="de9c2-111">In the current implementation, only one block can be transformed at a time, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de9c2-112">Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A> metodo per verificare che sia possono trasformare più blocchi.</span><span class="sxs-lookup"><span data-stu-id="de9c2-112">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A> method to verify that multiple blocks can be transformed.</span></span> <span data-ttu-id="de9c2-113">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="de9c2-113">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="toBase64Transform.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de9c2-114">Releases all resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-114">Releases all resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de9c2-115">Questo metodo è una semplice chiamata a <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="de9c2-115">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="de9c2-116">La chiamata `Dispose` le risorse utilizzate dal <xref:System.Security.Cryptography.ToBase64Transform> riallocazione per altri scopi.</span><span class="sxs-lookup"><span data-stu-id="de9c2-116">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.ToBase64Transform> to be reallocated for other purposes.</span></span> <span data-ttu-id="de9c2-117">Per ulteriori informazioni `Dispose`, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="de9c2-117">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de9c2-118">Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.ToBase64Transform.Clear%2A> metodo per liberare risorse non utilizzate dalla trasformazione corrente.</span><span class="sxs-lookup"><span data-stu-id="de9c2-118">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.Clear%2A> method to free up unused resources by the current transform.</span></span> <span data-ttu-id="de9c2-119">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="de9c2-119">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de9c2-120">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-120">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="toBase64Transform.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de9c2-121">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-121">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de9c2-122">Chiamare il metodo `Dispose` dopo aver terminato di utilizzare l'oggetto <xref:System.Security.Cryptography.ToBase64Transform>.</span><span class="sxs-lookup"><span data-stu-id="de9c2-122">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="de9c2-123">Il metodo `Dispose` lascia l'oggetto <xref:System.Security.Cryptography.ToBase64Transform> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="de9c2-123">The `Dispose` method leaves the <xref:System.Security.Cryptography.ToBase64Transform> in an unusable state.</span></span> <span data-ttu-id="de9c2-124">Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti per il <xref:System.Security.Cryptography.ToBase64Transform> consentire al garbage collector di recuperare la memoria che il <xref:System.Security.Cryptography.ToBase64Transform> occupata.</span><span class="sxs-lookup"><span data-stu-id="de9c2-124">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.ToBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ToBase64Transform> was occupying.</span></span>  
  
 <span data-ttu-id="de9c2-125">Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="de9c2-125">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="de9c2-126">Chiamare sempre il metodo `Dispose` prima di rilasciare l'ultimo riferimento a <xref:System.Security.Cryptography.ToBase64Transform>.</span><span class="sxs-lookup"><span data-stu-id="de9c2-126">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="de9c2-127">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Security.Cryptography.ToBase64Transform> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="de9c2-127">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.ToBase64Transform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="toBase64Transform.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="de9c2-128">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-128">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de9c2-129">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-129">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de9c2-130">Questo metodo viene chiamato dal metodo pubblico `Dispose()` metodo e il `Finalize` metodo.</span><span class="sxs-lookup"><span data-stu-id="de9c2-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="de9c2-131">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il parametro disposing impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="de9c2-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="de9c2-132">`Finalize` richiama `Dispose` con il parametro impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="de9c2-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="de9c2-133">Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Security.Cryptography.ToBase64Transform> fa riferimento.</span><span class="sxs-lookup"><span data-stu-id="de9c2-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ToBase64Transform> references.</span></span> <span data-ttu-id="de9c2-134">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="de9c2-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="de9c2-135">
            <para>
              <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. Quando si esegue l'override <see langword="Dispose(Boolean)" />, non fare riferimento a oggetti già eliminati in una chiamata precedente a <see langword="Dispose" />. Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Per ulteriori informazioni <see langword="Dispose" /> e <see langword="Finalize" />, vedere [pulizia backup Resources](~/docs/standard/garbage-collection/unmanaged.md) non gestito.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-135">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ToBase64Transform ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="toBase64Transform.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de9c2-136">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-136">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBlockSize : int" Usage="System.Security.Cryptography.ToBase64Transform.InputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de9c2-137">Gets the input block size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-137">Gets the input block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de9c2-138">Dimensione in byte del blocco di dati di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-138">The size of the input data blocks in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de9c2-139">Le dimensioni di blocco di input per questa trasformazione sono 3 byte.</span><span class="sxs-lookup"><span data-stu-id="de9c2-139">The input block size for this transformation is 3 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de9c2-140">Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A> proprietà da recuperare la dimensione del blocco di input della trasformazione corrente.</span><span class="sxs-lookup"><span data-stu-id="de9c2-140">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A> property to retrieve the input block size of the current transform.</span></span> <span data-ttu-id="de9c2-141">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="de9c2-141">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputBlockSize : int" Usage="System.Security.Cryptography.ToBase64Transform.OutputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de9c2-142">Gets the output block size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-142">Gets the output block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de9c2-143">Dimensione in byte del blocco di dati di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-143">The size of the output data blocks in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de9c2-144">La dimensione del blocco di output per questa trasformazione è 4 byte.</span><span class="sxs-lookup"><span data-stu-id="de9c2-144">The output block size for this transformation is 4 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de9c2-145">Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A> proprietà per creare una nuova matrice di byte con le dimensioni del blocco di output.</span><span class="sxs-lookup"><span data-stu-id="de9c2-145">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A> property to create a new byte array with the size of the output block size.</span></span> <span data-ttu-id="de9c2-146">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="de9c2-146">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberSignature Language="F#" Value="abstract member TransformBlock : byte[] * int * int * byte[] * int -&gt; int&#xA;override this.TransformBlock : byte[] * int * int * byte[] * int -&gt; int" Usage="toBase64Transform.TransformBlock (inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="de9c2-147">The input to compute to base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-147">The input to compute to base 64.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="de9c2-148">The offset into the input byte array from which to begin using data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-148">The offset into the input byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="de9c2-149">The number of bytes in the input byte array to use as data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-149">The number of bytes in the input byte array to use as data.</span>
          </span>
        </param>
        <param name="outputBuffer">
          <span data-ttu-id="de9c2-150">The output to which to write the result.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-150">The output to which to write the result.</span>
          </span>
        </param>
        <param name="outputOffset">
          <span data-ttu-id="de9c2-151">The offset into the output byte array from which to begin writing data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-151">The offset into the output byte array from which to begin writing data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de9c2-152">Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-152">Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de9c2-153">The number of bytes written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-153">The number of bytes written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de9c2-154">Il <xref:System.Security.Cryptography.ToBase64Transform> classe è un algoritmo di blocco che elabora blocchi di input di 3 byte e crea i blocchi di output di 4 byte.</span><span class="sxs-lookup"><span data-stu-id="de9c2-154">The <xref:System.Security.Cryptography.ToBase64Transform> class is a block algorithm that processes input blocks of 3 bytes and creates output blocks of 4 bytes.</span></span>  <span data-ttu-id="de9c2-155">Il <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> metodo trasforma un blocco di input pari a 24 bit in 32 bit di dati di tipo carattere.</span><span class="sxs-lookup"><span data-stu-id="de9c2-155">The <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method transforms an input block of 24 bits into 32 bits of character data.</span></span>  <span data-ttu-id="de9c2-156">È necessario mantenere i limiti di input da 3 byte per i limiti di output a 4 byte per la corrispondenza con la trasformazione del blocco.</span><span class="sxs-lookup"><span data-stu-id="de9c2-156">You must maintain 3 byte input boundaries to 4 byte output boundaries in order to match the block transform.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de9c2-157">Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> metodo per scorrere `inputBytes` trasformati da `blockSize`.</span><span class="sxs-lookup"><span data-stu-id="de9c2-157">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method to iterate through `inputBytes` transforming by `blockSize`.</span></span> <span data-ttu-id="de9c2-158">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="de9c2-158">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de9c2-159">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-159">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="de9c2-160">The data size is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-160">The data size is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de9c2-161">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-161">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span>
          </span>
          <span data-ttu-id="de9c2-162">-or-  The <paramref name="inputCount" /> parameter contains an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-162">-or-  The <paramref name="inputCount" /> parameter contains an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de9c2-163">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-163">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de9c2-164">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-164">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="F#" Value="abstract member TransformFinalBlock : byte[] * int * int -&gt; byte[]&#xA;override this.TransformFinalBlock : byte[] * int * int -&gt; byte[]" Usage="toBase64Transform.TransformFinalBlock (inputBuffer, inputOffset, inputCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="de9c2-165">The input to convert to base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-165">The input to convert to base 64.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="de9c2-166">The offset into the byte array from which to begin using data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-166">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="de9c2-167">The number of bytes in the byte array to use as data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-167">The number of bytes in the byte array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de9c2-168">Converts the specified region of the specified byte array to base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-168">Converts the specified region of the specified byte array to base 64.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de9c2-169">The computed base 64 conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-169">The computed base 64 conversion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="de9c2-170">Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A> metodo per trasformare il blocco finale dei dati.</span><span class="sxs-lookup"><span data-stu-id="de9c2-170">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A> method to transform the final block of data.</span></span> <span data-ttu-id="de9c2-171">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="de9c2-171">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de9c2-172">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-172">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de9c2-173">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-173">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span>
          </span>
          <span data-ttu-id="de9c2-174">-or-  The <paramref name="inputCount" /> parameter contains an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-174">-or-  The <paramref name="inputCount" /> parameter contains an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de9c2-175">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-175">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de9c2-176">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de9c2-176">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>