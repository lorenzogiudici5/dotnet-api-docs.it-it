<Type Name="RSAOAEPKeyExchangeFormatter" FullName="System.Security.Cryptography.RSAOAEPKeyExchangeFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce5f9b8a7a2d9db1bde9f41f8ea35fd129783614" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36425703" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RSAOAEPKeyExchangeFormatter : System.Security.Cryptography.AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RSAOAEPKeyExchangeFormatter extends System.Security.Cryptography.AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class RSAOAEPKeyExchangeFormatter&#xA;Inherits AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class RSAOAEPKeyExchangeFormatter : System::Security::Cryptography::AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="F#" Value="type RSAOAEPKeyExchangeFormatter = class&#xA;    inherit AsymmetricKeyExchangeFormatter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.AsymmetricKeyExchangeFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Crea i dati di scambio delle chiavi OAEP (Optimal Asymmetric Encryption Padding) utilizzando <see cref="T:System.Security.Cryptography.RSA" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Scambio delle chiavi consente un mittente per creare le informazioni segrete, ad esempio, casuale dei dati possono essere utilizzati come chiave in un algoritmo di crittografia simmetrica, utilizzano la crittografia per inviare al destinatario prescelto.  
  
 Utilizzare <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter> per lo scambio di chiavi di ricezione ed estrarre le informazioni segrete da quest'ultimo.  
  
> [!CAUTION]
>  È consigliabile che tentare di creare un metodo di scambio delle chiavi dalla funzionalità di base fornito, poiché molti dettagli dell'operazione devono essere eseguiti attentamente affinché lo scambio di chiavi per il corretto funzionamento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> classe per creare una chiave di scambio per un destinatario del messaggio.  
  
 [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.rsaoaepkeyexchangedeformatter2/cs/program.cs#1)]
 [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.rsaoaepkeyexchangedeformatter2/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSAOAEPKeyExchangeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSAOAEPKeyExchangeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uso <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey%2A> per impostare la chiave prima di chiamare <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSAOAEPKeyExchangeFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As AsymmetricAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSAOAEPKeyExchangeFormatter(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.RSAOAEPKeyExchangeFormatter : System.Security.Cryptography.AsymmetricAlgorithm -&gt; System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" Usage="new System.Security.Cryptography.RSAOAEPKeyExchangeFormatter key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key">Istanza dell'algoritmo <see cref="T:System.Security.Cryptography.RSA" /> che conserva la chiave pubblica.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" /> con la chiave specificata.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateKeyExchange">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea dati crittografati di scambio delle chiavi.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateKeyExchange">
      <MemberSignature Language="C#" Value="public override byte[] CreateKeyExchange (byte[] rgbData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateKeyExchange(unsigned int8[] rgbData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKeyExchange (rgbData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateKeyExchange(cli::array &lt;System::Byte&gt; ^ rgbData);" />
      <MemberSignature Language="F#" Value="override this.CreateKeyExchange : byte[] -&gt; byte[]" Usage="rSAOAEPKeyExchangeFormatter.CreateKeyExchange rgbData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbData">Informazioni segrete da passare nello scambio delle chiavi.</param>
        <summary>Crea i dati crittografati di scambio delle chiavi dai dati di input specificati.</summary>
        <returns>Dati crittografati di scambio delle chiavi da inviare al destinatario prescelto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questi dati possono essere interpretati solo dal possessore della chiave privata corrispondente alla chiave pubblica utilizzata per crittografare i dati. Questa funzionalità garantisce che solo il destinatario possa accedere a informazioni segrete.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">La chiave è mancante.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyExchange">
      <MemberSignature Language="C#" Value="public override byte[] CreateKeyExchange (byte[] rgbData, Type symAlgType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateKeyExchange(unsigned int8[] rgbData, class System.Type symAlgType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKeyExchange (rgbData As Byte(), symAlgType As Type) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateKeyExchange(cli::array &lt;System::Byte&gt; ^ rgbData, Type ^ symAlgType);" />
      <MemberSignature Language="F#" Value="override this.CreateKeyExchange : byte[] * Type -&gt; byte[]" Usage="rSAOAEPKeyExchangeFormatter.CreateKeyExchange (rgbData, symAlgType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="symAlgType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rgbData">Informazioni segrete da passare nello scambio delle chiavi.</param>
        <param name="symAlgType">Questo parametro non viene usato nella versione corrente.</param>
        <summary>Crea i dati crittografati di scambio delle chiavi dai dati di input specificati.</summary>
        <returns>Dati crittografati di scambio delle chiavi da inviare al destinatario prescelto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questi dati possono essere interpretati solo dal possessore della chiave privata corrispondente alla chiave pubblica utilizzata per crittografare i dati. Questa funzionalità garantisce che solo il destinatario possa accedere a informazioni segrete.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange%2A?displayProperty=nameWithType> i metodi per creare una chiave di scambio per un destinatario del messaggio. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> (classe)  
  
 [!code-csharp[System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1keyexchangeformatter2/cs/program.cs#2)]
 [!code-vb[System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1keyexchangeformatter2/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public byte[] Parameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Parameter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameter As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Parameter { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameter : byte[] with get, set" Usage="System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il parametro usato per creare la spaziatura interna nel processo di creazione dello scambio di chiave.</summary>
        <value>Valore del parametro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter%2A> proprietà per un <xref:System.Security.Cryptography.RSAParameters.InverseQ> campo. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> classe.  
  
 [!code-cpp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CPP/rsaencoder.cpp#7)]
 [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CS/rsaencoder.cs#7)]
 [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/VB/rsaencoder.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public override string Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Parameters { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string" Usage="System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i parametri per lo scambio di chiave OAEP (Optimal Asymmetric Encryption Padding).</summary>
        <value>Stringa XML che contiene i parametri dell'operazione di scambio delle chiavi OAEP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters%2A> proprietà da recuperare una rappresentazione XML dei parametri. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> classe.  
  
 [!code-cpp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CPP/rsaencoder.cpp#13)]
 [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CS/rsaencoder.cs#13)]
 [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/VB/rsaencoder.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rng">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.RandomNumberGenerator Rng { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.RandomNumberGenerator Rng" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng" />
      <MemberSignature Language="VB.NET" Value="Public Property Rng As RandomNumberGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::RandomNumberGenerator ^ Rng { System::Security::Cryptography::RandomNumberGenerator ^ get(); void set(System::Security::Cryptography::RandomNumberGenerator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Rng : System.Security.Cryptography.RandomNumberGenerator with get, set" Usage="System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RandomNumberGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'algoritmo di generazione di numeri casuali da usare per la creazione dello scambio di chiave.</summary>
        <value>Istanza di un algoritmo di generazione di numeri casuali da usare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questa proprietà è `null`, viene utilizzato l'algoritmo numeri casuali predefinito del generatore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng%2A> proprietà da un numero casuale. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> classe.  
  
 [!code-cpp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CPP/rsaencoder.cpp#6)]
 [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CS/rsaencoder.cs#6)]
 [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/VB/rsaencoder.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKey">
      <MemberSignature Language="C#" Value="public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetKey(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetKey (key As AsymmetricAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberSignature Language="F#" Value="override this.SetKey : System.Security.Cryptography.AsymmetricAlgorithm -&gt; unit" Usage="rSAOAEPKeyExchangeFormatter.SetKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key">Istanza dell'algoritmo <see cref="T:System.Security.Cryptography.RSA" /> che conserva la chiave pubblica.</param>
        <summary>Imposta la chiave pubblica da usare per la crittografia dei dati di scambio delle chiavi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario impostare la chiave prima di chiamare <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange%2A>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey%2A> metodo per impostare un <xref:System.Security.Cryptography.RSA> chiave per la decrittografia. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> classe.  
  
 [!code-cpp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CPP/rsaencoder.cpp#5)]
 [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CS/rsaencoder.cs#5)]
 [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/VB/rsaencoder.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>