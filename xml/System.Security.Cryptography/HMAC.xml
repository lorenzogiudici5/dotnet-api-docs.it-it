<Type Name="HMAC" FullName="System.Security.Cryptography.HMAC">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cae6b26388c1c1c62620ac8e1059201a6612e16f" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52250856" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HMAC extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMAC" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HMAC&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMAC abstract : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type HMAC = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0b9bf-101">Rappresenta la classe astratta dalla quale devono derivare tutte le implementazioni del codice HMAC (Hash-based Message Authentication Code).</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b9bf-101">Represents the abstract class from which all implementations of Hash-based Message Authentication Code (HMAC) must derive.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b9bf-102">Un codice HMAC (Hash-based messaggio Authentication Code) può essere utilizzato per determinare se un messaggio inviato attraverso un canale sicuro è stato manomesso, a condizione che il mittente e ricevitore condividono una chiave privata.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-102">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="0b9bf-103">Il mittente calcola il valore hash per i dati originali e invia i dati originali e il valore HMAC in un singolo messaggio.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-103">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="0b9bf-104">Il ricevitore Ricalcola il valore hash del messaggio ricevuto e verifica che il valore hash calcolato corrisponde al valore hash trasmessi.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-104">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="0b9bf-105">HMAC è utilizzabile con qualsiasi funzione di hash di crittografia iterative, ad esempio MD5 o SHA-1, in combinazione con una chiave segreta condivisa.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-105">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="0b9bf-106">Il livello di crittografia del codice HMAC dipende dalle proprietà della funzione hash sottostante.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-106">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="0b9bf-107">Qualsiasi modifica ai dati o il valore hash risultante una mancata corrispondenza, perché è necessario conoscere la chiave privata per modificare il messaggio e riprodurre il valore hash corretto.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-107">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="0b9bf-108">Pertanto, se i valori originali e calcolata hash corrispondono, viene autenticato il messaggio.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-108">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
      <span data-ttu-id="0b9bf-109">servizi crittografici</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b9bf-109">Cryptographic Services</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HMAC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HMAC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b9bf-110">Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.HMAC" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMAC" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int BlockSizeValue { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSizeValue : int with get, set" Usage="System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b9bf-111">Ottiene o imposta la dimensione del blocco da usare nel valore hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-111">Gets or sets the block size to use in the hash value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b9bf-112">Dimensione del blocco da usare nel valore hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-112">The block size to use in the hash value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b9bf-113">Un codice HMAC (Hash-based messaggio Authentication Code) usa una funzione hash in cui viene eseguito l'hashing dei dati eseguendo l'iterazione di una funzione di compressione di base su blocchi di dati.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-113">A Hash-based Message Authentication Code (HMAC) uses a hash function where data is hashed by iterating a basic compression function on blocks of data.</span></span> <span data-ttu-id="0b9bf-114"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> è la dimensione in byte di un blocco di questo tipo.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-114"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> is the byte size of such a block.</span></span> <span data-ttu-id="0b9bf-115">Il valore è 64 byte.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-115">Its value is 64 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0b9bf-116">Crea un'istanza di un'implementazione di un codice HMAC <see cref="T:System.Security.Cryptography.HMAC" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-116">Creates an instance of an implementation of a Hash-based Message Authentication Code (<see cref="T:System.Security.Cryptography.HMAC" />) .</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b9bf-117">Crea un'istanza dell'implementazione predefinita di un codice HMAC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-117">Creates an instance of the default implementation of a Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b9bf-118">Una nuova istanza di SHA-1, a meno che le impostazioni predefinite non siano state modificate usando l'[elemento &lt;cryptoClass&gt;](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-118">A new SHA-1 instance, unless the default settings have been changed by using the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b9bf-119">Per impostazione predefinita, questo overload viene utilizzato l'implementazione di SHA-1 del codice HMAC.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-119">By default, this overload uses the SHA-1 implementation of HMAC.</span></span> <span data-ttu-id="0b9bf-120">Se si desidera specificare un'implementazione diversa, usare il <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> esegue l'overload, che consente di specificare un nome di algoritmo, al contrario.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-120">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithmName As String) As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create(System::String ^ algorithmName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create algorithmName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithmName">
          <span data-ttu-id="0b9bf-121">Implementazione HMAC da usare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-121">The HMAC implementation to use.</span>
          </span>
          <span data-ttu-id="0b9bf-122">La tabella seguente illustra i valori validi per il parametro <paramref name="algorithmName" /> e gli algoritmi a cui sono mappati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-122">The following table shows the valid values for the <paramref name="algorithmName" /> parameter and the algorithms they map to.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="0b9bf-123">Valore del parametro</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-123">Parameter value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0b9bf-124">Implements</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-124">Implements</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="0b9bf-125">System.Security.Cryptography.HMAC</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-125">System.Security.Cryptography.HMAC</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACSHA1" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-126">System.Security.Cryptography.KeyedHashAlgorithm</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-126">System.Security.Cryptography.KeyedHashAlgorithm</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACSHA1" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-127">HMACMD5</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-127">HMACMD5</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACMD5" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-128">System.Security.Cryptography.HMACMD5</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-128">System.Security.Cryptography.HMACMD5</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACMD5" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-129">HMACRIPEMD160</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-129">HMACRIPEMD160</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-130">System.Security.Cryptography.HMACRIPEMD160</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-130">System.Security.Cryptography.HMACRIPEMD160</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-131">HMACSHA1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-131">HMACSHA1</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACSHA1" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-132">System.Security.Cryptography.HMACSHA1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-132">System.Security.Cryptography.HMACSHA1</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACSHA1" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-133">HMACSHA256</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-133">HMACSHA256</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACSHA256" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-134">System.Security.Cryptography.HMACSHA256</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-134">System.Security.Cryptography.HMACSHA256</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACSHA256" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-135">HMACSHA384</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-135">HMACSHA384</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACSHA384" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-136">System.Security.Cryptography.HMACSHA384</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-136">System.Security.Cryptography.HMACSHA384</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACSHA384" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-137">HMACSHA512</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-137">HMACSHA512</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACSHA512" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-138">System.Security.Cryptography.HMACSHA512</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-138">System.Security.Cryptography.HMACSHA512</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.HMACSHA512" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-139">MACTripleDES</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-139">MACTripleDES</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.MACTripleDES" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0b9bf-140">System.Security.Cryptography.MACTripleDES</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0b9bf-140">System.Security.Cryptography.MACTripleDES</span>
                </span>
              </term>
              <description>
                <see cref="T:System.Security.Cryptography.MACTripleDES" />
              </description>
            </item>
          </list>
        </param>
        <summary>
          <span data-ttu-id="0b9bf-141">Crea un'istanza dell'implementazione specificata di un codice HMAC (Hash-based Message Authentication Code).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-141">Creates an instance of the specified implementation of a Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b9bf-142">Nuova istanza dell'implementazione HMAC specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-142">A new instance of the specified HMAC implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b9bf-143">HMAC supporta una serie di algoritmi di hash, compresi MD5, SHA-1, SHA-256 e RIPEMD160.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-143">HMAC supports a number of hash algorithms, including MD5, SHA-1, SHA-256, and RIPEMD160.</span></span> <span data-ttu-id="0b9bf-144">Per l'elenco completo, vedere i valori supportati per il `algorithmName` parametro.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-144">For the full list, see the supported values for the `algorithmName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hMAC.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0b9bf-145">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-145">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b9bf-146">Libera le risorse non gestite usate dalla classe <see cref="T:System.Security.Cryptography.HMAC" /> quando è lecito lo scambio delle chiavi ed eventualmente libera le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-146">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMAC" /> class when a key change is legitimate and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b9bf-147">Questo metodo viene chiamato da parte del pubblico `Dispose()` metodo e `Finalize` (metodo).</span><span class="sxs-lookup"><span data-stu-id="0b9bf-147">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="0b9bf-148">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-148">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="0b9bf-149">`Finalize` richiama `Dispose` con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-149">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="0b9bf-150">Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Security.Cryptography.HMAC> fa riferimento.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-150">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HMAC> references.</span></span> <span data-ttu-id="0b9bf-151">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-151">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0b9bf-152">Il metodo 
            <see langword="Dispose" /> può essere chiamato più volte da altri oggetti.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0b9bf-152">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="0b9bf-153">Quando si esegue l'override <see langword="Dispose(Boolean)" />, prestare attenzione a non fare riferimento agli oggetti che sono stati eliminati in una precedente chiamata a <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0b9bf-153">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="0b9bf-154">Per altre informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="0b9bf-154">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="0b9bf-155">Per altre informazioni sulle <see langword="Dispose" /> e <see langword="Finalize" />, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="0b9bf-155">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="override this.HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="hMAC.HashCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="hMAC.HashCore (rgb, ib, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ib" Type="System.Int32" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb">
          <span data-ttu-id="0b9bf-156">Dati di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-156">The input data.</span>
          </span>
        </param>
        <param name="ib">
          <span data-ttu-id="0b9bf-157">Offset nella matrice di byte dal quale iniziare a usare i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-157">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="0b9bf-158">Numero di byte nella matrice da usare come dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-158">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b9bf-159">Quando ne viene eseguito l'override, indirizza i dati scritti nell'oggetto verso l'algoritmo hash <see cref="T:System.Security.Cryptography.HMAC" /> predefinito per il calcolo del valore hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-159">When overridden in a derived class, routes data written to the object into the default <see cref="T:System.Security.Cryptography.HMAC" /> hash algorithm for computing the hash value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b9bf-160">Questo metodo non viene chiamato dal codice dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-160">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="0b9bf-161">Questo metodo astratto esegue il calcolo dell'hash.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-161">This abstract method performs the hash computation.</span></span> <span data-ttu-id="0b9bf-162">Ogni operazione di scrittura per l'oggetto di flusso di crittografia passa i dati tramite questo metodo.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-162">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="0b9bf-163">Per ogni blocco di dati, questo metodo aggiorna lo stato dell'oggetto hash in modo che venga restituito un valore hash corretto alla fine del flusso di dati.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-163">For each block of data, this method updates the state of the hash object so that a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="0b9bf-164">servizi crittografici</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-164">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="hMAC.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b9bf-165">Quando ne viene eseguito l'override in una classe derivata, finalizza il calcolo hash una volta che gli ultimi dati sono stati elaborati dall'oggetto flusso crittografato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-165">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b9bf-166">Codice hash calcolato in una matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-166">The computed hash code in a byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b9bf-167">Questo metodo non viene chiamato dal codice dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-167">This method is not called by application code.</span></span> <span data-ttu-id="0b9bf-168">Questo metodo consente di finalizzare i calcoli parziali e restituisce il valore hash corretto del flusso di dati.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-168">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="0b9bf-169">servizi crittografici</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-169">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.Security.Cryptography.HMAC.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b9bf-170">Ottiene o imposta il nome dell'algoritmo hash da usare per la generazione di un hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-170">Gets or sets the name of the hash algorithm to use for hashing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b9bf-171">Nome dell'algoritmo hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-171">The name of the hash algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0b9bf-172">L'algoritmo hash corrente non può essere modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-172">The current hash algorithm cannot be changed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="hMAC.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b9bf-173">Inizializza un'istanza dell'implementazione predefinita di <see cref="T:System.Security.Cryptography.HMAC" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-173">Initializes an instance of the default implementation of <see cref="T:System.Security.Cryptography.HMAC" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b9bf-174">Un codice HMAC (Hash-based messaggio Authentication Code) può essere utilizzato per determinare se un messaggio inviato attraverso un canale sicuro è stato manomesso, a condizione che il mittente e ricevitore condividono una chiave privata.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-174">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="0b9bf-175">Il mittente calcola il valore hash per i dati originali e invia i dati originali e il valore HMAC in un singolo messaggio.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-175">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="0b9bf-176">Il ricevitore Ricalcola il valore hash del messaggio ricevuto e verifica che il valore hash calcolato corrisponde al valore hash trasmessi.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-176">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="0b9bf-177">HMAC è utilizzabile con qualsiasi funzione di hash di crittografia iterative, ad esempio MD5 o SHA-1, in combinazione con una chiave segreta condivisa.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-177">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="0b9bf-178">Il livello di crittografia del codice HMAC dipende dalle proprietà della funzione hash sottostante.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-178">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="0b9bf-179">Qualsiasi modifica ai dati o il valore hash comporterà una mancata corrispondenza, perché è necessario conoscere la chiave privata per modificare il messaggio e riprodurre il valore hash corretto.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-179">Any change to the data or the hash value will result in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="0b9bf-180">Pertanto, se i valori originali e calcolata hash corrispondono, viene autenticato il messaggio.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-180">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.HMAC.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b9bf-181">Ottiene o imposta la chiave da usare nell'algoritmo hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-181">Gets or sets the key to use in the hash algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b9bf-182">Chiave da usare nell'algoritmo hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-182">The key to use in the hash algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b9bf-183">Questa proprietà è la chiave per l'algoritmo hash con chiave.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-183">This property is the key for the keyed hash algorithm.</span></span>  
  
 <span data-ttu-id="0b9bf-184">Un codice HMAC (Hash-based messaggio Authentication Code) può essere utilizzato per determinare se un messaggio inviato attraverso un canale sicuro è stato manomesso, a condizione che il mittente e ricevitore condividono una chiave privata.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-184">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="0b9bf-185">Il mittente calcola il valore hash per i dati originali e invia i dati originali e il valore HMAC in un singolo messaggio.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-185">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="0b9bf-186">Il ricevitore Ricalcola il valore hash del messaggio ricevuto e verifica che il valore hash calcolato corrisponde al valore hash trasmessi.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-186">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="0b9bf-187">HMAC è utilizzabile con qualsiasi funzione di hash di crittografia iterative, ad esempio MD5 o SHA-1, in combinazione con una chiave segreta condivisa.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-187">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="0b9bf-188">Il livello di crittografia del codice HMAC dipende dalle proprietà della funzione hash sottostante.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-188">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="0b9bf-189">Qualsiasi modifica ai dati o il valore hash risultante una mancata corrispondenza, perché è necessario conoscere la chiave privata per modificare il messaggio e riprodurre il valore hash corretto.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-189">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="0b9bf-190">Pertanto, se i valori originali e calcolata hash corrispondono, viene autenticato il messaggio.</span><span class="sxs-lookup"><span data-stu-id="0b9bf-190">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0b9bf-191">Viene effettuato un tentativo di modificare la proprietà <see cref="P:System.Security.Cryptography.HMAC.Key" /> dopo l'inizio della generazione di un hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-191">An attempt is made to change the <see cref="P:System.Security.Cryptography.HMAC.Key" /> property after hashing has begun.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="0b9bf-192">servizi crittografici</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b9bf-192">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryHashFinal : Span&lt;byte&gt; *  -&gt; bool" Usage="hMAC.TryHashFinal (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>