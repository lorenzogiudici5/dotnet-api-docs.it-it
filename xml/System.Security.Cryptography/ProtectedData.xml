<Type Name="ProtectedData" FullName="System.Security.Cryptography.ProtectedData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d88a4daba91d644999471e554a7612f5c86e8145" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39976576" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProtectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedData sealed" />
  <TypeSignature Language="F#" Value="type ProtectedData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce metodi per la crittografia e la decrittografia dei dati. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe fornisce accesso a Data Protection API (DPAPI) in Microsoft Windows 2000 e versioni successive. Si tratta di un servizio che viene fornito dal sistema operativo e non richiede librerie aggiuntive. Fornisce protezione utilizzando le credenziali utente o computer per crittografare o decrittografare i dati.  
  
 La classe è costituita da due wrapper per la DPAPI non gestito <xref:System.Security.Cryptography.ProtectedData.Protect%2A> e <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>. Questi due metodi possono essere utilizzati per crittografare e decrittografare i dati, ad esempio le password, chiavi e le stringhe di connessione.  
  
 Se si usano questi metodi durante la rappresentazione, venga visualizzato l'errore seguente: "La chiave non è valida per l'uso in stato specificato". Ciò si verifica perché la DPAPI archivia i dati chiave nei profili utente. Se non viene caricato il profilo, DPAPI sarà in grado di eseguire la decrittografia. Per evitare questo errore, caricare il profilo dell'utente che si desidera rappresentare prima di chiamare uno dei due metodi. Tramite DPAPI con rappresentazione può comportare problemi gravi e richiede scelte un'attenta progettazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare la protezione dei dati.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Protect (userData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">Matrice di byte che contiene i dati da crittografare.</param>
        <param name="optionalEntropy">Una matrice di byte aggiuntiva facoltativa usata per aumentare la complessità della crittografia o <see langword="null" /> per non aggiungere alcuna complessità.</param>
        <param name="scope">Uno dei valori di enumerazione che specifica l'ambito della crittografia.</param>
        <summary>Crittografa i dati in una matrice di byte specificata e restituisce una matrice di byte che contiene i dati crittografati.</summary>
        <returns>Matrice di byte che rappresenta i dati crittografati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere utilizzato per crittografare i dati, ad esempio le password, chiavi o le stringhe di connessione. Il `optionalEntropy` parametro consente di aggiungere i dati per aumentare la complessità della crittografia; specificare `null` per non aggiungere alcuna complessità. Se fornito, queste informazioni devono anche essere utilizzate durante la decrittografia dei dati mediante il <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A> (metodo).  
  
> [!NOTE]
>  Se si usa questo metodo durante la rappresentazione, venga visualizzato l'errore seguente: "La chiave non è valida per l'uso in stato specificato". Per evitare questo errore, caricare il profilo dell'utente che si desidera rappresentare prima di chiamare il metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare la protezione dei dati.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="userData" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La crittografia non è riuscita.</exception>
        <exception cref="T:System.NotSupportedException">Il sistema operativo non supporta questo metodo,</exception>
        <exception cref="T:System.OutOfMemoryException">Il sistema ha esaurito la memoria durante la crittografia dei dati.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">con l'oggetto associato <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" /> flag per l'autorizzazione proteggere i dati.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] encryptedData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Unprotect (encryptedData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Matrice di byte che contiene dati crittografati tramite il metodo <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />.</param>
        <param name="optionalEntropy">Matrice di byte aggiuntiva facoltativa usata per crittografare i dati o <see langword="null" /> se non è usata la matrice di byte aggiuntiva.</param>
        <param name="scope">Uno dei valori di enumerazione che specifica l'ambito della protezione dati usato per crittografare i dati.</param>
        <summary>Decrittografa i dati in una matrice di byte specificata e restituisce una matrice di byte che contiene i dati decrittografati.</summary>
        <returns>Matrice di byte che rappresenta i dati decrittografati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere utilizzato per rimuovere la protezione dei dati che era stati crittografati mediante il <xref:System.Security.Cryptography.ProtectedData.Protect%2A> (metodo). Se il `optionalEntropy` parametro è stato usato durante la crittografia, deve essere fornito per decrittografare i dati.  
  
> [!NOTE]
>  Se si usa questo metodo durante la rappresentazione, venga visualizzato l'errore seguente: "La chiave non è valida per l'uso in stato specificato". Per evitare questo errore, caricare il profilo dell'utente che si desidera rappresentare prima di chiamare il metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare la protezione dei dati.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="encryptedData" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La decrittografia non è riuscita.</exception>
        <exception cref="T:System.NotSupportedException">Il sistema operativo non supporta questo metodo,</exception>
        <exception cref="T:System.OutOfMemoryException">Memoria insufficiente.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">con l'oggetto associato <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" /> flag per l'autorizzazione rimuovere la protezione dei dati.</permission>
      </Docs>
    </Member>
  </Members>
</Type>