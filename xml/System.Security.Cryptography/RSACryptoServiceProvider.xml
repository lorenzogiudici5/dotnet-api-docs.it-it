<Type Name="RSACryptoServiceProvider" FullName="System.Security.Cryptography.RSACryptoServiceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bfe362923836f8d655205816ab48c0277ab4a988" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30501015" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RSACryptoServiceProvider : System.Security.Cryptography.RSA, System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RSACryptoServiceProvider extends System.Security.Cryptography.RSA implements class System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RSACryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RSACryptoServiceProvider&#xA;Inherits RSA&#xA;Implements ICspAsymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class RSACryptoServiceProvider sealed : System::Security::Cryptography::RSA, System::Security::Cryptography::ICspAsymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RSA</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICspAsymmetricAlgorithm</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Esegue la crittografia e la decrittografia asimmetrica usando l'implementazione dell'algoritmo <see cref="T:System.Security.Cryptography.RSA" /> fornito dal provider del servizio di crittografia (CSP). Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo è l'implementazione predefinita di <xref:System.Security.Cryptography.RSA>.  
  
 Il <xref:System.Security.Cryptography.RSACryptoServiceProvider> se è installato Microsoft Enhanced Cryptographic Provider, supporta dimensioni della chiave da 384 a 16384 bit in incrementi di 8 bit.  Se è installato Microsoft Enhanced Cryptographic Provider, supporta dimensioni della chiave da 384 a 512 bit in incrementi di 8 bit.  
  
 Dimensioni valide delle chiavi sono dipendenti dal provider del servizio di crittografia (CSP) che viene utilizzato il <xref:System.Security.Cryptography.RSACryptoServiceProvider> istanza. Abilita CSP di Windows delle chiavi di dimensioni di 384 a 16384 bit per le versioni di Windows precedenti a [!INCLUDE[win81](~/includes/win81-md.md)]e la chiave di dimensioni di 512 a 16384 bit per [!INCLUDE[win81](~/includes/win81-md.md)]. Per ulteriori informazioni, vedere [CryptGenKey](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx) funzione nella documentazione di Windows.  
  
## <a name="interoperation-with-the-microsoft-cryptographic-api-capi"></a>Interoperabilità con l'API di crittografia Microsoft (CAPI)  
 A differenza dell'implementazione di RSA nella CAPI non gestita, la <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe inverte l'ordine di una matrice di byte crittografata dopo la crittografia e prima della decrittografia.  Per impostazione predefinita, i dati crittografati con la <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe non può essere decrittografata di CAPI `CryptDecrypt` funzione e i dati crittografati con l'interfaccia `CryptEncrypt` non può essere decrittografato dal metodo di <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe.  
  
 Se non si compensa l'ordine inverso durante l'interazione tra le API, il <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe genera un <xref:System.Security.Cryptography.CryptographicException>.  
  
 Per interagire con CAPI, è necessario annullare manualmente l'ordine di byte crittografati prima che i dati crittografati interagiscano con un'altra API.  È possibile invertire facilmente l'ordine di una matrice di byte gestita chiamando il <xref:System.Array.Reverse%2A?displayProperty=nameWithType> metodo.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare la <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe per crittografare una stringa in una matrice di byte e quindi per decrittografare i byte in una stringa.  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/VB/sample.vb#1)]  
  
 L'esempio di codice seguente consente di esportare le informazioni sulla chiave create utilizzando il <xref:System.Security.Cryptography.RSACryptoServiceProvider> in un <xref:System.Security.Cryptography.RSAParameters> oggetto.  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> usando la chiave predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non viene trovata alcuna chiave predefinita, viene creata una nuova chiave.  
  
 Questo costruttore crea un <xref:System.Security.Cryptography.KeyNumber.Exchange> coppia di chiavi per la sessione di crittografia delle chiavi in modo che possono essere tranquillamente archiviate e scambiate con altri utenti.  La chiave generata corrisponde a una chiave generata mediante la `AT_KEYEXCHANGE` valore utilizzato nell'API di crittografia Microsoft (CAPI).  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare la <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe per crittografare una stringa in una matrice di byte e quindi per decrittografare i byte in una stringa.  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile acquisire il provider del servizio di crittografia (CSP).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider (int dwKeySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider(int dwKeySize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwKeySize">Dimensioni in bit della chiave da usare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> con la dimensione della chiave specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non viene trovata alcuna chiave predefinita, viene creata una nuova chiave.  
  
 Questo costruttore crea un <xref:System.Security.Cryptography.KeyNumber.Exchange> coppia di chiavi per la sessione di crittografia delle chiavi in modo che possono essere tranquillamente archiviate e scambiate con altri utenti.  La chiave generata corrisponde a una chiave generata mediante la `AT_KEYEXCHANGE` valore utilizzato nell'API di crittografia Microsoft (CAPI).  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Security.Cryptography.RSACryptoServiceProvider>, genera una nuova chiave e lo archivia in un contenitore di chiavi.  
  
 [!code-cpp[Cryptography.RSACSP.ctor-int32-2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-2/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.ctor-int32-2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-2/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.ctor-int32-2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile acquisire il provider del servizio di crittografia (CSP).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider(System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">Parametri da passare al provider del servizio di crittografia (CSP).</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> con i parametri specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore crea o riutilizza un contenitore di chiavi specificato utilizzando il <xref:System.Security.Cryptography.CspParameters.KeyContainerName> campo il `parameters` parametro.  
  
 Per impostazione predefinita, questo costruttore crea un <xref:System.Security.Cryptography.KeyNumber.Exchange> coppia di chiavi per la sessione di crittografia delle chiavi in modo che possono essere tranquillamente archiviate e scambiate con altri utenti.  La chiave generata corrisponde a una chiave generata mediante la `AT_KEYEXCHANGE` valore utilizzato nell'API di crittografia Microsoft (CAPI).  
  
 È possibile creare un <xref:System.Security.Cryptography.KeyNumber.Signature> adatto per l'autenticazione messaggi (con firma digitale) o file impostando coppia di chiavi di <xref:System.Security.Cryptography.CspParameters.KeyNumber> campo il `parameters` parametro per il <xref:System.Security.Cryptography.KeyNumber.Signature> valore. Questo tipo di chiave corrisponde alla `AT_SIGNATURE` valore utilizzato in CAPI.  
  
 Se si crea un <xref:System.Security.Cryptography.RSACryptoServiceProvider> dell'oggetto con il <xref:System.Security.Cryptography.KeyNumber.Exchange> valore specificato e quindi creare un altro <xref:System.Security.Cryptography.RSACryptoServiceProvider> dell'oggetto con il <xref:System.Security.Cryptography.KeyNumber.Signature> è specificato un valore, entrambe le chiavi verranno inserite in un singolo contenitore, se due oggetti specificano lo stesso nome di contenitore di chiavi .  
  
 Per creare una chiave che è compatibile con firma nome sicuro mediante il <xref:System.Security.Cryptography.RSACryptoServiceProvider> (classe), è necessario creare un <xref:System.Security.Cryptography.KeyNumber.Signature> coppia di chiavi.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Security.Cryptography.RSACryptoServiceProvider> oggetto, genera una nuova chiave e lo archivia in un contenitore di chiavi.  
  
 [!code-cpp[Cryptography.RSACSP.ctor-csp#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-csp/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.ctor-csp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-csp/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.ctor-csp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.ctor-csp/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile acquisire il provider del servizio di crittografia (CSP).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize, class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer, parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider(int dwKeySize, System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="dwKeySize">Dimensioni in bit della chiave da usare.</param>
        <param name="parameters">Parametri da passare al provider del servizio di crittografia (CSP).</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> con la dimensione e i parametri di chiave specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore crea o riutilizza un contenitore di chiavi specificato utilizzando il <xref:System.Security.Cryptography.CspParameters.KeyContainerName> campo il `parameters` parametro.  
  
 Per impostazione predefinita, questo costruttore crea un <xref:System.Security.Cryptography.KeyNumber.Exchange> coppia di chiavi per la sessione di crittografia delle chiavi in modo che possono essere tranquillamente archiviate e scambiate con altri utenti.  La chiave generata corrisponde a una chiave generata mediante la `AT_KEYEXCHANGE` valore utilizzato nell'API di crittografia Microsoft (CAPI).  
  
 È possibile creare un <xref:System.Security.Cryptography.KeyNumber.Signature> adatto per l'autenticazione messaggi (con firma digitale) o file impostando coppia di chiavi di <xref:System.Security.Cryptography.CspParameters.KeyNumber> campo il `parameters` parametro per il <xref:System.Security.Cryptography.KeyNumber.Signature> valore. Questo tipo di chiave corrisponde alla `AT_SIGNATURE` valore utilizzato in CAPI.  
  
 Se si crea un <xref:System.Security.Cryptography.RSACryptoServiceProvider> dell'oggetto con il <xref:System.Security.Cryptography.KeyNumber.Exchange> valore specificato e quindi creare un altro <xref:System.Security.Cryptography.RSACryptoServiceProvider> dell'oggetto con il <xref:System.Security.Cryptography.KeyNumber.Signature> è specificato un valore, entrambe le chiavi verranno inserite in un singolo contenitore, se due oggetti specificano lo stesso nome di contenitore di chiavi .  
  
 Per creare una chiave che è compatibile con firma nome sicuro mediante il <xref:System.Security.Cryptography.RSACryptoServiceProvider> (classe), è necessario creare un <xref:System.Security.Cryptography.KeyNumber.Signature> coppia di chiavi.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Security.Cryptography.RSACryptoServiceProvider>, genera una nuova chiave e lo archivia in un contenitore di chiavi.  
  
 [!code-cpp[Cryptography.RSACSP.ctor-int32-csp#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-csp/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.ctor-int32-csp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-csp/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.ctor-int32-csp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-csp/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile acquisire il provider del servizio di crittografia (CSP).  
  
 oppure  
  
 Non è possibile creare la chiave.</exception>
      </Docs>
    </Member>
    <Member MemberName="CspKeyContainerInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CspKeyContainerInfo As CspKeyContainerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspKeyContainerInfo ^ CspKeyContainerInfo { System::Security::Cryptography::CspKeyContainerInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspKeyContainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> che descrive informazioni aggiuntive su una coppia di chiavi crittografiche.</summary>
        <value>Oggetto <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> che descrive informazioni aggiuntive su una coppia di chiavi crittografiche.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo%2A> proprietà per recuperare informazioni aggiuntive su una coppia di chiavi crittografiche.  L'oggetto restituito <xref:System.Security.Cryptography.CspKeyContainerInfo> descrive se la chiave è esportabile e specifica il nome di contenitore di chiavi, informazioni sul provider e altre informazioni.  
  
 Nei casi in cui viene generata una chiave casuale, non essere creato un contenitore di chiavi fino a quando non si chiama un metodo che utilizza la chiave.  Alcune proprietà del <xref:System.Security.Cryptography.CspKeyContainerInfo> oggetto restituito dal <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> proprietà genererà un <xref:System.Security.Cryptography.CryptographicException> se non è stato creato un contenitore di chiavi.  Per assicurarsi che sia stato creato un contenitore di chiavi, chiamare un metodo, ad esempio <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>e così via, prima di chiamare il <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come chiamare il <xref:System.Security.Cryptography.CspKeyContainerInfo> proprietà.  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Decrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Decrittografa i dati crittografati in precedenza.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] rgb, bool fOAEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] rgb, bool fOAEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (rgb As Byte(), fOAEP As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ rgb, bool fOAEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="fOAEP" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rgb">Dati da decrittografare.</param>
        <param name="fOAEP">
          <see langword="true" /> per eseguire direttamente la decrittografia <see cref="T:System.Security.Cryptography.RSA" /> con il riempimento OAEP (disponibile solo in un computer che esegue Microsoft Windows XP o versione successiva); in caso contrario, <see langword="false" /> per usare il riempimento PKCS #1 v 1.5.</param>
        <summary>Decrittografa i dati con l'algoritmo <see cref="T:System.Security.Cryptography.RSA" />.</summary>
        <returns>Dati decrittografati, ovvero il testo normale originale prima della crittografia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A> per crittografare i dati per la decrittografia con questo metodo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito crittografa e decrittografa i dati.  
  
 Questo esempio viene utilizzato il <xref:System.Text.ASCIIEncoding> classe; tuttavia, la <xref:System.Text.UnicodeEncoding> classe potrebbe essere preferibile nelle operazioni di dati di grandi dimensioni. Il valore crittografato può essere salvato come un `nvarchar` il tipo di dati in Microsoft SQL Server 2005.  
  
 [!code-cpp[Cryptography.RSACSP.Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.Decrypt/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.Decrypt/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.Decrypt/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile acquisire il provider del servizio di crittografia (CSP).  
  
 oppure  
  
 Il parametro <paramref name="fOAEP" /> è <see langword="true" /> e la lunghezza del parametro <paramref name="rgb" /> è maggiore di <see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />.  
  
 oppure  
  
 Il parametro <paramref name="fOAEP" /> è <see langword="true" /> e OAEP non è supportato.  
  
 oppure  
  
 La chiave non corrisponde ai dati crittografati. Tuttavia, la formulazione dell'eccezione potrebbe non essere accurata. Potrebbe ad esempio essere <c>Memoria insufficiente per eseguire il comando</c>.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rgb" /> è <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">per l'autorizzazione decrittografare. Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumerazione associata: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Decrypt(unsigned int8[] data, class System.Security.Cryptography.RSAEncryptionPadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Decrypt (data As Byte(), padding As RSAEncryptionPadding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ data, System::Security::Cryptography::RSAEncryptionPadding ^ padding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      </Parameters>
      <Docs>
        <param name="data">Dati da decrittografare.</param>
        <param name="padding">Riempimento.</param>
        <summary>Decrittografa i dati precedentemente crittografati con l'algoritmo <see cref="T:System.Security.Cryptography.RSA" /> usando il riempimento specificato.</summary>
        <returns>Dati decrittografati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `padding` deve essere <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType> o <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="padding" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La modalità di riempimento non è supportata.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptValue">
      <MemberSignature Language="C#" Value="public override byte[] DecryptValue (byte[] rgb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptValue(unsigned int8[] rgb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptValue (rgb As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptValue(cli::array &lt;System::Byte&gt; ^ rgb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgb">Dati da decrittografare.</param>
        <summary>Metodo non supportato nella versione corrente.</summary>
        <returns>Dati decrittografati, ovvero il testo normale originale prima della crittografia.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Metodo non supportato nella versione corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crittografa i dati con l'algoritmo <see cref="T:System.Security.Cryptography.RSA" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] rgb, bool fOAEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] rgb, bool fOAEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (rgb As Byte(), fOAEP As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ rgb, bool fOAEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="fOAEP" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rgb">Dati da crittografare.</param>
        <param name="fOAEP">
          <see langword="true" /> per eseguire direttamente la crittografia <see cref="T:System.Security.Cryptography.RSA" /> usando il riempimento OAEP (disponibile solo in un computer che esegue Windows XP o versione successiva); in caso contrario, <see langword="false" /> per usare il riempimento PKCS#1 v1.5.</param>
        <summary>Crittografa i dati con l'algoritmo <see cref="T:System.Security.Cryptography.RSA" />.</summary>
        <returns>Dati crittografati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente descrive il riempimento supportato da diverse versioni di Microsoft Windows e la lunghezza massima di `rgb` consentito da diverse combinazioni di sistemi operativi e spaziatura interna.  
  
|Spaziatura interna|Sistema operativo supportato|Lunghezza massima del parametro rgb|  
|-------------|--------------------------------|-------------------------------------|  
|Riempimento OAEP (PKCS #1 v2)|Windows XP o versione successiva.|Dimensione del modulo -2-2 * hLen, dove hLen è la dimensione dell'hash.|  
|Crittografia diretta (PKCS #1 v 1.5)|Microsoft Windows 2000 o versioni successive con il pacchetto di crittografia elevata.|Dimensioni del modulo - 11. (11 byte è il riempimento minimo consentito).|  
|Indirizzare il riempimento OAEP e di crittografia non supportato|Microsoft Windows 98, Windows Millennium Edition o Windows 2000 o versioni successive, senza il pacchetto di crittografia elevata.|La dimensione massima consentita per una chiave simmetrica.|  
  
 Utilizzare <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A> per decrittografare i risultati di questo metodo.  
  
   
  
## Examples  
 Nell'esempio di codice viene inizializzato un <xref:System.Security.Cryptography.RSACryptoServiceProvider> oggetto con il valore di una chiave pubblica (inviata da un'altra entità), genera una chiave di sessione tramite il <xref:System.Security.Cryptography.RijndaelManaged> algoritmo e quindi crittografa la chiave di sessione usando il <xref:System.Security.Cryptography.RSACryptoServiceProvider> oggetto.  Utilizzando questo schema, la chiave della sessione è stato possibile inviare al proprietario della chiave privata RSA e le due parti è possibile usare la chiave di sessione per lo scambio di dati crittografati.  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.Encrypt/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.Encrypt/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.Encrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile acquisire il provider del servizio di crittografia (CSP).  
  
 oppure  
  
 La lunghezza del parametro <paramref name="rgb" /> è maggiore della lunghezza massima consentita.  
  
 oppure  
  
 Il parametro <paramref name="fOAEP" /> è <see langword="true" /> e il riempimento OAEP non è supportato.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rgb" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Encrypt(unsigned int8[] data, class System.Security.Cryptography.RSAEncryptionPadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Encrypt (data As Byte(), padding As RSAEncryptionPadding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ data, System::Security::Cryptography::RSAEncryptionPadding ^ padding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      </Parameters>
      <Docs>
        <param name="data">Dati da crittografare.</param>
        <param name="padding">Riempimento.</param>
        <summary>Crittografa i dati con l'algoritmo <see cref="T:System.Security.Cryptography.RSA" /> usando il riempimento specificato.</summary>
        <returns>Dati crittografati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `padding` deve essere <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType> o <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="padding" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La modalità di riempimento non è supportata.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptValue">
      <MemberSignature Language="C#" Value="public override byte[] EncryptValue (byte[] rgb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptValue(unsigned int8[] rgb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptValue (rgb As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptValue(cli::array &lt;System::Byte&gt; ^ rgb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgb">Dati da crittografare.</param>
        <summary>Metodo non supportato nella versione corrente.</summary>
        <returns>Dati crittografati.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Metodo non supportato nella versione corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExportCspBlob">
      <MemberSignature Language="C#" Value="public byte[] ExportCspBlob (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportCspBlob(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportCspBlob (includePrivateParameters As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportCspBlob(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <see langword="true" /> per includere la chiave privata; in caso contrario, <see langword="false" />.</param>
        <summary>Esporta un BLOB che contiene le informazioni sulla chiave associate a un oggetto <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />.</summary>
        <returns>Matrice di byte che contiene le informazioni sulla chiave associate a un oggetto <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob%2A> metodo restituisce un blob che contiene informazioni sulla chiave che è compatibile con l'API di crittografia Microsoft (CAPI).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">l'autorizzazione per accedere a un contenitore di chiavi quando si esporta una chiave privata. Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumerazione associata: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.RSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As RSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::RSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <see langword="true" /> per includere i parametri privati; in caso contrario, <see langword="false" />.</param>
        <summary>Esporta la <see cref="T:System.Security.Cryptography.RSAParameters" />.</summary>
        <returns>Parametri per <see cref="T:System.Security.Cryptography.RSA" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente consente di esportare le informazioni sulla chiave create utilizzando il <xref:System.Security.Cryptography.RSACryptoServiceProvider> in un <xref:System.Security.Cryptography.RSAParameters> oggetto.  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La chiave non può essere esportata.</exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">per l'autorizzazione esportare una chiave. Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumerazione associata: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~RSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!RSACryptoServiceProvider ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCspBlob">
      <MemberSignature Language="C#" Value="public void ImportCspBlob (byte[] keyBlob);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportCspBlob(unsigned int8[] keyBlob) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportCspBlob (keyBlob As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportCspBlob(cli::array &lt;System::Byte&gt; ^ keyBlob);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBlob" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyBlob">Matrice di byte che rappresenta un BLOB a chiave RSA.</param>
        <summary>Importa un BLOB che rappresenta le informazioni chiave RSA.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob%2A> metodo consente di inizializzare i dati della chiave di un <xref:System.Security.Cryptography.RSACryptoServiceProvider> utilizzando un blob che è compatibile con l'API di crittografia Microsoft (CAPI).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">l'autorizzazione per accedere a un contenitore di chiavi quando si importa una chiave. Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumerazione associata: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.RSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As RSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::RSAParameters parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.RSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">Parametri per <see cref="T:System.Security.Cryptography.RSA" />.</param>
        <summary>Importa l'oggetto <see cref="T:System.Security.Cryptography.RSAParameters" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente Importa informazioni chiave create da un <xref:System.Security.Cryptography.RSAParameters> dell'oggetto in un <xref:System.Security.Cryptography.RSACryptoServiceProvider> oggetto.  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ImportParameters/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ImportParameters/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ImportParameters/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile acquisire il provider del servizio di crittografia (CSP).  
  
 oppure  
  
 Nel parametro <paramref name="parameters" /> mancano alcuni campi.</exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">per l'autorizzazione importare una chiave. Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumerazione associata: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></permission>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public override string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'algoritmo di scambio delle chiavi disponibile con questa implementazione di <see cref="T:System.Security.Cryptography.RSA" />.</summary>
        <value>Nome dell'algoritmo di scambio delle chiavi, se esistente; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà indica il nome dell'algoritmo, non è di tipo. Ad esempio, RSA-PKCS1-KeyEx è un nome di algoritmo di scambio di chiave.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la dimensione della chiave corrente.</summary>
        <value>Dimensione in bit della chiave.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Cryptography.RSACryptoServiceProvider> se è installato Microsoft Enhanced Cryptographic Provider, supporta dimensioni della chiave da 384 a 16384 bit in incrementi di 8 bit.  Se è installato Microsoft Enhanced Cryptographic Provider, supporta dimensioni della chiave da 384 a 512 bit in incrementi di 8 bit.  
  
 Dimensioni valide delle chiavi sono dipendenti dal provider del servizio di crittografia (CSP) che viene utilizzato il <xref:System.Security.Cryptography.RSACryptoServiceProvider> istanza. Dimensioni della chiave enable CSP di Windows di 384 a 16384 bit per le versioni di Windows precedenti a [!INCLUDE[win81](~/includes/win81-md.md)]e la chiave di dimensioni di 512 a 16384 bit per [!INCLUDE[win81](~/includes/win81-md.md)]. Per ulteriori informazioni, vedere [CryptGenKey](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx) funzione nella documentazione di Windows.  
  
 Il <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe non consente di modificare le dimensioni delle chiavi usando il <xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize%2A> proprietà.  Qualsiasi valore scritto per questa proprietà non verrà aggiornate le proprietà senza errori.  Per modificare la dimensione della chiave, utilizzare uno degli overload del costruttore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistKeyInCsp">
      <MemberSignature Language="C#" Value="public bool PersistKeyInCsp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistKeyInCsp" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistKeyInCsp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistKeyInCsp { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la chiave deve essere mantenuta nel provider del servizio di crittografia (CSP).</summary>
        <value>
          <see langword="true" /> se la chiave deve essere mantenuta nel provider CSP; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per mantenere una chiave in un contenitore di chiavi.  
  
 Il <xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A> proprietà viene impostata automaticamente su `true` quando si specifica un nome di contenitore di chiavi nel <xref:System.Security.Cryptography.CspParameters.KeyContainerName> campo di un <xref:System.Security.Cryptography.CspParameters> dell'oggetto e viene utilizzato per inizializzare un <xref:System.Security.Cryptography.RSACryptoServiceProvider> oggetto chiamando uno dei costruttori con un `parameters`parametro.  
  
 Il <xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A> proprietà ha effetto se la <xref:System.Security.Cryptography.RSACryptoServiceProvider> oggetto viene creato con un `null` nome di contenitore di chiavi.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Security.Cryptography.RSACryptoServiceProvider> dell'oggetto e viene mantenuta la chiave per un contenitore di chiavi.  
  
 [!code-cpp[Cryptography.RSACSP.PersistKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.PersistKey/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.PersistKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.PersistKey/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.PersistKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.PersistKey/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">per l'autorizzazione eliminare una chiave. Enumerazione associata: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" />  
  
 oppure  
  
 l'autorizzazione per creare una chiave. Enumerazione associata: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PublicOnly">
      <MemberSignature Language="C#" Value="public bool PublicOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PublicOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PublicOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> contiene solo una chiave pubblica.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> contiene solo una chiave pubblica; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe può essere inizializzata con una chiave pubblica sola o con entrambi una public e private key.  Utilizzare il <xref:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly%2A> proprietà per determinare se l'istanza corrente contiene solo una chiave pubblica o una chiave pubblica e privata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public override string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'algoritmo di firma disponibile con questa implementazione di <see cref="T:System.Security.Cryptography.RSA" />.</summary>
        <value>Nome dell'algoritmo di firma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene utilizzata nelle classi di firma digitale XML per indicare l'URI dell'algoritmo. In questa implementazione, questa proprietà restituisce sempre http://www.w3.org/2000/09/xmldsig#rsa-sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Calcola il valore hash dei dati specificati e lo firma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer, object halg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer, object halg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte(), halg As Object) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ halg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="halg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Dati di input per cui calcolare il valore hash.</param>
        <param name="halg">Algoritmo hash da usare per creare il valore hash.</param>
        <summary>Calcola il valore hash della matrice di byte specificata usando l'algoritmo hash specificato e firma il valore hash risultante.</summary>
        <returns>Firma <see cref="T:System.Security.Cryptography.RSA" /> per i dati specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea una firma digitale viene verificata mediante la <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> metodo.  
  
 Il `halg` parametro può accettare un <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, o un <xref:System.Type>.  
  
   
  
## Examples  
 Esempio di codice seguente vengono firmati e verificati i dati.  
  
 [!code-cpp[Cryptography.RSACSP.SignData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.SignData2/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.SignData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.SignData2/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.SignData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.SignData2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="halg" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="halg" /> non è un tipo valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream inputStream, object halg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream inputStream, object halg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (inputStream As Stream, halg As Object) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ inputStream, System::Object ^ halg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="halg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="inputStream">Dati di input per cui calcolare il valore hash.</param>
        <param name="halg">Algoritmo hash da usare per creare il valore hash.</param>
        <summary>Calcola il valore hash del flusso di input specificato usando l'algoritmo hash specificato e firma il valore hash risultante.</summary>
        <returns>Firma <see cref="T:System.Security.Cryptography.RSA" /> per i dati specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `halg` parametro può accettare un <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, o un <xref:System.Type>.  
  
   
  
## Examples  
 Esempio di codice seguente vengono firmati e verificati i dati.  
  
 [!code-cpp[Cryptography.RSACSP.SignData3#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.SignData3/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.SignData3#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.SignData3/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.SignData3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.SignData3/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="halg" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="halg" /> non è un tipo valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer, int offset, int count, object halg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer, int32 offset, int32 count, object halg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte(), offset As Integer, count As Integer, halg As Object) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Object ^ halg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="halg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Dati di input per cui calcolare il valore hash.</param>
        <param name="offset">Offset nella matrice dal quale iniziare a usare i dati.</param>
        <param name="count">Numero di byte nella matrice da usare come dati.</param>
        <param name="halg">Algoritmo hash da usare per creare il valore hash.</param>
        <summary>Calcola il valore hash di un subset della matrice di byte specificata usando l'algoritmo hash specificato e firma il valore hash risultante.</summary>
        <returns>Firma <see cref="T:System.Security.Cryptography.RSA" /> per i dati specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea una firma digitale viene verificata mediante la <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> metodo.  
  
 Il `halg` parametro può accettare un <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, o un <xref:System.Type>. Il valore di stringa può essere uno dei valori seguenti:  
  
-   Oggetto (OID) identificatore nome dell'algoritmo hash da usare, un nome registrato nel file di configurazione di crittografia o una nella tabella Crypto API OID.  
  
-   La durata (OID). L'OID deve essere riconosciuto dall'API di crittografia.  
  
 Ad esempio, è possibile utilizzare SignData (nuovo byte [5], "1.3.14.3.2.26") o SignData (nuovo byte [5], "sha1") o SignData (nuovo byte [5], "SHA1").  
  
   
  
## Examples  
 Esempio di codice seguente vengono firmati e verificati i dati.  
  
 [!code-cpp[Cryptography.RSACSP.SignData1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.SignData1/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.SignData1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.SignData1/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.SignData1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.SignData1/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="halg" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="halg" /> non è un tipo valido.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignHash">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Calcola la firma per il valore hash specificato crittografandola con la chiave privata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public byte[] SignHash (byte[] rgbHash, string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignHash(unsigned int8[] rgbHash, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignHash (rgbHash As Byte(), str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rgbHash">Valore hash dei dati da firmare.</param>
        <param name="str">Identificatore algoritmo hash (OID) usato per creare il valore hash dei dati.</param>
        <summary>Calcola la firma per il valore hash specificato crittografandola con la chiave privata.</summary>
        <returns>Firma <see cref="T:System.Security.Cryptography.RSA" /> per il valore hash specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea una firma digitale viene verificata mediante la <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A> metodo.  
  
 Gli algoritmi di hash valido sono <xref:System.Security.Cryptography.SHA1> e <xref:System.Security.Cryptography.MD5>. L'identificatore dell'algoritmo può essere derivato dal nome hash usando il <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente consente di crittografare alcuni dati, crea un hash dei dati crittografati e quindi effettua l'hash con una firma digitale.  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rgbHash" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile acquisire il provider del servizio di crittografia (CSP).  
  
 oppure  
  
 Nessuna chiave privata.</exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">per l'autorizzazione firmare un file usando la chiave. Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumerazione associata: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, class System.Security.Cryptography.RSASignaturePadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, System::Security::Cryptography::RSASignaturePadding ^ padding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
      </Parameters>
      <Docs>
        <param name="hash">Valore hash dei dati da firmare.</param>
        <param name="hashAlgorithm">Nome dell’algoritmo hash usato per creare il valore hash dei dati.</param>
        <param name="padding">Riempimento.</param>
        <summary>Calcola la firma per il valore hash specificato crittografandola con la chiave privata tramite il riempimento specificato.</summary>
        <returns>Firma <see cref="T:System.Security.Cryptography.RSA" /> per il valore hash specificato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hashAlgorithm" /> è <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hash" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="padding" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="padding" /> non è uguale a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseMachineKeyStore">
      <MemberSignature Language="C#" Value="public static bool UseMachineKeyStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseMachineKeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseMachineKeyStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseMachineKeyStore { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la chiave deve essere mantenuta nell'archivio delle chiavi del computer invece che nell'archivio del profilo utente.</summary>
        <value>
          <see langword="true" /> se la chiave deve essere mantenuta nell'archivio delle chiavi del computer; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostando questa proprietà su `true` equivale a passare il <xref:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore> flag su un <xref:System.Security.Cryptography.CspParameters> oggetto. Il <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> proprietà si applica a tutto il codice nel dominio applicazione corrente, mentre il <xref:System.Security.Cryptography.CspParameters> oggetto si applica solo alle classi di riferimento in modo esplicito. Queste impostazioni sono utili quando la rappresentazione o eseguito con un account con cui il profilo utente non è caricato. Impostazione <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> interessa la solo se percorso di archivio chiavi <xref:System.Security.Cryptography.RSACryptoServiceProvider> viene inizializzato senza parametri.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Security.Cryptography.RSACryptoServiceProvider> dell'oggetto e imposta il metodo statico <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> proprietà per l'utilizzo di archivio chiavi del computer anziché l'archivio chiavi del profilo utente.  
  
 [!code-cpp[Cryptography.RSACSP.UseMachineKey#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.UseMachineKey/CPP/example2.cpp#2)]
 [!code-csharp[Cryptography.RSACSP.UseMachineKey#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.UseMachineKey/CS/example2.cs#2)]
 [!code-vb[Cryptography.RSACSP.UseMachineKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.UseMachineKey/VB/example2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verifica che la firma digitale sia valida.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] buffer, object halg, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] buffer, object halg, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (buffer As Byte(), halg As Object, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ halg, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="halg" Type="System.Object" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">I dati che sono stati firmati.</param>
        <param name="halg">Nome dell'algoritmo hash usato per creare il valore hash dei dati.</param>
        <param name="signature">Dati della firma da verificare.</param>
        <summary>Verifica che una firma digitale sia valida determinando il valore hash nella firma usando la chiave pubblica fornita e confrontandola con il valore hash fornito.</summary>
        <returns>
          <see langword="true" /> se la firma è valida; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo verifica la <xref:System.Security.Cryptography.RSA> firma digitale prodotto dal <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> metodo. La firma viene verificata ottenendo il valore hash dalla firma usando la chiave pubblica è stato firmato con, e confrontando tale valore con il valore hash dei dati forniti.  
  
 Il `halg` parametro può accettare un <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, o un <xref:System.Type>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> metodo per verificare una firma. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> metodo.  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CPP/class1.cpp#2)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CS/class1.cs#2)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="halg" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="halg" /> non è un tipo valido.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyHash">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verifica che la firma digitale sia valida.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyHash(unsigned int8[] rgbHash, string str, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyHash (rgbHash As Byte(), str As String, rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">Valore hash dei dati firmati.</param>
        <param name="str">Identificatore algoritmo hash (OID) usato per creare il valore hash dei dati.</param>
        <param name="rgbSignature">Dati della firma da verificare.</param>
        <summary>Verifica la validità di una firma digitale confrontando il valore hash della firma determinato tramite la chiave pubblica fornita con il valore hash fornito.</summary>
        <returns>
          <see langword="true" /> se la firma è valida; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo verifica la <xref:System.Security.Cryptography.RSA> firma digitale prodotto dal <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> metodo. La firma viene verificata ottenendo il valore hash dalla firma usando la chiave pubblica è stato firmato con, e confrontando tale valore con il valore hash dei dati forniti.  
  
 Gli algoritmi di hash valido sono <xref:System.Security.Cryptography.SHA1> e <xref:System.Security.Cryptography.MD5>. L'identificatore dell'algoritmo può essere derivato dal nome hash usando il <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A> metodo per verificare una firma. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> metodo.  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CPP/class1.cpp#2)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CS/class1.cs#2)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rgbHash" /> è <see langword="null" />.  
  
 oppure  
  
 Il valore del parametro <paramref name="rgbSignature" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile acquisire il provider del servizio di crittografia (CSP).  
  
 oppure  
  
 Non è possibile verificare la firma.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, class System.Security.Cryptography.RSASignaturePadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, System::Security::Cryptography::RSASignaturePadding ^ padding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
      </Parameters>
      <Docs>
        <param name="hash">Valore hash dei dati firmati.</param>
        <param name="signature">Dati della firma da verificare.</param>
        <param name="hashAlgorithm">Nome dell'algoritmo hash usato per creare il valore hash.</param>
        <param name="padding">Riempimento.</param>
        <summary>Verifica che una firma digitale sia valida determinando il valore hash nella firma tramite l'algoritmo hash e la spaziatura interna specificati e confrontandolo con il valore hash indicato.</summary>
        <returns>
          <see langword="true" /> se la firma è valida; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hashAlgorithm" /> è <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hash" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="padding" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="padding" /> non è uguale a <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>