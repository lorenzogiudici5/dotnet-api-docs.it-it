<Type Name="CngProperty" FullName="System.Security.Cryptography.CngProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="45eb004846ebb1947f962e94bcbba3f45d7339ac" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49137283" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CngProperty : IEquatable&lt;System.Security.Cryptography.CngProperty&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CngProperty extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Security.Cryptography.CngProperty&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CngProperty" />
  <TypeSignature Language="VB.NET" Value="Public Structure CngProperty&#xA;Implements IEquatable(Of CngProperty)" />
  <TypeSignature Language="C++ CLI" Value="public value class CngProperty : IEquatable&lt;System::Security::Cryptography::CngProperty&gt;" />
  <TypeSignature Language="F#" Value="type CngProperty = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.CngProperty&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c7b27-101">Incapsula una proprietà di un provider o una chiave CNG (Cryptography Next Generation).</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7b27-101">Encapsulates a property of a Cryptography Next Generation (CNG) key or provider.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7b27-102">Questa classe incapsula un nome di proprietà (una stringa), un valore (matrice di byte), un <xref:System.Security.Cryptography.CngPropertyOptions> flag, le proprietà della funzione di accesso e il confronto e funzioni hash.</span><span class="sxs-lookup"><span data-stu-id="c7b27-102">This class encapsulates a property name (a string), a value (byte array), a <xref:System.Security.Cryptography.CngPropertyOptions> flag, accessor properties, and comparison and hashing functions.</span></span>  
  
 <span data-ttu-id="c7b27-103">Questa classe viene utilizzata con il <xref:System.Security.Cryptography.CngKey.SetProperty%2A> e <xref:System.Security.Cryptography.CngKey.GetProperty%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="c7b27-103">This class is used with the <xref:System.Security.Cryptography.CngKey.SetProperty%2A> and <xref:System.Security.Cryptography.CngKey.GetProperty%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CngProperty (string name, byte[] value, System.Security.Cryptography.CngPropertyOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, unsigned int8[] value, valuetype System.Security.Cryptography.CngPropertyOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Byte(), options As CngPropertyOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CngProperty(System::String ^ name, cli::array &lt;System::Byte&gt; ^ value, System::Security::Cryptography::CngPropertyOptions options);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CngProperty : string * byte[] * System.Security.Cryptography.CngPropertyOptions -&gt; System.Security.Cryptography.CngProperty" Usage="new System.Security.Cryptography.CngProperty (name, value, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Security.Cryptography.CngPropertyOptions" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c7b27-104">Nome della proprietà da inizializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-104">The property name to initialize.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c7b27-105">Valore della proprietà da inizializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-105">The property value to initialize.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c7b27-106">Combinazione bit per bit dei valori di enumerazione che specificano le modalità di archiviazione della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-106">A bitwise combination of the enumeration values that specify how the property is stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7b27-107">Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.CngProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-107">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CngProperty" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7b27-108">Proprietà che vengono archiviate con un set specifico di <xref:System.Security.Cryptography.CngPropertyOptions> flag richiedono lo stesso set di flag quando vengono recuperati.</span><span class="sxs-lookup"><span data-stu-id="c7b27-108">Properties that are stored with a specific set of <xref:System.Security.Cryptography.CngPropertyOptions> flags require the same set of flags when they are retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c7b27-109">
            <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-109">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c7b27-110">Confronta due oggetti <see cref="T:System.Security.Cryptography.CngProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-110">Compares two <see cref="T:System.Security.Cryptography.CngProperty" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7b27-111"><xref:System.Security.Cryptography.CngProperty> gli oggetti sono considerati uguali se i nomi, i valori e le opzioni sono equivalenti.</span><span class="sxs-lookup"><span data-stu-id="c7b27-111"><xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent.</span></span> <span data-ttu-id="c7b27-112">Confronto tra i nomi viene eseguita in modo distinzione maiuscole/minuscole.</span><span class="sxs-lookup"><span data-stu-id="c7b27-112">Name comparison is performed in a case-sensitive manner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cngProperty.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c7b27-113">Oggetto da confrontare con l'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-113">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngProperty" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7b27-114">Confronta l'oggetto specificato con l'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-114">Compares the specified object to the current <see cref="T:System.Security.Cryptography.CngProperty" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7b27-115">
            <see langword="true" /> se il parametro <paramref name="obj" /> è un oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> che specifica la stessa proprietà dell'oggetto corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-115">
              <see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Security.Cryptography.CngProperty" /> object that specifies the same property as the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7b27-116"><xref:System.Security.Cryptography.CngProperty> gli oggetti sono considerati uguali se i nomi, i valori e le opzioni sono equivalenti.</span><span class="sxs-lookup"><span data-stu-id="c7b27-116"><xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent.</span></span> <span data-ttu-id="c7b27-117">Confronto tra i nomi viene eseguita in modo distinzione maiuscole/minuscole.</span><span class="sxs-lookup"><span data-stu-id="c7b27-117">Name comparison is performed in a case-sensitive manner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.CngProperty other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Security.Cryptography.CngProperty other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CngProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::CngProperty other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Security.Cryptography.CngProperty -&gt; bool" Usage="cngProperty.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.CngProperty" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="c7b27-118">Oggetto da confrontare con l'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-118">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngProperty" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7b27-119">Confronta l'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> specificato con l'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-119">Compares the specified <see cref="T:System.Security.Cryptography.CngProperty" /> object to the current <see cref="T:System.Security.Cryptography.CngProperty" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7b27-120">
            <see langword="true" /> se il parametro <paramref name="other" /> rappresenta la stessa proprietà dell'oggetto corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-120">
              <see langword="true" /> if the <paramref name="other" /> parameter represents the same property as the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7b27-121"><xref:System.Security.Cryptography.CngProperty> gli oggetti sono considerati uguali se i nomi, i valori e le opzioni sono equivalenti.</span><span class="sxs-lookup"><span data-stu-id="c7b27-121"><xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent.</span></span> <span data-ttu-id="c7b27-122">Confronto tra i nomi viene eseguita in modo distinzione maiuscole/minuscole.</span><span class="sxs-lookup"><span data-stu-id="c7b27-122">Name comparison is performed in a case-sensitive manner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cngProperty.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7b27-123">Genera un valore hash per l'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-123">Generates a hash value for the current <see cref="T:System.Security.Cryptography.CngProperty" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7b27-124">Valore hash dell'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-124">The hash value of the current <see cref="T:System.Security.Cryptography.CngProperty" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public byte[] GetValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.GetValue" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetValue();" />
      <MemberSignature Language="F#" Value="member this.GetValue : unit -&gt; byte[]" Usage="cngProperty.GetValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7b27-125">Ottiene il valore della proprietà specificato dall'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-125">Gets the property value that the current <see cref="T:System.Security.Cryptography.CngProperty" /> object specifies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7b27-126">Matrice che rappresenta il valore archiviato nella proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-126">An array that represents the value stored in the property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.Cryptography.CngProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7b27-127">Ottiene il nome della proprietà specificato dall'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-127">Gets the property name that the current <see cref="T:System.Security.Cryptography.CngProperty" /> object specifies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7b27-128">Nome della proprietà impostato nell'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-128">The property name that is set in the current <see cref="T:System.Security.Cryptography.CngProperty" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Security.Cryptography.CngProperty left, valuetype System.Security.Cryptography.CngProperty right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CngProperty, right As CngProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::CngProperty left, System::Security::Cryptography::CngProperty right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Security.Cryptography.CngProperty * System.Security.Cryptography.CngProperty -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngProperty" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngProperty" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="c7b27-129">Oggetto che specifica una proprietà di un provider o di una chiave CNG (Cryptography Next Generation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-129">An object that specifies a property of a Cryptography Next Generation (CNG) key or provider.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="c7b27-130">Secondo oggetto, da confrontare con l'oggetto identificato dal parametro <c>left</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-130">A second object, to be compared to the object that is identified by the <c>left</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7b27-131">Determina se due oggetti <see cref="T:System.Security.Cryptography.CngProperty" /> specificano lo stesso nome della proprietà, lo stesso valore e le stesse opzioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-131">Determines whether two <see cref="T:System.Security.Cryptography.CngProperty" /> objects specify the same property name, value, and options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7b27-132">
            <see langword="true" /> se i due oggetti specificano la stessa proprietà; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-132">
              <see langword="true" /> if the two objects specify the same property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7b27-133"><xref:System.Security.Cryptography.CngProperty> gli oggetti sono considerati uguali se i nomi, i valori e le opzioni sono equivalenti.</span><span class="sxs-lookup"><span data-stu-id="c7b27-133"><xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent.</span></span> <span data-ttu-id="c7b27-134">Confronto tra i nomi viene eseguita in modo distinzione maiuscole/minuscole.</span><span class="sxs-lookup"><span data-stu-id="c7b27-134">Name comparison is performed in a case-sensitive manner.</span></span>  
  
 <span data-ttu-id="c7b27-135">Il metodo equivalente per l'operatore è <xref:System.Security.Cryptography.CngProperty.Equals%28System.Security.Cryptography.CngProperty%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c7b27-135">The equivalent method for this operator is <xref:System.Security.Cryptography.CngProperty.Equals%28System.Security.Cryptography.CngProperty%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Security.Cryptography.CngProperty left, valuetype System.Security.Cryptography.CngProperty right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CngProperty, right As CngProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::CngProperty left, System::Security::Cryptography::CngProperty right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Security.Cryptography.CngProperty * System.Security.Cryptography.CngProperty -&gt; bool" Usage="System.Security.Cryptography.CngProperty.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngProperty" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngProperty" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="c7b27-136">Oggetto che specifica una proprietà di un provider o di una chiave CNG (Cryptography Next Generation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-136">An object that specifies a property of a Cryptography Next Generation (CNG) key or provider.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="c7b27-137">Secondo oggetto, da confrontare con l'oggetto identificato dal parametro <c>left</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-137">A second object, to be compared to the object that is identified by the <c>left</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7b27-138">Determina se due oggetti <see cref="T:System.Security.Cryptography.CngProperty" /> non specificano lo stesso nome della proprietà, lo stesso valore e le stesse opzioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-138">Determines whether two <see cref="T:System.Security.Cryptography.CngProperty" /> objects do not specify the same property name, value, and options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7b27-139">
            <see langword="true" /> se i due oggetti non specificano la stessa proprietà; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-139">
              <see langword="true" /> if the two objects do not specify the same property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7b27-140"><xref:System.Security.Cryptography.CngProperty> gli oggetti sono considerati uguali se i nomi, i valori e le opzioni sono equivalenti.</span><span class="sxs-lookup"><span data-stu-id="c7b27-140"><xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent.</span></span> <span data-ttu-id="c7b27-141">Confronto tra i nomi viene eseguita in modo distinzione maiuscole/minuscole.</span><span class="sxs-lookup"><span data-stu-id="c7b27-141">Name comparison is performed in a case-sensitive manner.</span></span>  
  
 <span data-ttu-id="c7b27-142">Il metodo equivalente per l'operatore è <xref:System.Security.Cryptography.CngProperty.Equals%28System.Security.Cryptography.CngProperty%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c7b27-142">The equivalent method for this operator is <xref:System.Security.Cryptography.CngProperty.Equals%28System.Security.Cryptography.CngProperty%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngPropertyOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CngPropertyOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngProperty.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As CngPropertyOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngPropertyOptions Options { System::Security::Cryptography::CngPropertyOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Security.Cryptography.CngPropertyOptions" Usage="System.Security.Cryptography.CngProperty.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngPropertyOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7b27-143">Ottiene le opzioni della proprietà specificate dall'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-143">Gets the property options that the current <see cref="T:System.Security.Cryptography.CngProperty" /> object specifies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7b27-144">Oggetto che specifica le opzioni impostate nell'oggetto <see cref="T:System.Security.Cryptography.CngProperty" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7b27-144">An object that specifies the options that are set in the current <see cref="T:System.Security.Cryptography.CngProperty" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7b27-145"><xref:System.Security.Cryptography.CngKey> gli oggetti contengono <xref:System.Security.Cryptography.CngProperty> gli oggetti che contengono il <xref:System.Security.Cryptography.CngPropertyOptions> archiviati con la proprietà.</span><span class="sxs-lookup"><span data-stu-id="c7b27-145"><xref:System.Security.Cryptography.CngKey> objects contain <xref:System.Security.Cryptography.CngProperty> objects, which contain the <xref:System.Security.Cryptography.CngPropertyOptions> that the property was stored with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>