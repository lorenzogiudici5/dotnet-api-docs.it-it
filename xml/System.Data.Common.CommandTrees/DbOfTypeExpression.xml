<Type Name="DbOfTypeExpression" FullName="System.Data.Common.CommandTrees.DbOfTypeExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3c324050c71f51876e08046008d37a2c1822a3f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39824590" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbOfTypeExpression : System.Data.Common.CommandTrees.DbUnaryExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbOfTypeExpression extends System.Data.Common.CommandTrees.DbUnaryExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbOfTypeExpression&#xA;Inherits DbUnaryExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbOfTypeExpression sealed : System::Data::Common::CommandTrees::DbUnaryExpression" />
  <TypeSignature Language="F#" Value="type DbOfTypeExpression = class&#xA;    inherit DbUnaryExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbUnaryExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta il recupero di elementi del tipo specificato dall'argomento impostato indicato. Questa classe non può essere ereditata.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbOfTypeExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">Istanza di <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
        <summary>Implementa il pattern visitor per le espressioni che non producono alcun valore di risultato.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbOfTypeExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">Il tipo di risultato prodotto dal <c>visitatore</c>.</typeparam>
        <param name="visitor">Istanza di un oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> tipizzato che produce un valore di risultato di un tipo specifico.</param>
        <summary>Implementa il pattern visitor per le espressioni che producono un valore di risultato di un tipo specifico.</summary>
        <returns>Valore di risultato di un tipo specifico prodotto da <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage OfType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.TypeUsage OfType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbOfTypeExpression.OfType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OfType As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::TypeUsage ^ OfType { System::Data::Metadata::Edm::TypeUsage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OfType : System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Common.CommandTrees.DbOfTypeExpression.OfType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i metadati del tipo di elementi che devono essere recuperati dall'argomento impostato.</summary>
        <value>Metadati del tipo di elementi che devono essere recuperati dall'argomento impostato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>