<Type Name="DbQuantifierExpression" FullName="System.Data.Common.CommandTrees.DbQuantifierExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ccf141b5fe7a4594f00e77fa11c761f5eaa4501d" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52203966" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbQuantifierExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbQuantifierExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbQuantifierExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbQuantifierExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbQuantifierExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8a514-101">Rappresenta un'operazione del quantificatore del tipo specificato sugli elementi del set di input indicato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a514-101">Represents a quantifier operation of the specified kind over the elements of the specified input set.</span>
      </span>
      <span data-ttu-id="8a514-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a514-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a514-103">Questa classe rappresenta `Any` e `All` quantificatori.</span><span class="sxs-lookup"><span data-stu-id="8a514-103">This class represents `Any` and `All` quantifiers.</span></span> <span data-ttu-id="8a514-104">`Any` e `All` codificate nel <xref:System.Data.Common.CommandTrees.DbExpressionKind>.</span><span class="sxs-lookup"><span data-stu-id="8a514-104">`Any` and `All` are encoded in the <xref:System.Data.Common.CommandTrees.DbExpressionKind>.</span></span> <span data-ttu-id="8a514-105">Il tipo di risultato di un'espressione del quantificatore è sempre un `Boolean`.</span><span class="sxs-lookup"><span data-stu-id="8a514-105">The result type of a quantifier expression is always a `Boolean`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbQuantifierExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="8a514-106">Istanza di <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-106">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a514-107">Implementa il pattern visitor per le espressioni che non producono alcun valore di risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-107">Implements the visitor pattern for expressions that do not produce a result value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a514-108">
            <paramref name="visitor" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-108">
              <paramref name="visitor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbQuantifierExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">
          <span data-ttu-id="8a514-109">Tipo del risultato prodotto dall'oggetto <paramref name="visitor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-109">The type of the result produced by <paramref name="visitor" />.</span>
          </span>
        </typeparam>
        <param name="visitor">
          <span data-ttu-id="8a514-110">Istanza di un oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> tipizzato che produce un valore di risultato di un tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-110">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a514-111">Implementa il pattern visitor per le espressioni che producono un valore di risultato di un tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-111">Implements the visitor pattern for expressions that produce a result value of a specific type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a514-112">Valore di risultato di un tipo specifico prodotto da <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-112">A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a514-113">
            <paramref name="visitor" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-113">
              <paramref name="visitor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpressionBinding Input" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Input" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Input As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpressionBinding ^ Input { System::Data::Common::CommandTrees::DbExpressionBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Input : System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.DbQuantifierExpression.Input" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a514-114">Ottiene l'oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-114">Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a514-115">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-115">The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predicate">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Predicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Predicate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predicate As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Predicate { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Predicate : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a514-116">Ottiene o imposta il predicato <see langword="Boolean" /> che deve essere valutato per ogni elemento nel set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-116">Gets or sets the <see langword="Boolean" /> predicate that should be evaluated for each element in the input set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a514-117">Predicato <see langword="Boolean" /> che deve essere valutato per ogni elemento nel set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-117">The <see langword="Boolean" /> predicate that should be evaluated for each element in the input set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a514-118">L'espressione è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-118">The expression is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a514-119">L'espressione non è associata all'albero dei comandi per <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-119">The expression is not associated with the command tree for the <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />,</span>
          </span>
          <span data-ttu-id="8a514-120">oppure il tipo di risultato non è un tipo <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a514-120">or its result type is not a <see langword="Boolean" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>