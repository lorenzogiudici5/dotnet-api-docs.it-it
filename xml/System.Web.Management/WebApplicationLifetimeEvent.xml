<Type Name="WebApplicationLifetimeEvent" FullName="System.Web.Management.WebApplicationLifetimeEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cdeab561038a28834b8931467cbd48e4a2679d56" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36599887" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationLifetimeEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationLifetimeEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebApplicationLifetimeEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationLifetimeEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebApplicationLifetimeEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un evento significativo nella durata di un'applicazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il monitoraggio dello stato ASP.NET consente il personale di produzione e operazioni gestire le applicazioni Web distribuite. Il <xref:System.Web.Management> dello spazio dei nomi contiene i tipi di eventi relativi all'integrità responsabili per comprimere i dati di stato di integrità dell'applicazione e i tipi di provider responsabili per l'elaborazione di tali dati. Contiene anche tipi di supporto che semplificano la gestione degli eventi di integrità.  
  
 Gli eventi durata dell'applicazione includono gli eventi, ad esempio l'avvio dell'applicazione e gli eventi di arresto. Se un'applicazione viene terminata, è possibile determinare il motivo visualizzando il campo di messaggio di evento correlate.  
  
 Quando un <xref:System.Web.Management.WebApplicationLifetimeEvent> istanza si verifica, il monitoraggio dello stato ASP.NET aggiorna il contatore delle prestazioni eventi durata applicazione. È possibile inserire questi due eventi aggiungendo il <xref:System.Web.Management.WebApplicationLifetimeEvent> dell'oggetto per il `rules` sottosezione del `healthMonitoring` sezione del file di configurazione, come illustrato nell'esempio seguente.  
  
```  
<rules>  
  <add name="Application Events"  
    eventName="Application Lifetime Events"  
    provider="EventLogProvider"  
    profile="Default"  
    minInterval="00:01:00" />  
</rules>  
  
```  
  
 Il contatore delle prestazioni eventi durata applicazione contiene la somma totale di tutti gli eventi di durata ASP.NET. Per visualizzare questo contatore delle prestazioni in Monitor di sistema (PerfMon), nelle **Aggiungi contatori** finestra selezionare **ASP.NET** dal **oggetto prestazione** elenco a discesa. Selezionare il **gli eventi durata dell'applicazione** contatore delle prestazioni e scegliere il **Add** pulsante. Per altre informazioni, vedere "Utilizzo del Monitor di sistema (PerfMon) con le applicazioni ASP.NET" nella [MSDN](http://go.microsoft.com/fwlink/?linkid=37118). Se si consentono la registrazione dallo standard degli eventi <xref:System.Web.Management.EventLogWebEventProvider>, è possibile visualizzarle nel Visualizzatore eventi selezionando le **applicazione** log. Per altre informazioni, vedere [Visualizzatore eventi](http://go.microsoft.com/fwlink/?linkid=24845&clcid=0x409) nella documentazione di Windows Server 2003 su TechNet.  
  
> [!CAUTION]
>  Poiché il <xref:System.Web.Management.WebApplicationLifetimeEvent> oggetto è un evento con volumi elevati, registrarlo utilizza molte risorse e potrebbe rallentare il sistema. Può inoltre causare di essere sovrascritto nel caso di altri eventi di <xref:System.Web.Management.EventLogWebEventProvider> classe a causa dell'elevato volume di eventi e la modalità della registrazione eventi.  
  
> [!NOTE]
>  Nella maggior parte dei casi è possibile utilizzare i tipi di monitoraggio ASP.NET come implementato e controllare il sistema di monitoraggio integrità specificando i valori nel `healthMonitoring` sezione di configurazione. È anche possibile derivare i tipi di monitoraggio dello stato per creare eventi personalizzati e i provider personalizzati. Per un esempio di derivazione da di <xref:System.Web.Management.WebApplicationLifetimeEvent> classe, vedere l'esempio fornito in questo argomento.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come derivare il <xref:System.Web.Management.WebApplicationLifetimeEvent> classe per creare un evento personalizzato.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#1)]  
  
 L'estratto del file di configurazione seguente viene illustrato come configurare il `healthMonitoring` sezione di un file di configurazione per aggiungere il `SampleWebApplicationLifetimeEvent` codice definiti in precedenza per il sistema di monitoraggio dello stato ASP.NET. Per aggiungere l'evento al sistema, è necessario definire l'evento mediante l'aggiunta di una nuova voce per il `eventMappings` sezione ed eseguire il mapping dell'evento a un provider tramite l'aggiunta di una nuova voce per il `rules` sezione.  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <eventMappings>  
       <clear />  
       <!-- Configure the application lifetime event -->  
       <!-- object to handle the Web application events. -->  
       <add name="SampleApplicationLifetimeEvents"  
         type="System.Web.Management.SampleWebApplicationLifetimeEvent,  
         System.Web,Version=2.0.3600.0,  
         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" />  
     </eventMappings>  
  
    <rules>  
      <clear/>  
       // Configure the connection between the   
       // application lifetime event object   
       // and the provider that must process it.  
       <add name="Custom Application Events"  
         eventName="SampleApplicationLifetimeEvents"  
         provider="EventLogProvider"  
         profile="Default"  
         minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando si formatta le informazioni di evento personalizzato per la visualizzazione, eseguire l'override di <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> metodo anziché il <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> metodo. Questo modo si evita la sovrascrittura o la manomissione con le informazioni di sistema riservati.</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio associato all'evento.</param>
        <param name="eventSource">Oggetto che è l'origine dell'evento.</param>
        <param name="eventCode">Codice associato all'evento. Quando si implementa un evento personalizzato, il codice evento deve essere maggiore di <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Inizializza la classe <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> utilizzando i parametri specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato internamente dal sistema di monitoraggio dello stato di ASP.NET. Non verrà mai utilizzato per creare un'istanza di <xref:System.Web.Management.WebApplicationLifetimeEvent> (classe), ma è possibile chiamare questo costruttore quando si implementa un proprio tipo di evento che eredita da questa classe.  
  
> [!NOTE]
>  Il <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> costruttore quando si deriva dal <xref:System.Web.Management.WebApplicationLifetimeEvent> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> in un evento di stato personalizzati ASP.NET. Questo esempio di codice principalmente deve illustrare la sintassi corretta da usare.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#2)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio associato all'evento.</param>
        <param name="eventSource">Oggetto che è l'origine dell'evento.</param>
        <param name="eventCode">Codice associato all'evento. Quando si implementa un evento personalizzato, il codice evento deve essere maggiore di <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Valore <see cref="T:System.Web.Management.WebEventCodes" /> che specifica l'identificatore dettagliato dell'evento.</param>
        <summary>Inizializza la classe <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> utilizzando i parametri specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato internamente dal sistema di monitoraggio dello stato di ASP.NET. Non verrà mai utilizzato per creare un'istanza di <xref:System.Web.Management.WebApplicationLifetimeEvent> (classe), ma è possibile chiamare questo costruttore quando si implementa un proprio tipo di evento che eredita da questa classe.  
  
> [!NOTE]
>  Il <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> costruttore quando si deriva dal <xref:System.Web.Management.WebApplicationLifetimeEvent> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> in un evento di stato personalizzati ASP.NET. Questo esempio di codice principalmente deve illustrare la sintassi corretta da usare.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#3)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webApplicationLifetimeEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Utilizzato internamente per incrementare i contatori delle prestazioni.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>