<Type Name="WebProcessStatistics" FullName="System.Web.Management.WebProcessStatistics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9499d1442f4e8351a5c92b5ed2d074ffeb5be2f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36400441" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebProcessStatistics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WebProcessStatistics extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebProcessStatistics" />
  <TypeSignature Language="VB.NET" Value="Public Class WebProcessStatistics" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebProcessStatistics" />
  <TypeSignature Language="F#" Value="type WebProcessStatistics = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce informazioni per la valutazione dello stato di un processo in esecuzione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il monitoraggio dello stato ASP.NET consente il personale di produzione e operazioni gestire le applicazioni Web distribuite. Il <xref:System.Web.Management> dello spazio dei nomi contiene i tipi di eventi relativi all'integrità responsabili per comprimere i dati di stato di integrità dell'applicazione e i tipi di provider responsabili per l'elaborazione di tali dati. Contiene anche tipi di supporto che semplificano la gestione degli eventi di integrità.  
  
 Le istanze del <xref:System.Web.Management.WebProcessStatistics> classe contengono informazioni ottenute tramite il <xref:System.Web.Management.WebHeartbeatEvent> tipo.  
  
> [!NOTE]
>  Nella maggior parte dei casi è possibile utilizzare i tipi di monitoraggio ASP.NET come implementato e controllare il sistema di monitoraggio integrità specificando i valori nel `healthMonitoring` sezione di configurazione. È anche possibile derivare i tipi di monitoraggio dello stato per creare eventi personalizzati e i provider personalizzati. Per un esempio di creazione di una classe di evento personalizzato, vedere l'esempio fornito in questo argomento.  
  
 Di seguito è una porzione di un file di configurazione che è possibile utilizzare per abilitare ASP.NET di registrare gli eventi di heartbeat che contengono statistiche dei processi.  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="100">  
  
    <rules>  
      <add   
        name="Process Statistics"  
        eventName="Heartbeats"   
        provider="EventLogProvider"    
        profile="Default"/>  
    </rules>  
  
</healthMonitoring>  
```  
  
   
  
## Examples  
 Esempio di codice seguente è costituito da due parti. Il primo è un estratto del file di configurazione che consente ad ASP.NET di utilizzare un evento personalizzato che utilizza il <xref:System.Web.Management.WebProcessStatistics> tipo. La seconda viene illustrato come implementare questo evento personalizzato...  
  
 Verificare che l'evento personalizzato viene generato al momento opportuno, vale a dire, quando verrà generato l'evento di integrità di sistema equivalenti che sostituisce.  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
    <eventMappings>  
      <add  name="SampleProcessStatistics" type="SamplesAspNet.SampleWebProcessStatistics, webprocessstatistics, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL"/>  
    </eventMappings>  
  
    <rules>  
      <add   
        name="Custom Process Statistics"  
        eventName="SampleProcessStatistics"   
        provider="EventLogProvider"    
        profile="Default"/>  
    </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#1)]
 [!code-vb[System.Web.Management.WebProcessStatistics#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebHeartbeatEvent" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProcessStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebProcessStatistics.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProcessStatistics();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Management.WebProcessStatistics" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainCount">
      <MemberSignature Language="C#" Value="public int AppDomainCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppDomainCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.AppDomainCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppDomainCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppDomainCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainCount : int" Usage="System.Web.Management.WebProcessStatistics.AppDomainCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di domini applicazioni nel processo.</summary>
        <value>Numero di domini applicazioni.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà in genere si riferisce al numero di applicazioni ASP.NET nel processo, incluso il dominio predefinito.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere il <xref:System.Web.Management.WebProcessStatistics.AppDomainCount%2A> valore.  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#5)]
 [!code-vb[System.Web.Management.WebProcessStatistics#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public virtual void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebProcessStatistics.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FormatToString (formatter As WebEventFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FormatToString(System::Web::Management::WebEventFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="abstract member FormatToString : System.Web.Management.WebEventFormatter -&gt; unit&#xA;override this.FormatToString : System.Web.Management.WebEventFormatter -&gt; unit" Usage="webProcessStatistics.FormatToString formatter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">Oggetto <see cref="T:System.Web.Management.WebEventFormatter" /> che contiene le impostazioni di tabulazione e rientro usate per formattare le informazioni relative a eventi di integrità Web.</param>
        <summary>Formatta le statistiche del processo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Management.WebProcessStatistics.FormatToString%2A> metodo fornisce un modello uniforme per informazioni sugli eventi, che è utile se i dati dell'evento devono essere registrati e successivamente presentati all'utente. Viene chiamato internamente quando il provider richiama uno del <xref:System.Web.Management.WebBaseEvent.ToString%2A> metodi.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come formattare le informazioni personalizzate.  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#14)]
 [!code-vb[System.Web.Management.WebProcessStatistics#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedHeapSize">
      <MemberSignature Language="C#" Value="public long ManagedHeapSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ManagedHeapSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.ManagedHeapSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManagedHeapSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ManagedHeapSize { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ManagedHeapSize : int64" Usage="System.Web.Management.WebProcessStatistics.ManagedHeapSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la dimensione dell'heap gestito.</summary>
        <value>Dimensione dell'heap gestito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere il <xref:System.Web.Management.WebProcessStatistics.ManagedHeapSize%2A> valore.  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#6)]
 [!code-vb[System.Web.Management.WebProcessStatistics#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeakWorkingSet">
      <MemberSignature Language="C#" Value="public long PeakWorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PeakWorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.PeakWorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeakWorkingSet As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PeakWorkingSet { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PeakWorkingSet : int64" Usage="System.Web.Management.WebProcessStatistics.PeakWorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il working set massimo per la durata del processo fino al momento attuale.</summary>
        <value>Working set massimo del processo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere il <xref:System.Web.Management.WebProcessStatistics.PeakWorkingSet%2A> valore.  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#7)]
 [!code-vb[System.Web.Management.WebProcessStatistics#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessStartTime">
      <MemberSignature Language="C#" Value="public DateTime ProcessStartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ProcessStartTime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.ProcessStartTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessStartTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ProcessStartTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessStartTime : DateTime" Usage="System.Web.Management.WebProcessStatistics.ProcessStartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la data e l'ora in cui è stato avviato il processo.</summary>
        <value>
          <see cref="T:System.DateTime" /> in cui è stato avviato il processo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere il <xref:System.Web.Management.WebProcessStatistics.ProcessStartTime%2A> valore.  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#8)]
 [!code-vb[System.Web.Management.WebProcessStatistics#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestsExecuting">
      <MemberSignature Language="C#" Value="public int RequestsExecuting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestsExecuting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.RequestsExecuting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestsExecuting As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestsExecuting { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestsExecuting : int" Usage="System.Web.Management.WebProcessStatistics.RequestsExecuting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di richieste attualmente in esecuzione.</summary>
        <value>Numero di richieste attualmente in esecuzione nel processo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Management.WebProcessStatistics.RequestsExecuting%2A> valore è un indicatore utile del carico.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere il <xref:System.Web.Management.WebProcessStatistics.RequestsExecuting%2A> valore.  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#9)]
 [!code-vb[System.Web.Management.WebProcessStatistics#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestsQueued">
      <MemberSignature Language="C#" Value="public int RequestsQueued { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestsQueued" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.RequestsQueued" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestsQueued As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestsQueued { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestsQueued : int" Usage="System.Web.Management.WebProcessStatistics.RequestsQueued" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di richieste in attesa di elaborazione.</summary>
        <value>Numero di richieste in attesa di elaborazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Management.WebProcessStatistics.RequestsQueued%2A> valore è un indicatore utile del carico.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere il <xref:System.Web.Management.WebProcessStatistics.RequestsQueued%2A> valore.  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#10)]
 [!code-vb[System.Web.Management.WebProcessStatistics#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestsRejected">
      <MemberSignature Language="C#" Value="public int RequestsRejected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestsRejected" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.RequestsRejected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestsRejected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestsRejected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestsRejected : int" Usage="System.Web.Management.WebProcessStatistics.RequestsRejected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero delle richieste rifiutate.</summary>
        <value>Numero delle richieste rifiutate.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciò <xref:System.Web.Management.WebProcessStatistics.RequestsRejected%2A> valore è un indicatore utile di un sistema sovraccarico o non funziona correttamente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere il <xref:System.Web.Management.WebProcessStatistics.RequestsRejected%2A> valore.  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#11)]
 [!code-vb[System.Web.Management.WebProcessStatistics#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadCount">
      <MemberSignature Language="C#" Value="public int ThreadCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ThreadCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.ThreadCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ThreadCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadCount : int" Usage="System.Web.Management.WebProcessStatistics.ThreadCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il conteggio totale dei thread di processo.</summary>
        <value>Conteggio totale dei thread di processo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il conteggio fa riferimento per i thread gestiti e non gestiti.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere il <xref:System.Web.Management.WebProcessStatistics.ThreadCount%2A> valore.  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#12)]
 [!code-vb[System.Web.Management.WebProcessStatistics#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.WorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkingSet As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long WorkingSet { long get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkingSet : int64" Usage="System.Web.Management.WebProcessStatistics.WorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il working set del processo.</summary>
        <value>Working set del processo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come ottenere il <xref:System.Web.Management.WebProcessStatistics.WorkingSet%2A> valore.  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#13)]
 [!code-vb[System.Web.Management.WebProcessStatistics#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>