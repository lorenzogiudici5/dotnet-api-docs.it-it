<Type Name="WebAuthenticationSuccessAuditEvent" FullName="System.Web.Management.WebAuthenticationSuccessAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="be0ef76e0d2dbc91befb11a5c50d5f76e904a91f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540195" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebAuthenticationSuccessAuditEvent : System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAuthenticationSuccessAuditEvent extends System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAuthenticationSuccessAuditEvent&#xA;Inherits WebSuccessAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAuthenticationSuccessAuditEvent : System::Web::Management::WebSuccessAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebSuccessAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce informazioni relative agli eventi di autenticazione riusciti.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il monitoraggio dello stato ASP.NET consente di produzione e lo staff operativo per la gestione di applicazioni Web distribuite. Il <xref:System.Web.Management> dello spazio dei nomi contiene i tipi di evento di stato responsabili per comprimere i dati di stato di integrità dell'applicazione e i tipi di provider responsabili dell'elaborazione dei dati. Contiene inoltre i tipi di supporto che semplificano la gestione degli eventi di integrità.  
  
 L'elenco seguente descrive le funzionalità per i quali ASP.NET genera eventi di tipo <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>.  
  
> [!NOTE]
>  Per impostazione predefinita, che ASP.NET è configurato per registrare le condizioni di errore di controllo solo, la registrazione come esito positivo potrebbe esaurire le risorse di sistema.  È sempre possibile configurare il sistema per registrare le condizioni di esito positivo.  
  
-   Autenticazione basata su form. Vengono controllate le condizioni di esito positivo. Riusciti includono il nome utente è stato autenticato. Se si specifica, invece, non include il nome utente, poiché possono in genere il risultato di un ticket che non hanno superato la decrittografia o la convalida. Entrambi contengono l'indirizzo IP del client. Il codice di controllo di eventi correlati è <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>.  
  
-   Appartenenza al gruppo. Vengono controllate le condizioni di esito positivo. Controlli con esito positivo e negativo contengono il nome utente che è stato tentato. Nessuna forma di controllo conterrà la password è stata tentata, perché ciò comporterebbe il rischio di conservare una password valida nel log. Il codice di controllo di eventi correlati è <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>.  
  
 Quando un <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> viene generato, per impostazione predefinita viene aggiornato il contatore delle prestazioni di autenticazione riusciti gli eventi generati. Per visualizzare questo contatore delle prestazioni in Monitor di sistema (PerfMon), il **Aggiungi contatori** finestra selezionare **ASP.NET** nel **oggetto prestazione** elenco a discesa, seleziona il Contatore delle prestazioni generati eventi di successo di autenticazione e fare clic su di **Aggiungi** pulsante. Per ulteriori informazioni, vedere [mediante Monitor (PerfMon) con le applicazioni ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) su MSDN.  
  
> [!NOTE]
>  Nella maggior parte dei casi sarà possibile utilizzare i tipi di monitoraggio dello stato ASP.NET, come implementato e controllare il sistema di monitoraggio dello stato specificando i valori di `healthMonitoring` sezione di configurazione. È anche possibile derivare da tipi di monitoraggio dello stato per creare eventi personalizzati e i provider. Per un esempio di derivazione da di <xref:System.Web.Management.WebBaseEvent> classe, vedere l'esempio fornito in questo argomento.  
  
   
  
## Examples  
 Questo esempio di codice è costituito da due parti: un estratto del file di configurazione, seguito dal codice che illustra come personalizzare il <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> evento.  
  
 Di seguito sono un estratto del file di configurazione `provider` e `eventMappings` sezioni. Essi sono già impostati per impostazione predefinita. È l'unica cosa è necessario eseguire il programma di installazione per fornire il `rules` elemento il `healthMonitoring` sezione.  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <providers>  
      // Configure the provider to process   
      // the health events.  
      <add name="EventLogProvider"  
         type="System.Web.Management.EventLogWebEventProvider,  
         System.Web,Version=2.0.3600.0,Culture=neutral,  
         PublicKeyToken=b03f5f7f11d50a3a"/>  
    </providers>  
  
    <eventMappings>  
       <clear />  
       // Configure the custom event   
       // to handle the audit events.   
        <add name="SampleWebAuthenticationSuccessAuditEvent"   
          type="SamplesAspNet.SampleWebAuthenticationSuccessAuditEvent,  
          webauthsuccessaudit, Version=1.0.1735.23144, Culture=neutral,   
          PublicKeyToken=dd969eda3f3f6ae1, processorArchitecture=MSIL" />  
  
     </eventMappings>  
     <rules>  
       <clear/>  
       // Establish the connection between custom event   
       // and the provider that must process it.  
      <add name="Log Authentication Success Audits"   
        eventName="SampleWebAuthenticationFailureAuditEvent"  
        provider="EventLogProvider"   
        profile="Custom" />\  
     </rules>  
  
</healthMonitoring>  
```  
  
 Il codice seguente viene illustrato come personalizzare il <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> evento.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#1)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, System::String ^ nameToAuthenticate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Descrizione dell'evento.</param>
        <param name="eventSource">Oggetto che è l'origine dell'evento.</param>
        <param name="eventCode">Codice associato all'evento. Quando si implementa un evento personalizzato, il codice evento deve essere maggiore di <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="nameToAuthenticate">Nome dell'utente autenticato.</param>
        <summary>Inizializza la classe <see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" /> utilizzando i parametri specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato internamente dal sistema di monitoraggio dello stato di ASP.NET. Non verrà mai utilizzato per creare un'istanza di un <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> oggetto, ma è possibile chiamare questo costruttore quando si implementa un proprio tipo di evento che eredita da questa classe.  
  
> [!NOTE]
>  Il <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> costruttore quando si deriva dalla <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come personalizzare questo costruttore.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#2)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, System::String ^ nameToAuthenticate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Descrizione dell'evento.</param>
        <param name="eventSource">Oggetto che è l'origine dell'evento.</param>
        <param name="eventCode">Codice associato all'evento. Quando si implementa un evento personalizzato, il codice evento deve essere maggiore di <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Valore <see cref="T:System.Web.Management.WebEventCodes" /> che specifica l'identificatore dettagliato dell'evento.</param>
        <param name="nameToAuthenticate">Nome dell'utente autenticato.</param>
        <summary>Inizializza la classe <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> utilizzando i parametri specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato internamente dal sistema di monitoraggio dello stato di ASP.NET. Non verrà mai utilizzato per creare un'istanza di un <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> oggetto, ma è possibile chiamare questo costruttore quando si implementa un proprio tipo di evento che eredita da questa classe.  
  
> [!NOTE]
>  Il <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> costruttore quando si deriva dalla <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come personalizzare questo costruttore.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameToAuthenticate">
      <MemberSignature Language="C#" Value="public string NameToAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameToAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameToAuthenticate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameToAuthenticate { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'utente autenticato.</summary>
        <value>Nome dell'utente autenticato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Solo i controlli riusciti includono il nome dell'utente autenticato. I controlli di un errore non includono il nome utente, poiché possono in genere il risultato di convalida o la decrittografia non riuscita.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare la proprietà <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate%2A>.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
  </Members>
</Type>