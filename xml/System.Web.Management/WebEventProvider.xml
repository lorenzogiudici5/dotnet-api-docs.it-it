<Type Name="WebEventProvider" FullName="System.Web.Management.WebEventProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="799069c26794fe70fd9388c88e4c7cf32e0e01df" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51902969" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebEventProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebEventProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebEventProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebEventProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type WebEventProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce la classe base per i provider di eventi senza memorizzazione nel buffer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il monitoraggio dello stato ASP.NET consente al personale di produzione e le operazioni gestire le applicazioni Web distribuite. Il <xref:System.Web.Management> dello spazio dei nomi contiene i tipi di eventi di integrità responsabili della creazione del pacchetto di dati di stato di integrità dell'applicazione e i tipi di provider responsabili per l'elaborazione di tali dati. Contiene anche tipi di supporto che semplificano la gestione degli eventi di integrità.  
  
 Se si desidera personalizzare l'elaborazione di eventi di integrità, è possibile derivare il <xref:System.Web.Management.WebEventProvider> classe per creare un provider personalizzato.  
  
> [!NOTE]
>  Nella maggior parte dei casi sarà possibile utilizzare i tipi di monitoraggio dello stato ASP.NET come implementato e si controllerà il sistema di monitoraggio dello stato, specificare i valori nel `healthMonitoring` sezione di configurazione. È anche possibile derivare dai tipi di monitoraggio dello stato per creare eventi personalizzati e i provider personalizzati. Per un esempio della derivazione da di <xref:System.Web.Management.WebEventProvider> di classi, vedere l'esempio fornito in questo argomento.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come derivare dal <xref:System.Web.Management.WebEventProvider> classe per creare un provider personalizzato che scrive gli eventi configurati in un file locale per il quale devono essere concessi i diritti di accesso appropriato. In questo esempio di provider personalizzato è semplice e ha principalmente lo scopo è di offrire agli sviluppatori un controllo completo dei meccanismi di base. In uno scenario reale, è possibile utilizzare questo provider e soprattutto il provider di esempio memorizzato nel buffer disponibile all'indirizzo <xref:System.Web.Management.BufferedWebEventProvider>, come un probe preliminare del comportamento di un'applicazione. Questo può aiutare a durante la fase di progettazione per comprendere le informazioni disponibili. quindi in un secondo momento è possibile indirizzare tali informazioni a un provider di più complesso.  
  
 File di configurazione seguente porzione di codice illustra un `healthMonitoring` configurazione della sezione che consente ad ASP.NET di usare il provider personalizzato definito in precedenza per l'elaborazione di tutti gli eventi di monitoraggio dello stato.  
  
```  
<healthMonitoring   
  heartBeatInterval="0"   
  enabled="true">  
  
    <providers>  
  
      <add name="SampleWebEventProvider"   
        type="SamplesAspNet.SampleEventProvider,webeventprovider, Version=1.0.1773.33989, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL" />  
  
    </providers>  
  
    <rules>  
  
      <rule   
        name="Custom Event Provider"  
        eventName="All Events"  
        provider="SampleWebEventProvider"  
        profile="Default" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#1)]
 [!code-vb[System.Web.Management.WebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Panoramica di monitoraggio dell'integrità di ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c">Esempio: Provider di eventi personalizzato</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2">Installazione e configurazione dei provider ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Management.WebEventProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Management.WebEventProvider.%23ctor%2A> costruttore non è destinato a essere usato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il <xref:System.Web.Management.WebEventProvider.%23ctor%2A> costruttore quando si deriva dal <xref:System.Web.Management.WebEventProvider> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questo costruttore in un provider di eventi personalizzati.  
  
 [!code-csharp[System.Web.Management.WebEventProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#2)]
 [!code-vb[System.Web.Management.WebEventProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="webEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta gli eventi dal buffer del provider al log eventi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene chiamato questo metodo, tutti gli eventi nel buffer vengono spostati immediatamente dal buffer nel registro eventi, indipendentemente dalla quantità di tempo trascorso dall'ultima scrittura o il numero di eventi è nel buffer. L'ora dell'ultima scrittura viene reimpostato all'ora dell'operazione di svuotamento.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.Management.WebEventProvider.Flush%2A>.  
  
 [!code-csharp[System.Web.Management.WebEventProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#3)]
 [!code-vb[System.Web.Management.WebEventProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public abstract void ProcessEvent (System.Web.Management.WebBaseEvent raisedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent raisedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessEvent (raisedEvent As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessEvent(System::Web::Management::WebBaseEvent ^ raisedEvent);" />
      <MemberSignature Language="F#" Value="abstract member ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="webEventProvider.ProcessEvent raisedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raisedEvent" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="raisedEvent">Oggetto <see cref="T:System.Web.Management.WebBaseEvent" /> da elaborare.</param>
        <summary>Elabora l'evento passato al provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta del metodo che il monitoraggio dello stato ASP.NET viene chiamato per avviare l'elaborazione dell'evento.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come implementare il metodo <xref:System.Web.Management.WebEventProvider.ProcessEvent%2A>. Questo metodo Accoda la rappresentazione di stringa personalizzato dell'evento a un file di log specifico.  
  
 [!code-csharp[System.Web.Management.WebEventProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#5)]
 [!code-vb[System.Web.Management.WebEventProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public abstract void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="webEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue le attività associate all'arresto del provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le chiamate ASP.NET il <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> metodo quando il dominio applicazione che ospita l'applicazione Web. Il metodo viene chiamato per eseguire attività che consentirà all'applicazione di terminare normalmente, ad esempio la chiusura delle risorse.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.Management.WebEventProvider.Shutdown%2A>.  
  
 [!code-csharp[System.Web.Management.WebEventProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#4)]
 [!code-vb[System.Web.Management.WebEventProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>