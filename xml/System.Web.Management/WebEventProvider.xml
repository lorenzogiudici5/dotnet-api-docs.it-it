<Type Name="WebEventProvider" FullName="System.Web.Management.WebEventProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="552d2ee41fd9d4b1639131e902f83c17fac20224" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30538615" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebEventProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebEventProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebEventProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebEventProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce la classe base per i provider di eventi senza memorizzazione nel buffer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il monitoraggio dello stato ASP.NET consente di produzione e lo staff operativo per la gestione di applicazioni Web distribuite. Il <xref:System.Web.Management> spazio dei nomi contiene i tipi di evento di stato responsabili per comprimere i dati di stato di integrità dell'applicazione e i tipi di provider responsabili dell'elaborazione dei dati. Contiene inoltre i tipi di supporto che semplificano la gestione degli eventi di integrità.  
  
 Se si desidera personalizzare l'elaborazione di eventi di stato, è possibile derivare la <xref:System.Web.Management.WebEventProvider> classe per creare un provider personalizzato.  
  
> [!NOTE]
>  Nella maggior parte dei casi sarà possibile utilizzare i tipi di monitoraggio dello stato ASP.NET, come implementato e controllare il sistema di monitoraggio dello stato specificando i valori di `healthMonitoring` sezione di configurazione. È anche possibile derivare da tipi di monitoraggio dello stato per creare eventi personalizzati e i provider. Per un esempio di derivazione da di <xref:System.Web.Management.WebEventProvider> classe, vedere l'esempio fornito in questo argomento.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come derivare il <xref:System.Web.Management.WebEventProvider> classe per creare un provider personalizzato che scrive gli eventi configurati in un file locale per il quale devono essere concessi diritti di accesso appropriati. In questo esempio di provider personalizzato è semplice e lo scopo principale è di offrire agli sviluppatori un controllo completo dei meccanismi di base. In uno scenario reale, è possibile utilizzare questo provider e in particolare il provider di esempio con memorizzazione nel buffer disponibile all'indirizzo <xref:System.Web.Management.BufferedWebEventProvider>, come verifica preliminare del comportamento di un'applicazione. Questo può aiutare a durante la fase di progettazione per acquisire familiarità con le informazioni disponibili. quindi in un secondo momento è possibile utilizzare queste informazioni per un provider più complesso.  
  
 File di configurazione seguente porzione di codice illustra un `healthMonitoring` sezione di configurazione che consente ad ASP.NET di utilizzare il provider personalizzato definito in precedenza per elaborare tutti gli eventi di monitoraggio dello stato.  
  
```  
<healthMonitoring   
  heartBeatInterval="0"   
  enabled="true">  
  
    <providers>  
  
      <add name="SampleWebEventProvider"   
        type="SamplesAspNet.SampleEventProvider,webeventprovider, Version=1.0.1773.33989, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL" />  
  
    </providers>  
  
    <rules>  
  
      <rule   
        name="Custom Event Provider"  
        eventName="All Events"  
        provider="SampleWebEventProvider"  
        profile="Default" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#1)]
 [!code-vb[System.Web.Management.WebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Management.WebEventProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Management.WebEventProvider.%23ctor%2A> costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il <xref:System.Web.Management.WebEventProvider.%23ctor%2A> costruttore quando si deriva dalla <xref:System.Web.Management.WebEventProvider> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questo costruttore in un provider di eventi personalizzati.  
  
 [!code-csharp[System.Web.Management.WebEventProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#2)]
 [!code-vb[System.Web.Management.WebEventProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta gli eventi dal buffer del provider al log eventi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando questo metodo viene chiamato, tutti gli eventi nel buffer vengono immediatamente spostati dal buffer nel registro eventi, indipendentemente dal tempo trascorso dall'ultima scrittura o il numero di eventi è nel buffer. L'ora dell'ultima scrittura viene reimpostato per l'ora dell'operazione di svuotamento.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.Management.WebEventProvider.Flush%2A>.  
  
 [!code-csharp[System.Web.Management.WebEventProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#3)]
 [!code-vb[System.Web.Management.WebEventProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public abstract void ProcessEvent (System.Web.Management.WebBaseEvent raisedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent raisedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessEvent (raisedEvent As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessEvent(System::Web::Management::WebBaseEvent ^ raisedEvent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raisedEvent" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="raisedEvent">Oggetto <see cref="T:System.Web.Management.WebBaseEvent" /> da elaborare.</param>
        <summary>Elabora l'evento passato al provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta del metodo che il monitoraggio dello stato ASP.NET chiama per avviare l'elaborazione dell'evento.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come implementare il metodo <xref:System.Web.Management.WebEventProvider.ProcessEvent%2A>. Questo metodo Accoda la rappresentazione di stringa personalizzata dell'evento a un file di log specifico.  
  
 [!code-csharp[System.Web.Management.WebEventProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#5)]
 [!code-vb[System.Web.Management.WebEventProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public abstract void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue le attività associate all'arresto del provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET chiama il <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> metodo quando il dominio di applicazione che ospita l'applicazione Web. Il metodo viene chiamato per eseguire attività che consentono l'applicazione di terminare normalmente, ad esempio la chiusura delle risorse.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Web.Management.WebEventProvider.Shutdown%2A>.  
  
 [!code-csharp[System.Web.Management.WebEventProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#4)]
 [!code-vb[System.Web.Management.WebEventProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>