<Type Name="WebAuthenticationFailureAuditEvent" FullName="System.Web.Management.WebAuthenticationFailureAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="20f2b2f2f2b60fc8ab17f4aeebb341646158bfcf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36599939" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebAuthenticationFailureAuditEvent : System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAuthenticationFailureAuditEvent extends System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAuthenticationFailureAuditEvent&#xA;Inherits WebFailureAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAuthenticationFailureAuditEvent : System::Web::Management::WebFailureAuditEvent" />
  <TypeSignature Language="F#" Value="type WebAuthenticationFailureAuditEvent = class&#xA;    inherit WebFailureAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebFailureAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce informazioni sugli errori di autenticazione ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nell'elenco seguente vengono descritte le funzionalità per il quale <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> vengono generati eventi per impostazione predefinita da ASP.NET.  
  
> [!NOTE]
>  Per impostazione predefinita che ASP.NET è configurato per registrare le condizioni di errore di controllo condizioni di esito positivo solo, come la registrazione possono esaurire le risorse di sistema. È sempre possibile configurare il sistema per registrare le condizioni di esito positivo.  
  
-   Autenticazione basata su form. Mentre riusciti includono il nome utente che è stato autenticato; riuscite non includono il nome utente, poiché sono in genere il risultato di un ticket che non hanno superato la decrittografia o la convalida. Entrambi contengono l'indirizzo IP del client. Il codice di controllo di eventi correlati è <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>.  
  
-   Appartenenza al gruppo. I controlli di esito positivo e negativo contengono il nome dell'utente che è stata tentata. Nessuna forma di controllo conterrà la password che è stata tentata, perché ciò comporterebbe il rischio di persistenza di una password valida nel log. Il codice di controllo di eventi correlati è <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>.  
  
 Quando un <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> viene generato, per impostazione predefinita viene aggiornato il contatore delle prestazioni generati eventi di errore di controllo autenticazione. Per visualizzare questo contatore delle prestazioni in Monitor di sistema (PerfMon), nelle **Aggiungi contatori** finestra selezionare `ASP.NET` nel **prestazioni** oggetto nell'elenco, seleziona il ** Gli eventi di errore di autenticazione generati** contatore delle prestazioni e scegliere il **Aggiungi** pulsante. Per altre informazioni, vedere [mediante Monitor (PerfMon) con le applicazioni ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) su MSDN.  
  
> [!NOTE]
>  Nella maggior parte dei casi è possibile utilizzare i tipi di monitoraggio ASP.NET come implementato e controllare il sistema di monitoraggio integrità specificando i valori nel `healthMonitoring` sezione di configurazione. È anche possibile derivare i tipi di monitoraggio dello stato per creare eventi personalizzati e i provider personalizzati. Per un esempio di derivazione da di <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> classe, vedere l'esempio fornito in questo argomento.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato l'utilizzo della classe <xref:System.Web.Management.WebAuthenticationFailureAuditEvent>.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#1)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationFailureAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationFailureAuditEvent : string * obj * int * string -&gt; System.Web.Management.WebAuthenticationFailureAuditEvent" Usage="new System.Web.Management.WebAuthenticationFailureAuditEvent (message, eventSource, eventCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Descrizione dell'evento.</param>
        <param name="eventSource">Oggetto che è l'origine dell'evento.</param>
        <param name="eventCode">Valore <see cref="T:System.Web.Management.WebEventCodes" /> associato all'evento.</param>
        <param name="nameToAuthenticate">Nome dell'utente da autenticare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> con i parametri di evento specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> costruttore quando si deriva dal <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come personalizzare questo costruttore.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#2)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationFailureAuditEvent : string * obj * int * int * string -&gt; System.Web.Management.WebAuthenticationFailureAuditEvent" Usage="new System.Web.Management.WebAuthenticationFailureAuditEvent (message, eventSource, eventCode, eventDetailCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Descrizione dell'evento.</param>
        <param name="eventSource">Oggetto che è l'origine dell'evento.</param>
        <param name="eventCode">Codice associato all'evento. Quando si implementa un evento personalizzato, il codice evento deve essere maggiore di <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Valore <see cref="T:System.Web.Management.WebEventCodes" /> che specifica l'identificatore dettagliato dell'evento.</param>
        <param name="nameToAuthenticate">Nome dell'utente da autenticare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> con i parametri di evento specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> costruttore quando si deriva dal <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come personalizzare questo costruttore.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameToAuthenticate">
      <MemberSignature Language="C#" Value="public string NameToAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameToAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameToAuthenticate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameToAuthenticate { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameToAuthenticate : string" Usage="System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'utente da autenticare.</summary>
        <value>Nome dell'utente da autenticare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Solo i controlli riusciti devono includere il nome dell'utente autenticato. I controlli di errore non devono includere il nome utente, poiché sono in genere il risultato di convalida o la decrittografia non riuscita.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate%2A> proprietà.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
  </Members>
</Type>