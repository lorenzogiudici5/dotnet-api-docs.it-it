<Type Name="SqlServices" FullName="System.Web.Management.SqlServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="117312e8c46f758f1cf48dc49e17eae4969321be" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540165" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class SqlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.SqlServices" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Supporta l'installazione e la rimozione di elementi di database SQL Server delle funzionalità ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare i database di SQL Server per archiviare le informazioni per le funzionalità ASP.NET, ad esempio lo stato della sessione, l'appartenenza, la personalizzazione di Web part e la gestione dei ruoli. Queste funzionalità richiedono che il database di SQL Server a cui si è connessi sia configurato correttamente prima dell'uso. È possibile utilizzare lo strumento di registrazione SQL ASP.NET (aspnet_regsql.exe) per eseguire questa operazione, oppure è possibile chiamare i metodi statici esposti dalla <xref:System.Web.Management.SqlServices> classe direttamente dal codice.  
  
> [!NOTE]
>  Utilizzando lo strumento aspnet_regsql.exe o <xref:System.Web.Management.SqlServices> classe per configurare il database solo imposta backup del database che verrà utilizzato il provider con le tabelle appropriate, trigger e stored procedure. Configurazione del database in questo modo non modifica i file di configurazione per specificare che queste funzioni utilizzano i provider SQL per questi servizi.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato l'utilizzo della classe <xref:System.Web.Management.SqlServices>.  
  
 [!code-csharp[System.Web.Management.SqlServices#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#1)]
 [!code-vb[System.Web.Management.SqlServices#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateApplicationServicesScripts">
      <MemberSignature Language="C#" Value="public static string GenerateApplicationServicesScripts (bool install, System.Web.Management.SqlFeatures features, string database);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateApplicationServicesScripts(bool install, valuetype System.Web.Management.SqlFeatures features, string database) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.GenerateApplicationServicesScripts(System.Boolean,System.Web.Management.SqlFeatures,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateApplicationServicesScripts (install As Boolean, features As SqlFeatures, database As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateApplicationServicesScripts(bool install, System::Web::Management::SqlFeatures features, System::String ^ database);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="install" Type="System.Boolean" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="install">
          <see langword="true" /> per generare uno script che installa le funzionalità specificate. <see langword="false" /> per generare uno script che rimuove le funzionalità.</param>
        <param name="features">Combinazione bit per bit dei valori <see cref="T:System.Web.Management.SqlFeatures" /> che specifica le funzionalità per cui devono essere generati script.</param>
        <param name="database">Nome del database SQL Server da utilizzare negli script generati.</param>
        <summary>Genera gli script SQL per le funzionalità selezionate. Gli script faranno riferimento al database indicato dall'apposito parametro.</summary>
        <returns>Restituisce il codice di script generato.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSessionStateScripts">
      <MemberSignature Language="C#" Value="public static string GenerateSessionStateScripts (bool install, System.Web.Management.SessionStateType type, string customDatabase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateSessionStateScripts(bool install, valuetype System.Web.Management.SessionStateType type, string customDatabase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.GenerateSessionStateScripts(System.Boolean,System.Web.Management.SessionStateType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSessionStateScripts (install As Boolean, type As SessionStateType, customDatabase As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateSessionStateScripts(bool install, System::Web::Management::SessionStateType type, System::String ^ customDatabase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="install" Type="System.Boolean" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
        <Parameter Name="customDatabase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="install">
          <see langword="true" /> per generare uno script che installa le funzionalità specificate. <see langword="false" /> per generare uno script che rimuove le funzionalità.</param>
        <param name="type">Uno dei valori <see cref="T:System.Web.Management.SessionStateType" /> che specifica il tipo di stato sessione per cui devono essere generati script.</param>
        <param name="customDatabase">Nome del database SQL Server da utilizzare negli script generati.</param>
        <summary>Genera lo script SQL per l'installazione o la rimozione dello stato sessione. Lo script farà riferimento al database indicato dall'apposito parametro.</summary>
        <returns>Restituisce il codice di script generato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Il tipo è <see langword="Custom" /> e non è stato fornito il valore <paramref name="customDatabase" /> oppure il tipo è <see langword="Temporary" /> o <see langword="Persisted" /> e il valore <paramref name="customDatabase" /> è null.</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Install">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Installa i componenti per le funzionalità ASP.NET specificate in un database SQL Server.</summary>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public static void Install (string server, string database, System.Web.Management.SqlFeatures features);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Install(string server, string database, valuetype System.Web.Management.SqlFeatures features) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Install(System.String,System.String,System.Web.Management.SqlFeatures)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Install (server As String, database As String, features As SqlFeatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Install(System::String ^ server, System::String ^ database, System::Web::Management::SqlFeatures features);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
      </Parameters>
      <Docs>
        <param name="server">Server database in cui installare le funzionalità.</param>
        <param name="database">Database in cui installare le funzionalità.</param>
        <param name="features">Combinazione bit per bit dei valori <see cref="T:System.Web.Management.SqlFeatures" /> che specifica le funzionalità da installare.</param>
        <summary>Installa i componenti per le funzionalità ASP.NET selezionate in un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `database` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> verrà utilizzato il database predefinito, `aspnetdb`. Se `server` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> utilizzerà l'istanza predefinita di SQL Server.  
  
> [!NOTE]
>  La connessione al server di database viene eseguita tramite una connessione trusted.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.SqlServices.Install%28System.String%2CSystem.String%2CSystem.Web.Management.SqlFeatures%29> metodo la <xref:System.Web.Management.SqlServices> classe.  
  
 [!code-csharp[System.Web.Management.SqlServices#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#4)]
 [!code-vb[System.Web.Management.SqlServices#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.ArgumentException">Il valore <paramref name="features" /> contiene uno o più flag non validi.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione.</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public static void Install (string database, System.Web.Management.SqlFeatures features, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Install(string database, valuetype System.Web.Management.SqlFeatures features, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Install(System.String,System.Web.Management.SqlFeatures,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Install (database As String, features As SqlFeatures, connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Install(System::String ^ database, System::Web::Management::SqlFeatures features, System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">Database in cui installare le funzionalità.</param>
        <param name="features">Combinazione bit per bit dei valori <see cref="T:System.Web.Management.SqlFeatures" /> che specifica le funzionalità da installare.</param>
        <param name="connectionString">Stringa di connessione da utilizzare. La stringa di connessione viene utilizzata esclusivamente per stabilire una connessione al server database.  Se si specifica un database nella stringa di connessione non si ottiene alcun risultato.</param>
        <summary>Installa i componenti per i servizi ASP.NET selezionati in un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `database` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> verrà utilizzato il database predefinito, `aspnetdb`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.SqlServices.Install%28System.String%2CSystem.Web.Management.SqlFeatures%2CSystem.String%29> metodo la <xref:System.Web.Management.SqlServices> classe.  
  
 [!code-csharp[System.Web.Management.SqlServices#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#2)]
 [!code-vb[System.Web.Management.SqlServices#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.ArgumentException">Il valore <paramref name="features" /> contiene uno o più flag non validi.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione.</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public static void Install (string server, string user, string password, string database, System.Web.Management.SqlFeatures features);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Install(string server, string user, string password, string database, valuetype System.Web.Management.SqlFeatures features) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Install(System.String,System.String,System.String,System.String,System.Web.Management.SqlFeatures)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Install (server As String, user As String, password As String, database As String, features As SqlFeatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Install(System::String ^ server, System::String ^ user, System::String ^ password, System::String ^ database, System::Web::Management::SqlFeatures features);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
      </Parameters>
      <Docs>
        <param name="server">Server database in cui installare le funzionalità.</param>
        <param name="user">Nome utente da utilizzare per la connessione al database.</param>
        <param name="password">Password da utilizzare per la connessione al database.</param>
        <param name="database">Database in cui installare le funzionalità.</param>
        <param name="features">Combinazione bit per bit dei valori <see cref="T:System.Web.Management.SqlFeatures" /> che specifica le funzionalità da installare.</param>
        <summary>Installa i componenti per le funzionalità ASP.NET selezionate in un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `database` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> verrà utilizzato il database predefinito, `aspnetdb`. Se `server` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> utilizzerà l'istanza predefinita di SQL Server.  
  
> [!NOTE]
>  La connessione al server di database viene eseguita tramite una connessione trusted.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.ArgumentException">Il valore <paramref name="features" /> contiene uno o più flag non validi.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione.</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InstallSessionState">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Installa i componenti per lo stato sessione di ASP.NET in un database SQL Server.</summary>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InstallSessionState">
      <MemberSignature Language="C#" Value="public static void InstallSessionState (string server, string customDatabase, System.Web.Management.SessionStateType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InstallSessionState(string server, string customDatabase, valuetype System.Web.Management.SessionStateType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.InstallSessionState(System.String,System.String,System.Web.Management.SessionStateType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InstallSessionState (server As String, customDatabase As String, type As SessionStateType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InstallSessionState(System::String ^ server, System::String ^ customDatabase, System::Web::Management::SessionStateType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
      </Parameters>
      <Docs>
        <param name="server">Istanza di SQL Server in cui installare i componenti per lo stato sessione.</param>
        <param name="customDatabase">Database in cui installare i componenti per lo stato sessione.</param>
        <param name="type">Uno dei valori <see cref="T:System.Web.Management.SessionStateType" /> che specifica il tipo di stato sessione da installare.</param>
        <summary>Installa i componenti per lo stato sessione di ASP.NET in un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `server` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> utilizzerà l'istanza predefinita di SQL Server.  
  
> [!NOTE]
>  La connessione al server di database viene eseguita tramite una connessione trusted.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.SqlServices.InstallSessionState%2A> metodo la <xref:System.Web.Management.SqlServices> classe.  
  
 [!code-csharp[System.Web.Management.SqlServices#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#10)]
 [!code-vb[System.Web.Management.SqlServices#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il tipo è <see langword="Custom" /> e non è stato fornito il valore <paramref name="customDatabase" /> oppure il tipo è <see langword="Temporary" /> o <see langword="Persisted" /> e il valore <paramref name="customDatabase" /> è null.</exception>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione.</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <Member MemberName="InstallSessionState">
      <MemberSignature Language="C#" Value="public static void InstallSessionState (string customDatabase, System.Web.Management.SessionStateType type, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InstallSessionState(string customDatabase, valuetype System.Web.Management.SessionStateType type, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.InstallSessionState(System.String,System.Web.Management.SessionStateType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InstallSessionState (customDatabase As String, type As SessionStateType, connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InstallSessionState(System::String ^ customDatabase, System::Web::Management::SessionStateType type, System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="customDatabase">Database in cui installare i componenti per lo stato sessione.</param>
        <param name="type">Uno dei valori <see cref="T:System.Web.Management.SessionStateType" /> che specifica il tipo di stato sessione da installare.</param>
        <param name="connectionString">Stringa di connessione da utilizzare. La stringa di connessione viene utilizzata esclusivamente per stabilire una connessione al server database.  Se si specifica un database nella stringa di connessione non si ottiene alcun risultato.</param>
        <summary>Installa i componenti per lo stato sessione di ASP.NET in un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.SqlServices.InstallSessionState%28System.String%2CSystem.Web.Management.SessionStateType%2CSystem.String%29> metodo la <xref:System.Web.Management.SqlServices> classe.  
  
 [!code-csharp[System.Web.Management.SqlServices#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#8)]
 [!code-vb[System.Web.Management.SqlServices#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il tipo è <see langword="Custom" /> e non è stato fornito il valore <paramref name="customDatabase" /> oppure il tipo è <see langword="Temporary" /> o <see langword="Persisted" /> e il valore <paramref name="customDatabase" /> è null.</exception>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione.</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <Member MemberName="InstallSessionState">
      <MemberSignature Language="C#" Value="public static void InstallSessionState (string server, string user, string password, string customDatabase, System.Web.Management.SessionStateType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InstallSessionState(string server, string user, string password, string customDatabase, valuetype System.Web.Management.SessionStateType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.InstallSessionState(System.String,System.String,System.String,System.String,System.Web.Management.SessionStateType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InstallSessionState (server As String, user As String, password As String, customDatabase As String, type As SessionStateType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InstallSessionState(System::String ^ server, System::String ^ user, System::String ^ password, System::String ^ customDatabase, System::Web::Management::SessionStateType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
      </Parameters>
      <Docs>
        <param name="server">Istanza di SQL Server in cui installare i componenti per lo stato sessione.</param>
        <param name="user">Nome utente da utilizzare per la connessione al database.</param>
        <param name="password">Password da utilizzare per la connessione al database.</param>
        <param name="customDatabase">Database in cui installare i componenti per lo stato sessione.</param>
        <param name="type">Uno dei valori <see cref="T:System.Web.Management.SessionStateType" /> che specifica il tipo di stato sessione da installare.</param>
        <summary>Installa i componenti per lo stato sessione di ASP.NET in un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `server` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> utilizzerà l'istanza predefinita di SQL Server.  
  
> [!NOTE]
>  La connessione al server di database viene eseguita tramite una connessione trusted.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.SqlServices.InstallSessionState%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.Web.Management.SessionStateType%29> metodo la <xref:System.Web.Management.SqlServices> classe.  
  
 [!code-csharp[System.Web.Management.SqlServices#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#12)]
 [!code-vb[System.Web.Management.SqlServices#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il tipo è <see langword="Custom" /> e non è stato fornito il valore <paramref name="customDatabase" /> oppure il tipo è <see langword="Temporary" /> o <see langword="Persisted" /> e il valore <paramref name="customDatabase" /> è null.</exception>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione.</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Uninstall">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rimuove i componenti per le funzionalità ASP.NET selezionate da un database SQL Server.</summary>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public static void Uninstall (string server, string database, System.Web.Management.SqlFeatures features);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uninstall(string server, string database, valuetype System.Web.Management.SqlFeatures features) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Uninstall(System.String,System.String,System.Web.Management.SqlFeatures)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Uninstall (server As String, database As String, features As SqlFeatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Uninstall(System::String ^ server, System::String ^ database, System::Web::Management::SqlFeatures features);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
      </Parameters>
      <Docs>
        <param name="server">Istanza di SQL Server da cui rimuovere le funzionalità.</param>
        <param name="database">Database da cui rimuovere le funzionalità.</param>
        <param name="features">Combinazione bit per bit dei valori <see cref="T:System.Web.Management.SqlFeatures" /> che specifica le funzionalità da rimuovere.</param>
        <summary>Rimuove i componenti per le funzionalità ASP.NET selezionate da un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `database` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> verrà utilizzato il database predefinito, `aspnetdb`. Se `server` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> utilizzerà l'istanza predefinita di SQL Server.  
  
> [!NOTE]
>  La connessione al server di database viene eseguita tramite una connessione trusted.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.SqlServices.Uninstall%28System.String%2CSystem.String%2CSystem.Web.Management.SqlFeatures%29> metodo la <xref:System.Web.Management.SqlServices> classe.  
  
 [!code-csharp[System.Web.Management.SqlServices#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#5)]
 [!code-vb[System.Web.Management.SqlServices#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.ArgumentException">Il valore <paramref name="features" /> contiene uno o più flag non validi.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione, è stata tentata la disinstallazione da un database inesistente oppure una o più tabelle associate alle funzionalità nel database specificato contenevano dati.</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public static void Uninstall (string database, System.Web.Management.SqlFeatures features, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uninstall(string database, valuetype System.Web.Management.SqlFeatures features, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Uninstall(System.String,System.Web.Management.SqlFeatures,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Uninstall (database As String, features As SqlFeatures, connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Uninstall(System::String ^ database, System::Web::Management::SqlFeatures features, System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">Database da cui rimuovere le funzionalità.</param>
        <param name="features">Combinazione bit per bit dei valori <see cref="T:System.Web.Management.SqlFeatures" /> che specifica le funzionalità da rimuovere.</param>
        <param name="connectionString">Stringa di connessione da utilizzare. La stringa di connessione viene utilizzata esclusivamente per stabilire una connessione al server database. Se si specifica un database nella stringa di connessione non si ottiene alcun risultato.</param>
        <summary>Rimuove i componenti per le funzionalità ASP.NET selezionate da un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `database` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> verrà utilizzato il database predefinito `aspnetdb`.  
  
> [!NOTE]
>  La connessione al server di database viene eseguita tramite una connessione trusted.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.SqlServices.Uninstall%2A> metodo il <xref:System.Web.Management.SqlServices> tipo.  
  
 [!code-csharp[System.Web.Management.SqlServices#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#3)]
 [!code-vb[System.Web.Management.SqlServices#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.ArgumentException">Il valore <paramref name="features" /> contiene uno o più flag non validi.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione, è stata tentata la disinstallazione da un database inesistente oppure una o più tabelle associate alle funzionalità nel database specificato contenevano dati.</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public static void Uninstall (string server, string user, string password, string database, System.Web.Management.SqlFeatures features);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uninstall(string server, string user, string password, string database, valuetype System.Web.Management.SqlFeatures features) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Uninstall(System.String,System.String,System.String,System.String,System.Web.Management.SqlFeatures)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Uninstall (server As String, user As String, password As String, database As String, features As SqlFeatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Uninstall(System::String ^ server, System::String ^ user, System::String ^ password, System::String ^ database, System::Web::Management::SqlFeatures features);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
      </Parameters>
      <Docs>
        <param name="server">Istanza di SQL Server da cui rimuovere le funzionalità.</param>
        <param name="user">Nome utente da utilizzare per la connessione al database.</param>
        <param name="password">Password da utilizzare per la connessione al database.</param>
        <param name="database">Database da cui rimuovere le funzionalità.</param>
        <param name="features">Combinazione bit per bit dei valori <see cref="T:System.Web.Management.SqlFeatures" /> che specifica le funzionalità da rimuovere.</param>
        <summary>Rimuove i componenti per le funzionalità ASP.NET selezionate da un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `database` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> verrà utilizzato il database predefinito, `aspnetdb`. Se `server` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> utilizzerà l'istanza predefinita di SQL Server.  
  
> [!NOTE]
>  La connessione al server di database viene eseguita tramite una connessione trusted.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.ArgumentException">Il valore <paramref name="features" /> contiene uno o più flag non validi.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione, è stata tentata la disinstallazione da un database inesistente oppure una o più tabelle associate alle funzionalità nel database specificato contenevano dati.</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UninstallSessionState">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rimuove i componenti per lo stato sessione di ASP.NET da un database SQL Server.</summary>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="UninstallSessionState">
      <MemberSignature Language="C#" Value="public static void UninstallSessionState (string server, string customDatabase, System.Web.Management.SessionStateType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallSessionState(string server, string customDatabase, valuetype System.Web.Management.SessionStateType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.UninstallSessionState(System.String,System.String,System.Web.Management.SessionStateType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallSessionState (server As String, customDatabase As String, type As SessionStateType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallSessionState(System::String ^ server, System::String ^ customDatabase, System::Web::Management::SessionStateType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
      </Parameters>
      <Docs>
        <param name="server">Istanza di SQL Server da cui rimuovere i componenti dello stato sessione.</param>
        <param name="customDatabase">Database da cui rimuovere i componenti dello stato sessione.</param>
        <param name="type">Uno dei valori <see cref="T:System.Web.Management.SessionStateType" /> che specifica il tipo di stato sessione da rimuovere.</param>
        <summary>Rimuove i componenti per lo stato sessione di ASP.NET da un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `server` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> utilizzerà l'istanza predefinita di SQL Server.  
  
 **Nota** la connessione al server di database viene eseguita con una connessione trusted.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.SqlServices.UninstallSessionState%2A> metodo la <xref:System.Web.Management.SqlServices> classe.  
  
 [!code-csharp[System.Web.Management.SqlServices#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#11)]
 [!code-vb[System.Web.Management.SqlServices#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il tipo è <see langword="Custom" /> e non è stato fornito il valore <paramref name="customDatabase" /> oppure il tipo è <see langword="Temporary" /> o <see langword="Persisted" /> e il valore <paramref name="customDatabase" /> è null.</exception>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione.</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <Member MemberName="UninstallSessionState">
      <MemberSignature Language="C#" Value="public static void UninstallSessionState (string customDatabase, System.Web.Management.SessionStateType type, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallSessionState(string customDatabase, valuetype System.Web.Management.SessionStateType type, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.UninstallSessionState(System.String,System.Web.Management.SessionStateType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallSessionState (customDatabase As String, type As SessionStateType, connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallSessionState(System::String ^ customDatabase, System::Web::Management::SessionStateType type, System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="customDatabase">Database da cui rimuovere i componenti dello stato sessione.</param>
        <param name="type">Uno dei valori <see cref="T:System.Web.Management.SessionStateType" /> che specifica il tipo di stato sessione da rimuovere.</param>
        <param name="connectionString">Stringa di connessione da utilizzare.  La stringa di connessione viene utilizzata esclusivamente per stabilire una connessione al server database.  Se si specifica un database nella stringa di connessione non si ottiene alcun risultato.</param>
        <summary>Rimuove i componenti per lo stato sessione di ASP.NET da un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.SqlServices.UninstallSessionState%28System.String%2CSystem.String%2CSystem.Web.Management.SessionStateType%29> metodo la <xref:System.Web.Management.SqlServices> classe.  
  
 [!code-csharp[System.Web.Management.SqlServices#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#9)]
 [!code-vb[System.Web.Management.SqlServices#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il tipo è <see langword="Custom" /> e non è stato fornito il valore <paramref name="customDatabase" /> oppure il tipo è <see langword="Temporary" /> o <see langword="Persisted" /> e il valore <paramref name="customDatabase" /> è null.</exception>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione.</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <Member MemberName="UninstallSessionState">
      <MemberSignature Language="C#" Value="public static void UninstallSessionState (string server, string user, string password, string customDatabase, System.Web.Management.SessionStateType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallSessionState(string server, string user, string password, string customDatabase, valuetype System.Web.Management.SessionStateType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.UninstallSessionState(System.String,System.String,System.String,System.String,System.Web.Management.SessionStateType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallSessionState (server As String, user As String, password As String, customDatabase As String, type As SessionStateType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallSessionState(System::String ^ server, System::String ^ user, System::String ^ password, System::String ^ customDatabase, System::Web::Management::SessionStateType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
      </Parameters>
      <Docs>
        <param name="server">Istanza di SQL Server da cui rimuovere i componenti dello stato sessione.</param>
        <param name="user">Nome utente da utilizzare per la connessione al database.</param>
        <param name="password">Password da utilizzare per la connessione al database.</param>
        <param name="customDatabase">Database da cui rimuovere i componenti dello stato sessione.</param>
        <param name="type">Uno dei valori <see cref="T:System.Web.Management.SessionStateType" /> che specifica il tipo di stato sessione da rimuovere.</param>
        <summary>Rimuove i componenti per lo stato sessione di ASP.NET da un database SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `server` è `null` oppure non è stato fornito, <xref:System.Web.Management.SqlServices> utilizzerà l'istanza predefinita di SQL Server.  
  
 **Nota** la connessione al server di database viene eseguita con una connessione trusted.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Management.SqlServices.UninstallSessionState%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.Web.Management.SessionStateType%29> metodo la <xref:System.Web.Management.SqlServices> classe.  
  
 [!code-csharp[System.Web.Management.SqlServices#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#13)]
 [!code-vb[System.Web.Management.SqlServices#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il tipo è <see langword="Custom" /> e non è stato fornito il valore <paramref name="customDatabase" /> oppure il tipo è <see langword="Temporary" /> o <see langword="Persisted" /> e il valore <paramref name="customDatabase" /> è null.</exception>
        <exception cref="T:System.Web.HttpException">Impossibile connettersi al server database specificato.</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">È stata generata un'eccezione durante l'elaborazione delle istruzioni SQL necessarie per l'operazione.</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
  </Members>
</Type>