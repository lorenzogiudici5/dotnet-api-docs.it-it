<Type Name="TypedAsyncResult&lt;T&gt;" FullName="System.IdentityModel.TypedAsyncResult&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class TypedAsyncResult&lt;T&gt; : System.IdentityModel.AsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypedAsyncResult`1&lt;T&gt; extends System.IdentityModel.AsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.TypedAsyncResult`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TypedAsyncResult(Of T)&#xA;Inherits AsyncResult" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class TypedAsyncResult : System::IdentityModel::AsyncResult" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.IdentityModel.AsyncResult</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="00006-101">Tipo del risultato.</span><span class="sxs-lookup"><span data-stu-id="00006-101">The type of the result.</span></span></typeparam>
    <summary><span data-ttu-id="00006-102">Implementazione concreta di <see cref="T:System.IdentityModel.AsyncResult" /> che eseguirà il wrapping del risultato <see cref="T:System.Type" /> e lo restituirà quando il metodo di <see cref="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" /> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="00006-102">A concrete implementation of <see cref="T:System.IdentityModel.AsyncResult" /> that will wrap the result <see cref="T:System.Type" /> and return it when the <see cref="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" /> method is called.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00006-103">Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.TypedAsyncResult`1" />.</span><span class="sxs-lookup"><span data-stu-id="00006-103">Initializes a new instance of the <see cref="T:System.IdentityModel.TypedAsyncResult`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypedAsyncResult (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypedAsyncResult(System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="00006-104">Oggetto definito dall'utente che qualifica o contiene informazioni sull'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="00006-104">A user-defined object that qualifies or contains information about an asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="00006-105">Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.TypedAsyncResult`1" /> con un oggetto stato.</span><span class="sxs-lookup"><span data-stu-id="00006-105">Initializes a new instance of the <see cref="T:System.IdentityModel.TypedAsyncResult`1" /> class that has a state object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00006-106">Utilizzare questo costruttore se la <xref:System.IdentityModel.TypedAsyncResult%601> istanza non è necessario un delegato di callback.</span><span class="sxs-lookup"><span data-stu-id="00006-106">Use this constructor if your <xref:System.IdentityModel.TypedAsyncResult%601> instance does not need a callback delegate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypedAsyncResult (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As AsyncCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypedAsyncResult(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="00006-107">Metodo da chiamare quando l'operazione asincrona viene completata.</span><span class="sxs-lookup"><span data-stu-id="00006-107">The method to be called when the asynchronous operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="00006-108">Oggetto definito dall'utente che qualifica o contiene informazioni sull'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="00006-108">A user-defined object that qualifies or contains information about an asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="00006-109">Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.TypedAsyncResult`1" /> che include un delegato di callback e un oggetto stato.</span><span class="sxs-lookup"><span data-stu-id="00006-109">Initializes a new instance of the <see cref="T:System.IdentityModel.TypedAsyncResult`1" /> class that has a callback delegate and a state object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Complete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00006-110">Chiamato per completare l'operazione in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="00006-110">Called to complete the asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (T result, bool completedSynchronously);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete(!T result, bool completedSynchronously) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (result As T, completedSynchronously As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(T result, bool completedSynchronously);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" />
        <Parameter Name="completedSynchronously" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="00006-111">Risultato da includere.</span><span class="sxs-lookup"><span data-stu-id="00006-111">The result to be wrapped.</span></span></param>
        <param name="completedSynchronously">
          <span data-ttu-id="00006-112"><see langword="true" /> se l'operazione asincrona è stata completata in modo sincrono, in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="00006-112"><see langword="true" /> if the asynchronous operation completed synchronously; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="00006-113">Chiamare questa versione di completo quando l'operazione asincrona viene completata e non è stata rilevata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="00006-113">Call this version of complete when your asynchronous operation is complete and no exception was encountered.</span></span> <span data-ttu-id="00006-114">Aggiorna lo stato dell'operazione e notifica il callback.</span><span class="sxs-lookup"><span data-stu-id="00006-114">It updates the state of the operation and notifies the callback.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (T result, bool completedSynchronously, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete(!T result, bool completedSynchronously, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(T result, bool completedSynchronously, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" />
        <Parameter Name="completedSynchronously" Type="System.Boolean" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="00006-115">Risultato da includere.</span><span class="sxs-lookup"><span data-stu-id="00006-115">The result to be wrapped.</span></span></param>
        <param name="completedSynchronously">
          <span data-ttu-id="00006-116"><see langword="true" /> se l'operazione asincrona è stata completata in modo sincrono, in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="00006-116"><see langword="true" /> if the asynchronous operation completed synchronously; otherwise <see langword="false" />.</span></span></param>
        <param name="exception"><span data-ttu-id="00006-117">Eccezione che si è verificata durante l'elaborazione dell'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="00006-117">The exception that occurred during the processing of the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="00006-118">Chiamare questa versione di completo se viene generata un'eccezione durante l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="00006-118">Call this version of complete if you raise an exception during processing.</span></span> <span data-ttu-id="00006-119">Oltre a notificare il callback, consente di acquisire l'eccezione e la archivia in modo da poterla generare durante la chiamata al metodo <see cref="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" />.</span><span class="sxs-lookup"><span data-stu-id="00006-119">In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <see cref="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public static T End (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !T End(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function End (result As IAsyncResult) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static T End(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="00006-120"><see cref="T:System.IAsyncResult" /> che rappresenta lo stato di un'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="00006-120">The <see cref="T:System.IAsyncResult" /> representing the status of an asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="00006-121">Chiamare End quando la funzione End per l'operazione asincrona viene completata.</span><span class="sxs-lookup"><span data-stu-id="00006-121">End should be called when the End function for the asynchronous operation is complete.</span></span> <span data-ttu-id="00006-122">Garantisce che l'operazione asincrona venga completata ed esegue alcune convalide comuni.</span><span class="sxs-lookup"><span data-stu-id="00006-122">It ensures the asynchronous operation is complete, and does some common validation.</span></span></summary>
        <returns><span data-ttu-id="00006-123">Risultato tipizzato dell'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="00006-123">The typed result of the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public T Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Result" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.TypedAsyncResult`1.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Result { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00006-124">Ottiene il risultato tipizzato dell'operazione asincrona completata.</span><span class="sxs-lookup"><span data-stu-id="00006-124">Gets the typed result of the completed asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="00006-125">Risultato tipizzato dell'operazione asincrona completata.</span><span class="sxs-lookup"><span data-stu-id="00006-125">The typed result of the completed asynchronous operation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>