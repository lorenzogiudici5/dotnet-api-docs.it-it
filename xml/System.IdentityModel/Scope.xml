<Type Name="Scope" FullName="System.IdentityModel.Scope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c3acf2d186bc00e7836e44ff85edcb61965ed26" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36555999" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Scope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Scope extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Scope" />
  <TypeSignature Language="VB.NET" Value="Public Class Scope" />
  <TypeSignature Language="C++ CLI" Value="public ref class Scope" />
  <TypeSignature Language="F#" Value="type Scope = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta la configurazione per la richiesta di pubblicazione del token.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.Scope> classe incapsula informazioni sul relying party (RP) associata a una richiesta di token di sicurezza (RST). Queste informazioni vengono usate dalle implementazioni del <xref:System.IdentityModel.SecurityTokenService> classe (STS) nella pipeline di rilascio dei token per restituire una risposta (RSTR) a una richiesta di token di sicurezza (RST).  
  
 <xref:System.IdentityModel.Scope> gli oggetti contengono informazioni sull'indirizzo della relying Party, la crittografia e le credenziali di firma da usare con il token di sicurezza emesso e se il token stesso o chiavi simmetriche emesso con il token deve essere crittografato. Per impostazione predefinita, vengono crittografate le chiavi simmetriche e token. È possibile estendere il <xref:System.IdentityModel.Scope> classe per fornire informazioni aggiuntive sulla richiesta, ad esempio i tipi di token accettato dal relying Party, per impostazione predefinita la durata dei token, la durata massima dei token, i gruppi di algoritmi usati dalla relying Party e così via, tuttavia, le informazioni incapsulate in Questa classe non deve variare per singole richieste.  
  
 La pipeline di rilascio dei token è implementata nel <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo e questo metodo richiama il <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> metodo per ottenere la configurazione per RST. È necessario implementare una <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> metodo nel servizio token di sicurezza personalizzato e restituiscono un <xref:System.IdentityModel.Scope> oggetto appropriato per la relying Party e l'implementazione del servizio token di sicurezza.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Scope" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Scope" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà per il nuovo <xref:System.IdentityModel.Scope> istanza.  
  
|Proprietà|Valore.|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`null` .|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.Properties%2A>|Dizionario vuoto.|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appliesToAddress As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope appliesToAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">Indirizzo appliesTo del relying party. Generalmente si tratta di un URI.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Scope" /> con l'indirizzo appliesTo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà per il nuovo <xref:System.IdentityModel.Scope> istanza.  
  
|Proprietà|Valore.|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|Valore del parametro `appliesToAddress`.|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.Properties%2A>|Dizionario vuoto.|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">Indirizzo appliesTo del relying party. Generalmente si tratta di un URI.</param>
        <param name="encryptingCredentials">Credenziali di crittografia per il relying party.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Scope" /> con l'indirizzo appliesTo e le credenziali di crittografia specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà per il nuovo <xref:System.IdentityModel.Scope> istanza.  
  
|Proprietà|Valore.|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|Valore del parametro `appliesToAddress`.|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.Properties%2A>|Dizionario vuoto.|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|Valore del parametro `signingCredentials`.|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">Indirizzo appliesTo del relying party. Generalmente si tratta di un URI.</param>
        <param name="signingCredentials">Credenziali di firma per il relying party.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Scope" /> con l'indirizzo appliesTo e le credenziali di firma specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà per il nuovo <xref:System.IdentityModel.Scope> istanza.  
  
|Proprietà|Valore.|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|Valore del parametro `appliesToAddress`.|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.Properties%2A>|Dizionario vuoto.|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|Valore del parametro `signingCredentials`.|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">Indirizzo appliesTo del relying party. Generalmente si tratta di un URI.</param>
        <param name="signingCredentials">Credenziali di firma per il relying party.</param>
        <param name="encryptingCredentials">Credenziali di crittografia per il relying party.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Scope" /> con l'indirizzo appliesTo, le credenziali di firma e di crittografia specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente mostra i valori iniziali delle proprietà per il nuovo <xref:System.IdentityModel.Scope> istanza.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|Valore del parametro `appliesToAddress`.|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|Valore del parametro `encryptingCredentials`.|  
|<xref:System.IdentityModel.Scope.Properties%2A>|Dizionario vuoto.|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|Valore del parametro `signingCredentials`.|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesToAddress">
      <MemberSignature Language="C#" Value="public virtual string AppliesToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppliesToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.AppliesToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AppliesToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AppliesToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppliesToAddress : string with get, set" Usage="System.IdentityModel.Scope.AppliesToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'indirizzo appliesTo del relying party.</summary>
        <value>Indirizzo appliesTo del relying party. Generalmente si tratta di un URI.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::EncryptingCredentials ^ EncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); void set(System::IdentityModel::Tokens::EncryptingCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials with get, set" Usage="System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le credenziali di crittografia per il relying party.</summary>
        <value>Credenziali di crittografia da utilizzare per il relying party.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> è di proprietà `true`, le credenziali vengono usate per crittografare i token di sicurezza emesso. Se il <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> è di proprietà `true`, le credenziali vengono usate per crittografare le chiavi simmetriche emessi i token di sicurezza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.Dictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As Dictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="System.IdentityModel.Scope.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il contenitore delle proprietà per estendere l'oggetto.</summary>
        <value>Contenitore delle proprietà.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToAddress">
      <MemberSignature Language="C#" Value="public virtual string ReplyToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.ReplyToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReplyToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ReplyToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToAddress : string with get, set" Usage="System.IdentityModel.Scope.ReplyToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'indirizzo replyTo del relying party.</summary>
        <value>Indirizzo replyTo del relying party. Generalmente si tratta di un URI.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Scope.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le credenziali di firma per il relying party.</summary>
        <value>Credenziali di firma da utilizzare per il relying party.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKeyEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool SymmetricKeyEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SymmetricKeyEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SymmetricKeyEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SymmetricKeyEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se le chiavi simmetriche emesse devono essere crittografate.</summary>
        <value>
          <see langword="true" /> se le chiavi simmetriche devono essere crittografate; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> proprietà viene `true`, le chiavi simmetriche vengono crittografate usando le credenziali nel <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool TokenEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TokenEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TokenEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TokenEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se i token di sicurezza rilasciati devono essere crittografati.</summary>
        <value>
          <see langword="true" /> se i token di sicurezza devono essere crittografati; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> proprietà viene `true`, i token di sicurezza vengono crittografati usando le credenziali nel <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>