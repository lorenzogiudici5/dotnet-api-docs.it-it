<Type Name="SecurityTokenService" FullName="System.IdentityModel.SecurityTokenService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3072d0bfe35d86653ef23ec20b08a5f210b357ba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.SecurityTokenService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenService" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>La classe di base astratta che definisce le proprietà e i metodi del servizio token di sicurezza (STS).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare un servizio token di sicurezza è necessario derivare la <xref:System.IdentityModel.SecurityTokenService> classe. Nella classe personalizzata è necessario, come minimo, eseguire l'override di <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> e <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> metodi. Con questi override, il servizio token di sicurezza creato con l'implementazione predefinita di tutti i metodi definiti nella classe è in grado di rilasciare token di sicurezza in risposta alla sicurezza le richieste di token (RST). Vale a dire, viene implementata l'associazione di problema definita nella specifica WS-Trust. Questa associazione viene implementata nella <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo. Nessuna delle altre WS-Trust associazioni (rinnovo, Annulla e convalida) vengono implementata nel caso predefinito e un errore appropriato viene restituito al chiamante se viene rilevata una richiesta RST che corrisponde a una di queste associazioni. È possibile, ovviamente, sostituire i metodi appropriati (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, e <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) per implementare queste associazioni in servizio token di sicurezza.  
  
> [!IMPORTANT]
>  Implementazione di un servizio token di sicurezza in ambienti di produzione implica un'attenta pianificazione e quantità notevole di risorse per ridurre i potenziali rischi di sicurezza inerenti l'esposizione di tale servizio. La maggior parte degli sviluppatori che usano Windows Identity Foundation (WIF) verranno lo sviluppo di applicazioni che forniscono una gestione delle identità per un servizio token di sicurezza, invece di essere sviluppo un servizio token di sicurezza di se stesso. WIF offre un'estensione di Visual Studio, l'identità e Access Tool for Visual Studio 2012, per consentire agli sviluppatori di soluzioni di test nell'ambiente di sviluppo. Questo strumento è incluso un servizio token di sicurezza, `LocalSTS`, che è possibile configurare per servire le attestazioni specifiche per l'applicazione che si sta sviluppando. Per ulteriori informazioni sullo strumento di identità e accessi, vedere [Identity and Access Tool per Visual Studio 2012](~/docs/framework/security/identity-and-access-tool-for-vs.md). In alcuni scenari, `LocalSTS` potrebbe non fornire la funzionalità necessaria per testare in modo adeguato l'applicazione; ad esempio, in uno scenario che prevede lo sviluppo di un gestore di token personalizzato per l'uso da un'applicazione. In questi casi, è possibile derivare da <xref:System.IdentityModel.SecurityTokenService> per creare uno o più semplice servizi token di sicurezza che possono essere distribuiti nell'ambiente di sviluppo e che può essere utilizzato per verificare le funzionalità ad nell'applicazione. Il resto di questa sezione è incentrata sui metodi esposti dalla <xref:System.IdentityModel.SecurityTokenService> classe che consentono di implementare un semplice servizio token di sicurezza ed estendere la pipeline di rilascio dei token.  
  
 Nell'elenco seguente fornisce una breve panoramica dei metodi di primaria importanza per gli sviluppatori per l'utilizzo in un ambiente di sviluppo o test.  
  
-   Metodo <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>. Questo metodo restituisce un <xref:System.IdentityModel.Scope> oggetto contenente informazioni sul componente. Questo oggetto viene utilizzato nel resto della pipeline di rilascio dei token e include informazioni relative alla firma e crittografia delle credenziali da utilizzare nella risposta, nonché il `AppliesTo` e `ReplyTo` (se richiesto) gli indirizzi. È necessario eseguire l'override di questo metodo.  
  
-   Metodo <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>. Questo metodo restituisce un <xref:System.Security.Claims.ClaimsIdentity> oggetto che contiene le attestazioni da restituire al relying party. È necessario eseguire l'override di questo metodo.  
  
-   Metodo <xref:System.IdentityModel.SecurityTokenService.Issue%2A>. Questo metodo implementa la pipeline delle richieste di token, che elabora una richiesta token sicurezza in ingresso (RST) e restituisce una risposta (RSTR) al chiamante che contiene un token che può essere utilizzato per l'autenticazione con un componente. Molti degli altri metodi definiti nel <xref:System.IdentityModel.SecurityTokenService> classe vengono chiamati da questo metodo, inclusi il <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> e <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> metodi. Non è necessario eseguire l'override di questo metodo, ma la comprensione della pipeline di richieste di token che implementa può risultare utile.  
  
 Un servizio token di sicurezza viene configurato tramite la <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> classe.  
  
   
  
## Examples  
 Gli esempi di codice che vengono utilizzati nel <xref:System.IdentityModel.SecurityTokenService> argomenti vengono prelevati i `Custom Token` esempio. In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web) e include un'implementazione di un servizio token di sicurezza passivo che è in grado di servire un token SWT. Per un esempio di come implementare un servizio token di sicurezza attivo, è possibile visualizzare il `Federation Metadata` esempio. Per informazioni su questi esempi e altri esempi disponibili per WIF e sulla posizione in cui eseguirne il download, vedere [indice degli esempi di codice WIF](~/docs/framework/security/wif-code-sample-index.md). Il codice seguente viene illustrata l'implementazione di un servizio token di sicurezza passivo utilizzando la <xref:System.IdentityModel.SecurityTokenService> classe.  
  
 [!code-csharp[WIFCustomTokenSTS#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#3)]  
  
 Il codice seguente viene illustrato come richiamare un STS passive personalizzati per elaborare una richiesta WS-Federation chiamando il <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> metodo dal codice dietro il `default.aspx.cs` file.  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>È necessario eseguire l'override di entrambi i <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> e <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> metodi.</para>
    </block>
    <altmember cref="T:System.IdentityModel.Scope" />
    <altmember cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
    <altmember cref="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenService (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenService(System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ securityTokenServiceConfiguration);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityTokenServiceConfiguration" Type="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
      </Parameters>
      <Docs>
        <param name="securityTokenServiceConfiguration">Oggetto <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> che contiene le impostazioni per STS.</param>
        <summary>Chiamato dalle classi derivate per inizializzare la classe di <see cref="T:System.IdentityModel.SecurityTokenService" /> utilizzando le impostazioni di configurazione specificate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare il provider di ambito e il certificato di autorità emittente del token.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityTokenServiceConfiguration" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginCancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCancel (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginCancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di annullamento asincrona.</param>
        <param name="state">Oggetto contenente le informazioni sullo stato associate all'operazione di annullamento asincrona.</param>
        <summary>Una volta eseguito l'override in una classe derivata, avvia una richiesta di annullamento WS-Trust asincrona.</summary>
        <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di annullamento asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <param name="scope">Oggetto <see cref="T:System.IdentityModel.Scope" /> che contiene informazioni sul relying party associato alla richiesta.</param>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona.</param>
        <param name="state">Oggetto contenente le informazioni sullo stato associate all'operazione asincrona.</param>
        <summary>Una volta sottoposto a override in una classe derivata, inizia la chiamata asincrona al metodo <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />.</summary>
        <returns>L'interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all' operazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.NotImplementedException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetScope">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginGetScope (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione asincrona.</param>
        <param name="state">Oggetto contenente le informazioni sullo stato associate all'operazione asincrona.</param>
        <summary>Una volta sottoposto a override in una classe derivata, inizia la chiamata asincrona del metodo <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</summary>
        <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di annullamento asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.NotImplementedException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginIssue">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginIssue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginIssue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginIssue (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginIssue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di pubblicazione asincrona.</param>
        <param name="state">Oggetto contenente le informazioni sullo stato associate all'operazione di problema asincrona.</param>
        <summary>Una volta eseguito l'override in una classe derivata, avvia una richiesta di problema WS-Trust asincrona.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di pubblicazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRenew">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRenew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRenew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRenew (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRenew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di rinnovamento asincrona.</param>
        <param name="state">Oggetto contenente le informazioni sullo stato associate all'operazione di rinnovo asincrona.</param>
        <summary>Una volta eseguito l'override in una classe derivata, avvia una richiesta di rinnovo WS-Trust asincrona.</summary>
        <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di rinnovamento asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginValidate">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginValidate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginValidate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginValidate (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginValidate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che riceve la notifica del completamento dell'operazione di validazione asincrona.</param>
        <param name="state">Oggetto contenente le informazioni sullo stato associate all'operazione di convalida asincrona.</param>
        <summary>Una volta eseguito l'override in una classe derivata, avvia una richiesta di convalida WS-Trust asincrona.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> che fa riferimento all'operazione di convalida asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Cancel (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Cancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <summary>Una volta eseguito l'override in una classe derivata, elabora una richiesta di annullamento WS-Trust.</summary>
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> che rappresenta RSTR da restituire al chiamante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenDescriptor ^ CreateSecurityTokenDescriptor(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request">Richiesta di token in ingresso.</param>
        <param name="scope">Oggetto <see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> restituito da <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</param>
        <summary>Crea un'istanza di un oggetto <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</summary>
        <returns>Oggetto <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Richiamato durante l'emissione di token dopo <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="scope" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCancel (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndCancel(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</param>
        <summary>Una volta eseguito l'override in una classe derivata, completa la richiesta di annullamento WS-Trust asincrona.</summary>
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> che rappresenta RSTR da restituire al chiamante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetOutputClaimsIdentity (result As IAsyncResult) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ EndGetOutputClaimsIdentity(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />.</param>
        <summary>Una volta eseguito l'override in una classe derivata, complete la chiamata asincrona nel metodo <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />.</summary>
        <returns>
          <see cref="T:System.Security.Claims.ClaimsIdentity" /> contenente la raccolta delle attestazioni che verranno inserite nel token di sicurezza emesso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.NotImplementedException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetScope">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Scope EndGetScope (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope EndGetScope(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetScope (result As IAsyncResult) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Scope ^ EndGetScope(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</param>
        <summary>Una volta eseguito l'override in una classe derivata, complete la chiamata asincrona nel metodo <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Scope" /> che incapsula informazioni del componente associate alla richiesta (RST) specificata nella chiamata al metodo <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.NotImplementedException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndIssue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndIssue (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndIssue(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</param>
        <summary>Una volta eseguito l'override in una classe derivata, completa la richiesta di problema WS-Trust asincrona.</summary>
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> che rappresenta RSTR da restituire al chiamante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRenew (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndRenew(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</param>
        <summary>Una volta eseguito l'override in una classe derivata, completa la richiesta di rinnovamento WS-Trust asincrona.</summary>
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> che rappresenta RSTR da restituire al chiamante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndValidate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndValidate (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndValidate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Interfaccia <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</param>
        <summary>Una volta eseguito l'override in una classe derivata, completa la richiesta di convalida WS-Trust asincrona.</summary>
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> che rappresenta RSTR da restituire al chiamante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="protected virtual string GetIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetIssuerName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetIssuerName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene il nome del servizio token di sicurezza.</summary>
        <returns>Nome dell'autorità emittente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal valore predefinito della pipeline di rilascio dei token implementata nel <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo.  
  
 L'implementazione predefinita restituisce il <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> proprietà dalla configurazione tramite il <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected abstract System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Security::Claims::ClaimsIdentity ^ GetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <param name="scope">Oggetto <see cref="T:System.IdentityModel.Scope" /> che contiene informazioni sul relying party associato alla richiesta. Si tratta dell'oggetto <see cref="T:System.IdentityModel.Scope" /> restituito dal metodo <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</param>
        <summary>Una volta eseguito l'override in una classe derivata, questo metodo restituisce una raccolta di oggetti di output da includere nel token emesso.</summary>
        <returns>
          <see cref="T:System.Security.Claims.ClaimsIdentity" /> contenente la raccolta delle attestazioni che verranno inserite nel token di sicurezza emesso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> metodo viene chiamato dalla pipeline di rilascio dei token, viene implementata dal <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo. Restituisce un <xref:System.Security.Claims.ClaimsIdentity> che contiene le attestazioni da includere nel token di sicurezza emesso in base al richiedente del token (il `principal` parametro), RST in ingresso (il `request` parametro), e la relying party per la quale il token è destinato ( il `scope` parametro). La logica di questo metodo è interessata principalmente a rispondere alle domande seguenti:  
  
-   **I tipi di attestazione che devono essere inclusi nella risposta in base al relying Party a cui è destinato?** In genere ciò viene definito in una base per ogni componente dagli elenchi di tipi di attestazione necessari per ogni relying Party o in base a una richiesta esaminando il <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> proprietà della richiesta. Tuttavia, la logica e i dettagli per determinare le attestazioni da includere nella risposta spetta completamente l'implementazione.  
  
-   **I valori di attestazione che devono essere assegnato per le attestazioni nella risposta?** Per un Provider di identità (IP-STS), ciò significa in genere utilizzando una o più attestazioni del richiedente <xref:System.Security.Claims.ClaimsPrincipal> (fornito dal `principal` parametro) per accedere a un archivio (o altra entità) per restituire i valori per i tipi di attestazione obbligatori. Per un Provider federativo (R-STS) questo in genere significa che l'esecuzione di un tipo di elaborazione sulle attestazioni in ingresso del richiedente di completare la richiesta; ad esempio per eseguire il filtro o trasformazione in alcune attestazioni presentate dal richiedente, durante il passaggio di altri utenti tramite non modificato. Naturalmente, come nel caso di decidere le attestazioni da includere nella risposta, i dettagli e la logica per determinare i valori di queste attestazioni è un massimo di implementazione.  
  
   
  
## Examples  
 L'esempio di codice che viene utilizzato in questo argomento riguarda la `Custom Token` esempio. In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web) e include un'implementazione di un servizio token di sicurezza passivo che è in grado di servire un token SWT. Per un esempio di come implementare un servizio token di sicurezza attivo, è possibile visualizzare il `Federation Metadata` esempio. Per informazioni su questi esempi e altri esempi disponibili per WIF e sulla posizione in cui eseguirne il download, vedere [indice degli esempi di codice WIF](~/docs/framework/security/wif-code-sample-index.md). Nel codice seguente viene illustrato come eseguire l'override di <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> per restituire le attestazioni per il servizio token di sicurezza. In questo esempio, il messaggio di richiesta di sicurezza Token RST () viene ignorato e viene restituita una raccolta di attestazioni in base a utente, come l'autenticazione nel servizio token di sicurezza.  
  
 [!code-csharp[WIFCustomTokenSTS#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È necessario eseguire l'override di questo metodo nell'implementazione della classe <see cref="T:System.IdentityModel.SecurityTokenService" />.</para>
        </block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetProofToken">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.ProofDescriptor GetProofToken (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.ProofDescriptor GetProofToken(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::ProofDescriptor ^ GetProofToken(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.ProofDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta token in entrata (RST).</param>
        <param name="scope">Istanza di <see cref="T:System.IdentityModel.Scope" /> che incapsula le informazioni sul relying party.</param>
        <summary>Ottiene il token di prova da includere nella risposta (RSTR).</summary>
        <returns>Oggetto <see cref="T:System.IdentityModel.Tokens.ProofDescriptor" /> che rappresenta il descrittore di prova appena creato. Il descrittore di prova può essere asimmetrico, simmetrico o <see langword="null" /> nel caso dei token di trasporto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal valore predefinito della pipeline di rilascio dei token implementata nel <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo.  
  
 L'implementazione predefinita restituisce un descrittore di prova o genera un'eccezione appropriata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="scope" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestorProofEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRequestorProofEncryptingCredentials (request As RequestSecurityToken) As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::EncryptingCredentials ^ GetRequestorProofEncryptingCredentials(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta token in entrata (RST).</param>
        <summary>Ottiene le credenziali di crittografia di prova del richiedente.</summary>
        <returns>Oggetto <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> che rappresenta le credenziali di crittografia del richiedente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> metodo.  
  
 L'implementazione predefinita esegue le operazioni seguenti. Restituisce `null` se non è disponibile alcun token di crittografia specificato nella richiesta (il <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType> proprietà `null`). In caso contrario, se è possibile ottenere il token come un <xref:System.IdentityModel.Tokens.X509SecurityToken>, restituisce le credenziali in base a tale token. Se non è possibile risolvere il token come un <xref:System.IdentityModel.Tokens.X509SecurityToken>, <xref:System.IdentityModel.RequestFailedException> viene generata un'eccezione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponse (request As RequestSecurityToken, tokenDescriptor As SecurityTokenDescriptor) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ GetResponse(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="request">RST che contiene la richiesta del token.</param>
        <param name="tokenDescriptor">Descrittore del token che contiene le informazioni da utilizzare per il token emesso.</param>
        <summary>Crea la risposta (RSTR) che contiene il token rilasciato utilizzando il descrittore specificato della richiesta (RST) e del token di sicurezza.</summary>
        <returns>Risposta (RSTR) o <see langword="null" /> se non è possibile creare una risposta dal descrittore di token e di richiesta specificato. L'implementazione predefinita restituisce <see langword="null" /> se il parametro <paramref name="tokenDescriptor" /> è <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> metodo viene chiamato come ultimo passaggio dalla pipeline di rilascio dei token, viene implementata dal <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo. Crea e restituisce la risposta (RSTR) utilizzando la richiesta in ingresso originale (RST) e il descrittore di token che sia stato generato da durante i passaggi precedenti nella pipeline di rilascio dei token.  
  
 L'implementazione predefinita crea l'elemento RSTR passando RST specificata nel parametro di richiesta per il <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType> costruttore, richiamare il <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType> il descrittore del token di metodo passato <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> per applicare le relative proprietà per l'appena creato RSTR, l'impostazione di <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> proprietà l'elemento RSTR utilizzando il <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> proprietà descrittore del token e infine l'impostazione la <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> proprietà l'elemento RSTR in base alla tabella seguente:  
  
|Proprietà `RST.ReplyTo`|Proprietà <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType>.|Proprietà `RSTR.ReplyTo`|  
|----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|Imposta|Non impostato.|Non impostato.|  
|Imposta|Imposta|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType>|  
|Non impostato.|Imposta|Non impostato.|  
|Non impostato.|Non impostato.|Non impostato.|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetScope">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Scope GetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope GetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetScope (principal As ClaimsPrincipal, request As RequestSecurityToken) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Scope ^ GetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta il client che esegue la richiesta.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta in entrata (RST).</param>
        <summary>Ottiene un oggetto <see cref="T:System.IdentityModel.Scope" /> contenente informazioni sul relying party (RP) associato alla richiesta specificata (RST). È necessario eseguire l'override di questo metodo nell'implementazione della classe <see cref="T:System.IdentityModel.SecurityTokenService" />.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Scope" /> che incapsula le informazioni del componente associate alla richiesta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> metodo viene chiamato dalla pipeline di rilascio dei token dopo il <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> metodo e deve restituire un <xref:System.IdentityModel.Scope> oggetto configurato per la richiesta in ingresso. (La pipeline di rilascio dei token è implementata nel <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo.) Il <xref:System.IdentityModel.Scope> oggetto incapsula le informazioni relative al relying Party associato alla richiesta di token di sicurezza (RST). Questo include informazioni sulle credenziali di firma e crittografia da utilizzare con il componente e di crittografare qualsiasi token rilasciati e/o le chiavi simmetriche nella risposta o meno. Alcune attività tipiche eseguite nel <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> metodo sono:  
  
-   Determinare se il relying Party a cui è destinato il token è un componente riconosciuto. Come eseguire questa operazione dipende dall'implementazione. Se il relying Party desiderato non è un componente valido per questo servizio token di sicurezza, quindi il metodo deve generare un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
-   Determinare delle credenziali di firma per essere utilizzato nella risposta (RSTR) e impostare il <xref:System.IdentityModel.Scope.SigningCredentials%2A> proprietà conseguenza.  
  
-   Determinare se la risposta e/o le chiavi simmetriche incluse devono essere crittografate e le credenziali da utilizzare per la crittografia. Impostare il <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, e <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> le proprietà di conseguenza.  
  
    > [!IMPORTANT]
    >  Per impostazione predefinita, il <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> e <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> vengono impostate proprietà `true` per impedire che il servizio token di rilascio di token che non sono protette. È consigliabile non impostare queste proprietà `false` in un ambiente di produzione.  
  
-   Determinare l'indirizzo a cui deve essere restituita nella risposta. Impostare il <xref:System.IdentityModel.Scope.AppliesToAddress%2A> o <xref:System.IdentityModel.Scope.ReplyToAddress%2A> proprietà conseguenza.  
  
   
  
## Examples  
 L'esempio di codice che viene utilizzato in questo argomento riguarda la `Custom Token` esempio. In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web) e include un'implementazione di un servizio token di sicurezza passivo che è in grado di servire un token SWT. Per un esempio di come implementare un servizio token di sicurezza attivo, è possibile visualizzare il `Federation Metadata` esempio. Per informazioni su questi esempi e altri esempi disponibili per WIF e sulla posizione in cui eseguirne il download, vedere [indice degli esempi di codice WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
 Nell'esempio di codice seguente viene illustrata un'implementazione del metodo <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>. Questa implementazione verifica che il componente venga riconosciuta dal servizio token di sicurezza, convalida il <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> indirizzo in cui la richiesta e imposta il <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType> proprietà di conseguenza, e i certificati set in base alla firma e crittografia delle credenziali da utilizzare con il relying Party che sono hardcoded nel file.  
  
 [!code-csharp[WIFCustomTokenSTS#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#4)]  
[!code-csharp[WIFCustomTokenSTS#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#5)]  
[!code-csharp[WIFCustomTokenSTS#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È necessario eseguire l'override di questo metodo nell'implementazione della classe <see cref="T:System.IdentityModel.SecurityTokenService" />.</para>
        </block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityTokenHandler">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler (string requestedTokenType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler(string requestedTokenType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSecurityTokenHandler (requestedTokenType As String) As SecurityTokenHandler" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenHandler ^ GetSecurityTokenHandler(System::String ^ requestedTokenType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedTokenType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestedTokenType">Stringa che contiene l'URI del tipo del token di richiesta.</param>
        <summary>Ottiene il gestore di token di sicurezza appropriato per l'emissione di un token di sicurezza per il tipo specificato.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> che rappresenta il gestore di token da utilizzare per creare il token di sicurezza emesso. Restituisce <see langword="null" /> se il tipo di token richiesto non è supportato (nessun gestore configurato per il tipo di token specificato).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nell'implementazione predefinita se `requestedTokenType` è `null` o una stringa vuota, il valore predefinito viene utilizzato il tipo di token dalla configurazione. Questa impostazione è specificata la <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> proprietà dell'oggetto di configurazione di servizio token di sicurezza tramita il <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> proprietà.  
  
 Questo metodo viene chiamato dal valore predefinito della pipeline di rilascio dei token implementata nel <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetTokenLifetime">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime (System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime(class System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTokenLifetime (requestLifetime As Lifetime) As Lifetime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::Lifetime ^ GetTokenLifetime(System::IdentityModel::Protocols::WSTrust::Lifetime ^ requestLifetime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Lifetime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestLifetime" Type="System.IdentityModel.Protocols.WSTrust.Lifetime" />
      </Parameters>
      <Docs>
        <param name="requestLifetime">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> che rappresenta la durata richiesta.</param>
        <summary>Ottiene la durata per il token emesso.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> che rappresenta la durata concessa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato in genere con la durata che si trova in RST. Nell'implementazione predefinita, la durata del token viene calcolata in base alla tabella seguente.  
  
|Create (in)|Scadenza (in)|Create (in)|Scadenza (out)|  
|--------------------|--------------------|--------------------|---------------------|  
|`null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType>|  
|C|`null`|C|C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType>|  
|`null`|E|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|E|  
|C|E|C|E|  
  
 Questo metodo viene chiamato dal valore predefinito della pipeline di rilascio dei token implementata nel <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="Issue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Issue (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Issue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <summary>Rilascia un token di sicurezza.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> contenente il token di sicurezza generato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo implementa l'associazione di problema definita nella specifica WS-Trust. L'implementazione predefinita del <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo elabora la richiesta in ingresso (RST) tramite una pipeline di rilascio dei token (rilascio di attestazioni) e restituisce entrambi una risposta (RSTR) che contiene un token di sicurezza con le attestazioni appropriate per l'autenticazione di richiedente con il componente o un'eccezione appropriata. La pipeline di rilascio dei token nell'implementazione predefinita è costituita da chiamate ai metodi seguenti (del <xref:System.IdentityModel.SecurityTokenService> classe).  
  
1.  Il <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> metodo di convalida della richiesta (RST).  
  
2.  Il <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> metodo per ottenere un <xref:System.IdentityModel.Scope> oggetto che contiene informazioni sulla relying party (RP) associata alla richiesta. È necessario eseguire l'override di questo metodo. Se <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> restituisce `null`, <xref:System.InvalidOperationException> viene generata un'eccezione.  
  
3.  Il <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> per restituire un descrittore di token di sicurezza in base alle RST e <xref:System.IdentityModel.Scope> oggetto restituito nel passaggio precedente. Il descrittore di token di sicurezza (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) contiene informazioni sulla richiesta in un formato che può essere utilizzato da un gestore dei token. Il <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType> proprietà è impostata per il descrittore restituito dalla chiamata. Se `null` restituito o se il <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> è di proprietà del descrittore `null`, un <xref:System.InvalidOperationException> viene generata un'eccezione. L'eccezione viene generata anche se il <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType> proprietà `true` ma la <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> proprietà sul descrittore restituito è `null`.  
  
4.  Il <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> metodo per ottenere il gestore dei token appropriato in base al tipo di token richiesto. Se `null` viene restituito un <xref:System.NotImplementedException> viene generata un'eccezione.  
  
5.  Il <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> metodo per ottenere il nome dell'autorità di certificazione per il token. Genera un <xref:System.InvalidOperationException> se il nome è `null` o vuoto; in caso contrario imposta il <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> il descrittore di proprietà.  
  
6.  Il <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> metodo per ottenere la durata per il token e il set di <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> il descrittore di proprietà.  
  
7.  Il <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> metodo per ottenere il token di prova da includere nel token emesso e set di <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> il descrittore di proprietà.  
  
8.  Il <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> metodo per ottenere le attestazioni da includere nel token emesso e set di <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> il descrittore di proprietà. È necessario eseguire l'override di questo metodo.  
  
9. Il <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> metodo per creare una risposta (RSTR) che contiene il token emesso.  
  
 È possibile eseguire l'override di <xref:System.IdentityModel.SecurityTokenService.Issue%2A> metodo per implementare una pipeline di rilascio di token personalizzato; tuttavia non si tratta in genere necessario negli ambienti di sviluppo e test per le implementazioni più personalizzate del <xref:System.IdentityModel.SecurityTokenService> classe servono. In molti di questi casi si esegue l'override di <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> e <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> metodi e, facoltativamente, eseguire l'override di <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> metodo per fornire un servizio token di sicurezza utilizzabile dai servizi per l'ambiente. Se è necessaria un'ulteriore personalizzazione può essere offrono spesso eseguendo l'override di metodi che implementano ogni fase del valore predefinito della pipeline di rilascio dei token elencata in precedenza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal Principal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Principal" />
      <MemberSignature Language="VB.NET" Value="Public Property Principal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ Principal { System::Security::Claims::ClaimsPrincipal ^ get(); void set(System::Security::Claims::ClaimsPrincipal ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto principale associato all'istanza corrente.</summary>
        <value>Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'entità corrente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Renew (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Renew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <summary>Una volta eseguito l'override in una classe derivata, elabora una richiesta di rinnovamento WS-Trust.</summary>
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> che rappresenta RSTR da restituire al chiamante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ Request { System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ get(); void set(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la richiesta del token di sicurezza associato all'istanza corrente.</summary>
        <value>Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che contiene la richiesta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Scope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Scope Scope" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As Scope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Scope ^ Scope { System::IdentityModel::Scope ^ get(); void set(System::IdentityModel::Scope ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ambito associato all'istanza corrente.</summary>
        <value>
          <see cref="T:System.IdentityModel.Scope" /> che rappresenta la configurazione per la richiesta di emissione del token.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
      <MemberSignature Language="VB.NET" Value="Protected Property SecurityTokenDescriptor As SecurityTokenDescriptor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::SecurityTokenDescriptor ^ SecurityTokenDescriptor { System::IdentityModel::Tokens::SecurityTokenDescriptor ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" /> associati all'istanza corrente.</summary>
        <value>Il descrittore del token di sicurezza associato all'istanza corrente.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Tentativo di impostare la proprietà su <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenServiceConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityTokenServiceConfiguration As SecurityTokenServiceConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ SecurityTokenServiceConfiguration { System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.SecurityTokenServiceConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'istanza di configurazione del proprietario.</summary>
        <value>Oggetto <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> contenente la configurazione per l'istanza corrente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Validate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">Oggetto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> che rappresenta l'identità del richiedente del token.</param>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta del token di sicurezza. Sono inclusi il messaggio di richiesta nonché altre informazioni correlate client come il contesto di autorizzazione.</param>
        <summary>Una volta eseguito l'override in una classe derivata, elabora una richiesta di convalida WS-Trust.</summary>
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> che rappresenta RSTR da restituire al chiamante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo genera un <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequest">
      <MemberSignature Language="C#" Value="protected virtual void ValidateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateRequest(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateRequest (request As RequestSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateRequest(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request">Oggetto <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> che rappresenta la richiesta.</param>
        <summary>Convalida la richiesta del token di sicurezza (RST) incapsulata da questa istanza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> metodo viene chiamato dalla pipeline di rilascio dei token (il <xref:System.IdentityModel.SecurityTokenService.Issue%2A> (metodo)) per convalidare la RST in arrivo. L'elemento RST viene convalidata sulla base dei requisiti (criteri) del servizio STS e viene generata un'eccezione appropriata, se non è valido.  
  
 L'implementazione predefinita del <xref:System.IdentityModel.SecurityTokenService> classe supporta solo il criterio RST RSTR e solo l'associazione del problema della specifica WS-Trust (il <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> proprietà della richiesta deve essere impostata su <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>). L'implementazione predefinita di questo metodo applica questi requisiti e gli altri indicato nella sezione eccezioni. È possibile eseguire l'override di questo metodo se è necessario applicare i requisiti di convalida a altra per il servizio token di sicurezza personalizzato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException">
          <paramref name="request" /> è <see langword="null" />.  
  
 oppure  
  
 La proprietà <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> della richiesta non è impostata su <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" />.  
  
 oppure  
  
 La proprietà <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> della richiesta non è <see langword="null" /> né una delle costanti definite nella classe <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" /> .  
  
 oppure  
  
 La <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> della richiesta è <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" /> e l'elemento <see langword="KeySize" /> è presente, ma il valore non è uguale a zero.</exception>
        <exception cref="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException">Il servizio token di sicurezza non supporta il tipo di token della richiesta (in base al valore della proprietà <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" /> della richiesta).</exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
  </Members>
</Type>