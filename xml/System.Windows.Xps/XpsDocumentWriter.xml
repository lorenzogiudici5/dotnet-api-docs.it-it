<Type Name="XpsDocumentWriter" FullName="System.Windows.Xps.XpsDocumentWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82c5bf19aca0fac5af1fd9134db0566fada7fb7b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30670555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XpsDocumentWriter : System.Windows.Documents.Serialization.SerializerWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XpsDocumentWriter extends System.Windows.Documents.Serialization.SerializerWriter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.XpsDocumentWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XpsDocumentWriter&#xA;Inherits SerializerWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XpsDocumentWriter : System::Windows::Documents::Serialization::SerializerWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Serialization.SerializerWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i metodi per scrivere in un documento o una coda di stampa XPS.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Xps.XpsDocumentWriter> non ha un costruttore. Per creare un <xref:System.Windows.Xps.XpsDocumentWriter>, utilizzare il metodo statico <xref:System.Windows.Xps.Packaging.XpsDocument.CreateXpsDocumentWriter%2A> metodo il <xref:System.Windows.Xps.Packaging.XpsDocument> di classe o utilizzare uno dei statica <xref:System.Printing.PrintQueue.CreateXpsDocumentWriter%2A> metodi del <xref:System.Printing.PrintQueue> classe. Il documento o la coda che crea il <xref:System.Windows.Xps.XpsDocumentWriter> diventa la destinazione in cui eseguire la scrittura.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un'istanza della classe <xref:System.Windows.Xps.XpsDocumentWriter>.  
  
 [!code-csharp[XpsSave#CreateXpsDocumentWriter](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createxpsdocumentwriter)]
 [!code-vb[XpsSave#CreateXpsDocumentWriter](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createxpsdocumentwriter)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public override void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CancelAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annulla l'operazione corrente <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.WriteAsync" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Windows.Xps.XpsWriterException">Nessuna operazione di scrittura asincrona è in corso.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateVisualsCollator">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> che può scrivere oggetti <see cref="T:System.Windows.Media.Visual" /> in un documento o coda di stampa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Xps.VisualsToXpsDocument> scrive alla stessa destinazione <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue> come il <xref:System.Windows.Xps.XpsDocumentWriter> che crea il <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il metodo <xref:System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator%2A>.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public override System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateVisualsCollator () As SerializerWriterCollator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Documents::Serialization::SerializerWriterCollator ^ CreateVisualsCollator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> che può scrivere oggetti <see cref="T:System.Windows.Media.Visual" /> in un documento o coda di stampa.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Windows.Xps.VisualsToXpsDocument" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Xps.VisualsToXpsDocument> scrive alla stessa destinazione <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue> come il <xref:System.Windows.Xps.XpsDocumentWriter> che crea il <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il metodo <xref:System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator%2A>.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public override System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePrintTicket, System.Printing.PrintTicket documentPrintTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator(class System.Printing.PrintTicket documentSequencePrintTicket, class System.Printing.PrintTicket documentPrintTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateVisualsCollator (documentSequencePrintTicket As PrintTicket, documentPrintTicket As PrintTicket) As SerializerWriterCollator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Documents::Serialization::SerializerWriterCollator ^ CreateVisualsCollator(System::Printing::PrintTicket ^ documentSequencePrintTicket, System::Printing::PrintTicket ^ documentPrintTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentSequencePrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="documentPrintTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentSequencePrintTicket">
          <see cref="T:System.Printing.PrintTicket" /> che specifica le preferenze di stampa predefinite per la sequenza del documento.</param>
        <param name="documentPrintTicket">
          <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per ciascun documento.</param>
        <summary>Restituisce <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> che può scrivere gli oggetti <see cref="T:System.Windows.Media.Visual" /> con le impostazioni <see cref="T:System.Printing.PrintTicket" /> in un documento o coda di stampa XPS.</summary>
        <returns>Il nuovo <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> che scrive elementi <see cref="T:System.Windows.Media.Visual" /> con le impostazioni <see cref="T:System.Printing.PrintTicket" /> in <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Xps.VisualsToXpsDocument> scrive alla stessa destinazione <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue> come il <xref:System.Windows.Xps.XpsDocumentWriter> che crea il <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
 Questo metodo non convalida né modifica l'oggetto specificato `documentPrintTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> e valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive in modo sincrono in un documento o una coda di stampa XPS.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string documentPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string documentPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (documentPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ documentPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentPath">Percorso del documento di origine.</param>
        <summary>Scrive in modo sincrono un documento [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge il <xref:System.Windows.Documents.FixedDocument> nell'origine per il set di elementi <xref:System.Windows.Documents.FixedDocument> elementi nel database di destinazione <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue>.  
  
 Questo <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> metodo verrà riserializzare specificato [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento che consente di rimuovere tutto il contenuto dal <xref:System.IO.Packaging.Package> che non deve essere mantenuto dal [XML Paper Specification](http://go.microsoft.com/fwlink/?LinkID=65761).  La riserializzazione verrà rimosse anche tutte le estensioni dal <xref:System.Windows.Documents.FixedPage> markup, inclusi caratteri estesi [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] contenuto.  
  
 Per progettare <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> metodo chiama il <xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired> evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.DocumentPaginator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Documents::DocumentPaginator ^ documentPaginator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Oggetto che contiene un puntatore a materiale di origine non impaginato e contiene anche i metodi per l'impaginazione del materiale.</param>
        <summary>Scrive in modo sincrono il contenuto impaginato da un oggetto <see cref="T:System.Windows.Documents.DocumentPaginator" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> metodo per scrivere un [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento.  
  
 [!code-csharp[XpsSave#WriteToXpsWithDocumentPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#writetoxpswithdocumentpaginator)]
 [!code-vb[XpsSave#WriteToXpsWithDocumentPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#writetoxpswithdocumentpaginator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Documents::FixedDocument ^ fixedDocument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Un documento scritto in <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
        <summary>Scrive in modo sincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocument" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> al set.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare questo metodo per scrivere un [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento.  
  
 [!code-csharp[XpsSave#WriteToXpsWithFixedDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#writetoxpswithfixeddocument)]
 [!code-vb[XpsSave#WriteToXpsWithFixedDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#writetoxpswithfixeddocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Un insieme di documenti scritto in <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
        <summary>Scrive in modo sincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> o un set di <xref:System.Windows.Documents.FixedDocument> elementi al set esistente.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> metodo per scrivere una sequenza di [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documenti.  
  
 [!code-csharp[XpsSave#WriteToXpsWithFixedDocumentSequence](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#writetoxpswithfixeddocumentsequence)]
 [!code-vb[XpsSave#WriteToXpsWithFixedDocumentSequence](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#writetoxpswithfixeddocumentsequence)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Documents::FixedPage ^ fixedPage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Una pagina scritta in <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
        <summary>Scrive in modo sincrono un oggetto <see cref="T:System.Windows.Documents.FixedPage" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">Oggetto <see cref="T:System.Windows.Media.Visual" /> scritto.</param>
        <summary>Scrive in modo sincrono un oggetto <see cref="T:System.Windows.Media.Visual" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per operazioni di scrittura batch un <xref:System.Windows.Media.Visual>, utilizzare <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> metodo per scrivere un <xref:System.Windows.Media.Visual> per un [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento.  
  
 [!code-csharp[XpsSave#WriteToXpsWithVisual](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#writetoxpswithvisual)]
 [!code-vb[XpsSave#WriteToXpsWithVisual](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#writetoxpswithvisual)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string documentPath, System.Windows.Xps.XpsDocumentNotificationLevel notificationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string documentPath, valuetype System.Windows.Xps.XpsDocumentNotificationLevel notificationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (documentPath As String, notificationLevel As XpsDocumentNotificationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ documentPath, System::Windows::Xps::XpsDocumentNotificationLevel notificationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPath" Type="System.String" />
        <Parameter Name="notificationLevel" Type="System.Windows.Xps.XpsDocumentNotificationLevel" />
      </Parameters>
      <Docs>
        <param name="documentPath">Percorso del documento di origine.</param>
        <param name="notificationLevel">Indicazione dell'attivazione della notifica.</param>
        <summary>Scrive in modo sincrono un documento [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando `notificationLevel` è disabilitato, il <xref:System.Windows.Xps.XpsDocumentWriter> copia serializzata[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento di destinazione <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue> che ha creato il <xref:System.Windows.Xps.XpsDocumentWriter>. Quando `notificationLevel` è abilitato, il <xref:System.Windows.Xps.XpsDocumentWriter> prima deserializza il documento, riserializza e quindi lo scrive nella destinazione con le notifiche di stato di ogni pagina è output.  
  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge il <xref:System.Windows.Documents.FixedDocument> elementi nell'origine della sequenza di <xref:System.Windows.Documents.FixedDocument> elementi nel database di destinazione <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue>.  
  
 Se `notificationLevel` è specificato come <xref:System.Windows.Xps.XpsDocumentNotificationLevel.ReceiveNotificationEnabled>, le notifiche vengono generate solo quando il documento è serializzato, non è stato stampato.  Il documento deve essere riserializzato per ricevere le notifiche.  Quando un documento riserializzato, tutto il contenuto del <xref:System.IO.Packaging.Package> che non deve essere mantenuto dal [XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761) viene rimosso.  La riserializzazione verrà rimosse anche tutte le estensioni dal <xref:System.Windows.Documents.FixedPage> markup, inclusi caratteri estesi [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] contenuto.  
  
 Se `notificationLevel` è specificato come <xref:System.Windows.Xps.XpsDocumentNotificationLevel.ReceiveNotificationDisabled> il documento non sarà riserializzato e qualsiasi contenuto esteso verrà mantenuto, anche se vengono stampati.  
  
 Per progettare <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> metodo chiama il <xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired> evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Oggetto che contiene un puntatore a materiale di origine non impaginato e contiene anche i metodi per l'impaginazione del materiale.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per il materiale.</param>
        <summary>Scrive in modo sincrono il contenuto impaginato da un oggetto <see cref="T:System.Windows.Documents.DocumentPaginator" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Documento scritto.</param>
        <param name="printTicket">Oggetto <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per il documento.</param>
        <summary>Scrive in modo sincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocument" /> insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> al set.  
  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Set di documenti scritti.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per l’insieme dei documenti.</param>
        <summary>Scrive in modo sincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> o un set di <xref:System.Windows.Documents.FixedDocument> elementi al set esistente.  
  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Pagina scritta.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per la pagina.</param>
        <summary>Scrive in modo sincrono un oggetto <see cref="T:System.Windows.Documents.FixedPage" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">Oggetto <see cref="T:System.Windows.Media.Visual" /> scritto.</param>
        <param name="printTicket">Oggetto <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per il documento.</param>
        <summary>Scrive in modo sincrono un oggetto <see cref="T:System.Windows.Media.Visual" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per operazioni di scrittura batch un <xref:System.Windows.Media.Visual>, utilizzare <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive in modo asincrono nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> che ha creato l'oggetto <see cref="T:System.Windows.Xps.XpsDocumentWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public void WriteAsync (string documentPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAsync(string documentPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAsync (documentPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAsync(System::String ^ documentPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentPath">Percorso del documento di origine.</param>
        <summary>Scrive in modo asincrono un documento [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge il <xref:System.Windows.Documents.FixedDocument> nell'origine per il set di elementi <xref:System.Windows.Documents.FixedDocument> elementi nel database di destinazione <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue>.  
  
 Questo <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> metodo verrà riserializzare specificato [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento che consente di rimuovere tutto il contenuto dal <xref:System.IO.Packaging.Package> che non deve essere mantenuto dal [XML Paper Specification](http://go.microsoft.com/fwlink/?LinkID=65761).  La riserializzazione verrà rimosse anche tutte le estensioni dal <xref:System.Windows.Documents.FixedPage> markup, inclusi caratteri estesi [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] contenuto.  
  
 Per progettare <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> metodo chiama il <xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired> evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Oggetto che contiene un puntatore a materiale di origine non impaginato e contiene anche i metodi per l'impaginazione del materiale.</param>
        <summary>Scrive in modo asincrono il contenuto impaginato da un oggetto <see cref="T:System.Windows.Documents.DocumentPaginator" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare questo metodo per scrivere un [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento.  
  
 [!code-csharp[XpsSave#WriteAsyncToXpsWithDocumentPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#writeasynctoxpswithdocumentpaginator)]
 [!code-vb[XpsSave#WriteAsyncToXpsWithDocumentPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#writeasynctoxpswithdocumentpaginator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Documento scritto.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocument" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> al set.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare questo metodo per scrivere un [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento.  
  
 [!code-csharp[XpsSave#WriteAsyncToXpsWithFixedDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#writeasynctoxpswithfixeddocument)]
 [!code-vb[XpsSave#WriteAsyncToXpsWithFixedDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#writeasynctoxpswithfixeddocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Set di documenti scritto.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> o un set di <xref:System.Windows.Documents.FixedDocument> elementi al set esistente.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare questo metodo per scrivere un [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento.  
  
 [!code-csharp[XpsSave#WriteAsyncToXpsWithFixedDocumentSequence](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#writeasynctoxpswithfixeddocumentsequence)]
 [!code-vb[XpsSave#WriteAsyncToXpsWithFixedDocumentSequence](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#writeasynctoxpswithfixeddocumentsequence)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Pagina scritta.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedPage" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">Oggetto <see cref="T:System.Windows.Media.Visual" /> scritto.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Media.Visual" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per operazioni di scrittura batch un <xref:System.Windows.Media.Visual>, utilizzare <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare questo metodo per scrivere un <xref:System.Windows.Media.Visual> per un [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento.  
  
 [!code-csharp[XpsSave#WriteAsyncToXpsWithVisual](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#writeasynctoxpswithvisual)]
 [!code-vb[XpsSave#WriteAsyncToXpsWithVisual](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#writeasynctoxpswithvisual)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public void WriteAsync (string documentPath, System.Windows.Xps.XpsDocumentNotificationLevel notificationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAsync(string documentPath, valuetype System.Windows.Xps.XpsDocumentNotificationLevel notificationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAsync (documentPath As String, notificationLevel As XpsDocumentNotificationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAsync(System::String ^ documentPath, System::Windows::Xps::XpsDocumentNotificationLevel notificationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPath" Type="System.String" />
        <Parameter Name="notificationLevel" Type="System.Windows.Xps.XpsDocumentNotificationLevel" />
      </Parameters>
      <Docs>
        <param name="documentPath">Percorso del documento di origine.</param>
        <param name="notificationLevel">Indicazione dell'attivazione della notifica.</param>
        <summary>Scrive in modo asincrono un documento [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] specificato con opzione di notifica nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando `notificationLevel` è disabilitato, il <xref:System.Windows.Xps.XpsDocumentWriter> copia serializzata [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] documento di destinazione <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue> che ha creato il <xref:System.Windows.Xps.XpsDocumentWriter>. Quando `notificationLevel` è abilitato, il <xref:System.Windows.Xps.XpsDocumentWriter> prima deserializza il documento, riserializza e quindi lo scrive nella destinazione con le notifiche di stato di ogni pagina è output.  
  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge il <xref:System.Windows.Documents.FixedDocument> elementi nell'origine della sequenza di <xref:System.Windows.Documents.FixedDocument> elementi nel database di destinazione <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue>.  
  
 Se `notificationLevel` è specificato come <xref:System.Windows.Xps.XpsDocumentNotificationLevel.ReceiveNotificationEnabled>, le notifiche vengono generate solo quando il documento è serializzato, non è stato stampato.  Il documento deve essere riserializzato per ricevere le notifiche.  Quando un documento riserializzato, tutto il contenuto del <xref:System.IO.Packaging.Package> che non deve essere mantenuto dal [XML Paper Specification](http://go.microsoft.com/fwlink/?LinkID=65761) viene rimosso.  La riserializzazione verrà rimosse anche tutte le estensioni dal <xref:System.Windows.Documents.FixedPage> markup, inclusi caratteri estesi [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] contenuto.  
  
 Se `notificationLevel` è specificato come <xref:System.Windows.Xps.XpsDocumentNotificationLevel.ReceiveNotificationDisabled> il documento non sarà riserializzato e qualsiasi contenuto esteso verrà mantenuto, anche se vengono stampati.  
  
 Per progettare <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> metodo chiama il <xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired> evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Oggetto contenente un puntatore a materiale di origine non impaginato e che contiene anche i metodi per l'impaginazione del materiale.</param>
        <param name="userSuppliedState">Oggetto specificato dall'utente per l'identificazione e l'associazione dell'operazione asincrona.</param>
        <summary>Scrive in modo asincrono il contenuto impaginato da un oggetto <see cref="T:System.Windows.Documents.DocumentPaginator" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Oggetto che contiene un puntatore a materiale di origine non impaginato e contiene anche i metodi per l'impaginazione del materiale.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per il materiale.</param>
        <summary>Scrive in modo asincrono il contenuto impaginato da un oggetto <see cref="T:System.Windows.Documents.DocumentPaginator" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Documento scritto.</param>
        <param name="userSuppliedState">Oggetto specificato dall'utente per l'identificazione e l'associazione dell'operazione asincrona.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocument" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> al set.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Documento scritto.</param>
        <param name="printTicket">Oggetto <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per il documento.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocument" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> al set.  
  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Set di documenti scritti.</param>
        <param name="userSuppliedState">Oggetto specificato dall'utente per l'identificazione e l'associazione dell'operazione asincrona.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> o un set di <xref:System.Windows.Documents.FixedDocument> elementi al set esistente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Set di documenti scritti.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per l’insieme dei documenti.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> o un set di <xref:System.Windows.Documents.FixedDocument> elementi al set esistente.  
  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Pagina scritta.</param>
        <param name="userSuppliedState">Oggetto specificato dall'utente per l'identificazione e l'associazione dell'operazione asincrona.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedPage" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Pagina scritta.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per la pagina.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedPage" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual, System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">Oggetto <see cref="T:System.Windows.Media.Visual" /> scritto.</param>
        <param name="userSuppliedState">Oggetto specificato dall'utente per l'identificazione e l'associazione dell'operazione asincrona.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Media.Visual" /> specificato nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per operazioni di scrittura batch un <xref:System.Windows.Media.Visual>, utilizzare <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">Oggetto <see cref="T:System.Windows.Media.Visual" /> scritto.</param>
        <param name="printTicket">Oggetto <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per il documento.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Media.Visual" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per operazioni di scrittura batch un <xref:System.Windows.Media.Visual>, utilizzare <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket, System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">Oggetto contenente un puntatore a materiale di origine non impaginato e che contiene anche i metodi per l'impaginazione del materiale.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per il materiale.</param>
        <param name="userSuppliedState">Oggetto specificato dall'utente per l'identificazione e l'associazione dell'operazione asincrona.</param>
        <summary>Scrive in modo asincrono il contenuto impaginato da un oggetto <see cref="T:System.Windows.Documents.DocumentPaginator" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket, System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">Documento scritto.</param>
        <param name="printTicket">Oggetto <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per il documento.</param>
        <param name="userSuppliedState">Oggetto specificato dall'utente per l'identificazione e l'associazione dell'operazione asincrona.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocument" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> al set.  
  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket, System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">Set di documenti da scrivere.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per l’insieme dei documenti.</param>
        <param name="userSuppliedState">Oggetto specificato dall'utente per l'identificazione e l'associazione dell'operazione asincrona.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> Scrive in modo asincrono a un set di documenti di <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue> che ha creato il <xref:System.Windows.Xps.XpsDocumentWriter>. Includono i dati che viene scritto un <xref:System.Printing.PrintTicket> e informazioni aggiuntive che il chiamante vuole passare a un gestore eventi.  
  
 Sebbene il <xref:System.Windows.Xps.Packaging.XpsDocument> classe ha un nome singolare, un <xref:System.Windows.Xps.Packaging.XpsDocument> possibili <xref:System.Windows.Documents.FixedDocument> o un set di documenti multipli. Questo metodo aggiunge un <xref:System.Windows.Documents.FixedDocument> o un set di <xref:System.Windows.Documents.FixedDocument> elementi alla sequenza esistente.  
  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket, System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">Pagina scritta.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per la pagina.</param>
        <param name="userSuppliedState">Oggetto specificato dall'utente per l'identificazione e l'associazione dell'operazione asincrona.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Documents.FixedPage" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket, System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">Oggetto <see cref="T:System.Windows.Media.Visual" /> scritto.</param>
        <param name="printTicket">Oggetto <see cref="T:System.Printing.PrintTicket" /> che rappresenta le preferenze di stampa predefinite per il documento.</param>
        <param name="userSuppliedState">Oggetto specificato dall'utente per l'identificazione e l'associazione dell'operazione asincrona.</param>
        <summary>Scrive in modo asincrono un oggetto <see cref="T:System.Windows.Media.Visual" /> specificato insieme a un oggetto <see cref="T:System.Printing.PrintTicket" /> nell'oggetto <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per la scrittura di più <xref:System.Windows.Media.Visual> elementi, utilizzare <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
 Questo metodo non convalida né modifica l'oggetto specificato `printTicket` per un particolare <xref:System.Printing.PrintQueue>. Se necessario, utilizzare il <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> metodo per creare un <xref:System.Printing.PrintTicket> specifico di <xref:System.Printing.PrintQueue> ed è valido per una stampante specificata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingCancelled">
      <MemberSignature Language="C#" Value="public override event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Custom Event WritingCancelled As WritingCancelledEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override event System::Windows::Documents::Serialization::WritingCancelledEventHandler ^ WritingCancelled;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCancelledEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un'operazione <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.Write" /> o <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.WriteAsync" /> viene annullata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingCompleted">
      <MemberSignature Language="C#" Value="public override event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Custom Event WritingCompleted As WritingCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override event System::Windows::Documents::Serialization::WritingCompletedEventHandler ^ WritingCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando termina un'operazione di scrittura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare l'evento <xref:System.Windows.Xps.XpsDocumentWriter.WritingCompleted>.  
  
 [!code-csharp[XpsSave#WritingEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#writingevents)]
 [!code-vb[XpsSave#WritingEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#writingevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Xps.XpsDocumentWriter.raise_WritingCompleted(System.Object,System.Windows.Documents.Serialization.WritingCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WritingPrintTicketRequired">
      <MemberSignature Language="C#" Value="public override event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Custom Event WritingPrintTicketRequired As WritingPrintTicketRequiredEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override event System::Windows::Documents::Serialization::WritingPrintTicketRequiredEventHandler ^ WritingPrintTicketRequired;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica poco prima che un metodo <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.Write" /> o <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.WriteAsync" /> aggiunge un elemento <see cref="T:System.Printing.PrintTicket" /> a un documento o coda di stampa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired> consente a un gestore eventi sostituire un nuovo <xref:System.Printing.PrintTicket> per quella che viene passato all'operazione di scrittura.  
  
 I seguenti quattro <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> e <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> metodi non chiamano più il <xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired> evento:  
  
-   <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>(String)  
  
-   <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>(Stringa, XpsDocumentNotificationLevel)  
  
-   <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>(String)  
  
-   <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>(Stringa, XpsDocumentNotificationLevel)  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare l'evento <xref:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired>.  
  
 [!code-csharp[XpsPrint#PrintMultipleFixedContentDocuments](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#printmultiplefixedcontentdocuments)]
 [!code-vb[XpsPrint#PrintMultipleFixedContentDocuments](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#printmultiplefixedcontentdocuments)]  
  
 Il gestore dell'evento viene creato nell'esempio seguente.  
  
 [!code-csharp[XpsPrint#MultipleFixedContentDocuments_WritingPrintTicketRequired](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#multiplefixedcontentdocuments_writingprintticketrequired)]
 [!code-vb[XpsPrint#MultipleFixedContentDocuments_WritingPrintTicketRequired](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#multiplefixedcontentdocuments_writingprintticketrequired)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Xps.XpsDocumentWriter.raise_WritingPrintTicketRequired(System.Object,System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WritingProgressChanged">
      <MemberSignature Language="C#" Value="public override event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Custom Event WritingProgressChanged As WritingProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override event System::Windows::Documents::Serialization::WritingProgressChangedEventHandler ^ WritingProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> aggiorna lo stato di avanzamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come creare e utilizzare un <xref:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged> gestore dell'evento.  
  
 [!code-csharp[XpsSave#WritingEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#writingevents)]
 [!code-vb[XpsSave#WritingEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#writingevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Xps.XpsDocumentWriter.raise_WritingProgressChanged(System.Object,System.Windows.Documents.Serialization.WritingProgressChangedEventArgs)" />
      </Docs>
    </Member>
  </Members>
</Type>