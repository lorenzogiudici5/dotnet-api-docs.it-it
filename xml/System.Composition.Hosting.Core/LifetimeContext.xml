<Type Name="LifetimeContext" FullName="System.Composition.Hosting.Core.LifetimeContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6df31d56ae5b6086311f6e6e39a28e33806ed5c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LifetimeContext : System.Composition.CompositionContext, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LifetimeContext extends System.Composition.CompositionContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.Core.LifetimeContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LifetimeContext&#xA;Inherits CompositionContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class LifetimeContext sealed : System::Composition::CompositionContext, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Hosting</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Composition.CompositionContext</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="47519-101">Rappresenta un nodo nell'albero della durata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47519-101">Represents a node in the lifetime tree.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="47519-102">Il <xref:System.Composition.Hosting.Core.LifetimeContext> oggetto è l'unità di condivisione per le parti condivise.</span><span class="sxs-lookup"><span data-stu-id="47519-102">The <xref:System.Composition.Hosting.Core.LifetimeContext> object is the unit of sharing for shared parts.</span></span> <span data-ttu-id="47519-103">Controlla l'eliminazione delle parti associate tra loro e può essere utilizzato per recuperare le istanze, come parte di un'operazione di composizione esistente o come base di una nuova operazione di composizione.</span><span class="sxs-lookup"><span data-stu-id="47519-103">It controls the disposal of bound parts and can be used to retrieve instances, either as part of an existing composition operation or as the basis of a new composition operation.</span></span> <span data-ttu-id="47519-104">È possibile contrassegnare un contesto di durata singoli per contenere parti che sono vincolate dai limiti di condivisione particolari.</span><span class="sxs-lookup"><span data-stu-id="47519-104">An individual lifetime context can be marked to contain parts that are constrained by particular sharing boundaries.</span></span>

<span data-ttu-id="47519-105">Questo oggetto contiene due tipi di stato condiviso in modo indipendente protetto: condivise le istanze di parte e associare le istanze di parte.</span><span class="sxs-lookup"><span data-stu-id="47519-105">This object contains two pieces of independently protected shared state: shared part instances and bound part instances.</span></span> <span data-ttu-id="47519-106">Un'istanza di parte condivisa è leggibile, senza blocco e non comporta problemi se viene aggiunto alla durante l'eliminazione.</span><span class="sxs-lookup"><span data-stu-id="47519-106">A shared part instance is lock-free, readable, and does not result in issues if it is added to during disposal.</span></span> <span data-ttu-id="47519-107">È protetto da blocco stesso.</span><span class="sxs-lookup"><span data-stu-id="47519-107">It is protected by being locked itself.</span></span> <span data-ttu-id="47519-108">Logica di attivazione unavoidably viene chiamata in questo blocco.</span><span class="sxs-lookup"><span data-stu-id="47519-108">Activation logic is unavoidably called under this lock.</span></span> <span data-ttu-id="47519-109">Un'istanza di parte associato sia sempre protetto bloccando <see langword="this" />e non deve essere scritto in dopo l'eliminazione.</span><span class="sxs-lookup"><span data-stu-id="47519-109">A bound part instance is always protected by locking <see langword="this" />, and should never be written to after disposal.</span></span> <span data-ttu-id="47519-110">Un'istanza di parte associata è impostata su <see langword="null" /> in un blocco all'interno di <xref:System.Composition.Hosting.Core.LifetimeContext.Dispose> metodo.</span><span class="sxs-lookup"><span data-stu-id="47519-110">A bound part instance is set to <see langword="null" /> under a lock in the <xref:System.Composition.Hosting.Core.LifetimeContext.Dispose> method.</span></span> <span data-ttu-id="47519-111">Se la scrittura sono stata consentita dopo l'eliminazione di un'istanza di parte associato, bensì in parti eliminabile non viene rilasciate.</span><span class="sxs-lookup"><span data-stu-id="47519-111">If writing were allowed after disposal for a bound part instance, it would result in disposable parts not being released.</span></span> <span data-ttu-id="47519-112">Il metodo dispose su una parte associato viene chiamato all'esterno del blocco.</span><span class="sxs-lookup"><span data-stu-id="47519-112">The dispose method on a bound part is called outside of the lock.</span></span> 
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBoundInstance">
      <MemberSignature Language="C#" Value="public void AddBoundInstance (IDisposable instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBoundInstance(class System.IDisposable instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBoundInstance (instance As IDisposable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBoundInstance(IDisposable ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.IDisposable" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="47519-113">La parte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-113">The part.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47519-114">Associa la durata di una parte eliminabile al contesto di durata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-114">Binds the lifetime of a disposable part to this lifetime context.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47519-115">L'operazione è stata eseguita su un oggetto eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-115">The operation was performed on a disposed object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllocateSharingId">
      <MemberSignature Language="C#" Value="public static int AllocateSharingId ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AllocateSharingId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.AllocateSharingId" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocateSharingId () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AllocateSharingId();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47519-116">Genera un identificatore che può essere utilizzato per individuare le istanze condivise della parte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-116">Generates an identifier that can be used to locate shared part instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47519-117">Un identificatore univoco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-117">A new unique identifier.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47519-118">Rilascia il contesto di durata e tutte le istanze della parte associato ad esso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-118">Releases the lifetime context and any part instances bound to it.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindContextWithin">
      <MemberSignature Language="C#" Value="public System.Composition.Hosting.Core.LifetimeContext FindContextWithin (string sharingBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Hosting.Core.LifetimeContext FindContextWithin(string sharingBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindContextWithin (sharingBoundary As String) As LifetimeContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Hosting::Core::LifetimeContext ^ FindContextWithin(System::String ^ sharingBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.LifetimeContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingBoundary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sharingBoundary">
          <span data-ttu-id="47519-119">Il limite di condivisione all'interno del quale viene cercato il contesto di durata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-119">The sharing boundary to find a lifetime context within.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47519-120">Trova il contesto di durata più ampio all'interno di tutti i limiti di condivisione specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-120">Finds the broadest lifetime context within all of the specified sharing boundaries.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47519-121">Il contesto di durata più ampio all'interno di tutti i limiti di condivisione specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-121">The broadest lifetime context within all of the specified sharing boundaries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47519-122">Attualmente, la radice non può essere un limite.</span><span class="sxs-lookup"><span data-stu-id="47519-122">Currently, the root cannot be a boundary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreate">
      <MemberSignature Language="C#" Value="public object GetOrCreate (int sharingId, System.Composition.Hosting.Core.CompositionOperation operation, System.Composition.Hosting.Core.CompositeActivator creator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOrCreate(int32 sharingId, class System.Composition.Hosting.Core.CompositionOperation operation, class System.Composition.Hosting.Core.CompositeActivator creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreate (sharingId As Integer, operation As CompositionOperation, creator As CompositeActivator) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOrCreate(int sharingId, System::Composition::Hosting::Core::CompositionOperation ^ operation, System::Composition::Hosting::Core::CompositeActivator ^ creator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingId" Type="System.Int32" />
        <Parameter Name="operation" Type="System.Composition.Hosting.Core.CompositionOperation" />
        <Parameter Name="creator" Type="System.Composition.Hosting.Core.CompositeActivator" />
      </Parameters>
      <Docs>
        <param name="sharingId">
          <span data-ttu-id="47519-123">Il codice ID della parte condivisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-123">The ID of the shared part.</span>
          </span>
        </param>
        <param name="operation">
          <span data-ttu-id="47519-124">Operazione in cui viene creata una parte, se necessario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-124">An operation in which to create a part, if necessary.</span>
          </span>
        </param>
        <param name="creator">
          <span data-ttu-id="47519-125">Attivatore in grado di attivare una nuova istanza della parte, se necessario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-125">An activator that can activate a new part instance, if necessary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47519-126">Recupera un'istanza della parte condivisa con l'ID specificato o, se non viene trovata l'istanza della parte, crea e condivide un'istanza della parte usando l'autore indicato all'interno dell'operazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-126">Retrieves a shared part instance with the specified ID, or if the part instance can not be found, creates and shares a part instance using the specified creator within the specified operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47519-127">La parte nuova o recuperata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-127">The new or retrieved part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47519-128">Questo metodo è senza blocco se l'istanza di parte esiste già.</span><span class="sxs-lookup"><span data-stu-id="47519-128">This method is lock-free if the part instance already exists.</span></span> <span data-ttu-id="47519-129">Se è necessario creare l'istanza di parte, un blocco accederà che verrà serializzato altre operazioni di scrittura che utilizzano questo metodo (letture simultanee continueranno a essere sicuri e senza blocco).</span><span class="sxs-lookup"><span data-stu-id="47519-129">If the part instance must be created, a lock will be taken that will serialize other writes that use this method (concurrent reads will continue to be safe and lock-free).</span></span> <span data-ttu-id="47519-130">È importante che la composizione, quindi di acquisizione del blocco, è rigorosamente foglia-a-radice nell'albero della durata.</span><span class="sxs-lookup"><span data-stu-id="47519-130">It is important that the composition, and thus lock acquisition, is strictly leaf-to-root in the lifetime tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47519-131">Restituisce la rappresentazione di stringa dell'oggetto <see cref="T:System.Composition.Hosting.Core.LifetimeContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-131">Returns the string representation of this <see cref="T:System.Composition.Hosting.Core.LifetimeContext" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47519-132">Rappresentazione di stringa dell'oggetto <see cref="T:System.Composition.Hosting.Core.LifetimeContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-132">The string representation of this <see cref="T:System.Composition.Hosting.Core.LifetimeContext" /> object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public override bool TryGetExport (System.Composition.Hosting.Core.CompositionContract contract, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetExport(class System.Composition.Hosting.Core.CompositionContract contract, [out] object&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetExport (contract As CompositionContract, ByRef export As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetExport(System::Composition::Hosting::Core::CompositionContract ^ contract, [Runtime::InteropServices::Out] System::Object ^ % export);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="export" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="47519-133">Nome del contratto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-133">The contract.</span>
          </span>
        </param>
        <param name="export">
          <span data-ttu-id="47519-134">Al termine questo metodo contiene l'istanza del contratto, se disponibile, in caso contrario <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-134">After this method returns, contains the contract instance if available; otherwise, <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47519-135">Recupera un'istanza di un contratto dal contesto di composizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-135">Retrieves a contract instance from the composition context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47519-136">
            <see langword="true" /> se l'istanza è stata recuperata. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47519-136">
              <see langword="true" /> if the instance was retrieved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>