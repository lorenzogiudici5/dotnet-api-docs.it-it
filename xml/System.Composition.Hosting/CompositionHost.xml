<Type Name="CompositionHost" FullName="System.Composition.Hosting.CompositionHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62a71df31375316418ee517b9a6bc4b41e96f408" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39842342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompositionHost : System.Composition.CompositionContext, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositionHost extends System.Composition.CompositionContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.CompositionHost" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositionHost&#xA;Inherits CompositionContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionHost sealed : System::Composition::CompositionContext, IDisposable" />
  <TypeSignature Language="F#" Value="type CompositionHost = class&#xA;    inherit CompositionContext&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Hosting</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Composition.CompositionContext</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="859f8-101">Contenitore di composizione leggero assemblato dai provider specificati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="859f8-101">A lightweight composition container that is assembled from specified providers.</span>
      </span>
    </summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCompositionHost">
      <MemberSignature Language="C#" Value="public static System.Composition.Hosting.CompositionHost CreateCompositionHost (System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorProvider&gt; providers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Composition.Hosting.CompositionHost CreateCompositionHost(class System.Collections.Generic.IEnumerable`1&lt;class System.Composition.Hosting.Core.ExportDescriptorProvider&gt; providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.CompositionHost.CreateCompositionHost(System.Collections.Generic.IEnumerable{System.Composition.Hosting.Core.ExportDescriptorProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCompositionHost (providers As IEnumerable(Of ExportDescriptorProvider)) As CompositionHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Composition::Hosting::CompositionHost ^ CreateCompositionHost(System::Collections::Generic::IEnumerable&lt;System::Composition::Hosting::Core::ExportDescriptorProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="static member CreateCompositionHost : seq&lt;System.Composition.Hosting.Core.ExportDescriptorProvider&gt; -&gt; System.Composition.Hosting.CompositionHost" Usage="System.Composition.Hosting.CompositionHost.CreateCompositionHost providers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.CompositionHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providers" Type="System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="providers">
          <span data-ttu-id="859f8-102">Provider che contengono le descrizioni di esportazione per le parti composte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-102">The providers, which contain export descriptions for the parts being composed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="859f8-103">Crea l'host della composizione mediante la raccolta di provider specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-103">Creates the composition host with the specified collection of providers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="859f8-104">L'host di composizione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-104">The created composition host.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCompositionHost">
      <MemberSignature Language="C#" Value="public static System.Composition.Hosting.CompositionHost CreateCompositionHost (params System.Composition.Hosting.Core.ExportDescriptorProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Composition.Hosting.CompositionHost CreateCompositionHost(class System.Composition.Hosting.Core.ExportDescriptorProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.CompositionHost.CreateCompositionHost(System.Composition.Hosting.Core.ExportDescriptorProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCompositionHost (ParamArray providers As ExportDescriptorProvider()) As CompositionHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Composition::Hosting::CompositionHost ^ CreateCompositionHost(... cli::array &lt;System::Composition::Hosting::Core::ExportDescriptorProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="static member CreateCompositionHost : System.Composition.Hosting.Core.ExportDescriptorProvider[] -&gt; System.Composition.Hosting.CompositionHost" Usage="System.Composition.Hosting.CompositionHost.CreateCompositionHost providers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.CompositionHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providers" Type="System.Composition.Hosting.Core.ExportDescriptorProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="providers">
          <span data-ttu-id="859f8-105">Provider che contengono le descrizioni di esportazione per le parti composte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-105">The providers, which contain export descriptions for the parts being composed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="859f8-106">Crea l'host della composizione mediante la matrice di provider specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-106">Creates the composition host with the specified array of providers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="859f8-107">L'host di composizione creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-107">The created composition host.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.CompositionHost.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="compositionHost.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="859f8-108">Rilascia l'host di composizione e tutte le parti condivise a livello globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-108">Releases the composition host and any globally shared parts.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public override bool TryGetExport (System.Composition.Hosting.Core.CompositionContract contract, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetExport(class System.Composition.Hosting.Core.CompositionContract contract, [out] object&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.CompositionHost.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetExport (contract As CompositionContract, ByRef export As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetExport(System::Composition::Hosting::Core::CompositionContract ^ contract, [Runtime::InteropServices::Out] System::Object ^ % export);" />
      <MemberSignature Language="F#" Value="override this.TryGetExport : System.Composition.Hosting.Core.CompositionContract *  -&gt; bool" Usage="compositionHost.TryGetExport (contract, export)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="export" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="859f8-109">L'esportazione da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-109">The export to retrieve.</span>
          </span>
        </param>
        <param name="export">
          <span data-ttu-id="859f8-110">Quando termina, questo metodo contiene un'istanza dell'esportazione, se disponibile; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-110">When this method returns, contains an instance of the export if available; otherwise, <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="859f8-111">Recupera l'esportazione specificata dal contesto di composizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-111">Retrieves the specified export from the composition context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="859f8-112">
            <see langword="true" /> se l'esportazione è stata recuperata. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="859f8-112">
              <see langword="true" /> if the export was retrieved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>