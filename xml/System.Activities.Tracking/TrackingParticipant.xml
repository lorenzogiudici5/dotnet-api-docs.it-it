<Type Name="TrackingParticipant" FullName="System.Activities.Tracking.TrackingParticipant">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c79e3155314c7074486ba8d3b42bcfc0d82b589e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TrackingParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingParticipant extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Tracking.TrackingParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingParticipant abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3e693-101">La classe di base per estensioni del flusso di lavoro che interagiscono con l'infrastruttura del rilevamento del flusso di lavoro e record di rilevamento di accesso.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3e693-101">The base class for workflow extensions that interact with the workflow tracking infrastructure and access tracking records.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e693-102">Un partecipante di rilevamento è registrato per ricevere record di rilevamento.</span><span class="sxs-lookup"><span data-stu-id="3e693-102">A tracking participant is registered to receive tracking records.</span></span> <span data-ttu-id="3e693-103">Attualmente, qualsiasi classe che implementa il partecipante di rilevamento può essere registrata con l'istanza del flusso di lavoro per ricevere record di rilevamento.</span><span class="sxs-lookup"><span data-stu-id="3e693-103">Currently, any class that implements the tracking participant can be registered with the workflow instance to receive tracking records.</span></span> <span data-ttu-id="3e693-104">Se il partecipante di rilevamento è codice di terze parti, assicurarsi che questo non sia un codice dannoso.</span><span class="sxs-lookup"><span data-stu-id="3e693-104">If the tracking participant is third party code, ensure that this is not malicious code.</span></span> <span data-ttu-id="3e693-105">I partecipanti di rilevamento eseguiti nello stesso processo come istanza del flusso di lavoro e nel caso di partecipanti di rilevamento dannosi, questo codice potrebbe influire sull'esecuzione del flusso di lavoro complessiva.</span><span class="sxs-lookup"><span data-stu-id="3e693-105">The tracking participants run in the same process as the workflow instance and in the case of malicious tracking participants, this code could affect the overall workflow execution.</span></span> <span data-ttu-id="3e693-106">I record di rilevamento vengono inviati ai partecipanti di rilevamento registrati durante l'esecuzione del flusso di lavoro, pertanto lo sviluppatore deve assicurarsi che il partecipante di rilevamento non influisca sull flusso di lavoro in esecuzione eseguendo operazioni impreviste all'interno del metodo di rilevamento.</span><span class="sxs-lookup"><span data-stu-id="3e693-106">The tracking records are delivered to the registered tracking participants as the workflow executes, so the developer should ensure that the tracking participant does not affect the running workflow by performing unintended operations within the track method.</span></span> <span data-ttu-id="3e693-107">Alcuni esempi sono la modifica di variabili o operazioni del flusso di lavoro che impiegano molto tempo.</span><span class="sxs-lookup"><span data-stu-id="3e693-107">Examples of this could be the alteration of workflow variables or operations that take a long time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingParticipant();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e693-108">Quando è implementato in una classe derivata, crea una nuova istanza della classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-108">When implemented in a derived class, creates a new instance of the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrack">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTrack (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTrack(class System.Activities.Tracking.TrackingRecord record, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTrack (record As TrackingRecord, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTrack(System::Activities::Tracking::TrackingRecord ^ record, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.TrackingRecord" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="3e693-109">Record di rilevamento generati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-109">The generated tracking record.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="3e693-110">Periodo di tempo dopo il quale il provider interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-110">The time period after which the provider aborts the attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3e693-111">Metodo da chiamare al termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-111">The method to be called on completion of the operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3e693-112">Un oggetto definito dall'utente che identifica in modo univoco questa operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-112">A user-defined object that uniquely identifies this asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e693-113">Quando viene implementato in una classe derivata, avvia un'elaborazione asincrona del record di rilevamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-113">When implemented in a derived class, begins asynchronous processing of the tracking record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e693-114">Risultato dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-114">The result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e693-115">I partecipanti devono iniziare un processo per elaborare i record e restituire un <xref:System.IAsyncResult> che il runtime del flusso di lavoro utilizza per attendere il completamento.</span><span class="sxs-lookup"><span data-stu-id="3e693-115">Participants are expected to begin a job to process the records and return an <xref:System.IAsyncResult> that the workflow runtime uses to wait for completion.</span></span> <span data-ttu-id="3e693-116">L'implementazione predefinita è chiamare <xref:System.Activities.Tracking.TrackingParticipant.Track%2A> e restituire uno stato completato.</span><span class="sxs-lookup"><span data-stu-id="3e693-116">The default implementation is to call <xref:System.Activities.Tracking.TrackingParticipant.Track%2A> and return a Completed status.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrack">
      <MemberSignature Language="C#" Value="protected internal virtual void EndTrack (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EndTrack(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub EndTrack (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void EndTrack(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="3e693-117">Stato dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-117">The status of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e693-118">Quando viene implementato in una classe derivata, rappresenta la fine di un'operazione di rilevamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-118">When implemented in a derived class, represents the end of an asynchronous tracking operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e693-119">Questo metodo dovrebbe eseguire il blocco fino al termine dell'operazione di rilevamento.</span><span class="sxs-lookup"><span data-stu-id="3e693-119">This method is expected to block until the tracking operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="protected internal abstract void Track (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Track(class System.Activities.Tracking.TrackingRecord record, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Track (record As TrackingRecord, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Track(System::Activities::Tracking::TrackingRecord ^ record, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.TrackingRecord" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="3e693-120">Record di rilevamento generati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-120">The generated tracking record.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="3e693-121">Periodo di tempo dopo il quale il provider interrompe il tentativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-121">The time period after which the provider aborts the attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e693-122">Quando viene implementato in una classe derivata, avvia un'elaborazione sincrona del record di rilevamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-122">When implemented in a derived class, used to synchronously process the tracking record.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e693-123">Il metodo di rilevamento viene chiamato quando l'istanza del flusso di lavoro genera un record di rilevamento.</span><span class="sxs-lookup"><span data-stu-id="3e693-123">The track method is called when the workflow instance emits a tracking record.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackingProfile">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Tracking.TrackingProfile TrackingProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Tracking.TrackingProfile TrackingProfile" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Tracking.TrackingParticipant.TrackingProfile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TrackingProfile As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Activities::Tracking::TrackingProfile ^ TrackingProfile { System::Activities::Tracking::TrackingProfile ^ get(); void set(System::Activities::Tracking::TrackingProfile ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e693-124">L'oggetto del profilo di rilevamento viene usato dal partecipante di rilevamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-124">The tracking profile object used by the tracking participant.</span>
          </span>
          <span data-ttu-id="3e693-125">Prima di aggiungere il partecipante di rilevamento alle estensioni del flusso di lavoro, il profilo di rilevamento viene impostato sul partecipante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-125">Before adding the tracking participant to the workflow extensions, the tracking profile is set on the participant.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e693-126">Profilo di rilevamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e693-126">The tracking profile.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e693-127">Il profilo di rilevamento definisce quali eventi di rilevamento vengono inviati a questo partecipante di rilevamento.</span><span class="sxs-lookup"><span data-stu-id="3e693-127">The tracking profile defines which tracking events are sent to this tracking participant.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>