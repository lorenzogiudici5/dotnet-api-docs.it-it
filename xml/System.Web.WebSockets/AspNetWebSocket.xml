<Type Name="AspNetWebSocket" FullName="System.Web.WebSockets.AspNetWebSocket">
  <TypeSignature Language="C#" Value="public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AspNetWebSocket extends System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebSockets.AspNetWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetWebSocket&#xA;Inherits WebSocket" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetWebSocket sealed : System::Net::WebSockets::WebSocket" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dbbcf-101">Rappresenta una connessione full duplex in tempo reale tra un server Web e un client in un'applicazione ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-101">Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dbbcf-102">Annulla tutte le operazioni di I/O in sospeso nell'oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> e imposta lo stato dell'oggetto in modo che non possa essere usato per avviare altre operazioni di I/O.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-102">Cancels any pending I/O operations on the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object and sets the state of the object so that it cannot be used to start additional I/O operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbbcf-103">Dopo il <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> chiamata al metodo, è comunque possibile accedere proprietà e metodi che non riguardano le operazioni dei / o.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-103">After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dbbcf-104">L'oggetto è già stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-104">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="dbbcf-105">Codice di stato dell'operazione di chiusura.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-105">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="dbbcf-106">Messaggio di stato dell'operazione di chiusura.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-106">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="dbbcf-107">Oggetto che annulla un'operazione in sospeso.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-107">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="dbbcf-108">Invia un messaggio asincrono a un client per chiudere la connessione.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-108">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="dbbcf-109">Se il server avvia la richiesta di chiusura della connessione, il metodo rimane in attesa che il client riconosca la richiesta prima di restituire un risultato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-109">If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</span></span></summary>
        <returns><span data-ttu-id="dbbcf-110">Riferimento all'operazione.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-110">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbbcf-111">È possibile utilizzare il <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> e <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> metodi per le richieste avviate dal server sia avviato dal client chiudere un <xref:System.Web.WebSockets.AspNetWebSocket> connessione.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-111">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="dbbcf-112">I due metodi gestiscono le richieste avviate dal client nello stesso modo: dopo il client invia un messaggio al server per la chiusura della connessione, il server chiama uno di questi metodi e invia un messaggio di conferma al client e il metodo restituisce.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-112">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="dbbcf-113">Per le richieste avviate dal server, i due metodi funzionano in modo diverso.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-113">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="dbbcf-114">Il <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> metodo invia un messaggio al client per chiudere la connessione, attende una risposta e quindi restituisce.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-114">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="dbbcf-115">Il server non attende che i dati aggiuntivi inviati dal client.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-115">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="dbbcf-116">Al contrario, il <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> metodo invia un messaggio al client per chiudere la connessione e restituisce senza attendere una risposta.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-116">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="dbbcf-117">Dopo il metodo restituisce un risultato, è possibile chiamare il <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> metodo e gestire dati aggiuntivi o il riconoscimento inviato dal client.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-117">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dbbcf-118">L'oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> è già stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-118">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dbbcf-119">L'oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> si trova in uno stato interrotto.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-119">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="dbbcf-120">oppure</span><span class="sxs-lookup"><span data-stu-id="dbbcf-120">-or-</span></span>  
  
 <span data-ttu-id="dbbcf-121">Operazioni di invio non disponibili.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-121">Sending operations are unavailable.</span></span>  
  
 <span data-ttu-id="dbbcf-122">oppure</span><span class="sxs-lookup"><span data-stu-id="dbbcf-122">-or-</span></span>  
  
 <span data-ttu-id="dbbcf-123">Operazioni di ricezione non disponibili.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-123">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="dbbcf-124">Codice di stato dell'operazione di chiusura.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-124">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="dbbcf-125">Messaggio di stato dell'operazione di chiusura.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-125">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="dbbcf-126">Oggetto che annulla un'operazione in sospeso.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-126">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="dbbcf-127">Invia un messaggio asincrono a un client per chiudere la connessione.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-127">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="dbbcf-128">Se il server avvia la richiesta di chiusura della connessione, il metodo restituisce un risultato senza attendere una risposta.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-128">If the server initiates the request to close the connection, the method returns without waiting for a response.</span></span></summary>
        <returns><span data-ttu-id="dbbcf-129">Riferimento all'operazione.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-129">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbbcf-130">È possibile utilizzare il <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> e <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> metodi per le richieste avviate dal server sia avviato dal client chiudere un <xref:System.Web.WebSockets.AspNetWebSocket> connessione.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-130">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="dbbcf-131">I due metodi gestiscono le richieste avviate dal client nello stesso modo: dopo il client invia un messaggio al server per la chiusura della connessione, il server chiama uno di questi metodi e invia un messaggio di conferma al client e il metodo restituisce.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-131">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="dbbcf-132">Per le richieste avviate dal server, i due metodi funzionano in modo diverso.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-132">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="dbbcf-133">Il <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> metodo invia un messaggio al client per chiudere la connessione, attende una risposta e quindi restituisce.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-133">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="dbbcf-134">Il server non attende che i dati aggiuntivi inviati dal client.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-134">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="dbbcf-135">Al contrario, il <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> metodo invia un messaggio al client per chiudere la connessione e restituisce senza attendere una risposta.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-135">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="dbbcf-136">Dopo il metodo restituisce un risultato, è possibile chiamare il <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> metodo e gestire dati aggiuntivi o il riconoscimento inviato dal client.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-136">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dbbcf-137">L'oggetto è già stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-137">The object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dbbcf-138">L'oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> si trova in uno stato interrotto.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-138">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="dbbcf-139">oppure</span><span class="sxs-lookup"><span data-stu-id="dbbcf-139">-or-</span></span>  
  
 <span data-ttu-id="dbbcf-140">Operazioni di invio non disponibili.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-140">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbbcf-141">Ottiene un codice di stato che indica il motivo per cui un oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> è stato chiuso.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-141">Gets a status code that indicates why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="dbbcf-142">Codice di stato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-142">The status code.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dbbcf-143">L'oggetto è già stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-143">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbbcf-144">Ottiene un messaggio di stato che indica il motivo per cui un oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> è stato chiuso.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-144">Gets a status message that explains why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="dbbcf-145">Messaggio di stato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-145">The status message.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dbbcf-146">L'oggetto è già stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-146">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dbbcf-147">Rilascia tutte le risorse usate da un oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-147">Releases all resources used by an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbbcf-148">ASP.NET chiama automaticamente il <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> metodo su un <xref:System.Web.WebSockets.AspNetWebSocket> oggetto di rilasciare le risorse che rimangono in esecuzione al termine del codice.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-148">ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dbbcf-149">Matrice che contiene i dati del messaggio.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-149">The array that contains the message data.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="dbbcf-150">Oggetto che annulla un'operazione in sospeso.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-150">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="dbbcf-151">Riceve un singolo frammento di messaggio da un client remoto.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-151">Receives a single message fragment from a remote client.</span></span></summary>
        <returns><span data-ttu-id="dbbcf-152">Riferimento all'attività di ricezione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-152">A reference to the task of receiving a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dbbcf-153">L'oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> è già stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-153">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dbbcf-154">L'oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> si trova in uno stato interrotto.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-154">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="dbbcf-155">oppure</span><span class="sxs-lookup"><span data-stu-id="dbbcf-155">-or-</span></span>  
  
 <span data-ttu-id="dbbcf-156">Operazioni di ricezione non disponibili.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-156">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dbbcf-157">Matrice che contiene i dati del messaggio.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-157">The array that contains the message data.</span></span></param>
        <param name="messageType"><span data-ttu-id="dbbcf-158">Il tipo di messaggio.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-158">The message type.</span></span></param>
        <param name="endOfMessage">
          <span data-ttu-id="dbbcf-159"><see langword="true" /> per indicare che un frammento rappresenta la fine di un messaggio completo; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-159"><see langword="true" /> to indicate that a fragment is the end of a complete message; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="dbbcf-160">Oggetto che annulla un'operazione in sospeso.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-160">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="dbbcf-161">Invia un singolo frammento di messaggio a un client remoto.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-161">Sends a single message fragment to a remote client.</span></span></summary>
        <returns><span data-ttu-id="dbbcf-162">Riferimento all'attività di invio di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-162">A reference to the task of sending a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dbbcf-163">L'oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> è stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-163">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dbbcf-164">L'oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> si trova in uno stato interrotto.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-164">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="dbbcf-165">oppure</span><span class="sxs-lookup"><span data-stu-id="dbbcf-165">-or-</span></span>  
  
 <span data-ttu-id="dbbcf-166">Operazioni di invio non disponibili.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-166">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbbcf-167">Ottiene un valore che indica lo stato aperto o chiuso dell'oggetto <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-167">Gets a value that indicates the open or closed state of an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <value><span data-ttu-id="dbbcf-168">Stato corrente.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-168">The current state.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dbbcf-169">L'oggetto è già stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-169">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbbcf-170">Ottiene il nome di un protocollo specifico dell'applicazione che un client remoto e un server possono usare per scambiare dati su una connessione <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-170">Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="dbbcf-171">Nome del protocollo.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-171">The name of the protocol.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dbbcf-172">L'oggetto è già stato eliminato.</span><span class="sxs-lookup"><span data-stu-id="dbbcf-172">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>