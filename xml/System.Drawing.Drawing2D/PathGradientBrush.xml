<Type Name="PathGradientBrush" FullName="System.Drawing.Drawing2D.PathGradientBrush">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8b7cee23933b89a310a179b9ce17fd49157b201" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410295" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PathGradientBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PathGradientBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.PathGradientBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PathGradientBrush&#xA;Inherits Brush" />
  <TypeSignature Language="C++ CLI" Value="public ref class PathGradientBrush sealed : System::Drawing::Brush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Incapsula un oggetto <see cref="T:System.Drawing.Brush" /> che riempie la parte interna di un oggetto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con una sfumatura. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La sfumatura di colore è un'ombreggiatura uniforme di colori dal punto centrale del percorso per il bordo di un limite di fuori del percorso. Effetto di stile in cui la sfumatura inizia e termina, posizioni e fattori di blend, e la velocità di modifica del colore.  
  
 Pennelli per sfumature di percorso non rispetta il <xref:System.Drawing.Graphics.SmoothingMode%2A> proprietà del <xref:System.Drawing.Graphics> oggetto utilizzato per eseguire il disegno. Le aree riempite tramite un <xref:System.Drawing.Drawing2D.PathGradientBrush> dell'oggetto vengono visualizzate nello stesso modo (alias) indipendentemente dalla modalità di arrotondamento.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Drawing.Drawing2D.PathGradientBrush>. In questo esempio è progettato per l'uso con Windows Form e richiede la <xref:System.Windows.Forms.PaintEventArgs> e, un parametro di <xref:System.Windows.Forms.PaintEventHandler>.  
  
 [!code-csharp[System.Drawing.UsingaGradientBrush#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.UsingaGradientBrush#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> con il percorso specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathGradientBrush(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> che definisce l'area riempita da questa classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> con il percorso specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathGradientBrush(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">Matrice delle strutture <see cref="T:System.Drawing.Point" /> che rappresenta i punti che compongono i vertici del percorso.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> con i punti specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathGradientBrush(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">Matrice delle strutture <see cref="T:System.Drawing.PointF" /> che rappresenta i punti che compongono i vertici del percorso.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> con i punti specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.Point[] points, System.Drawing.Drawing2D.WrapMode wrapMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.WrapMode wrapMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathGradientBrush(cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::WrapMode wrapMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="points">Matrice delle strutture <see cref="T:System.Drawing.Point" /> che rappresenta i punti che compongono i vertici del percorso.</param>
        <param name="wrapMode">Enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che specifica come vengono affiancati i riempimenti disegnati con questa classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> con i punti specificati e la modalità A capo automatico.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.PointF[] points, System.Drawing.Drawing2D.WrapMode wrapMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.WrapMode wrapMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathGradientBrush(cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::WrapMode wrapMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="points">Matrice delle strutture <see cref="T:System.Drawing.PointF" /> che rappresenta i punti che compongono i vertici del percorso.</param>
        <param name="wrapMode">Enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che specifica come vengono affiancati i riempimenti disegnati con questa classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> con i punti specificati e la modalità A capo automatico.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blend">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Blend Blend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Blend Blend" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.Blend" />
      <MemberSignature Language="VB.NET" Value="Public Property Blend As Blend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Blend ^ Blend { System::Drawing::Drawing2D::Blend ^ get(); void set(System::Drawing::Drawing2D::Blend ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Blend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una classe <see cref="T:System.Drawing.Drawing2D.Blend" /> che specifica le posizioni e i fattori che definiscono un'interruzione personalizzata per la sfumatura.</summary>
        <value>Classe <see cref="T:System.Drawing.Drawing2D.Blend" /> che rappresenta un'interruzione personalizzata per la sfumatura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Drawing.Drawing2D.Blend> contiene le matrici corrispondenti dei fattori di blend e posizioni. I fattori di blend specificano le percentuali di colore iniziale e finale da utilizzare nella posizione corrispondente. Le posizioni vengono fornite come percentuale della distanza lungo il percorso della sfumatura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CenterColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CenterColor" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CenterColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CenterColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore al centro della sfumatura del percorso.</summary>
        <value>Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore al centro della sfumatura del percorso.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF CenterPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF CenterPoint" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property CenterPoint As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::PointF CenterPoint { System::Drawing::PointF get(); void set(System::Drawing::PointF value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il punto centrale della sfumatura del percorso.</summary>
        <value>Struttura <see cref="T:System.Drawing.PointF" /> che rappresenta il punto centrale della sfumatura del percorso.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia esatta di questo <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> creato da questo metodo di cui viene eseguito il cast come oggetto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusScales">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF FocusScales { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF FocusScales" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusScales As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::PointF FocusScales { System::Drawing::PointF get(); void set(System::Drawing::PointF value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il punto di attivazione dell'interruzione della sfumatura.</summary>
        <value>Struttura <see cref="T:System.Drawing.PointF" /> che rappresenta il punto di attivazione dell'interruzione della sfumatura.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.ColorBlend InterpolationColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpolationColors As ColorBlend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::ColorBlend ^ InterpolationColors { System::Drawing::Drawing2D::ColorBlend ^ get(); void set(System::Drawing::Drawing2D::ColorBlend ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.ColorBlend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una classe <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> che definisce una sfumatura lineare a più colori.</summary>
        <value>Classe <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> che definisce una sfumatura lineare a più colori.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Drawing.Drawing2D.ColorBlend> contiene le matrici corrispondenti dei colori e delle posizioni. Le posizioni sono valori compresi tra 0 e 1 che consente di specificare la percentuale della distanza lungo il percorso della sfumatura in cui si trova il colore corrispondente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Moltiplica la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> che rappresenta la trasformazione geometrica locale di questa classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> per la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificata anteponendo la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">Classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> che verrà moltiplicata per la matrice di trasformazione corrente del pennello.</param>
        <summary>Aggiorna la matrice di trasformazione del pennello con il prodotto tra la matrice di trasformazione del pennello e un'altra matrice.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">Classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> che verrà moltiplicata per la matrice di trasformazione corrente del pennello.</param>
        <param name="order">Enumerazione <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> che specifica in quale ordine moltiplicare le due matrici.</param>
        <summary>Aggiorna la matrice di trasformazione del pennello con il prodotto tra la matrice di trasformazione del pennello e un'altra matrice.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un tracciato e aggiunge un rettangolo.  
  
-   Crea un <xref:System.Drawing.Drawing2D.PathGradientBrush> dai punti di percorso (in questo esempio, i punti di formano un rettangolo, ma è possibile che la maggior parte di qualsiasi forma).  
  
-   Imposta il colore centrale rosso e il colore sul blu circostante.  
  
-   Disegna il <xref:System.Drawing.Drawing2D.PathGradientBrush> alla schermata precedente all'applicazione della trasformazione moltiplicativa.  
  
-   Creazione di una matrice che ruota il pennello di 90 gradi e lo converte per 100 in entrambi gli assi.  
  
-   Applica la matrice al pennello usando il <xref:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform%2A> metodo.  
  
-   Disegna il pennello per lo schermo.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF Rectangle { System::Drawing::RectangleF get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un rettangolo di delimitazione per questa classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <value>Struttura <see cref="T:System.Drawing.RectangleF" /> che rappresenta un'area rettangolare che delimita il percorso riempito da questa classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reimposta la proprietà <see cref="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" /> sull'identità.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente Reimposta la trasformazione geometrica di `pgBrush` all'identità. Si presuppone che `myPath` è un oggetto esistente <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
```csharp  
PathGradientBrush pgBrush = new PathGradientBrush(myPath);  
 pgBrush.ResetTransform();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Applica una rotazione in senso orario dell'angolo specificato alla trasformazione geometrica locale.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">Angolo (estensione) di rotazione.</param>
        <summary>Ruota la trasformazione geometrica locale in base al valore specificato. Questo metodo antepone la rotazione alla trasformazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">Angolo (estensione) di rotazione.</param>
        <param name="order">Oggetto <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> che specifica se accodare o anteporre la matrice di rotazione.</param>
        <summary>Ruota la trasformazione geometrica locale in base al valore specificato nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un tracciato e aggiunge un rettangolo.  
  
-   Crea un <xref:System.Drawing.Drawing2D.PathGradientBrush> dai punti di percorso (in questo esempio, i punti di formano un rettangolo, ma è possibile che la maggior parte di qualsiasi forma).  
  
-   Imposta il colore centrale rosso e il colore sul blu circostante.  
  
-   Disegna il <xref:System.Drawing.Drawing2D.PathGradientBrush> sullo schermo prima dell'applicazione della trasformazione.  
  
-   Applica la trasformazione rotativa al pennello usando il relativo <xref:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform%2A> metodo.  
  
-   Disegna il pennello ruotato (rettangolo) sullo schermo.  
  
 Si noti che il rettangolo inferiore ruotato di 45 gradi rispetto a quello disegnato prima la conversione.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Modifica le proporzioni della trasformazione geometrica locale in base ai valori specificati. Questo metodo antepone la matrice per la modifica delle proporzioni alla trasformazione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">Fattore di modifica delle proporzioni della trasformazione nella direzione dell'asse x.</param>
        <param name="sy">Fattore di modifica delle proporzioni della trasformazione nella direzione dell'asse y.</param>
        <summary>Modifica le proporzioni della trasformazione geometrica locale in base ai valori specificati. Questo metodo antepone la matrice per la modifica delle proporzioni alla trasformazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">Fattore di modifica delle proporzioni della trasformazione nella direzione dell'asse x.</param>
        <param name="sy">Fattore di modifica delle proporzioni della trasformazione nella direzione dell'asse y.</param>
        <param name="order">Oggetto <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> che specifica se accodare o anteporre la matrice di ridimensionamento.</param>
        <summary>Modifica le proporzioni della trasformazione geometrica locale in base ai valori specificati nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Il codice  
  
-   Crea un tracciato e aggiunge un rettangolo.  
  
-   Crea un <xref:System.Drawing.Drawing2D.PathGradientBrush> dai punti di percorso (in questo esempio, i punti di formano un rettangolo, ma è possibile che la maggior parte di qualsiasi forma).  
  
-   Imposta il colore centrale rosso e il colore sul blu circostante.  
  
-   Disegna il <xref:System.Drawing.Drawing2D.PathGradientBrush> alla schermata prima di applicare la trasformazione di scala.  
  
-   Applica la trasformazione di scala al pennello usando il relativo <xref:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform%2A> metodo.  
  
-   Chiamate di <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> metodo per spostare il rettangolo pennello in modo che non si sovrapponga a quello disegnato alla schermata precedente.  
  
-   Disegna il rettangolo pennello tradotti sullo schermo.  
  
 Si noti che il rettangolo inferiore è il doppio del tempo in come asse x è quello disegnato prima la conversione.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBlendTriangularShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una sfumatura con un colore centrale e un'interruzione lineare su un colore circostante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Valore compreso tra 0 e 1 che specifica il punto in cui, lungo qualsiasi radiale dal centro al limite del percorso, si troverà la massima intensità del colore centrale. Il valore 1 (valore predefinito) posiziona la massima intensità al centro del percorso.</param>
        <summary>Crea una sfumatura con un colore centrale e un'interruzione lineare su un colore circostante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è presente più di un colore di <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> matrice, il primo colore nella matrice viene utilizzata per il colore finale. I colori specificati nella matrice vengono utilizzati per i punti discreti sul percorso limite del pennello.  
  
   
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus, float scale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Valore compreso tra 0 e 1 che specifica il punto in cui, lungo qualsiasi radiale dal centro al limite del percorso, si troverà la massima intensità del colore centrale. Il valore 1 (valore predefinito) posiziona la massima intensità al centro del percorso.</param>
        <param name="scale">Valore compreso tra 0 e 1 che specifica l'intensità massima del colore centrale, sfumato con il colore del limite. Il valore 1 indica la massima intensità possibile del colore centrale e rappresenta l'impostazione predefinita.</param>
        <summary>Crea una sfumatura con un colore centrale e un'interruzione lineare su ciascun colore circostante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è presente più di un colore di <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> matrice, il primo colore nella matrice viene utilizzata per il colore finale. I colori specificati nella matrice sono i colori utilizzati per i punti discreti sul percorso limite del pennello.  
  
 Per impostazione predefinita, quando si sposta dal limite di una sfumatura percorso al punto centrale del colore cambia gradualmente dal colore del limite per il colore centrale. È possibile personalizzare il posizionamento e fusione dei colori dei limiti e center chiamando questo metodo.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un tracciato e aggiunge un rettangolo.  
  
-   Crea un <xref:System.Drawing.Drawing2D.PathGradientBrush> dai punti di percorso (in questo esempio, i punti di formano un rettangolo, ma è possibile che la maggior parte di qualsiasi forma).  
  
-   Imposta il colore centrale rosso e il colore sul blu circostante.  
  
-   Disegna il <xref:System.Drawing.Drawing2D.PathGradientBrush> alla schermata prima di applicare la trasformazione di blend.  
  
-   Applica la trasformazione di blend al pennello usando il relativo <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A> metodo.  
  
-   Chiamate di <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> metodo per spostare il rettangolo pennello in modo che non si sovrapponga a quello disegnato alla schermata precedente.  
  
-   Disegna che il rettangolo del pennello trasformato viene disegnato sullo schermo.  
  
 Si noti che il colore centrale (rosso) si trova metà dal centro del percorso fino al limite di percorso.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSigmaBellShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un'interruzione della sfumatura tra il colore centrale e il primo colore circostante in base a una curva a campana.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Valore compreso tra 0 e 1 che specifica il punto in cui, lungo qualsiasi radiale dal centro al limite del percorso, si troverà la massima intensità del colore centrale. Il valore 1 (valore predefinito) posiziona la massima intensità al centro del percorso.</param>
        <summary>Crea un pennello per le sfumature che cambia colore a partire dal centro del percorso fino al suo limite. Il cambiamento da un colore all'altro si basa su una curva a campana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è presente più di un colore di <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> matrice, il primo colore nella matrice viene utilizzata per il colore finale. I colori specificati nella matrice sono i colori utilizzati per i punti discreti sul percorso limite del pennello.  
  
 Per impostazione predefinita, quando si sposta dal limite di una sfumatura percorso al punto centrale del colore cambia gradualmente dal colore del limite per il colore centrale. È possibile personalizzare il posizionamento e fusione dei colori dei limiti e center chiamando questo metodo.  
  
   
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus, float scale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Valore compreso tra 0 e 1 che specifica il punto in cui, lungo qualsiasi radiale dal centro al limite del percorso, si troverà la massima intensità del colore centrale. Il valore 1 (valore predefinito) posiziona la massima intensità al centro del percorso.</param>
        <param name="scale">Valore compreso tra 0 e 1 che specifica l'intensità massima del colore centrale, sfumato con il colore del limite. Il valore 1 indica la massima intensità possibile del colore centrale e rappresenta l'impostazione predefinita.</param>
        <summary>Crea un pennello per le sfumature che cambia colore a partire dal centro del percorso fino al suo limite. Il cambiamento da un colore all'altro si basa su una curva a campana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è presente più di un colore di <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> matrice, il primo colore nella matrice viene utilizzata per il colore finale. I colori specificati nella matrice sono i colori utilizzati per i punti discreti sul percorso limite del pennello.  
  
 Per impostazione predefinita, quando si sposta dal limite di una sfumatura percorso al punto centrale del colore cambia gradualmente dal colore del limite per il colore centrale. È possibile personalizzare il posizionamento e fusione dei colori dei limiti e center chiamando questo metodo.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un tracciato e aggiunge un rettangolo.  
  
-   Crea un <xref:System.Drawing.Drawing2D.PathGradientBrush> dai punti di percorso (in questo esempio, i punti di formano un rettangolo, ma è possibile che la maggior parte di qualsiasi forma).  
  
-   Imposta il colore centrale rosso e il colore sul blu circostante.  
  
-   Disegna il <xref:System.Drawing.Drawing2D.PathGradientBrush> alla schermata prima di applicare la trasformazione di blend.  
  
-   Applica la trasformazione di blend al pennello usando il relativo <xref:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape%2A> metodo.  
  
-   Chiamate di <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> metodo per spostare il rettangolo pennello in modo che non si sovrapponga a quello disegnato alla schermata precedente.  
  
-   Disegna il rettangolo del pennello trasformato sullo schermo.  
  
 Si noti che il colore centrale (rosso) si trova metà dal centro del percorso fino al limite di percorso.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SurroundColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] SurroundColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] SurroundColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors" />
      <MemberSignature Language="VB.NET" Value="Public Property SurroundColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ SurroundColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una matrice di colori che corrisponde ai punti del percorso che questa classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> riempie.</summary>
        <value>Matrice di strutture <see cref="T:System.Drawing.Color" /> che rappresenta i colori associati a ogni punto del percorso che questa classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> riempie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni <xref:System.Drawing.Color> nel <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> matrice corrisponde a un punto nel percorso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una copia dell'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> che definisce una trasformazione geometrica locale per questo oggetto <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <value>Copia dell'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> che definisce una trasformazione geometrica che si applica solo ai riempimenti disegnati con questo oggetto <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una trasformazione geometrica può essere utilizzata per tradurre, scala, rotazione o inclinare il riempimento sfumato. Poiché la matrice restituita e dal <xref:System.Drawing.Drawing2D.PathGradientBrush.Transform%2A> proprietà è una copia della trasformazione geometrica del pennello, è necessario eliminarlo quando non è più necessario.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Applica la traslazione specificata alla trasformazione geometrica locale. Questo metodo antepone la traslazione alla trasformazione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">Valore della traslazione in X.</param>
        <param name="dy">Valore della traslazione in Y.</param>
        <summary>Applica la traslazione specificata alla trasformazione geometrica locale. Questo metodo antepone la traslazione alla trasformazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">Valore della traslazione in X.</param>
        <param name="dy">Valore della traslazione in Y.</param>
        <param name="order">Ordine, di anteposizione o accodamento, in cui applicare la traslazione.</param>
        <summary>Applica la traslazione specificata alla trasformazione geometrica locale nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.WrapMode WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As WrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::WrapMode WrapMode { System::Drawing::Drawing2D::WrapMode get(); void set(System::Drawing::Drawing2D::WrapMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che indica la modalità A capo automatico per questa classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <value>Enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che specifica come vengono affiancati i riempimenti disegnati con questa classe <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>