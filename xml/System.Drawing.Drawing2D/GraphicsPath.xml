<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GraphicsPath.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5010b867d0c50e186006fea90cdbc67fefd8cfd61.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">010b867d0c50e186006fea90cdbc67fefd8cfd61</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Represents a series of connected lines and curves.</source>
          <target state="translated">Rappresenta una serie di curve e di linee collegate.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</source>
          <target state="translated">Applicazioni utilizzano i percorsi per disegnare i profili delle forme, riempire le parti interne di forme e creare aree di visualizzazione.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</source>
          <target state="translated">Il motore della grafica gestisce le coordinate delle forme geometriche in un percorso di spazio di coordinate complessivo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A path may be composed of any number of figures (subpaths).</source>
          <target state="translated">Può essere composta da un percorso di un numero qualsiasi di figure (sottopercorsi).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</source>
          <target state="translated">Ogni figura è costituito sia da una sequenza di connesse linee e curve o una primitiva di forma geometrica.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The starting point of a figure is the first point in the sequence of connected lines and curves.</source>
          <target state="translated">Il punto iniziale di una figura è il primo punto nella sequenza di linee e curve collegate.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The ending point is the last point in the sequence.</source>
          <target state="translated">Il punto finale è l'ultimo punto nella sequenza.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The starting and ending points of a geometric shape primitive are defined by the primitive specification.</source>
          <target state="translated">I punti iniziale e finale di una primitiva di forma geometrica vengono definiti dalla specifica primitiva.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</source>
          <target state="translated">La figura costituito da una sequenza di righe collegate e curve (i cui punti iniziale e finale possono coincidere) è una figura aperta, a meno che non è chiuso in modo esplicito.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure can be closed explicitly, by using the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A&gt;</ph> method, which closes the current figure by connecting a line from the ending point to the starting point.</source>
          <target state="translated">Una figura può essere chiuso in modo esplicito, tramite il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A&gt;</ph> metodo, che chiude la figura corrente tracciando una linea tra il punto finale al punto di partenza.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure that consists of a geometric shape primitive is a closed figure.</source>
          <target state="translated">Figura che è costituito da una primitiva di forma geometrica è una figura chiusa.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>For purposes of filling and clipping (for example, if a path is rendered using <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph>), all open figures are closed by adding a line from the figure's first point to its last point.</source>
          <target state="translated">Ai fini del riempimento e il ridimensionamento (ad esempio, se viene eseguito il rendering di un percorso utilizzando <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph>), tutte le figure vengono chiuse aggiungendo una riga dal primo punto della figura all'ultimo punto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A new figure is implicitly started when a path is created or when a figure is closed.</source>
          <target state="translated">Quando viene creato un percorso o quando una figura è chiusa, viene avviata in modo implicito una nuova figura.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A new figure is explicitly created when the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A&gt;</ph> method is called.</source>
          <target state="translated">Una nuova figura viene creata in modo esplicito quando il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</source>
          <target state="translated">Quando una primitiva di forma geometrica viene aggiunto a un percorso, aggiunge una figura contenente la forma geometrica e inizia in modo implicito una nuova figura.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Consequently, there is always a current figure in a path.</source>
          <target state="translated">Di conseguenza, è sempre una figura corrente in un percorso.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</source>
          <target state="translated">Quando le linee e curve vengono aggiunti a un percorso, una riga implicita viene aggiunto per collegare il punto finale della figura corrente al punto di partenza delle nuove righe e le curve per formare una sequenza di righe collegate e curve.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</source>
          <target state="translated">Una figura ha una direzione in cui viene descritto come vengono tracciati i segmenti di linea e curva tra i punti iniziale e il punto finale.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</source>
          <target state="translated">La direzione è definita nell'ordine in cui vengono aggiunti a una figura linee e curve o è definito da una primitiva di forma geometrica.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The direction is used in determining the path interiors for clipping and fill.</source>
          <target state="translated">La direzione viene utilizzata per determinare l'area interna di percorso per il ritaglio e riempimento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration of <ph id="ph3">&lt;see langword="Alternate" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> con un'enumerazione <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> di tipo <ph id="ph3">&lt;see langword="Alternate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /&gt;</ph> value of <ph id="ph3">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> con un valore <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /&gt;</ph> di <ph id="ph3">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the interior of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> is filled.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> che determina il modo in cui viene riempita la parte interna di <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> con l'enumerazione <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che definisce le coordinate dei punti che compongono questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Matrice di elementi di enumerazioni <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> che specifica il tipo di ciascun punto corrispondente nella matrice <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> arrays.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> con le matrici <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> specificate.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che definisce le coordinate dei punti che compongono questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Matrice di elementi di enumerazioni <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> che specifica il tipo di ciascun punto corrispondente nella matrice <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> array with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> arrays.</source>
          <target state="translated">Inizializza una nuova istanza della matrice <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> con le matrici <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> specificate.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che definisce le coordinate dei punti che compongono questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Matrice di elementi di enumerazioni <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> che specifica il tipo di ciascun punto corrispondente nella matrice <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> che specifica il modo in cui vengono riempite le parti interne delle forme presenti in <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> arrays and with the specified <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration element.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> con le matrici <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> specificate e con l'elemento di enumerazione <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che definisce le coordinate dei punti che compongono questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Matrice di elementi di enumerazioni <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> che specifica il tipo di ciascun punto corrispondente nella matrice <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> che specifica il modo in cui vengono riempite le parti interne delle forme presenti in <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> array with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> arrays and with the specified <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration element.</source>
          <target state="translated">Inizializza una nuova istanza della matrice <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> con le matrici <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> specificate e con l'elemento di enumerazione <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Accoda un arco ellittico alla figura corrente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangular bounds of the ellipse from which the arc is taken.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta i limiti rettangolari dell'ellisse dalla quale deriva l'arco.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angolo iniziale dell'arco, misurato in gradi in senso orario dall'asse x.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">Angolo tra <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e la fine dell'arco.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Accoda un arco ellittico alla figura corrente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nella figura, viene aggiunta una riga per connettere l'endpoint del segmento precedente all'inizio dell'arco.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">L'arco viene tracciato lungo il perimetro dell'ellisse delimitata dal rettangolo specificato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">Il punto iniziale dell'arco è determinato dalla misura in senso orario dall'asse x dell'ellisse (a 0 gradi) per il numero di gradi nell'angolo iniziale.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">L'endpoint si trova in modo analogo misurando in senso orario dal punto di partenza per il numero di gradi nell'angolo della curva.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se l'angolo di apertura è maggiore di 360 gradi o minore di-360 gradi, l'arco rispettivamente sweep da 360 gradi o -360 gradi.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a rectangle, from which the arc is defined.</source>
          <target state="translated">Creazione di un rettangolo, da cui è definito l'arco.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a path, <ph id="ph1">`myPath`</ph>.</source>
          <target state="translated">Creazione di un percorso <ph id="ph1">`myPath`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</source>
          <target state="translated">Definisce un arco ellittico di 180 gradi che si estende da 0 a 180 gradi e li aggiunge a un percorso.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Draws the path to screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangular bounds of the ellipse from which the arc is taken.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta i limiti rettangolari dell'ellisse dalla quale deriva l'arco.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angolo iniziale dell'arco, misurato in gradi in senso orario dall'asse x.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">Angolo tra <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e la fine dell'arco.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Accoda un arco ellittico alla figura corrente.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nella figura, viene aggiunta una riga per connettere l'endpoint del segmento precedente all'inizio dell'arco.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">L'arco viene tracciato lungo il perimetro dell'ellisse delimitata dal rettangolo specificato.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">Il punto iniziale dell'arco è determinato dalla misura in senso orario dall'asse x dell'ellisse (a 0 gradi) per il numero di gradi nell'angolo iniziale.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">L'endpoint si trova in modo analogo misurando in senso orario dal punto di partenza per il numero di gradi nell'angolo della curva.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se l'angolo di apertura è maggiore di 360 gradi o minore di-360 gradi, l'arco rispettivamente sweep da 360 gradi o -360 gradi.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Coordinata x dell'angolo superiore sinistro dell'area rettangolare che definisce l'ellisse dalla quale viene disegnato l'arco.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Coordinata y dell'angolo superiore sinistro dell'area rettangolare che definisce l'ellisse dalla quale viene disegnato l'arco.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The width of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Larghezza dell'area rettangolare che definisce l'ellisse dalla quale viene disegnato l'arco.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The height of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Altezza dell'area rettangolare che definisce l'ellisse dalla quale viene disegnato l'arco.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angolo iniziale dell'arco, misurato in gradi in senso orario dall'asse x.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">Angolo tra <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e la fine dell'arco.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Accoda un arco ellittico alla figura corrente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nella figura, viene aggiunta una riga per connettere l'endpoint del segmento precedente all'inizio dell'arco.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">L'arco viene tracciato lungo il perimetro dell'ellisse delimitata dal rettangolo specificato.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">Il punto iniziale dell'arco è determinato dalla misura in senso orario dall'asse x dell'ellisse (a 0 gradi) per il numero di gradi nell'angolo iniziale.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">L'endpoint si trova in modo analogo misurando in senso orario dal punto di partenza per il numero di gradi nell'angolo della curva.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se l'angolo di apertura è maggiore di 360 gradi o minore di-360 gradi, l'arco rispettivamente sweep da 360 gradi o -360 gradi.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Coordinata x dell'angolo superiore sinistro dell'area rettangolare che definisce l'ellisse dalla quale viene disegnato l'arco.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Coordinata y dell'angolo superiore sinistro dell'area rettangolare che definisce l'ellisse dalla quale viene disegnato l'arco.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Larghezza dell'area rettangolare che definisce l'ellisse dalla quale viene disegnato l'arco.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Altezza dell'area rettangolare che definisce l'ellisse dalla quale viene disegnato l'arco.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angolo iniziale dell'arco, misurato in gradi in senso orario dall'asse x.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">Angolo tra <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e la fine dell'arco.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Accoda un arco ellittico alla figura corrente.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nella figura, viene aggiunta una riga per connettere l'endpoint del segmento precedente all'inizio dell'arco.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">L'arco viene tracciato lungo il perimetro dell'ellisse delimitata dal rettangolo specificato.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">Il punto iniziale dell'arco è determinato dalla misura in senso orario dall'asse x dell'ellisse (a 0 gradi) per il numero di gradi nell'angolo iniziale.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">L'endpoint si trova in modo analogo misurando in senso orario dal punto di partenza per il numero di gradi nell'angolo della curva.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se l'angolo di apertura è maggiore di 360 gradi o minore di-360 gradi, l'arco rispettivamente sweep da 360 gradi o -360 gradi.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Aggiunge una curva di Bézier cubica alla figura corrente.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the starting point of the curve.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta il punto iniziale della curva.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the first control point for the curve.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta il primo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the second control point for the curve.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta il secondo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the endpoint of the curve.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta il punto finale della curva.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Aggiunge una curva di Bézier cubica alla figura corrente.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">Curva cubica viene costruita dal primo al quarto punto tramite il secondo e terzo punto come punti di controllo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">Se è presente una riga precedente o un segmento curvo nella figura, viene aggiunta una riga per connettere l'endpoint del segmento precedente al punto iniziale della curva cubica.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the starting point of the curve.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta il punto iniziale della curva.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the first control point for the curve.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta il primo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the second control point for the curve.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta il secondo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the endpoint of the curve.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta il punto finale della curva.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Aggiunge una curva di Bézier cubica alla figura corrente.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">Curva cubica viene costruita dal primo al quarto punto tramite il secondo e terzo punto come punti di controllo.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">Se è presente una riga precedente o un segmento curvo nella figura, viene aggiunta una riga per connettere l'endpoint del segmento precedente al punto iniziale della curva cubica.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the starting point of the curve.</source>
          <target state="translated">Coordinata X del punto iniziale della curva.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the starting point of the curve.</source>
          <target state="translated">Coordinata Y del punto iniziale della curva.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the first control point for the curve.</source>
          <target state="translated">Coordinata x del primo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the first control point for the curve.</source>
          <target state="translated">Coordinata y del primo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the second control point for the curve.</source>
          <target state="translated">Coordinata x del secondo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the second control point for the curve.</source>
          <target state="translated">Coordinata y del secondo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the endpoint of the curve.</source>
          <target state="translated">Coordinata x del punto finale della curva.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the endpoint of the curve.</source>
          <target state="translated">Coordinata y del punto finale della curva.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Aggiunge una curva di Bézier cubica alla figura corrente.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">Curva cubica viene costruita dal primo al quarto punto tramite il secondo e terzo punto come punti di controllo.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">Se è presente una riga precedente o un segmento curvo nella figura, viene aggiunta una riga per connettere l'endpoint del segmento precedente al punto iniziale della curva cubica.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a path.</source>
          <target state="translated">Crea un percorso.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</source>
          <target state="translated">Aggiunge una curva di Bézier cubica definita da punti (50, 50), (70, 0), (100, 120) e (150, 50) per il percorso.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Closes the curve.</source>
          <target state="translated">Chiude la curva.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the path to screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the starting point of the curve.</source>
          <target state="translated">Coordinata X del punto iniziale della curva.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the starting point of the curve.</source>
          <target state="translated">Coordinata Y del punto iniziale della curva.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the first control point for the curve.</source>
          <target state="translated">Coordinata x del primo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the first control point for the curve.</source>
          <target state="translated">Coordinata y del primo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the second control point for the curve.</source>
          <target state="translated">Coordinata x del secondo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the second control point for the curve.</source>
          <target state="translated">Coordinata y del secondo punto di controllo della curva.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the endpoint of the curve.</source>
          <target state="translated">Coordinata x del punto finale della curva.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the endpoint of the curve.</source>
          <target state="translated">Coordinata y del punto finale della curva.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Aggiunge una curva di Bézier cubica alla figura corrente.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">Curva cubica viene costruita dal primo al quarto punto tramite il secondo e terzo punto come punti di controllo.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">Se è presente una riga precedente o un segmento curvo nella figura, viene aggiunta una riga per connettere l'endpoint del segmento precedente al punto iniziale della curva cubica.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">Aggiunge una sequenza di curve di Bézier cubiche collegate alla figura corrente.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curves.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta i punti che definiscono le curve.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">Aggiunge una sequenza di curve di Bézier cubiche collegate alla figura corrente.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints and control points of the connected curves.</source>
          <target state="translated">Il <ph id="ph1">`points`</ph> parametro specifica una matrice di endpoint e i punti di controllo delle curve collegate.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The first curve is constructed from the first point to the fourth point in the <ph id="ph1">`points`</ph> array by using the second and third points as control points.</source>
          <target state="translated">Prima curva viene costruita dal primo al quarto punto di <ph id="ph1">`points`</ph> matrice tramite il secondo e terzo punto come punti di controllo.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</source>
          <target state="translated">Oltre all'endpoint della curva precedente, è necessario ogni curva successiva nella sequenza di esattamente tre ulteriori punti: i due punti nella sequenza sono punti di controllo e il terzo è l'endpoint per la curva aggiunta.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nella figura, viene aggiunta una riga per connettere l'endpoint del segmento precedente al punto iniziale della curva cubica prima nella sequenza.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Creates an array of seven points (representing two connected Bézier curves).</source>
          <target state="translated">Crea una matrice di sette punti (che rappresentano due curve di Bézier collegate).</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Creates a path and adds the series of Bézier curve points to the path.</source>
          <target state="translated">Crea un percorso e aggiunge la serie di punti della curva di Bézier al percorso.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Draws the path to screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curves.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta i punti che definiscono le curve.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">Aggiunge una sequenza di curve di Bézier cubiche collegate alla figura corrente.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints and control points of the connected curves.</source>
          <target state="translated">Il <ph id="ph1">`points`</ph> parametro specifica una matrice di endpoint e i punti di controllo delle curve collegate.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>The first curve is constructed from the first point to the fourth point in the <ph id="ph1">`points`</ph> array by using the second and third points as control points.</source>
          <target state="translated">Prima curva viene costruita dal primo al quarto punto di <ph id="ph1">`points`</ph> matrice tramite il secondo e terzo punto come punti di controllo.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</source>
          <target state="translated">Oltre all'endpoint della curva precedente, è necessario ogni curva successiva nella sequenza di esattamente tre ulteriori punti: i due punti nella sequenza sono punti di controllo e il terzo è l'endpoint per la curva aggiunta.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nella figura, viene aggiunta una riga per connettere l'endpoint del segmento precedente al punto iniziale della curva cubica prima nella sequenza.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>For an example see:</source>
          <target state="translated">Per vedere un esempio:</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Aggiunge una curva chiusa a questo percorso.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Viene utilizzata una curva spline di tipo Cardinal in quanto la curva attraversa ciascun punto della matrice.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta i punti che definiscono la curva.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Aggiunge una curva chiusa a questo percorso.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Viene utilizzata una curva spline di tipo Cardinal in quanto la curva attraversa ciascun punto della matrice.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Se il primo e ultimo punto di <ph id="ph1">`points`</ph> matrice non sono lo stesso punto, chiudere la curva è necessario collegare questi due punti.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</source>
          <target state="translated">Impossibile impostare il valore della tensione per questo metodo e assume un valore equivalente a 0.5.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta i punti che definiscono la curva.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Aggiunge una curva chiusa a questo percorso.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Viene utilizzata una curva spline di tipo Cardinal in quanto la curva attraversa ciascun punto della matrice.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Se il primo e ultimo punto di <ph id="ph1">`points`</ph> matrice non sono lo stesso punto, chiudere la curva è necessario collegare questi due punti.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</source>
          <target state="translated">Impossibile impostare il valore della tensione per questo metodo e assume un valore equivalente a 0.5.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta i punti che definiscono la curva.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</source>
          <target state="translated">Valore compreso tra 0 e 1 che specifica la curvatura tra i punti, dove 0 rappresenta la curva minore (l'angolo più stretto) e 1 la curva più ampia.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Aggiunge una curva chiusa a questo percorso.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Viene utilizzata una curva spline di tipo Cardinal in quanto la curva attraversa ciascun punto della matrice.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Se il primo e ultimo punto di <ph id="ph1">`points`</ph> matrice non sono lo stesso punto, chiudere la curva è necessario collegare questi due punti.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Creates an array of six points (representing a cardinal spline).</source>
          <target state="translated">Crea una matrice di sei punti (che rappresentano una spline di tipo cardinal).</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</source>
          <target state="translated">Crea un percorso e aggiunge le curve di spline di tipo cardinal al percorso (chiuso dall'endpoint al punto di partenza).</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Draws the path to screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Notice that a tension of 0.5 is used.</source>
          <target state="translated">Si noti che viene utilizzata una tensione pari a 0,5.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta i punti che definiscono la curva.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</source>
          <target state="translated">Valore compreso tra 0 e 1 che specifica la curvatura tra i punti, dove 0 rappresenta la curva minore (l'angolo più stretto) e 1 la curva più ampia.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Aggiunge una curva chiusa a questo percorso.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Viene utilizzata una curva spline di tipo Cardinal in quanto la curva attraversa ciascun punto della matrice.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Se il primo e ultimo punto di <ph id="ph1">`points`</ph> matrice non sono lo stesso punto, chiudere la curva è necessario collegare questi due punti.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Aggiunge una curva spline alla figura corrente.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Viene utilizzata una curva spline di tipo Cardinal in quanto la curva attraversa ciascun punto della matrice.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta i punti che definiscono la curva.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Aggiunge una curva spline alla figura corrente.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Viene utilizzata una curva spline di tipo Cardinal in quanto la curva attraversa ciascun punto della matrice.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta i punti che definiscono la curva.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Aggiunge una curva spline alla figura corrente.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Viene utilizzata una curva spline di tipo Cardinal in quanto la curva attraversa ciascun punto della matrice.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta i punti che definiscono la curva.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Valore che specifica la curvatura tra i punti di controllo.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Valori maggiori di 1 producono risultati imprevedibili.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Aggiunge una curva spline alla figura corrente.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta i punti che definiscono la curva.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Valore che specifica la curvatura tra i punti di controllo.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Valori maggiori di 1 producono risultati imprevedibili.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Aggiunge una curva spline alla figura corrente.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta i punti che definiscono la curva.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The index of the element in the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> array that is used as the first point in the curve.</source>
          <target state="translated">Indice dell'elemento nella matrice <bpt id="p1">&lt;c&gt;</bpt>punti<ept id="p1">&lt;/c&gt;</ept> utilizzato come primo punto della curva.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Valore che specifica la curvatura tra i punti di controllo.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Valori maggiori di 1 producono risultati imprevedibili.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Valore che specifica la curvatura tra i punti di controllo.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Valori maggiori di 1 producono risultati imprevedibili.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Aggiunge una curva spline alla figura corrente.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The curve begins at the point in the array specified by the <ph id="ph1">`offset`</ph> parameter and includes the number of points (segments) specified by <ph id="ph2">`numberOfSegments`</ph>.</source>
          <target state="translated">La curva inizia nel punto di matrice specificato dal parametro di <ph id="ph1">`offset`</ph> parametro e include il numero di punti (segmenti) specificati da <ph id="ph2">`numberOfSegments`</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Creates an array of four points (representing a cardinal spline).</source>
          <target state="translated">Crea una matrice di quattro punti (che rappresentano una spline di tipo cardinal).</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Creates a path and using the array of points, adds the curve to the path.</source>
          <target state="translated">Crea un percorso e usando la matrice di punti, aggiunge la curva al percorso.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Draws the path to the screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A&gt;</ph>.</source>
          <target state="translated">Si noti che sebbene la matrice conterrà quattro punti, sono presenti solo tre segmenti, ovvero il numero specificato nel terzo argomento della chiamata a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta i punti che definiscono la curva.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The index of the element in the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> array that is used as the first point in the curve.</source>
          <target state="translated">Indice dell'elemento nella matrice <bpt id="p1">&lt;c&gt;</bpt>punti<ept id="p1">&lt;/c&gt;</ept> utilizzato come primo punto della curva.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The number of segments used to draw the curve.</source>
          <target state="translated">Numero di segmenti utilizzati per disegnare la curva.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>A segment can be thought of as a line connecting two points.</source>
          <target state="translated">Un segmento può essere considerato come una linea che collega due punti.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Valore che specifica la curvatura tra i punti di controllo.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Valori maggiori di 1 producono risultati imprevedibili.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Aggiunge una curva spline alla figura corrente.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The curve begins at the point in the array specified by <ph id="ph1">`offset`</ph>, and includes the number of points (segments) specified by <ph id="ph2">`numberOfSegments`</ph>.</source>
          <target state="translated">La curva inizia nel punto di matrice specificato dal parametro <ph id="ph1">`offset`</ph>e include il numero di punti (segmenti) specificati da <ph id="ph2">`numberOfSegments`</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Aggiunge un'ellisse al percorso corrente.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta il rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Aggiunge un'ellisse al percorso corrente.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Creates a bounding rectangle that defines an ellipse.</source>
          <target state="translated">Crea un rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Creates a path and adds the ellipse to the path.</source>
          <target state="translated">Crea un percorso e aggiunge i puntini di sospensione per il percorso.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Draws the path to screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta il rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Aggiunge un'ellisse al percorso corrente.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Coordinata X dell'angolo superiore sinistro del rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Coordinata Y dell'angolo superiore sinistro del rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Larghezza del rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Altezza del rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Aggiunge un'ellisse al percorso corrente.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Coordinata X dell'angolo superiore sinistro del rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Coordinata y dell'angolo superiore sinistro del rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Larghezza del rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Altezza del rettangolo di delimitazione che definisce l'ellisse.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Aggiunge un'ellisse al percorso corrente.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Accoda un segmento di linea a questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the starting point of the line.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta il punto iniziale della linea.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the endpoint of the line.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta il punto finale della linea.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Accoda un segmento di linea a questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Questo metodo aggiunge il segmento di linea definito dai punti specificati alla fine di questo <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nel <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, viene disegnato un segmento di linea per collegare l'ultimo punto del percorso e il primo punto il nuovo segmento di linea.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the starting point of the line.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta il punto iniziale della linea.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the endpoint of the line.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta il punto finale della linea.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Accoda un segmento di linea a questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Questo metodo aggiunge il segmento di linea definito dai punti specificati alla fine di questo <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nel <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, viene disegnato un segmento di linea per collegare l'ultimo punto del percorso e il primo punto il nuovo segmento di linea.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the starting point of the line.</source>
          <target state="translated">Coordinata x del punto iniziale della linea.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the starting point of the line.</source>
          <target state="translated">Coordinata y del punto iniziale della linea.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the endpoint of the line.</source>
          <target state="translated">Coordinata x del punto finale della linea.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the endpoint of the line.</source>
          <target state="translated">Coordinata y del punto finale della linea.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Appends a line segment to the current figure.</source>
          <target state="translated">Accoda un segmento di linea alla figura corrente.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method adds the line segment defined by the specified points to the end of the current figure.</source>
          <target state="translated">Questo metodo aggiunge il segmento di linea definito dai punti specificati alla fine della figura corrente.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nel <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, viene disegnato un segmento di linea per collegare l'ultimo punto del percorso e il primo punto il nuovo segmento di linea.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</source>
          <target state="translated">Il codice crea un percorso, vengono aggiunte tre linee che costituiscono un triangolo e quindi disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the starting point of the line.</source>
          <target state="translated">Coordinata x del punto iniziale della linea.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the starting point of the line.</source>
          <target state="translated">Coordinata y del punto iniziale della linea.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the endpoint of the line.</source>
          <target state="translated">Coordinata x del punto finale della linea.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the endpoint of the line.</source>
          <target state="translated">Coordinata y del punto finale della linea.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Accoda un segmento di linea a questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Questo metodo aggiunge il segmento di linea definito dai punti specificati alla fine di questo <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nel <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, viene disegnato un segmento di linea per collegare l'ultimo punto del percorso e il primo punto il nuovo segmento di linea.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Accoda una serie di segmenti di linea collegati alla fine di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the line segments to add.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta i punti che definiscono i segmenti di linea da aggiungere.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Accoda una serie di segmenti di linea collegati alla fine di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nella figura, viene aggiunta una riga per l'endpoint del segmento precedente il punto iniziale della linea di connessione.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints.</source>
          <target state="translated">Il <ph id="ph1">`points`</ph> parametro specifica una matrice di endpoint.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The first two specify the first line.</source>
          <target state="translated">I primi due specificano la prima riga.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</source>
          <target state="translated">Ogni punto aggiuntivo specifica l'endpoint di un segmento di linea, il cui punto iniziale è l'endpoint della riga precedente.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Creates an array of four points that describe a triangle.</source>
          <target state="translated">Crea una matrice di quattro punti che descrivono un triangolo.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Creates a path and adds the array of lines.</source>
          <target state="translated">Crea un percorso e aggiunge la matrice delle righe.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Draws the path to screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</source>
          <target state="translated">Si noti che ogni riga dopo il primo punto utilizza il punto precedente come punto iniziale e il nuovo punto come endpoint.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the line segments to add.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta i punti che definiscono i segmenti di linea da aggiungere.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Accoda una serie di segmenti di linea collegati alla fine di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</source>
          <target state="translated">Se sono presenti righe precedenti o curve nella figura, viene aggiunta una riga per l'endpoint del segmento precedente il punto iniziale della linea di connessione.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints.</source>
          <target state="translated">Il <ph id="ph1">`points`</ph> parametro specifica una matrice di endpoint.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>The first two specify the first line.</source>
          <target state="translated">I primi due specificano la prima riga.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</source>
          <target state="translated">Ogni punto aggiuntivo specifica l'endpoint di un segmento di linea, il cui punto iniziale è l'endpoint della riga precedente.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</source>
          <target state="translated">Valore Booleano che specifica se la prima figura nel percorso aggiunto fa parte dell'ultima figura in questo percorso.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A value of <ph id="ph1">&lt;see langword="true" /&gt;</ph> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</source>
          <target state="translated">Il valore <ph id="ph1">&lt;see langword="true" /&gt;</ph> specifica che, se possibile, la prima figura nel percorso aggiunto fa parte dell'ultima figura in questo percorso.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A value of <ph id="ph1">&lt;see langword="false" /&gt;</ph> specifies that the first figure in the added path is separate from the last figure in this path.</source>
          <target state="translated">Il valore <ph id="ph1">&lt;see langword="false" /&gt;</ph> specifica che la prima figura nel percorso aggiunto è separata dall'ultima figura in questo percorso.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Appends the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to this path.</source>
          <target state="translated">Accoda la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> specificata a questo percorso.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</source>
          <target state="translated">Consente di creare un triangolo lato-verso l'alto e l'altro un triangolo di scorrimento sul lato uno di due percorsi.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Adds the second path to the first.</source>
          <target state="translated">Aggiunge il percorso secondo al primo.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Draws the resultant path to the screen.</source>
          <target state="translated">Disegna il percorso risultante sullo schermo.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Aggiunge il contorno della forma a torta a questo percorso.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta il rettangolo di delimitazione che definisce l'ellisse dalla quale viene disegnata la torta.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angolo iniziale della sezione a torta, misurato in gradi in senso orario dall'asse x.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Angolo tra <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e la fine della sezione a torta, misurato in gradi in senso orario da <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Aggiunge il contorno della forma a torta a questo percorso.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">La forma a torta è definita da una struttura parziale di un'ellisse e due linee radiali che intersecano i punti finali della struttura parziale.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">Il contorno parziale inizia in corrispondenza <ph id="ph1">`startAngle`</ph> (misurato in senso orario dall'asse x) e termina in corrispondenza <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Coordinata x dell'angolo superiore sinistro del rettangolo di delimitazione che definisce l'ellisse dalla quale viene disegnata la torta.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Coordinata y dell'angolo superiore sinistro del rettangolo di delimitazione che definisce l'ellisse dalla quale viene disegnata la torta.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Larghezza del rettangolo di delimitazione che definisce l'ellisse dalla quale viene disegnata la torta.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Altezza del rettangolo di delimitazione che definisce l'ellisse dalla quale viene disegnata la torta.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angolo iniziale della sezione a torta, misurato in gradi in senso orario dall'asse x.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Angolo tra <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e la fine della sezione a torta, misurato in gradi in senso orario da <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Aggiunge il contorno della forma a torta a questo percorso.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">La forma a torta è definita da una struttura parziale di un'ellisse e due linee radiali che intersecano i punti finali della struttura parziale.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">Il contorno parziale inizia in corrispondenza <ph id="ph1">`startAngle`</ph> (misurato in senso orario dall'asse x) e termina in corrispondenza <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</source>
          <target state="translated">Il codice crea un tracciato, aggiunge la forma a torta e quindi disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Coordinata x dell'angolo superiore sinistro del rettangolo di delimitazione che definisce l'ellisse dalla quale viene disegnata la torta.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Coordinata y dell'angolo superiore sinistro del rettangolo di delimitazione che definisce l'ellisse dalla quale viene disegnata la torta.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Larghezza del rettangolo di delimitazione che definisce l'ellisse dalla quale viene disegnata la torta.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Altezza del rettangolo di delimitazione che definisce l'ellisse dalla quale viene disegnata la torta.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angolo iniziale della sezione a torta, misurato in gradi in senso orario dall'asse x.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Angolo tra <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e la fine della sezione a torta, misurato in gradi in senso orario da <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Aggiunge il contorno della forma a torta a questo percorso.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">La forma a torta è definita da una struttura parziale di un'ellisse e due linee radiali che intersecano i punti finali della struttura parziale.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">Il contorno parziale inizia in corrispondenza <ph id="ph1">`startAngle`</ph> (misurato in senso orario dall'asse x) e termina in corrispondenza <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a polygon to this path.</source>
          <target state="translated">Aggiunge un poligono a questo percorso.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the polygon to add.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che definisce il poligono da aggiungere.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Adds a polygon to this path.</source>
          <target state="translated">Aggiunge un poligono a questo percorso.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The points in the <ph id="ph1">`points`</ph> array specify the vertices of a polygon.</source>
          <target state="translated">I punti di <ph id="ph1">`points`</ph> matrice specificano i vertici del poligono.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</source>
          <target state="translated">Se il primo punto nella matrice non corrisponde all'ultimo punto, i due punti vengono collegati per chiudere il poligono.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Creates an array of points that defines a polygon.</source>
          <target state="translated">Crea una matrice di punti che definiscono un poligono.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Creates a path and adds the polygon to the path.</source>
          <target state="translated">Crea un percorso e aggiunge il poligono al percorso.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Draws the path to the screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the polygon to add.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che definisce il poligono da aggiungere.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>Adds a polygon to this path.</source>
          <target state="translated">Aggiunge un poligono a questo percorso.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>The points in the <ph id="ph1">`points`</ph> array specify the vertices of a polygon.</source>
          <target state="translated">I punti di <ph id="ph1">`points`</ph> matrice specificano i vertici del poligono.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</source>
          <target state="translated">Se il primo punto nella matrice non corrisponde all'ultimo punto, i due punti vengono collegati per chiudere il poligono.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">Aggiunge un rettangolo a questo percorso.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangle to add.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta il rettangolo da aggiungere.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">Aggiunge un rettangolo a questo percorso.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Creates a path.</source>
          <target state="translated">Crea un percorso.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Creates a rectangle and adds the rectangle to the path.</source>
          <target state="translated">Creazione di un rettangolo e aggiunge il rettangolo al percorso.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Draws the path to the screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle to add.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta il rettangolo da aggiungere.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">Aggiunge un rettangolo a questo percorso.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">Aggiunge una serie di rettangoli a questo percorso.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structures that represents the rectangles to add.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta i rettangoli da aggiungere.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">Aggiunge una serie di rettangoli a questo percorso.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Creates a path.</source>
          <target state="translated">Crea un percorso.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Creates an array of rectangles and adds the rectangles to the path.</source>
          <target state="translated">Crea una matrice di rettangoli e aggiunge i rettangoli al percorso.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Draws the path to the screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structures that represents the rectangles to add.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta i rettangoli da aggiungere.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">Aggiunge una serie di rettangoli a questo percorso.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a text string to this path.</source>
          <target state="translated">Aggiunge una stringa di testo a questo percorso.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> che rappresenta il nome del tipo di carattere con il quale viene disegnato il testo.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> che rappresenta le informazioni relative allo stile del testo, ad esempio grassetto, corsivo e così via,</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">e di cui deve essere eseguito il cast come intero (vedere il codice di esempio più avanti in questa sezione).</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">Altezza della casella quadrata em che delimita il carattere.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point where the text starts.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta il punto in cui inizia il testo.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> che specifica le informazioni relative alla formattazione del testo, come spaziatura e allineamento.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Aggiunge una stringa di testo a questo percorso.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Creates a path.</source>
          <target state="translated">Crea un percorso.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Sets up string and font arguments.</source>
          <target state="translated">Imposta gli argomenti di stringa e carattere.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Adds the string to the path.</source>
          <target state="translated">Aggiunge la stringa per il percorso.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Draws the string to the screen.</source>
          <target state="translated">Disegna la stringa alla schermata.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>There are two important things to be pointed out. First, notice that the <ph id="ph1">`fontStyle`</ph> argument is cast as an integer.</source>
          <target state="translated">Esistono due aspetti importanti da sottolineare. In primo luogo, si noti che il <ph id="ph1">`fontStyle`</ph> cast dell'argomento come valore integer.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A&gt;</ph> method requires this so that two or more <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> members can be combined to create the desired font style (in this case, <ph id="ph3">&lt;xref:System.Drawing.FontStyle.Italic&gt;</ph> and <ph id="ph4">&lt;xref:System.Drawing.FontStyle.Underline&gt;</ph>).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A&gt;</ph> metodo richiede questa configurazione in modo che due o più <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> i membri possono essere combinati per creare lo stile del carattere desiderato (in questo caso, <ph id="ph3">&lt;xref:System.Drawing.FontStyle.Italic&gt;</ph> e <ph id="ph4">&lt;xref:System.Drawing.FontStyle.Underline&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Secondly, notice that the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> method is used rather than the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> method.</source>
          <target state="translated">In secondo luogo, si noti che il <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> viene usato il metodo anziché <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>If <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> is used, solid text is rendered, whereas if <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> is used, the text will be an outline style.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> viene utilizzata, viene visualizzato il testo a tinta unita, mentre se <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> è utilizzato, il testo sarà un stile di struttura.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> che rappresenta il nome del tipo di carattere con il quale viene disegnato il testo.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> che rappresenta le informazioni relative allo stile del testo, ad esempio grassetto, corsivo e così via,</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">e di cui deve essere eseguito il cast come intero (vedere il codice di esempio più avanti in questa sezione).</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">Altezza della casella quadrata em che delimita il carattere.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point where the text starts.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta il punto in cui inizia il testo.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> che specifica le informazioni relative alla formattazione del testo, come spaziatura e allineamento.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Aggiunge una stringa di testo a questo percorso.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> che rappresenta il nome del tipo di carattere con il quale viene disegnato il testo.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> che rappresenta le informazioni relative allo stile del testo, ad esempio grassetto, corsivo e così via,</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">e di cui deve essere eseguito il cast come intero (vedere il codice di esempio più avanti in questa sezione).</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">Altezza della casella quadrata em che delimita il carattere.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangle that bounds the text.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> che rappresenta il rettangolo che delimita il testo.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> che specifica le informazioni relative alla formattazione del testo, come spaziatura e allineamento.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Aggiunge una stringa di testo a questo percorso.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> che rappresenta il nome del tipo di carattere con il quale viene disegnato il testo.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> che rappresenta le informazioni relative allo stile del testo, ad esempio grassetto, corsivo e così via,</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">e di cui deve essere eseguito il cast come intero (vedere il codice di esempio più avanti in questa sezione).</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">Altezza della casella quadrata em che delimita il carattere.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that bounds the text.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta il rettangolo che delimita il testo.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> che specifica le informazioni relative alla formattazione del testo, come spaziatura e allineamento.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Aggiunge una stringa di testo a questo percorso.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Clears all markers from this path.</source>
          <target state="translated">Elimina tutti i marcatori da questo percorso.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> method to create a marker at the current location in a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> metodo per creare un marcatore nella posizione corrente in un <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> method to iterate through the existing markers in a path.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> metodo per scorrere gli indicatori esistenti in un percorso.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Markers are used to separate groups of subpaths.</source>
          <target state="translated">Gli indicatori vengono utilizzati per separare i gruppi di sottopercorsi.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>One or more subpaths can be contained between two markers.</source>
          <target state="translated">Uno o più sottopercorsi possono trovarsi tra due indicatori.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Creates a path.</source>
          <target state="translated">Crea un percorso.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Adds several objects to the path.</source>
          <target state="translated">Aggiunta di diversi oggetti per il percorso.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Adds markers to the path.</source>
          <target state="translated">Aggiunta di marcatori al percorso.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Clears all markers from the path.</source>
          <target state="translated">Cancella tutti gli indicatori dal percorso.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Draws the path to the screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Creates an exact copy of this path.</source>
          <target state="translated">Crea una copia esatta di questo percorso.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> this method creates, cast as an object.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> creato da questo metodo di cui viene eseguito il cast come oggetto.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Creates a path.</source>
          <target state="translated">Crea un percorso.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Adds several figures to the path.</source>
          <target state="translated">Aggiunge diverse figure al percorso.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Draws the path to the screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Clones a copy of that path.</source>
          <target state="translated">Clona una copia di tale percorso.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Draws the new path to the screen.</source>
          <target state="translated">Disegna il nuovo percorso sullo schermo.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Notice that the call the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A&gt;</ph> method must be cast as a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Si noti che la chiamata di <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A&gt;</ph> (metodo) deve essere eseguito il cast come un <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Closes all open figures in this path and starts a new figure.</source>
          <target state="translated">Chiude tutte le figure aperte in questo percorso e inizia una nuova figura.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>It closes each open figure by connecting a line from its endpoint to its starting point.</source>
          <target state="translated">Tale chiusura viene eseguita collegando una linea dal punto finale della figura al punto iniziale.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Creates a path.</source>
          <target state="translated">Crea un percorso.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Adds several open figures to the path.</source>
          <target state="translated">Aggiunge diverse figure aperte al percorso.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Closes all figures in the path.</source>
          <target state="translated">Chiude tutte le cifre nel percorso.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Draws the path to the screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>Closes the current figure and starts a new figure.</source>
          <target state="translated">Chiude la figura corrente e inizia una nuova figura.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</source>
          <target state="translated">Se la figura corrente contiene una sequenza di linee e curve collegate, il metodo chiude il ciclo tracciando una linea dal punto finale al punto iniziale.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</source>
          <target state="translated">Il codice crea un triangolo creando un nuovo percorso, iniziare una figura, aggiunta di due righe che si intersecano nella figura, e quindi chiudere la figura per formare un triangolo.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The path is then drawn to the screen.</source>
          <target state="translated">Il percorso viene quindi disegnato sullo schermo.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Rilascia tutte le risorse usate da questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A&gt;</ph> le risorse utilizzate da questo <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> riallocazione per altri scopi.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Ottiene o imposta un'enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> che determina il modo in cui vengono riempite le parti interne delle forme presenti in questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> che specifica il modo in cui vengono riempite le parti interne delle forme presenti in <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Consente a un oggetto di effettuare un tentativo di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da Garbage Collection.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Converts each curve in this path into a sequence of connected line segments.</source>
          <target state="translated">Converte ogni curva di questo percorso in una sequenza di segmenti di linea collegati.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
          <source>Converts each curve in this path into a sequence of connected line segments.</source>
          <target state="translated">Converte ogni curva di questo percorso in una sequenza di segmenti di linea collegati.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to transform this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> before flattening.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> con la quale trasformare questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> prima di renderla piatta.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>Applies the specified transform and then converts each curve in this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into a sequence of connected line segments.</source>
          <target state="translated">Applica la trasformazione specificata, quindi converte tutte le curve presenti in questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> in una sequenza di segmenti di linea collegati.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to transform this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> before flattening.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> con la quale trasformare questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> prima di renderla piatta.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Specifies the maximum permitted error between the curve and its flattened approximation.</source>
          <target state="translated">Specifica l'errore massimo consentito tra la curva e la relativa approssimazione di appiattimento.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A value of 0.25 is the default.</source>
          <target state="translated">Il valore predefinito è 0,25.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Reducing the flatness value will increase the number of line segments in the approximation.</source>
          <target state="translated">Riducendo il valore di appiattimento, aumenterà il numero di segmenti di linea nell'approssimazione.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Converts each curve in this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into a sequence of connected line segments.</source>
          <target state="translated">Converte ogni curva di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> in una sequenza di segmenti di linea collegati.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Creates a graphics path and a translation matrix.</source>
          <target state="translated">Crea un percorso di grafica e una matrice di traslazione.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Adds a curve to the path using four points.</source>
          <target state="translated">Aggiunge una curva per il percorso usando quattro punti.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path (curve) to the screen, using a black pen.</source>
          <target state="translated">Disegna il percorso (curva) sullo schermo, utilizzando una penna colore nero.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Shifts the curve down 10 pixels and flattens it.</source>
          <target state="translated">Sposta la curva verso il basso 10 pixel e semplifica il.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the curve to the screen using, a red pen.</source>
          <target state="translated">Disegna la curva sullo schermo utilizzando, una penna rossa.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Notice that the red curve has flattened lines connecting the points.</source>
          <target state="translated">Si noti che la curva rossa è bidimensionale linee che connettono i punti.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Restituisce un rettangolo che delimita questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Restituisce un rettangolo che delimita questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta un rettangolo che delimita questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">Le dimensioni del rettangolo di delimitazione restituito sono influenzata dal tipo di limite penna delimitatori finali e larghezza della penna e pertanto produce un adattamento"libero" al percorso delimitato.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">La formula approssimativo: il rettangolo di delimitazione iniziale viene ingrandito dalla larghezza della penna e il risultato viene moltiplicato per il relativo limite, più un margine aggiuntivo per i delimitatori finali.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Creates a graphics path.</source>
          <target state="translated">Crea un percorso grafico.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Adds an ellipse (circle) to it and draws it to the screen.</source>
          <target state="translated">Aggiunge un'ellisse (cerchio) e disegnato sullo schermo.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Retrieves the bounding rectangle for the circle with a call to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A&gt;</ph> and draws the rectangle to the screen.</source>
          <target state="translated">Recupera il rettangolo di delimitazione per il cerchio con una chiamata a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A&gt;</ph> e disegna il rettangolo sullo schermo.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Creates a second graphics path.</source>
          <target state="translated">Crea un secondo percorso grafico.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Adds a circle and widens the path to a width of 10.</source>
          <target state="translated">Aggiunge un cerchio e trasforma il percorso di una larghezza pari a 10.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Draws the path to the screen.</source>
          <target state="translated">Disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Retrieves the bounding rectangle for the second circle.</source>
          <target state="translated">Recupera il rettangolo di delimitazione per il secondo cerchio.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Draws the bounding rectangle to the screen.</source>
          <target state="translated">Disegna il rettangolo di delimitazione sullo schermo.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Displays the rectangle size in a dialog box.</source>
          <target state="translated">Visualizza le dimensioni del rettangolo in una finestra di dialogo.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</source>
          <target state="translated">Si noti che il rettangolo di delimitazione a destra (per l'account per la larghezza in eccesso della riga).</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> che specifica una trasformazione da applicare a questo percorso prima di calcolare il rettangolo di delimitazione.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</source>
          <target state="translated">Questo percorso non viene trasformato in maniera permanente e la trasformazione viene utilizzata solo durante il processo di calcolo del rettangolo di delimitazione.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when this path is transformed by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Restituisce un rettangolo che delimita questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando il percorso viene trasformato dalla classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta un rettangolo che delimita questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">Le dimensioni del rettangolo di delimitazione restituito sono influenzata dal tipo di limite penna delimitatori finali e larghezza della penna e pertanto produce un adattamento"libero" al percorso delimitato.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">La formula approssimativo: il rettangolo di delimitazione iniziale viene ingrandito dalla larghezza della penna e il risultato viene moltiplicato per il relativo limite, più un margine aggiuntivo per i delimitatori finali.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> che specifica una trasformazione da applicare a questo percorso prima di calcolare il rettangolo di delimitazione.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</source>
          <target state="translated">Questo percorso non viene trasformato in maniera permanente e la trasformazione viene utilizzata solo durante il processo di calcolo del rettangolo di delimitazione.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> with which to draw the <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> con la quale disegnare la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when the current path is transformed by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> and drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Restituisce un rettangolo che delimita questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando il percorso corrente viene trasformato dalla classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> specificata e disegnato con la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta un rettangolo che delimita questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">Le dimensioni del rettangolo di delimitazione restituito sono influenzata dal tipo di limite penna delimitatori finali e larghezza della penna e pertanto produce un adattamento"libero" al percorso delimitato.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">La formula approssimativo: il rettangolo di delimitazione iniziale viene ingrandito dalla larghezza della penna e il risultato viene moltiplicato per il relativo limite, più un margine aggiuntivo per i delimitatori finali.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>Gets the last point in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Ottiene l'ultimo punto nella matrice <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the last point in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta l'ultimo punto in questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>The code creates a path, adds a line to the path, and then gets the last point in the path.</source>
          <target state="translated">Il codice crea un percorso, aggiunge una riga per il percorso e quindi Ottiene l'ultimo punto del percorso.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che specifica la posizione da sottoporre a test.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> da verificare.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno del contorno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata. In caso contrario, restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Questo metodo verifica se la struttura di un percorso specificato viene eseguito il rendering visibile nel punto specificato.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che specifica la posizione da sottoporre a test.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> da verificare.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno del contorno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata. In caso contrario, restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Questo metodo verifica se la struttura di un percorso specificato viene eseguito il rendering visibile nel punto specificato.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che specifica la posizione da sottoporre a test.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> da verificare.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> per cui eseguire il test della visibilità.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata e utilizzando la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno del contorno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> disegnata con la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata. In caso contrario, restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Questo metodo verifica se la struttura di un percorso specificato viene eseguito il rendering visibile nel punto specificato.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Le coordinate del punto da sottoporre a test utilizzati in coordinate.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">Matrice di trasformazione di <ph id="ph1">`graphics`</ph> viene applicata in modo temporaneo prima di testare la visibilità.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che specifica la posizione da sottoporre a test.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> da verificare.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> per cui eseguire il test della visibilità.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata e utilizzando la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within (under) the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> disegnata con la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata. In caso contrario, restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Questo metodo verifica se la struttura di un percorso specificato viene eseguito il rendering visibile nel punto specificato.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Le coordinate del punto da sottoporre a test utilizzati in coordinate.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">Matrice di trasformazione di <ph id="ph1">`graphics`</ph> viene applicata in modo temporaneo prima di testare la visibilità.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordinata x del punto da verificare.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordinata y del punto da verificare.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> da verificare.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno del contorno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata. In caso contrario, restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Questo metodo verifica se la struttura di un percorso specificato viene eseguito il rendering visibile nel punto specificato.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordinata x del punto da verificare.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordinata y del punto da verificare.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> da verificare.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno del contorno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata. In caso contrario, restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Questo metodo verifica se la struttura di un percorso specificato viene eseguito il rendering visibile nel punto specificato.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordinata x del punto da verificare.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordinata y del punto da verificare.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> da verificare.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> per cui eseguire il test della visibilità.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata e utilizzando la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno del contorno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> disegnata con la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata. In caso contrario, restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Questo metodo verifica se la struttura di un percorso specificato viene eseguito il rendering visibile nel punto specificato.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Le coordinate del punto da sottoporre a test utilizzati in coordinate.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">Matrice di trasformazione di <ph id="ph1">`graphics`</ph> viene applicata in modo temporaneo prima di testare la visibilità.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Creates a path.</source>
          <target state="translated">Crea un percorso.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Adds a rectangle to the path.</source>
          <target state="translated">Aggiunge un rettangolo al percorso.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Creates a wide pen and widens the path with that pen (to make the example clearer),</source>
          <target state="translated">Crea una penna larga e ampliamento del percorso con quella penna (per rendere più chiaro l'esempio),</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A&gt;</ph>.</source>
          <target state="translated">Verifica di un punto (100, 50) per verificare se si trova all'interno di sotto di uno dei lati del rettangolo chiamando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The result is shown in the message box (in this case, true).</source>
          <target state="translated">Il risultato viene visualizzato nella finestra di messaggio (in questo caso, true).</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>In other words the edge is rendered over that point.</source>
          <target state="translated">In altre parole il bordo viene eseguito il rendering su tale punto.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordinata x del punto da verificare.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordinata y del punto da verificare.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> da verificare.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> per cui eseguire il test della visibilità.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando viene disegnata con la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata e utilizzando la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within (under) the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno o al di sotto del contorno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> disegnata con la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> specificata. In caso contrario, restituisce <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Questo metodo verifica se la struttura di un percorso specificato viene eseguito il rendering visibile nel punto specificato.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Le coordinate del punto da sottoporre a test utilizzati in coordinate.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">Matrice di trasformazione del <ph id="ph1">`graphics`</ph> parametro temporaneamente viene applicato prima di testare la visibilità.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato è contenuto all'interno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta il punto da sottoporre a test.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato è contenuto all'interno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>. In caso contrario, restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta il punto da sottoporre a test.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato è contenuto all'interno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>. In caso contrario, restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> che rappresenta il punto da sottoporre a test.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> per cui eseguire il test della visibilità.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato è contenuto all'interno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>. In caso contrario, restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Le coordinate del punto da sottoporre a test utilizzati in coordinate.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">Matrice di trasformazione del <ph id="ph1">`graphics`</ph> parametro temporaneamente viene applicato prima di testare la visibilità.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresenta il punto da sottoporre a test.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> per cui eseguire il test della visibilità.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato è contenuto all'interno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno di questo oggetto. In caso contrario, restituisce <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Le coordinate del punto da sottoporre a test utilizzati in coordinate.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">Matrice di trasformazione del <ph id="ph1">`graphics`</ph> parametro temporaneamente viene applicato prima di testare la visibilità.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordinata x del punto da verificare.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordinata y del punto da verificare.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato è contenuto all'interno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>. In caso contrario, restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordinata x del punto da verificare.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordinata y del punto da verificare.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato è contenuto all'interno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>. In caso contrario, restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordinata x del punto da verificare.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordinata y del punto da verificare.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> per cui eseguire il test della visibilità.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>, using the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato è contenuto all'interno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>, utilizzando la classe <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>. In caso contrario, restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Le coordinate del punto da sottoporre a test utilizzati in coordinate.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">Matrice di trasformazione di <ph id="ph1">`graphics`</ph> viene applicata in modo temporaneo prima di testare la visibilità.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Creates a path and adds an ellipse to the path.</source>
          <target state="translated">Crea un percorso e aggiunta di un'ellisse.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Tests whether the specified point is contained within the path.</source>
          <target state="translated">Verifica se il punto specificato è contenuto all'interno del percorso.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Displays the result in a dialog box.</source>
          <target state="translated">Visualizza il risultato in una finestra di dialogo.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordinata x del punto da verificare.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordinata y del punto da verificare.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> per cui eseguire il test della visibilità.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> in the visible clip region of the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se il punto specificato si trova all'interno di questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> nell'area di visualizzazione visibile della classe <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="true" /&gt;</ph> se il punto specificato si trova all'interno di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>. In caso contrario, restituisce <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Le coordinate del punto da sottoporre a test utilizzati in coordinate.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">Matrice di trasformazione del <ph id="ph1">`graphics`</ph> parametro temporaneamente viene applicato prima di testare la visibilità.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> that encapsulates arrays of points (<ph id="ph2">&lt;paramref name="points" /&gt;</ph>) and types (<ph id="ph3">&lt;paramref name="types" /&gt;</ph>) for this <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Ottiene una classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> che incapsula le matrici di punti (<ph id="ph2">&lt;paramref name="points" /&gt;</ph>) e tipi (<ph id="ph3">&lt;paramref name="types" /&gt;</ph>) per questa classe <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> that encapsulates arrays for both the points and types for this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> che incapsula le matrici sia per i punti che per i tipi della classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
          <source>Gets the points in the path.</source>
          <target state="translated">Ottiene i punti del percorso.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> objects that represent the path.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che rappresentano il percorso.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Gets the types of the corresponding points in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array.</source>
          <target state="translated">Ottiene i tipi dei punti corrispondenti nella matrice <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>An array of bytes that specifies the types of the corresponding points in the path.</source>
          <target state="translated">Matrice di byte che specifica i tipi dei punti corrispondenti nel percorso.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>The array of bytes returned by the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A&gt;</ph> property specifies point types and flags for the data points in a path.</source>
          <target state="translated">Matrice di byte restituiti dal <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A&gt;</ph> proprietà specifica di tipi di punti e i flag per i punti dati in un percorso.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</source>
          <target state="translated">Per ogni punto, da 0 a 2 bit indicano il tipo di un punto e 3 a 7 bit contenere un set di flag che specificano gli attributi di un punto.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>The following table shows possible values and their meanings.</source>
          <target state="translated">Nella tabella seguente mostra i valori possibili e i relativi significati.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Value</source>
          <target state="translated">Valore</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Meaning</source>
          <target state="translated">Significato</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is the start of a figure.</source>
          <target state="translated">Indica che il punto di inizio di una cifra.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is one of the two endpoints of a line.</source>
          <target state="translated">Indica che il punto è uno dei due endpoint di una riga.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is an endpoint or control point of a cubic Bézier spline.</source>
          <target state="translated">Indica che il punto di un endpoint o punto di controllo di una spline di Bézier cubica.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x7</source>
          <target state="translated">0x7</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Masks all bits except for the three low-order bits, which indicate the point type.</source>
          <target state="translated">Le maschere di tutti i componenti tranne i tre bit di ordine inferiore che indicano il tipo di punto.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x20</source>
          <target state="translated">0x20</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Specifies that the point is a marker.</source>
          <target state="translated">Specifica che il punto di un marcatore.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x80</source>
          <target state="translated">0x80</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Specifies that the point is the last point in a closed subpath (figure).</source>
          <target state="translated">Specifica che il punto sia l'ultimo punto in un sottopercorso chiuso (figura).</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> array.</source>
          <target state="translated">Ottiene il numero di elementi presenti nella matrice <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> o <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
          <source>An integer that specifies the number of elements in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> array.</source>
          <target state="translated">Intero che specifica il numero di elementi presenti nella matrice <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> o <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Empties the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> arrays and sets the <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> to <ph id="ph4">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</source>
          <target state="translated">Svuota le matrici <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> e <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> e imposta <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> su <ph id="ph4">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Creates a path.</source>
          <target state="translated">Crea un percorso.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Adds several primitives to it.</source>
          <target state="translated">Vengono aggiunte diverse primitive a esso.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Draws the path's points array to the screen.</source>
          <target state="translated">Disegno di una matrice di punti del percorso sullo schermo.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Resets the path to an empty state.</source>
          <target state="translated">Reimposta il percorso su uno stato vuoto.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Re-acquires the points array (if it exists).</source>
          <target state="translated">Acquisisce la matrice di punti di nuovo (se presente).</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Draws the array to the screen.</source>
          <target state="translated">Disegna la matrice alla schermata.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Notice that it finds no array following the reset call.</source>
          <target state="translated">Si noti che viene individuata alcuna matrice dopo la chiamata di reimpostazione.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Reverses the order of points in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Inverte l'ordine dei punti nella matrice <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> di questa classe <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Creates a path and adds several primitives to the path.</source>
          <target state="translated">Crea un percorso e aggiunge diverse primitive al percorso.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Draws the path's points array to the screen.</source>
          <target state="translated">Disegno di una matrice di punti del percorso sullo schermo.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Draws the reversed points array to the screen.</source>
          <target state="translated">Disegna la matrice di punti invertiti sullo schermo.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Notice that the second listing of points is in reverse order from the first.</source>
          <target state="translated">Si noti che il secondo elenco di punti in ordine inverso dal primo.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>Sets a marker on this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Imposta un marcatore in questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>This method creates a marker on the path that can be used to separate sections of the path.</source>
          <target state="translated">Questo metodo crea un indicatore nel percorso che può essere usato per separare le sezioni del percorso.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>You can then use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> methods to iterate through the markers in the path.</source>
          <target state="translated">È quindi possibile utilizzare il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> metodi per scorrere i marcatori nel percorso.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>Markers are used to separate groups of subpaths.</source>
          <target state="translated">Gli indicatori vengono utilizzati per separare i gruppi di sottopercorsi.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>One or more subpaths can be contained between two markers in the path.</source>
          <target state="translated">Uno o più sottopercorsi possono trovarsi tra due indicatori nel percorso.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</source>
          <target state="translated">Il codice crea un percorso e vengono aggiunte diverse primitive separate da marcatori e disegna il percorso alla schermata.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Starts a new figure without closing the current figure.</source>
          <target state="translated">Inizia una nuova figura senza chiudere quella corrente.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>All subsequent points added to the path are added to this new figure.</source>
          <target state="translated">Tutti i punti successivi aggiunti al percorso vengono aggiunti a questa nuova figura.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L'utente deve mantenere i punti originali se sono necessari.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">I punti originali vengono convertiti in punti di controllo di Bézier cubici internamente, pertanto non è previsto alcun meccanismo per la restituzione dei punti originali.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>This method starts a new subpath in the path.</source>
          <target state="translated">Questo metodo avvia un nuovo percorso secondario nel percorso.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Subpaths allow you to separate a path into sections and use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> class to iterate through the subpaths.</source>
          <target state="translated">Sottopercorsi consentono di separare un tracciato in sezioni e utilizzare il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> classe scorrerli.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Creates a path.</source>
          <target state="translated">Crea un percorso.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Adds two sets of figures.</source>
          <target state="translated">Aggiunge due set di dati.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The first set of figures combines four primitives into two figures.</source>
          <target state="translated">Il primo set di figure combina quattro primitive in due cifre.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</source>
          <target state="translated">Il secondo set di figure combina le stesse quattro primitive (ad eccezione del fatto che però sono offset nell'asse y) in tre cifre.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Draws all the figures to the screen.</source>
          <target state="translated">Disegna tutti i dati sullo schermo.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Notice the difference in the appearance between the two sets of figures.</source>
          <target state="translated">Si noti la differenza tra i due set di dati, l'aspetto.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that represents the transformation to apply.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> che rappresenta la trasformazione da applicare.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Applies a transform matrix to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applica una matrice di trasformazione a questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The transformation can scale, translate, rotate, or skew the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">La trasformazione può ridimensionare, convertire, rotazione o inclinare il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a path and adds an ellipse to the path.</source>
          <target state="translated">Crea un percorso e aggiunta di un'ellisse.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws path to the screen.</source>
          <target state="translated">Percorso viene disegnato sullo schermo.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a transform matrix to translate the path 100 units in the x-axis direction.</source>
          <target state="translated">Crea una matrice di trasformazione per convertire le unità di 100 tracciato nella direzione dell'asse x.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws the transformed path to the screen.</source>
          <target state="translated">Disegna il percorso trasformato sullo schermo.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</source>
          <target state="translated">Si noti che l'ellisse originale viene disegnato in nero e l'ellisse trasformato in rosso.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applica una trasformazione con distorsione definita da un rettangolo e da un parallelogramma a questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che definiscono il parallelogramma in cui viene trasformato il rettangolo definito da <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">Tale matrice può contenere tre o quattro elementi.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Se contiene tre elementi, l'angolo inferiore destro del parallelogramma viene derivato dai primi tre punti.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta il rettangolo trasformato nel parallelogramma definito da <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applica una trasformazione con distorsione definita da un rettangolo e da un parallelogramma a questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che definiscono il parallelogramma in cui viene trasformato il rettangolo definito da <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">Tale matrice può contenere tre o quattro elementi.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Se contiene tre elementi, l'angolo inferiore destro del parallelogramma viene derivato dai primi tre punti.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta il rettangolo trasformato nel parallelogramma definito da <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> che specifica una trasformazione geometrica da applicare al percorso.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applica una trasformazione con distorsione definita da un rettangolo e da un parallelogramma a questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che definiscono il parallelogramma in cui viene trasformato il rettangolo definito da <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">Tale matrice può contenere tre o quattro elementi.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Se contiene tre elementi, l'angolo inferiore destro del parallelogramma viene derivato dai primi tre punti.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta il rettangolo trasformato nel parallelogramma definito da <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> che specifica una trasformazione geometrica da applicare al percorso.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> che specifica se questa operazione di distorsione utilizza la modalità prospettica o bilineare.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applica una trasformazione con distorsione definita da un rettangolo e da un parallelogramma a questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Matrice di strutture <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> che definiscono il parallelogramma in cui viene trasformato il rettangolo definito da <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">Tale matrice può contenere tre o quattro elementi.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Se contiene tre elementi, l'angolo inferiore destro del parallelogramma viene derivato dai primi tre punti.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Struttura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> che rappresenta il rettangolo trasformato nel parallelogramma definito da <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> che specifica una trasformazione geometrica da applicare al percorso.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> che specifica se questa operazione di distorsione utilizza la modalità prospettica o bilineare.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A value from 0 through 1 that specifies how flat the resulting path is.</source>
          <target state="translated">Valore compreso tra 0 e 1 che specifica il livello di appiattimento del percorso risultante.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>For more information, see the <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /&gt;</ph> methods.</source>
          <target state="translated">Per ulteriori informazioni, vedere i metodi <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applica una trasformazione con distorsione definita da un rettangolo e da un parallelogramma a questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Creates a path and adds a rectangle to the path.</source>
          <target state="translated">Crea un percorso e aggiunge un rettangolo al percorso.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Draws that rectangle to the screen in black.</source>
          <target state="translated">Disegna il rettangolo sullo schermo in nero.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Warps the path with a perspective warp.</source>
          <target state="translated">Altera il percorso con una distorsione prospettica.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Draws the warped rectangle (path) to the screen in red.</source>
          <target state="translated">Disegna il rettangolo distorto (percorso) sullo schermo in rosso.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</source>
          <target state="translated">Sostituisce questo percorso con curve che racchiudono l'area riempita quando questo percorso viene disegnato con la penna specificata.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> che specifica la larghezza tra il contorno originale del percorso e il nuovo contorno creato con questo metodo.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>Adds an additional outline to the path.</source>
          <target state="translated">Aggiunge un contorno supplementare al percorso.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo crea una struttura intorno alle linee originali questa <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, con una distanza tra le righe esistenti e la nuova struttura è uguale a quello della larghezza del <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> utilizzato nella chiamata a <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">Se si vuole riempire lo spazio tra le righe è necessario utilizzare il <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> anziché il <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> che specifica la larghezza tra il contorno originale del percorso e il nuovo contorno creato con questo metodo.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transform to apply to the path before widening.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> che specifica una trasformazione da applicare al percorso prima del relativo ampliamento.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>Adds an additional outline to the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un contorno supplementare alla classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo crea una struttura intorno alle linee originali questa <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, con una distanza tra le righe esistenti e la nuova struttura è uguale a quello della larghezza del <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> utilizzato nella chiamata a <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">Se si vuole riempire lo spazio tra le righe è necessario utilizzare il <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> anziché il <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Per un esempio, vedere <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> che specifica la larghezza tra il contorno originale del percorso e il nuovo contorno creato con questo metodo.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transform to apply to the path before widening.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> che specifica una trasformazione da applicare al percorso prima del relativo ampliamento.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A value that specifies the flatness for curves.</source>
          <target state="translated">Valore che specifica il grado di appiattimento delle curve.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Replaces this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> with curves that enclose the area that is filled when this path is drawn by the specified pen.</source>
          <target state="translated">Sostituisce questa classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> con curve che racchiudono l'area riempita quando questo percorso viene disegnato con la penna specificata.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo crea una struttura intorno alle linee originali questa <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, con una distanza tra le righe esistenti e la nuova struttura è uguale a quello della larghezza del <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> utilizzato nella chiamata a <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">Se si vuole riempire lo spazio tra le righe è necessario utilizzare il <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> anziché il <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Creates a path and adds two ellipses to the path.</source>
          <target state="translated">Crea un percorso e aggiunge due ellissi al percorso.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path in black.</source>
          <target state="translated">Disegna il percorso in nero.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Widens the path.</source>
          <target state="translated">Ampliamento del percorso.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path in red.</source>
          <target state="translated">Disegna il percorso in rosso.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Notice that the second rendering uses <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>, and hence the rendered figure has the outline filled.</source>
          <target state="translated">Si noti che viene utilizzato per il secondo rendering <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> anziché <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>, e pertanto il rendering della figura presenta un contorno pieno.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>