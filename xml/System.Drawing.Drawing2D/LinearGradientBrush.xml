<Type Name="LinearGradientBrush" FullName="System.Drawing.Drawing2D.LinearGradientBrush">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44b0757495f1074c4b5a3d6db61dd98539a14b49" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46675610" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LinearGradientBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LinearGradientBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.LinearGradientBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LinearGradientBrush&#xA;Inherits Brush" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinearGradientBrush sealed : System::Drawing::Brush" />
  <TypeSignature Language="F#" Value="type LinearGradientBrush = class&#xA;    inherit Brush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Incapsula una classe <see cref="T:System.Drawing.Brush" /> con una sfumatura lineare. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe incapsula sia sfumature due colori e sfumature più colori personalizzate.  
  
 Tutte le sfumature lineari sono definite lungo una riga specificata in base alla larghezza di un rettangolo o da due punti.  
  
 Per impostazione predefinita, una sfumatura lineare a due colori è una sfumatura lineare orizzontale anche dal colore iniziale al colore finale lungo la riga specificata. Personalizzare il modello di blend usando il <xref:System.Drawing.Drawing2D.Blend> (classe), il <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> metodi, o <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> metodi. Personalizzare la direzione della sfumatura, specificando il <xref:System.Drawing.Drawing2D.LinearGradientMode> enumerazione o l'angolo nel costruttore.  
  
 Usare il <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> proprietà per creare una sfumatura.  
  
 Il <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> proprietà specifica una trasformazione geometrica locale applicata per la sfumatura.  
  
   
  
## Examples  
 L'esempio seguente crea un oggetto orizzontale <xref:System.Drawing.Drawing2D.LinearGradientBrush>; i componenti di colore modificano in modo lineare come si spostano da una coordinata orizzontale pari a 0 a una coordinata orizzontale pari a 200. Ad esempio, un punto di cui prima coordinata è compreso tra 0 e 200 avrà un componente blu che è compreso tra 0 e 255. In questo esempio è progettato per l'uso con Windows Form. Esempio di codice seguente è progettato per l'uso con Windows Form e richiede la <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro di <xref:System.Windows.Forms.PaintEventHandler>.  
  
 [!code-csharp[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/6c88e1cc-1217-4399-ac12-cb37592b9f01">Procedura: Creare una sfumatura lineare</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> con i punti e i colori specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point point1, valuetype System.Drawing.Point point2, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, color1 As Color, color2 As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Point point1, System::Drawing::Point point2, System::Drawing::Color color1, System::Drawing::Color color2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Point * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (point1, point2, color1, color2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Drawing.Point" />
        <Parameter Name="point2" Type="System.Drawing.Point" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="point1">Struttura <see cref="T:System.Drawing.Point" /> che rappresenta il punto iniziale della sfumatura lineare.</param>
        <param name="point2">Struttura <see cref="T:System.Drawing.Point" /> che rappresenta il punto finale della sfumatura lineare.</param>
        <param name="color1">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore iniziale della sfumatura lineare.</param>
        <param name="color2">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore finale della sfumatura lineare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> con i punti e i colori specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF point1, valuetype System.Drawing.PointF point2, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As PointF, point2 As PointF, color1 As Color, color2 As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::PointF point1, System::Drawing::PointF point2, System::Drawing::Color color1, System::Drawing::Color color2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.Color * System.Drawing.Color -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (point1, point2, color1, color2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Drawing.PointF" />
        <Parameter Name="point2" Type="System.Drawing.PointF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="point1">Struttura <see cref="T:System.Drawing.PointF" /> che rappresenta il punto iniziale della sfumatura lineare.</param>
        <param name="point2">Struttura <see cref="T:System.Drawing.PointF" /> che rappresenta il punto finale della sfumatura lineare.</param>
        <param name="color1">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore iniziale della sfumatura lineare.</param>
        <param name="color2">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore finale della sfumatura lineare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> con i punti e i colori specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, valuetype System.Drawing.Drawing2D.LinearGradientMode linearGradientMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, System::Drawing::Drawing2D::LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Drawing.Drawing2D.LinearGradientMode -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, linearGradientMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="linearGradientMode" Type="System.Drawing.Drawing2D.LinearGradientMode" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> che specifica i limiti della sfumatura lineare.</param>
        <param name="color1">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore iniziale della sfumatura.</param>
        <param name="color2">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore finale della sfumatura.</param>
        <param name="linearGradientMode">Elemento di enumerazione <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> che specifica l'orientamento della sfumatura. L'orientamento determina il punto iniziale e quello finale della sfumatura. <see langword="LinearGradientMode.ForwardDiagonal" />, ad esempio, specifica che il punto iniziale è l'angolo superiore sinistro del rettangolo e il punto finale è l'angolo inferiore destro del rettangolo.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> basata su un rettangolo, il colore iniziale e quello finale e l'orientamento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * single -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> che specifica i limiti della sfumatura lineare.</param>
        <param name="color1">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore iniziale della sfumatura.</param>
        <param name="color2">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore finale della sfumatura.</param>
        <param name="angle">Angolo, misurato in gradi in senso orario dall'asse x, della linea di orientamento della sfumatura.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> basata su un rettangolo, il colore iniziale e quello finale e un angolo di orientamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i punti lungo una linea perpendicolare alla linea di orientamento sono lo stesso colore.  
  
 La riga iniziale perpendicolare alla linea di orientamento e passa uno degli angoli del rettangolo. Tutti i punti sulla riga iniziale sono di colore iniziale. Riga finale quindi perpendicolare alla linea di orientamento e passa uno degli angoli del rettangolo. Tutti i punti sulla riga finale sono il colore finale.  
  
 L'angolo della linea di orientamento determina quali angoli iniziale e finale delle righe passano attraverso. Ad esempio, se l'angolo è compreso tra 0 e 90 gradi, la riga iniziale passa attraverso l'angolo superiore sinistro e la riga finale passa attraverso l'angolo inferiore destro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, valuetype System.Drawing.Drawing2D.LinearGradientMode linearGradientMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, System::Drawing::Drawing2D::LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * System.Drawing.Drawing2D.LinearGradientMode -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, linearGradientMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="linearGradientMode" Type="System.Drawing.Drawing2D.LinearGradientMode" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> che specifica i limiti della sfumatura lineare.</param>
        <param name="color1">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore iniziale della sfumatura.</param>
        <param name="color2">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore finale della sfumatura.</param>
        <param name="linearGradientMode">Elemento di enumerazione <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> che specifica l'orientamento della sfumatura. L'orientamento determina il punto iniziale e quello finale della sfumatura. <see langword="LinearGradientMode.ForwardDiagonal" />, ad esempio, specifica che il punto iniziale è l'angolo superiore sinistro del rettangolo e il punto finale è l'angolo inferiore destro del rettangolo.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> basata su un rettangolo, il colore iniziale e quello finale e una modalità di orientamento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * single -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> che specifica i limiti della sfumatura lineare.</param>
        <param name="color1">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore iniziale della sfumatura.</param>
        <param name="color2">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore finale della sfumatura.</param>
        <param name="angle">Angolo, misurato in gradi in senso orario dall'asse x, della linea di orientamento della sfumatura.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> basata su un rettangolo, il colore iniziale e quello finale e un angolo di orientamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i punti lungo una linea perpendicolare alla linea di orientamento sono lo stesso colore.  
  
 La riga iniziale perpendicolare alla linea di orientamento e passa uno degli angoli del rettangolo. Tutti i punti sulla riga iniziale sono di colore iniziale. Riga finale quindi perpendicolare alla linea di orientamento e passa uno degli angoli del rettangolo. Tutti i punti sulla riga finale sono il colore finale.  
  
 L'angolo della linea di orientamento determina quali angoli iniziale e finale delle righe passano attraverso. Ad esempio, se l'angolo è compreso tra 0 e 90 gradi, la riga iniziale passa attraverso l'angolo superiore sinistro e la riga finale passa attraverso l'angolo inferiore destro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle, bool isAngleScaleable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, angle As Single, isAngleScaleable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * single * bool -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle, isAngleScaleable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="isAngleScaleable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.Rectangle" /> che specifica i limiti della sfumatura lineare.</param>
        <param name="color1">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore iniziale della sfumatura.</param>
        <param name="color2">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore finale della sfumatura.</param>
        <param name="angle">Angolo, misurato in gradi in senso orario dall'asse x, della linea di orientamento della sfumatura.</param>
        <param name="isAngleScaleable">Impostare su <see langword="true" /> per specificare che l'angolo viene modificato dalla trasformazione associata a questo <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />. In caso contrario, impostare su <see langword="false" />.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> basata su un rettangolo, il colore iniziale e quello finale e un angolo di orientamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i punti lungo una linea perpendicolare alla linea di orientamento sono lo stesso colore.  
  
 La riga iniziale perpendicolare alla linea di orientamento e passa uno degli angoli del rettangolo. Tutti i punti sulla riga iniziale sono di colore iniziale. Riga finale quindi perpendicolare alla linea di orientamento e passa uno degli angoli del rettangolo. Tutti i punti sulla riga finale sono il colore finale.  
  
 L'angolo della linea di orientamento determina quali angoli iniziale e finale delle righe passano attraverso. Ad esempio, se l'angolo è compreso tra 0 e 90 gradi, la riga iniziale passa attraverso l'angolo superiore sinistro e la riga finale passa attraverso l'angolo inferiore destro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle, bool isAngleScaleable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, angle As Single, isAngleScaleable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * single * bool -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle, isAngleScaleable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="isAngleScaleable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">Struttura <see cref="T:System.Drawing.RectangleF" /> che specifica i limiti della sfumatura lineare.</param>
        <param name="color1">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore iniziale della sfumatura.</param>
        <param name="color2">Struttura <see cref="T:System.Drawing.Color" /> che rappresenta il colore finale della sfumatura.</param>
        <param name="angle">Angolo, misurato in gradi in senso orario dall'asse x, della linea di orientamento della sfumatura.</param>
        <param name="isAngleScaleable">Impostare su <see langword="true" /> per specificare che l'angolo viene modificato dalla trasformazione associata a questo <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />. In caso contrario, impostare su <see langword="false" />.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> basata su un rettangolo, il colore iniziale e quello finale e un angolo di orientamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i punti lungo una linea perpendicolare alla linea di orientamento sono lo stesso colore.  
  
 La riga iniziale perpendicolare alla linea di orientamento e passa uno degli angoli del rettangolo. Tutti i punti sulla riga iniziale sono di colore iniziale. Riga finale quindi perpendicolare alla linea di orientamento e passa uno degli angoli del rettangolo. Tutti i punti sulla riga finale sono il colore finale.  
  
 L'angolo della linea di orientamento determina quali angoli iniziale e finale delle righe passano attraverso. Ad esempio, se l'angolo è compreso tra 0 e 90 gradi, la riga iniziale passa attraverso l'angolo superiore sinistro e la riga finale passa attraverso l'angolo inferiore destro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Blend">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Blend Blend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Blend Blend" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend" />
      <MemberSignature Language="VB.NET" Value="Public Property Blend As Blend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Blend ^ Blend { System::Drawing::Drawing2D::Blend ^ get(); void set(System::Drawing::Drawing2D::Blend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Blend : System.Drawing.Drawing2D.Blend with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Blend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Blend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una classe <see cref="T:System.Drawing.Drawing2D.Blend" /> che specifica le posizioni e i fattori che definiscono un'interruzione personalizzata per la sfumatura.</summary>
        <value>Classe <see cref="T:System.Drawing.Drawing2D.Blend" /> che rappresenta un'interruzione personalizzata per la sfumatura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Drawing.Drawing2D.Blend> contiene le matrici corrispondenti di blend fattori e posizioni. I fattori di blend specificano le percentuali del colore iniziale e finale da utilizzare nella posizione corrispondente. Le posizioni vengono fornite come percentuale della distanza lungo la linea della sfumatura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="linearGradientBrush.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia esatta di questo <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> creato da questo metodo di cui viene eseguito il cast come oggetto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un nuovo oggetto <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
-   Disegna un'ellisse sullo schermo utilizzando questo pennello.  
  
-   Cloni il <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).  
  
-   Disegna un'ellisse alla schermata direttamente sotto la prima ellisse mediante il pennello clonato.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaCorrection">
      <MemberSignature Language="C#" Value="public bool GammaCorrection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GammaCorrection" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection" />
      <MemberSignature Language="VB.NET" Value="Public Property GammaCorrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GammaCorrection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GammaCorrection : bool with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la correzione gamma è attivata per questa classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
        <value>Il valore è <see langword="true" /> se la correzione gamma è attivata per questo <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />. In caso contrario, il valore sarà <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.ColorBlend InterpolationColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpolationColors As ColorBlend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::ColorBlend ^ InterpolationColors { System::Drawing::Drawing2D::ColorBlend ^ get(); void set(System::Drawing::Drawing2D::ColorBlend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterpolationColors : System.Drawing.Drawing2D.ColorBlend with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.ColorBlend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una classe <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> che definisce una sfumatura lineare a più colori.</summary>
        <value>Classe <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> che definisce una sfumatura lineare a più colori.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Drawing.Drawing2D.ColorBlend> contiene le matrici corrispondenti di colori e posizioni. Le posizioni sono valori compresi tra 0 e 1 che specifica la percentuale della distanza lungo la linea della sfumatura in cui si trova il colore corrispondente.  
  
 Impostazione di questa proprietà consente di creare una sfumatura con un colore in ogni posizione lungo la linea della sfumatura. Impostazione di questa proprietà Annulla tutte le impostazioni precedenti colore, posizione e interruzione per l'oggetto <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] LinearColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] LinearColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors" />
      <MemberSignature Language="VB.NET" Value="Public Property LinearColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ LinearColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LinearColors : System.Drawing.Color[] with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.LinearColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore iniziale e quello finale della sfumatura.</summary>
        <value>Matrice di due strutture <see cref="T:System.Drawing.Color" /> che rappresenta il colore iniziale e quello finale della sfumatura.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Moltiplica la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> che rappresenta la trasformazione geometrica locale di questa classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> per la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificata anteponendo la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="linearGradientBrush.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">Classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> per la quale moltiplicare la trasformazione geometrica.</param>
        <summary>Moltiplica la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> che rappresenta la trasformazione geometrica locale di questa classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> per la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificata anteponendo la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">Classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> per la quale moltiplicare la trasformazione geometrica.</param>
        <param name="order">Enumerazione <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> che specifica in quale ordine moltiplicare le due matrici.</param>
        <summary>Moltiplica la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> che rappresenta la trasformazione geometrica locale di questa classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> per la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> specificata nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un nuovo oggetto <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
-   Disegna un'ellisse sullo schermo utilizzando questo pennello.  
  
-   Chiama il <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> metodo, per trasformare il <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
-   Disegna un'ellisse alla schermata direttamente sotto la prima ellisse utilizzando il pennello trasformato.  
  
 Si noti che l'ellisse inferiore viene estesa in direzione orizzontale, e che la sfumatura viene adattata per corrispondere la nuova forma.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF Rectangle { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.Rectangle : System.Drawing.RectangleF" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un'area rettangolare che definisce il punto iniziale e quello finale della sfumatura.</summary>
        <value>Struttura <see cref="T:System.Drawing.RectangleF" /> che specifica il punto iniziale e quello finale della sfumatura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il lato sinistro del rettangolo consente di specificare il punto iniziale della sfumatura lineare e il lato destro del rettangolo consente di specificare l'endpoint.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="linearGradientBrush.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reimposta la proprietà <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> sull'identità.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un nuovo oggetto <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
-   Disegna un'ellisse sullo schermo utilizzando questo pennello.  
  
-   Chiama il <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> metodo per trasformare il <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
-   Disegna un'ellisse alla schermata direttamente sotto la prima ellisse utilizzando il pennello trasformato.  
  
-   Reimposta la trasformazione.  
  
-   Disegna un'ellisse terzo sullo schermo sotto i primi due.  
  
 Si noti che viene disegnato l'ellisse più basso delle stesse dimensioni di prima e che, a causa alla chiamata al <xref:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform%2A> metodo, la sfumatura è stato ridotto in modo che corrisponda.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruota la trasformazione geometrica locale in base al valore specificato. Questo metodo antepone la rotazione alla trasformazione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="linearGradientBrush.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">Angolo di rotazione.</param>
        <summary>Ruota la trasformazione geometrica locale in base al valore specificato. Questo metodo antepone la rotazione alla trasformazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">Angolo di rotazione.</param>
        <param name="order">Oggetto <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> che specifica se accodare o anteporre la matrice di rotazione.</param>
        <summary>Ruota la trasformazione geometrica locale in base al valore specificato nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Il codice  
  
-   Crea un nuovo oggetto <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
-   Disegna un'ellisse sullo schermo utilizzando questo pennello.  
  
-   Ruota il <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 gradi chiamando il <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> (metodo).  
  
-   Disegna un'ellisse direttamente sotto la prima ellisse mediante il pennello ruotato sullo schermo.  
  
 Si noti che la sfumatura dell'ellisse inferiore inclinata di 45 gradi per l'asse x dell'ellisse superiore. Si noti inoltre che una chiamata al <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> metodo viene usato per giustificare il bordo sinistro del riempimento sfumato con il bordo sinistro dell'ellisse inferiore.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Modifica le proporzioni della trasformazione geometrica locale in base ai valori specificati. Questo metodo antepone la matrice per la modifica delle proporzioni alla trasformazione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="linearGradientBrush.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">Valore in base al quale modificare le proporzioni della trasformazione nella direzione dell'asse x.</param>
        <param name="sy">Valore in base al quale modificare le proporzioni della trasformazione nella direzione dell'asse y.</param>
        <summary>Modifica le proporzioni della trasformazione geometrica locale in base ai valori specificati. Questo metodo antepone la matrice per la modifica delle proporzioni alla trasformazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">Valore in base al quale modificare le proporzioni della trasformazione nella direzione dell'asse x.</param>
        <param name="sy">Valore in base al quale modificare le proporzioni della trasformazione nella direzione dell'asse y.</param>
        <param name="order">Oggetto <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> che specifica se accodare o anteporre la matrice di ridimensionamento.</param>
        <summary>Modifica le proporzioni della trasformazione geometrica locale in base ai valori specificati nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un nuovo oggetto <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
-   Disegnare un'ellisse sullo schermo utilizzando questo pennello.  
  
-   Ridimensiona il <xref:System.Drawing.Drawing2D.LinearGradientBrush> di un fattore pari a due lungo l'asse x.  
  
-   Disegna un'ellisse alla schermata direttamente sotto la prima ellisse utilizzando il pennello in scala.  
  
 Si noti che la sfumatura dell'ellisse inferiore viene estesa di un fattore pari a due. Si noti inoltre che una chiamata al <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> metodo viene usato per giustificare il bordo sinistro del riempimento sfumato con il bordo sinistro dell'ellisse.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBlendTriangularShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una sfumatura lineare con un colore centrale e un'interruzione lineare in un solo colore su entrambe le estremità.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus);" />
      <MemberSignature Language="F#" Value="member this.SetBlendTriangularShape : single -&gt; unit" Usage="linearGradientBrush.SetBlendTriangularShape focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Valore compreso tra 0 e 1 che specifica il centro della sfumatura, ovvero il punto in cui la sfumatura è composta solo dal colore finale.</param>
        <summary>Crea una sfumatura lineare con un colore centrale e un'interruzione lineare in un solo colore su entrambe le estremità.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene specificato un `focus`, ovvero il punto in cui la sfumatura è composta solo del colore finale. Il `focus` parametro rappresenta un percorso come una proporzione della distanza lungo la linea della sfumatura. La sfumatura passa il colore iniziale in modo lineare da entrambi i lati.  
  
   
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus, float scale);" />
      <MemberSignature Language="F#" Value="member this.SetBlendTriangularShape : single * single -&gt; unit" Usage="linearGradientBrush.SetBlendTriangularShape (focus, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Valore compreso tra 0 e 1 che specifica il centro della sfumatura, ovvero il punto in cui la sfumatura è composta solo dal colore finale.</param>
        <param name="scale">Valore compreso tra 0 e 1 che specifica la velocità con cui i colori passano dal colore iniziale a <c>focus</c> (colore finale).</param>
        <summary>Crea una sfumatura lineare con un colore centrale e un'interruzione lineare in un solo colore su entrambe le estremità.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene specificato un `focus`, ovvero il punto in cui la sfumatura è composta solo del colore finale. Il `focus` parametro rappresenta un percorso come una proporzione della distanza lungo la linea della sfumatura. La sfumatura passa il colore iniziale in modo lineare da entrambi i lati.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un nuovo oggetto <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
-   Usa questo pennello per disegnare un'ellisse sullo schermo che presenta una transizione lineare, da sinistra a destra dei colori.  
  
-   Trasforma il <xref:System.Drawing.Drawing2D.LinearGradientBrush> in una forma triangolare con il valore di picco al centro.  
  
-   Disegna un'ellisse secondo sullo schermo utilizzando il pennello trasformato.  
  
 Si noti che la sfumatura dell'ellisse inferiore passa da blu a rosso e quindi di nuovo a blu.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSigmaBellShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un'interruzione della sfumatura in base a una curva a campana.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus);" />
      <MemberSignature Language="F#" Value="member this.SetSigmaBellShape : single -&gt; unit" Usage="linearGradientBrush.SetSigmaBellShape focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Valore compreso tra 0 e 1 che specifica il centro della sfumatura, ovvero il punto in cui il colore iniziale e quello finale sono presenti in pari percentuale.</param>
        <summary>Crea un'interruzione della sfumatura in base a una curva a campana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene specificato un `focus`, ovvero il punto in cui la sfumatura è composta solo del colore finale. Il `focus` parametro rappresenta un percorso come una proporzione della distanza lungo la linea della sfumatura. La sfumatura passa per il colore iniziale basato su una curva a campana (distribuzione normale) per entrambi i lati.  
  
   
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus, float scale);" />
      <MemberSignature Language="F#" Value="member this.SetSigmaBellShape : single * single -&gt; unit" Usage="linearGradientBrush.SetSigmaBellShape (focus, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Valore compreso tra 0 e 1 che specifica il centro della sfumatura, ovvero il punto in cui la sfumatura è composta solo dal colore finale.</param>
        <param name="scale">Valore compreso tra 0 e 1 che specifica la velocità con cui i colori si allontanano dal valore espresso da <c>focus</c>.</param>
        <summary>Crea un'interruzione della sfumatura in base a una curva a campana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene specificato un `focus`, ovvero il punto in cui la sfumatura è composta solo del colore finale. Il `focus` parametro rappresenta un percorso come una proporzione della distanza lungo la linea della sfumatura. La sfumatura passa per il colore iniziale basato su una curva a campana (distribuzione normale) per entrambi i lati.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un nuovo oggetto <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
-   Usa questo pennello per disegnare un'ellisse sullo schermo che presenta una transizione lineare, da sinistra a destra dei colori.  
  
-   Trasforma il <xref:System.Drawing.Drawing2D.LinearGradientBrush> per avere una curva a forma di campana con il valore di picco al centro.  
  
-   Disegna un'ellisse secondo sullo schermo utilizzando il pennello a campana.  
  
 Si noti che la sfumatura dell'ellisse inferiore passa da blu a rosso e quindi di nuovo a blu.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una copia <see cref="T:System.Drawing.Drawing2D.Matrix" /> che definisce una trasformazione geometrica locale per questo oggetto <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
        <value>Copia dell'oggetto <see cref="T:System.Drawing.Drawing2D.Matrix" /> che definisce una trasformazione geometrica che si applica solo ai riempimenti disegnati con questo oggetto <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una trasformazione geometrica è utilizzabile per traslare, ridimensionare, ruotare o inclinare il riempimento sfumato. Poiché la matrice restituita e dal <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> proprietà è una copia della trasformazione geometrica del pennello, è necessario eliminarlo quando non è più necessario.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sottopone a traslazione la trasformazione geometrica locale in base alle dimensioni specificate. Questo metodo antepone la traslazione alla trasformazione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="linearGradientBrush.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">Valore della traslazione in X.</param>
        <param name="dy">Valore della traslazione in Y.</param>
        <summary>Sottopone a traslazione la trasformazione geometrica locale in base alle dimensioni specificate. Questo metodo antepone la traslazione alla trasformazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio, vedere <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">Valore della traslazione in X.</param>
        <param name="dy">Valore della traslazione in Y.</param>
        <param name="order">Ordine, di anteposizione o accodamento, in cui applicare la traslazione.</param>
        <summary>Sottopone a traslazione la trasformazione geometrica locale in base alle dimensioni specificate nell'ordine indicato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> oggetto evento. Nel codice vengono eseguite le seguenti azioni:  
  
-   Crea un nuovo oggetto <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  
  
-   Usa questo pennello per disegnare un rettangolo sullo schermo che presenta una transizione lineare, da sinistra a destra dei colori.  
  
-   Ruota il <xref:System.Drawing.Drawing2D.LinearGradientBrush> di 90 gradi e adatta la sfumatura.  
  
-   Disegna il rettangolo, con la sfumatura ruotata e ridimensionata, sullo schermo.  
  
-   Converte il rettangolo in modo che includa una sfumatura lineare dall'alto verso il basso.  
  
-   Disegna il rettangolo tradotto sullo schermo.  
  
 Si noti che esistono tre rettangoli visualizzati quello superiore mostra da sinistra a destra della sfumatura, quello intermedio che illustra la sfumatura ruotata e ridimensionata e quello inferiore mostra traslata finale sfumatura.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.WrapMode WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As WrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::WrapMode WrapMode { System::Drawing::Drawing2D::WrapMode get(); void set(System::Drawing::Drawing2D::WrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.WrapMode : System.Drawing.Drawing2D.WrapMode with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.WrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che indica la modalità A capo automatico per questo oggetto <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
        <value>Enumerazione <see cref="T:System.Drawing.Drawing2D.WrapMode" /> che specifica come vengono affiancati i riempimenti disegnati con questa classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>