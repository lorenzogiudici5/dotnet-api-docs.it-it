<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomLineCap.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f5c75a608ce54c941da40e7941b926a057ce5265.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5c75a608ce54c941da40e7941b926a057ce5265</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Encapsulates a custom user-defined line cap.</source>
          <target state="translated">Incapsula un delimitatore di linea personalizzato definito dall'utente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> objects.</source>
          <target state="translated">Delimitatori di riga vengono utilizzati all'inizio e alla fine delle linee o curve disegnate da GDI+ <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>GDI+ supports several predefined cap styles, and also allows users to define their own cap styles.</source>
          <target state="translated">GDI+ supporta diversi stili di delimitatori predefiniti e consente inoltre agli utenti di definire i propri gli stili di estremità.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>This class is used to create custom cap styles.</source>
          <target state="translated">Questa classe viene utilizzata per creare gli stili di estremità personalizzato.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> class.</source>
          <target state="translated">Nell'esempio riportato di seguito viene illustrato come utilizzare la classe <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>To run this example paste, the code into a Windows Form.</source>
          <target state="translated">Per eseguire questo esempio, incollare il codice in un Windows Form.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Gestire il modulo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventi e chiamate <ph id="ph2">`DrawCaps`</ph> del form <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> gestione degli eventi, passando <ph id="ph4">`e`</ph> come <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class with the specified outline and fill.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> con il contorno e il riempimento specificati.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the fill for the custom cap.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> che definisce il riempimento per il delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the outline of the custom cap.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> che definisce il contorno del delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class with the specified outline and fill.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> con il contorno e il riempimento specificati.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> utilizza una modalità di riempimento di "curvatura" indipendentemente dalla modalità di riempimento specificata per l'operazione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated">Il <ph id="ph1">`fillPath`</ph> e <ph id="ph2">`strokePath`</ph> parametri non possono essere utilizzati nello stesso momento.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">Un parametro deve essere passato un valore null.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">Se nessun parametro viene passato un valore null, <ph id="ph1">`fillPath`</ph> verrà ignorato.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">Se <ph id="ph1">`strokePath`</ph> è <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> dovrebbe intercettare l'asse y negativo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>To run this example, paste the code into a Windows Form.</source>
          <target state="translated">Per eseguire questo esempio, incollare il codice in un Windows Form.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Gestire il modulo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventi e chiamate <ph id="ph2">`DrawCaps`</ph> del form <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> gestione degli eventi, passando <ph id="ph4">`e`</ph> come <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the fill for the custom cap.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> che definisce il riempimento per il delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the outline of the custom cap.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> che definisce il contorno del delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>The line cap from which to create the custom cap.</source>
          <target state="translated">Delimitatore di linea da cui creare il delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class from the specified existing <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration with the specified outline and fill.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> dall'enumerazione <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> esistente specificata con il contorno e il riempimento indicati.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> utilizza una modalità di riempimento di "curvatura" indipendentemente dalla modalità di riempimento specificata per l'operazione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated">Il <ph id="ph1">`fillPath`</ph> e <ph id="ph2">`strokePath`</ph> parametri non possono essere utilizzati nello stesso momento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">Un parametro deve essere passato un valore null.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">Se nessun parametro viene passato un valore null, <ph id="ph1">`fillPath`</ph> verrà ignorato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">Se <ph id="ph1">`strokePath`</ph> è <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> dovrebbe intercettare l'asse y negativo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the fill for the custom cap.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> che definisce il riempimento per il delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the outline of the custom cap.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> che definisce il contorno del delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>The line cap from which to create the custom cap.</source>
          <target state="translated">Delimitatore di linea da cui creare il delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>The distance between the cap and the line.</source>
          <target state="translated">Distanza tra il delimitatore e la linea.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class from the specified existing <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration with the specified outline, fill, and inset.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> dall'enumerazione <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> esistente specificata con il contorno, riempimento e interno indicati.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> utilizza una modalità di riempimento di "curvatura" indipendentemente dalla modalità di riempimento specificata per l'operazione.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated">Il <ph id="ph1">`fillPath`</ph> e <ph id="ph2">`strokePath`</ph> parametri non possono essere utilizzati nello stesso momento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">Un parametro deve essere passato un valore null.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">Se nessun parametro viene passato un valore null, <ph id="ph1">`fillPath`</ph> verrà ignorato.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">Se <ph id="ph1">`strokePath`</ph> è <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> dovrebbe intercettare l'asse y negativo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration on which this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> is based.</source>
          <target state="translated">Ottiene o imposta l'enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> sulla quale si basa questo <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration on which this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> is based.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> sulla quale si basa questo <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
          <source>Gets or sets the distance between the cap and the line.</source>
          <target state="translated">Ottiene o imposta la distanza tra il delimitatore e la linea.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
          <source>The distance between the beginning of the cap and the end of the line.</source>
          <target state="translated">Distanza tra l'inizio del delimitatore e la fine della linea.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates an exact copy of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</source>
          <target state="translated">Crea una copia esatta di questo <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> this method creates, cast as an object.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> creato da questo metodo di cui viene eseguito il cast come oggetto.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">L'esempio seguente è progettato per l'uso con Windows Form e richiede <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> oggetto evento.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">Nel codice vengono eseguite le seguenti azioni:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates a custom line cap by using the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Creazione di un delimitatore di riga personalizzato utilizzando la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object, <ph id="ph2">`firstCap`</ph>,using the <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object just created.</source>
          <target state="translated">Crea un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> oggetto <ph id="ph2">`firstCap`</ph>, usando il <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> oggetto appena creato.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates a clone of <ph id="ph1">`firstCap`</ph> by using the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A&gt;</ph> method.</source>
          <target state="translated">Crea un clone di <ph id="ph1">`firstCap`</ph> utilizzando il <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Sets up the <ph id="ph1">&lt;xref:System.Drawing.Pen.CustomStartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.CustomEndCap%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> object, and uses that pen to draw a line and the custom caps to the screen.</source>
          <target state="translated">Consente di impostare il <ph id="ph1">&lt;xref:System.Drawing.Pen.CustomStartCap%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Pen.CustomEndCap%2A&gt;</ph> le proprietà del <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> , oggetto e ne utilizza pen per disegnare una riga e i delimitatori personalizzati sullo schermo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> object.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object to be reallocated for other purposes.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> le risorse utilizzate da questo <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> oggetto riallocazione per altri scopi.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate da <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> e, facoltativamente, le risorse gestite.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Finalize">
          <source>Allows an <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> to attempt to free resources and perform other cleanup operations before the <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated">Consente a un oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> di provare a liberare risorse ed eseguire altre operazioni di pulizia prima che l'oggetto <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> stesso venga recuperato dalla procedura di Garbage Collection.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the beginning of a line within this cap.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> utilizzata all'inizio di una linea in questo delimitatore.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the end of a line within this cap.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> utilizzata alla fine di una linea in questo delimitatore.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>Gets the caps used to start and end lines that make up this custom cap.</source>
          <target state="translated">Ottiene i delimitatori utilizzati per iniziare e terminare le linee che compongono questo delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo del metodo <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>To run this example, paste the code into a Windows Form.</source>
          <target state="translated">Per eseguire questo esempio, incollare il codice in un Windows Form.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Gestire il modulo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventi e chiamate <ph id="ph2">`DrawCaps`</ph> del form <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> gestione degli eventi, passando <ph id="ph4">`e`</ph> come <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the beginning of a line within this cap.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> utilizzata all'inizio di una linea in questo delimitatore.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the end of a line within this cap.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> utilizzata alla fine di una linea in questo delimitatore.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>Sets the caps used to start and end lines that make up this custom cap.</source>
          <target state="translated">Imposta i delimitatori utilizzati per iniziare e terminare le linee che compongono questo delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo del metodo <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>To run this example, paste the code into a Windows Form.</source>
          <target state="translated">Per eseguire questo esempio, incollare il codice in un Windows Form.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Gestire il modulo <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventi e chiamate <ph id="ph2">`DrawCaps`</ph> del form <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> gestione degli eventi, passando <ph id="ph4">`e`</ph> come <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> enumeration that determines how lines that compose this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> object are joined.</source>
          <target state="translated">Ottiene o imposta l'enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> che determina la modalità di unione delle linee che compongono questo oggetto <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> enumeration this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> object uses to join lines.</source>
          <target state="translated">Enumerazione <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> utilizzata da questo oggetto <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> per unire le linee.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
          <source>This property specifies a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.LineJoin&gt;</ph> enumeration that is used to join lines and curves that make up the stroked path of this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object.</source>
          <target state="translated">Questa proprietà specifica un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.LineJoin&gt;</ph> enumerazione viene utilizzata per unire le linee e curve che costituisce il percorso tracciato di questo <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>Gets or sets the amount by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> Class object with respect to the width of the <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> object.</source>
          <target state="translated">Ottiene o imposta il valore in base al quale modificare le proporzioni di questo oggetto della classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> rispetto alla larghezza dell'oggetto <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>The amount by which to scale the cap.</source>
          <target state="translated">Il valore in base al quale modificare le proporzioni del delimitatore.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>This property specifies the multiple of the pen width by which to multiply the size of the custom cap.</source>
          <target state="translated">Questa proprietà specifica il multiplo della larghezza della penna con la quale moltiplicare la dimensione del delimitatore personalizzato.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high.</source>
          <target state="translated">Ad esempio, se questa proprietà è uguale a 1, la larghezza del delimitatore personalizzato è 10, l'altezza del delimitatore personalizzato è 5 e viene tracciata una linea con una penna con una larghezza pari a 3, il tetto è disegnato 30 unità ampia e 15 unità elevata.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</source>
          <target state="translated">Impostando questa proprietà su 3, il delimitatore verrà disegnata 90 unità wide e 45 elevata.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>