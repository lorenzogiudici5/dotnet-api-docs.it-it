<Type Name="MarkupProperty" FullName="System.Windows.Markup.Primitives.MarkupProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cc84508111a2d2946b82d9bf0f0cdc390e0599e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659085" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupProperty extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.Primitives.MarkupProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupProperty abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe astratta che fornisce una descrizione della proprietà da utilizzare durante la scrittura in un markup che incapsula l'accesso a proprietà e i valori.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una proprietà è rappresentata come una stringa o un elenco di elementi.  
  
 Se la proprietà può essere rappresentata come stringa, <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> è `false`.  
  
 Se <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> è `true`, la proprietà è un elenco di elementi.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando viene sottoposto a override in una classe derivata, ottiene gli attributi associati a questo oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
        <value>Raccolta di attributi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se sottoposto a override in una classe derivata, ottiene l'identificatore <see cref="T:System.Windows.DependencyProperty" /> per la proprietà del markup se la proprietà è implementata come proprietà di dipendenza.</summary>
        <value>Identificatore della proprietà di dipendenza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Restituisce il comportamento predefinito `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public virtual bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAttached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> è un <see cref="T:System.Windows.DependencyProperty" /> associato.</summary>
        <value>
          <see langword="true" /> se la proprietà è un oggetto <see cref="T:System.Windows.DependencyProperty" /> associato; in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il comportamento predefinito consiste nel restituire `false`.  
  
 Quando <xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A> è `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> non `null` e <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> può essere `null`, ma non deve essere.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComposite">
      <MemberSignature Language="C#" Value="public virtual bool IsComposite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsComposite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsComposite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsComposite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> è una proprietà composta.</summary>
        <value>
          <see langword="true" /> se questa proprietà è una proprietà composta, in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il comportamento predefinito consiste nel restituire `false`.  
  
 Se <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> è `false`, la proprietà può essere rappresentata come stringa e <xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A> sono validi per l'utilizzo.  
  
 Se <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> è `true`, la proprietà è di uno o più elementi e <xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A> valido da utilizzare.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructorArgument">
      <MemberSignature Language="C#" Value="public virtual bool IsConstructorArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructorArgument" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsConstructorArgument As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructorArgument { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta un argomento del costruttore.</summary>
        <value>
          <see langword="true" /> se la proprietà rappresenta un argomento del costruttore. In caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il comportamento predefinito viene restituito `false`.  
  
 Quando <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> è `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> sono entrambi `null`.  
  
 XAML Usa solo <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> per che rappresenta gli argomenti del costruttore di istanze di <xref:System.Windows.Markup.MarkupExtension>. Vedere [le estensioni di Markup e XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContent">
      <MemberSignature Language="C#" Value="public virtual bool IsContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta il contenuto diretto di un insieme.</summary>
        <value>
          <see langword="true" /> se la proprietà rappresenta il contenuto diretto, in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il comportamento predefinito consiste nel restituire `false`.  
  
 Quando <xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A> è `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> sono entrambi `null`.  
  
 I dizionari vengono inclusi quando si determina se questo <xref:System.Windows.Markup.Primitives.MarkupProperty> rappresenta il contenuto diretto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public virtual bool IsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se sottoposta a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta la chiave utilizzata da <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> per archiviare l'elemento in un dizionario.</summary>
        <value>
          <see langword="true" /> se la proprietà rappresenta una chiave; in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il comportamento predefinito consiste nel restituire `false`.  
  
 Quando <xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A> è `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> sono `null`.  
  
 XAML utilizzerà la proprietà identificata come un `x:Key` attributo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueAsString">
      <MemberSignature Language="C#" Value="public virtual bool IsValueAsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueAsString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValueAsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValueAsString { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se sottoposta a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta testo passato a un convertitore di tipi per creare un'istanza della proprietà o se deve essere utilizzato un costruttore.</summary>
        <value>
          <see langword="true" />, se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta una stringa; in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il comportamento predefinito consiste nel restituire `false.`  
  
 Quando <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> è `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> sono entrambi `null`.  
  
 Se la proprietà viene fornita tramite <xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> è `true`, sarà l'unica proprietà fornirà il tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupObject&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Markup.Primitives.MarkupObject&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Items" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Items As IEnumerable(Of MarkupObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupObject ^&gt; ^ Items { System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupObject ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupObject&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se sottoposta a override in una classe derivata, ottiene gli elementi che compongono il valore di questa proprietà.</summary>
        <value>Gli elementi che compongono il valore di questa proprietà.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la proprietà non è un'enumerazione, verrà restituito un solo elemento.  
  
 Se la proprietà è un'enumerazione o enumerabile, verranno restituiti tutti gli elementi.  
  
 Viene restituito sempre almeno un elemento, poiché <xref:System.Windows.Markup.Primitives.MarkupObject> non creerà un <xref:System.Windows.Markup.Primitives.MarkupProperty> per le proprietà senza elementi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando viene sottoposto a override in una classe derivata, ottiene un nome utilizzato per la diagnostica e la segnalazione errori.</summary>
        <value>Nome della proprietà dell'identificatore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un serializzatore non deve utilizzare questo valore. È necessario utilizzare il <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> e/o <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> invece.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando viene sottoposta a override in una classe derivata, ottiene <see cref="T:System.ComponentModel.PropertyDescriptor" /> per la proprietà del markup.</summary>
        <value>Descrittore della proprietà.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Restituisce il comportamento predefinito `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando è sottoposto a override in una classe derivata, ottiene il tipo CLR della proprietà.</summary>
        <value>Tipo CLR.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringValue">
      <MemberSignature Language="C#" Value="public abstract string StringValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StringValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StringValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando viene sottoposto a override in una classe derivata, ottiene il valore stringa dell'oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
        <value>Valore stringa.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TypeReferences As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se sottoposto a override in una classe derivata, ottiene il set di tipi a cui <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> farà riferimento quando serializza il valore come stringa.</summary>
        <value>Set di tipi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A> consente a un serializzatore per assicurarsi che il serializzatore deserializzazione ha informazioni sufficienti per convertire i riferimenti a questi tipo dalle rappresentazioni di stringa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando viene sottoposto a override in una classe derivata ottiene il valore corrente dell'oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
        <value>Valore corrente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>