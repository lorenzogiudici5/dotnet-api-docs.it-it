<Type Name="MarkupProperty" FullName="System.Windows.Markup.Primitives.MarkupProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cec9e4b44f9d6119d8e215019c75697d3421462b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37560301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupProperty extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.Primitives.MarkupProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupProperty abstract" />
  <TypeSignature Language="F#" Value="type MarkupProperty = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f67fe-101">Classe astratta che fornisce una descrizione della proprietà da utilizzare durante la scrittura in un markup che incapsula l'accesso a proprietà e i valori.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f67fe-101">Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-102">Una proprietà è rappresentata come una stringa o un elenco di elementi.</span><span class="sxs-lookup"><span data-stu-id="f67fe-102">A property is either represented as a string or a list of items.</span></span>  
  
 <span data-ttu-id="f67fe-103">Se la proprietà può essere rappresentata come stringa <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> è `false`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-103">If the property can be represented as a string, <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `false`.</span></span>  
  
 <span data-ttu-id="f67fe-104">Se <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> è `true`, la proprietà è un elenco di elementi.</span><span class="sxs-lookup"><span data-stu-id="f67fe-104">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `true`, the property is a list of items.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Windows.Markup.Primitives.MarkupProperty.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-105">Quando viene sottoposto a override in una classe derivata, ottiene gli attributi associati a questo oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-105">When overridden in a derived class, gets the attributes associated with this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-106">Raccolta di attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-106">The collection of attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-107">Se sottoposto a override in una classe derivata, ottiene l'identificatore <see cref="T:System.Windows.DependencyProperty" /> per la proprietà del markup se la proprietà è implementata come proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-107">When overridden in a derived class, gets the <see cref="T:System.Windows.DependencyProperty" /> identifier for the markup property if the property is implemented as a dependency property</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-108">Identificatore della proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-108">The dependency property identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-109">Restituisce il comportamento predefinito `null`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-109">The default behavior returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public virtual bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAttached { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttached : bool" Usage="System.Windows.Markup.Primitives.MarkupProperty.IsAttached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-110">Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> è un <see cref="T:System.Windows.DependencyProperty" /> associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-110">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> is an attached <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-111">
            <see langword="true" /> se la proprietà è un oggetto <see cref="T:System.Windows.DependencyProperty" /> associato; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-111">
              <see langword="true" /> if the property is an attached <see cref="T:System.Windows.DependencyProperty" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-112">Il comportamento predefinito consiste nel restituire `false`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-112">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="f67fe-113">Quando <xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A> viene `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> non è `null` e <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> può essere `null`, ma non è necessario essere.</span><span class="sxs-lookup"><span data-stu-id="f67fe-113">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> is not `null` and <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> can be `null`, but is not required to be.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComposite">
      <MemberSignature Language="C#" Value="public virtual bool IsComposite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsComposite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsComposite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsComposite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsComposite : bool" Usage="System.Windows.Markup.Primitives.MarkupProperty.IsComposite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-114">Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> è una proprietà composta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-114">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> is a composite property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-115">
            <see langword="true" /> se questa proprietà è una proprietà composta, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-115">
              <see langword="true" /> is this property is a composite property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-116">Il comportamento predefinito consiste nel restituire `false`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-116">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="f67fe-117">Se <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> viene `false`, la proprietà può essere rappresentata come stringa e <xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A> validi da usare.</span><span class="sxs-lookup"><span data-stu-id="f67fe-117">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `false`, the property can be represented as a string and <xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A> are valid to use.</span></span>  
  
 <span data-ttu-id="f67fe-118">Se <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> viene `true`, la proprietà è di uno o più elementi e <xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A> valido da usare.</span><span class="sxs-lookup"><span data-stu-id="f67fe-118">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `true`, the property is one or more items and <xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A> is valid to use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructorArgument">
      <MemberSignature Language="C#" Value="public virtual bool IsConstructorArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructorArgument" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsConstructorArgument As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructorArgument { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructorArgument : bool" Usage="System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-119">Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta un argomento del costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-119">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents a constructor argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-120">
            <see langword="true" /> se la proprietà rappresenta un argomento del costruttore. In caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-120">
              <see langword="true" /> if this property represents a constructor argument; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-121">Il comportamento predefinito viene restituito `false`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-121">The default behavior is return `false`.</span></span>  
  
 <span data-ttu-id="f67fe-122">Quando <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> viene `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> sono entrambi `null`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-122">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="f67fe-123">XAML Usa solo <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> per rappresentare gli argomenti del costruttore di istanze di <xref:System.Windows.Markup.MarkupExtension>.</span><span class="sxs-lookup"><span data-stu-id="f67fe-123">XAML only uses <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> for representing the constructor arguments of instances of <xref:System.Windows.Markup.MarkupExtension>.</span></span> <span data-ttu-id="f67fe-124">Visualizzare [estensioni di Markup e XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="f67fe-124">See [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContent">
      <MemberSignature Language="C#" Value="public virtual bool IsContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsContent : bool" Usage="System.Windows.Markup.Primitives.MarkupProperty.IsContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-125">Quando viene sottoposto a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta il contenuto diretto di un insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-125">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents direct content of a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-126">
            <see langword="true" /> se la proprietà rappresenta il contenuto diretto, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-126">
              <see langword="true" /> if the property represents direct content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-127">Il comportamento predefinito consiste nel restituire `false`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-127">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="f67fe-128">Quando <xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A> viene `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> sono entrambi `null`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-128">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="f67fe-129">I dizionari vengono inclusi quando si determina se questo <xref:System.Windows.Markup.Primitives.MarkupProperty> rappresenta il contenuto diretto.</span><span class="sxs-lookup"><span data-stu-id="f67fe-129">Dictionaries are included when determining whether this <xref:System.Windows.Markup.Primitives.MarkupProperty> represents direct content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public virtual bool IsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKey : bool" Usage="System.Windows.Markup.Primitives.MarkupProperty.IsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-130">Se sottoposta a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta la chiave utilizzata da <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> per archiviare l'elemento in un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-130">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents the key used by the <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> to store the item in a dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-131">
            <see langword="true" /> se la proprietà rappresenta una chiave; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-131">
              <see langword="true" /> if this property represents a key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-132">Il comportamento predefinito consiste nel restituire `false`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-132">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="f67fe-133">Quando <xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A> viene `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> sono `null`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-133">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are `null`.</span></span>  
  
 <span data-ttu-id="f67fe-134">XAML userà la proprietà identificata come un `x:Key` attributo.</span><span class="sxs-lookup"><span data-stu-id="f67fe-134">XAML will use the identified property as an `x:Key` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueAsString">
      <MemberSignature Language="C#" Value="public virtual bool IsValueAsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueAsString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValueAsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValueAsString { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValueAsString : bool" Usage="System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-135">Se sottoposta a override in una classe derivata, indica se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta testo passato a un convertitore di tipi per creare un'istanza della proprietà o se deve essere utilizzato un costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-135">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-136">
            <see langword="true" />, se <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> rappresenta una stringa; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-136">
              <see langword="true" />, if this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents a string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-137">Il comportamento predefinito consiste nel restituire `false.`</span><span class="sxs-lookup"><span data-stu-id="f67fe-137">The default behavior is to return `false.`</span></span>  
  
 <span data-ttu-id="f67fe-138">Quando <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> viene `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> sono entrambi `null`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-138">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="f67fe-139">Se la proprietà viene fornita attraverso <xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A> e <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> è `true`, sarà l'unica proprietà fornirà il tipo.</span><span class="sxs-lookup"><span data-stu-id="f67fe-139">If the property is provided through <xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> is `true`, it will be the only property the type will provide.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupObject&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Markup.Primitives.MarkupObject&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Items" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Items As IEnumerable(Of MarkupObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupObject ^&gt; ^ Items { System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupObject ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : seq&lt;System.Windows.Markup.Primitives.MarkupObject&gt;" Usage="System.Windows.Markup.Primitives.MarkupProperty.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupObject&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-140">Se sottoposta a override in una classe derivata, ottiene gli elementi che compongono il valore di questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-140">When overridden in a derived class, gets the items that make up the value of this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-141">Gli elementi che compongono il valore di questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-141">The items that make up the value of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-142">Se la proprietà non è un'enumerazione, verrà restituito un solo elemento.</span><span class="sxs-lookup"><span data-stu-id="f67fe-142">If the property is not an enumeration, only one item will be returned.</span></span>  
  
 <span data-ttu-id="f67fe-143">Se la proprietà è un'enumerazione o enumerabili, verranno restituiti tutti gli elementi.</span><span class="sxs-lookup"><span data-stu-id="f67fe-143">If the property is an enumeration, or enumerable, all the items will be returned.</span></span>  
  
 <span data-ttu-id="f67fe-144">Viene restituito sempre almeno un elemento, in quanto <xref:System.Windows.Markup.Primitives.MarkupObject> non verranno creati un <xref:System.Windows.Markup.Primitives.MarkupProperty> per le proprietà di nessun elemento.</span><span class="sxs-lookup"><span data-stu-id="f67fe-144">At least one item is always returned, because <xref:System.Windows.Markup.Primitives.MarkupObject> will not create a <xref:System.Windows.Markup.Primitives.MarkupProperty> for properties with no items.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Markup.Primitives.MarkupProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-145">Quando viene sottoposto a override in una classe derivata, ottiene un nome utilizzato per la diagnostica e la segnalazione errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-145">When overridden in a derived class, gets a name that is used for diagnostics and error reporting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-146">Nome della proprietà dell'identificatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-146">The identifier property name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-147">Un serializzatore non deve utilizzare questo valore.</span><span class="sxs-lookup"><span data-stu-id="f67fe-147">A serializer should not use this value.</span></span> <span data-ttu-id="f67fe-148">È consigliabile usare la <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> e/o <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> invece.</span><span class="sxs-lookup"><span data-stu-id="f67fe-148">It should use the <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and/or <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyDescriptor : System.ComponentModel.PropertyDescriptor" Usage="System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-149">Quando viene sottoposta a override in una classe derivata, ottiene <see cref="T:System.ComponentModel.PropertyDescriptor" /> per la proprietà del markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-149">When overridden in a derived class, gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> for the markup property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-150">Descrittore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-150">The property descriptor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-151">Restituisce il comportamento predefinito `null`.</span><span class="sxs-lookup"><span data-stu-id="f67fe-151">The default behavior returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Windows.Markup.Primitives.MarkupProperty.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-152">Quando è sottoposto a override in una classe derivata, ottiene il tipo CLR della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-152">When overridden in a derived class, gets the CLR type of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-153">Tipo CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-153">The CLR type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringValue">
      <MemberSignature Language="C#" Value="public abstract string StringValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StringValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StringValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StringValue : string" Usage="System.Windows.Markup.Primitives.MarkupProperty.StringValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-154">Quando viene sottoposto a override in una classe derivata, ottiene il valore stringa dell'oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-154">When overridden in a derived class, gets the string value of this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-155">Valore stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-155">The string value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TypeReferences As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeReferences : seq&lt;Type&gt;" Usage="System.Windows.Markup.Primitives.MarkupProperty.TypeReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-156">Se sottoposto a override in una classe derivata, ottiene il set di tipi a cui <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> farà riferimento quando serializza il valore come stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-156">When overridden in a derived class, gets the set of types that this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> will reference when it serializes its value as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-157">Set di tipi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-157">The set of types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f67fe-158"><xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A> consente a un serializzatore garantire che il de-serializzatore ha informazioni sufficienti per convertire i riferimenti a questi tipi dalle rappresentazioni di stringa.</span><span class="sxs-lookup"><span data-stu-id="f67fe-158"><xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A> enables a serializer to ensure that the de-serializer has enough information to convert references to these type from the string representations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Windows.Markup.Primitives.MarkupProperty.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f67fe-159">Quando viene sottoposto a override in una classe derivata ottiene il valore corrente dell'oggetto <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-159">When overridden in a derived class, gets the current value of this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f67fe-160">Valore corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f67fe-160">The current value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>