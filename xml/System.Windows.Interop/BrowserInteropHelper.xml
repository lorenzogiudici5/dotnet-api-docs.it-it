<Type Name="BrowserInteropHelper" FullName="System.Windows.Interop.BrowserInteropHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c0e3df919449493ec34a31f7e849f3289b38e8b" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48599319" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class BrowserInteropHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed BrowserInteropHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.BrowserInteropHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class BrowserInteropHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class BrowserInteropHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type BrowserInteropHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Una classe helper che specifica informazioni sull'ambiente browser in cui è ospitata un'applicazione browser XAML (XBAP).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClientSite">
      <MemberSignature Language="C#" Value="public static object ClientSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object ClientSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.ClientSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ClientSite As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ ClientSite { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientSite : obj" Usage="System.Windows.Interop.BrowserInteropHelper.ClientSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce un riferimento a un oggetto che può essere utilizzato per accedere al browser host tramite le interfacce del contenitore OLE, ad esempio IOleClientSite::GetContainer();.</summary>
        <value>Oggetto di cui è possibile eseguire il cast su <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleClientSite" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per ottenere questo oggetto. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HostScript">
      <MemberSignature Language="C#" Value="public static dynamic HostScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object HostScript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.HostScript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HostScript As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ HostScript { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostScript : obj" Usage="System.Windows.Interop.BrowserInteropHelper.HostScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto script che fornisce l'accesso all'oggetto finestra HTML, le funzioni di script personalizzate e le variabili globali per la pagina HTML, se l'[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] è ospitata in un frame.</summary>
        <value>Oggetto script che fornisce l'accesso all'oggetto finestra HTML, le funzioni di script personalizzate e le variabili globali per la pagina HTML, se l'[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] è ospitata in un frame; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con l'oggetto restituito <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> dell'oggetto, è possibile accedere la proprietà, metodi ed eventi dell'oggetto finestra HTML, chiamare direttamente una funzione di script o accedere a una variabile globale. La sintassi per accedere a questi elementi viene utilizzata la normale notazione.  
  
 Per altre informazioni sull'oggetto finestra, vedere [oggetto finestra](http://go.microsoft.com/fwlink/?LinkId=160274) nella documentazione di DHTML (Dynamic HTML).  
  
 Il <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> restituisce proprietà `null` se ci si sposta il frame a da una posizione tra domini.  
  
 Questa funzionalità può essere disattivata per Internet Explorer impostando il **ScriptInteropDisallow** valore del Registro di sistema. Per altre informazioni, vedere [sicurezza (WPF)](~/docs/framework/wpf/security-wpf.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare il <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> dell'oggetto e chiudere la finestra del browser.  
  
 [!code-xaml[XbapBrowserInterop#1](~/samples/snippets/csharp/VS_Snippets_Wpf/xbapbrowserinterop/cs/page1.xaml#1)]  
[!code-csharp[XbapBrowserInterop#10](~/samples/snippets/csharp/VS_Snippets_Wpf/xbapbrowserinterop/cs/page1.xaml.cs#10)]
[!code-vb[XbapBrowserInterop#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/xbapbrowserinterop/vb/page1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowserHosted">
      <MemberSignature Language="C#" Value="public static bool IsBrowserHosted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsBrowserHosted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsBrowserHosted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsBrowserHosted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowserHosted : bool" Usage="System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'applicazione corrente [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] è ospitata dal browser.</summary>
        <value>
          <see langword="true" /> se l'applicazione è ospitata da browser; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Controls.Page> può essere indipendente dall'host e, di conseguenza, può essere caricato in diversi tipi di host, inclusi una <xref:System.Windows.Controls.Frame>, un <xref:System.Windows.Navigation.NavigationWindow>, o un browser. Questa situazione può verificarsi quando si dispone di un assembly della libreria che contiene una o più pagine e che viene fatto riferimento da più autonomo esplorabile ([!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]) ospitano le applicazioni.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A?displayProperty=nameWithType> per determinare se un <xref:System.Windows.Controls.Page> è ospitato in un browser.  
  
 [!code-csharp[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOBrowserInteropHelperSnippets/CSharp/Page1.xaml.cs#isbrowserhostedcode)]
 [!code-vb[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOBrowserInteropHelperSnippets/visualbasic/page1.xaml.vb#isbrowserhostedcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public static Uri Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.Source" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Uri ^ Source { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri" Usage="System.Windows.Interop.BrowserInteropHelper.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] per il percorso dal quale viene avviata un'applicazione [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)].</summary>
        <value>Oggetto <see cref="T:System.Uri" /> per il percorso dal quale è stata avviata un'applicazione [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Interop.BrowserInteropHelper.Source%2A> proprietà contiene solo un <xref:System.Uri> per [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] applicazioni. Per un esempio del <xref:System.Windows.Interop.BrowserInteropHelper.Source%2A> proprietà, vedere <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>