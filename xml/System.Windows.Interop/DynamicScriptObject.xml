<Type Name="DynamicScriptObject" FullName="System.Windows.Interop.DynamicScriptObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d245049dce36834800cd064de065804a12003451" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39892437" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DynamicScriptObject : System.Dynamic.DynamicObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DynamicScriptObject extends System.Dynamic.DynamicObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.DynamicScriptObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DynamicScriptObject&#xA;Inherits DynamicObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicScriptObject sealed : System::Dynamic::DynamicObject" />
  <TypeSignature Language="F#" Value="type DynamicScriptObject = class&#xA;    inherit DynamicObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Dynamic.DynamicObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="15e7a-101">Consente le chiamate da un'applicazione browser XAML alla finestra HTML che ospita l'applicazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="15e7a-101">Enables calls from a XAML browser application (XBAP) to the HTML window that hosts the application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e7a-102">Istanze di questa classe vengono esposte tramite il <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> proprietà di <xref:System.Windows.Interop.BrowserInteropHelper>.</span><span class="sxs-lookup"><span data-stu-id="15e7a-102">Instances of this class are exposed through the <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> property of <xref:System.Windows.Interop.BrowserInteropHelper>.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="dynamicScriptObject.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="15e7a-103">Tenta di convertire l'oggetto script in una rappresentazione di stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-103">Attempts to convert the script object to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15e7a-104">Rappresentazione di stringa dell'oggetto script, se l'oggetto può essere convertito; in caso contrario, una rappresentazione di stringa del metodo o della proprietà predefinita dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-104">A string representation of the script object, if the object can be converted; otherwise, a string representation of the object's default property or method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e7a-105">Se l'oggetto script non può essere convertito in una stringa, il <xref:System.Windows.Interop.DynamicScriptObject.ToString%2A> restituisce una rappresentazione di stringa della proprietà predefinita o del metodo.</span><span class="sxs-lookup"><span data-stu-id="15e7a-105">If the script object cannot be converted to a string, the <xref:System.Windows.Interop.DynamicScriptObject.ToString%2A> method returns a string representation of the default property or method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryGetIndex">
      <MemberSignature Language="C#" Value="public override bool TryGetIndex (System.Dynamic.GetIndexBinder binder, object[] indexes, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetIndex(class System.Dynamic.GetIndexBinder binder, object[] indexes, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetIndex (binder As GetIndexBinder, indexes As Object(), ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetIndex(System::Dynamic::GetIndexBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ indexes, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="abstract member TryGetIndex : System.Dynamic.GetIndexBinder * obj[] *  -&gt; bool&#xA;override this.TryGetIndex : System.Dynamic.GetIndexBinder * obj[] *  -&gt; bool" Usage="dynamicScriptObject.TryGetIndex (binder, indexes, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.GetIndexBinder" />
        <Parameter Name="indexes" Type="System.Object[]" />
        <Parameter Name="result" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="15e7a-106">Gestore di associazione fornito dal sito di chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-106">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="15e7a-107">Indice da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-107">The index to be retrieved.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="15e7a-108">Risultato del metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-108">The method result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15e7a-109">Ottiene un valore indicizzato dall'oggetto script utilizzando il primo valore di indice dell'insieme <paramref name="indexes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-109">Gets an indexed value from the script object by using the first index value from the <paramref name="indexes" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15e7a-110">Restituisce sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-110">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e7a-111">Il <xref:System.Windows.Interop.DynamicScriptObject.TryGetIndex%2A> metodo genera un'eccezione se si tenta un accesso non è valido.</span><span class="sxs-lookup"><span data-stu-id="15e7a-111">The <xref:System.Windows.Interop.DynamicScriptObject.TryGetIndex%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="15e7a-112">
            <paramref name="binder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-112">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="15e7a-113">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-113">-or-</span>
          </span>
          <span data-ttu-id="15e7a-114">
            <paramref name="indexes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-114">
              <paramref name="indexes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="15e7a-115">La lunghezza di <paramref name="indexes" /> non è uguale a 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-115">The length of <paramref name="indexes" /> is not equal to 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15e7a-116">Il primo valore <paramref name="indexes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-116">The first <paramref name="indexes" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="15e7a-117">Il membro non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-117">The member does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryGetMember">
      <MemberSignature Language="C#" Value="public override bool TryGetMember (System.Dynamic.GetMemberBinder binder, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetMember(class System.Dynamic.GetMemberBinder binder, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetMember (binder As GetMemberBinder, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetMember(System::Dynamic::GetMemberBinder ^ binder, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="abstract member TryGetMember : System.Dynamic.GetMemberBinder *  -&gt; bool&#xA;override this.TryGetMember : System.Dynamic.GetMemberBinder *  -&gt; bool" Usage="dynamicScriptObject.TryGetMember (binder, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.GetMemberBinder" />
        <Parameter Name="result" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="15e7a-118">Gestore di associazione fornito dal sito di chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-118">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="15e7a-119">Risultato del metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-119">The method result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15e7a-120">Ottiene un valore del membro dall'oggetto script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-120">Gets an member value from the script object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15e7a-121">Restituisce sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-121">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e7a-122">Il <xref:System.Windows.Interop.DynamicScriptObject.TryGetMember%2A> metodo genera un'eccezione se si tenta un accesso non è valido.</span><span class="sxs-lookup"><span data-stu-id="15e7a-122">The <xref:System.Windows.Interop.DynamicScriptObject.TryGetMember%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="15e7a-123">
            <paramref name="binder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-123">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="15e7a-124">Il membro non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-124">The member does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryInvoke">
      <MemberSignature Language="C#" Value="public override bool TryInvoke (System.Dynamic.InvokeBinder binder, object[] args, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryInvoke(class System.Dynamic.InvokeBinder binder, object[] args, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryInvoke (binder As InvokeBinder, args As Object(), ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryInvoke(System::Dynamic::InvokeBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="abstract member TryInvoke : System.Dynamic.InvokeBinder * obj[] *  -&gt; bool&#xA;override this.TryInvoke : System.Dynamic.InvokeBinder * obj[] *  -&gt; bool" Usage="dynamicScriptObject.TryInvoke (binder, args, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.InvokeBinder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="result" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="15e7a-125">Gestore di associazione fornito dal sito di chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-125">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="15e7a-126">Argomenti da passare al metodo predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-126">The arguments to pass to the default method.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="15e7a-127">Risultato del metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-127">The method result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15e7a-128">Chiama il metodo script predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-128">Calls the default script method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15e7a-129">Restituisce sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-129">Always return <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e7a-130">Il <xref:System.Windows.Interop.DynamicScriptObject.TryInvoke%2A> metodo genera un'eccezione se il metodo non esiste.</span><span class="sxs-lookup"><span data-stu-id="15e7a-130">The <xref:System.Windows.Interop.DynamicScriptObject.TryInvoke%2A> method throws an exception if the method does not exist.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="15e7a-131">
            <paramref name="binder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-131">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="15e7a-132">Il metodo non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-132">The method does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryInvokeMember">
      <MemberSignature Language="C#" Value="public override bool TryInvokeMember (System.Dynamic.InvokeMemberBinder binder, object[] args, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryInvokeMember(class System.Dynamic.InvokeMemberBinder binder, object[] args, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryInvokeMember (binder As InvokeMemberBinder, args As Object(), ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryInvokeMember(System::Dynamic::InvokeMemberBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="abstract member TryInvokeMember : System.Dynamic.InvokeMemberBinder * obj[] *  -&gt; bool&#xA;override this.TryInvokeMember : System.Dynamic.InvokeMemberBinder * obj[] *  -&gt; bool" Usage="dynamicScriptObject.TryInvokeMember (binder, args, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.InvokeMemberBinder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="result" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="15e7a-133">Gestore di associazione fornito dal sito di chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-133">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="15e7a-134">Argomenti da passare al metodo predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-134">The arguments to pass to the default method.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="15e7a-135">Risultato del metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-135">The method result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15e7a-136">Chiama un metodo dell'oggetto script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-136">Calls a method on the script object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15e7a-137">Restituisce sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-137">Always return <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e7a-138">Il <xref:System.Windows.Interop.DynamicScriptObject.TryInvokeMember%2A> metodo genera un'eccezione se si tenta un accesso non è valido.</span><span class="sxs-lookup"><span data-stu-id="15e7a-138">The <xref:System.Windows.Interop.DynamicScriptObject.TryInvokeMember%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="15e7a-139">
            <paramref name="binder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-139">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="15e7a-140">Il metodo non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-140">The method does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TrySetIndex">
      <MemberSignature Language="C#" Value="public override bool TrySetIndex (System.Dynamic.SetIndexBinder binder, object[] indexes, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TrySetIndex(class System.Dynamic.SetIndexBinder binder, object[] indexes, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TrySetIndex (binder As SetIndexBinder, indexes As Object(), value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TrySetIndex(System::Dynamic::SetIndexBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ indexes, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member TrySetIndex : System.Dynamic.SetIndexBinder * obj[] * obj -&gt; bool&#xA;override this.TrySetIndex : System.Dynamic.SetIndexBinder * obj[] * obj -&gt; bool" Usage="dynamicScriptObject.TrySetIndex (binder, indexes, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.SetIndexBinder" />
        <Parameter Name="indexes" Type="System.Object[]" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="15e7a-141">Gestore di associazione fornito dal sito di chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-141">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="15e7a-142">Indice da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-142">The index to be retrieved.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="15e7a-143">Risultato del metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-143">The method result</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15e7a-144">Imposta un membro dell'oggetto script utilizzando il primo indice specificato nell'insieme <paramref name="indexes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-144">Sets a member on the script object by using the first index specified in the <paramref name="indexes" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15e7a-145">Restituisce sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-145">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e7a-146">Il <xref:System.Windows.Interop.DynamicScriptObject.TrySetIndex%2A> metodo genera un'eccezione se si tenta un accesso non è valido.</span><span class="sxs-lookup"><span data-stu-id="15e7a-146">The <xref:System.Windows.Interop.DynamicScriptObject.TrySetIndex%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="15e7a-147">
            <paramref name="binder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-147">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="15e7a-148">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-148">-or-</span>
          </span>
          <span data-ttu-id="15e7a-149">
            <paramref name="indexes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-149">
              <paramref name="indexes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="15e7a-150">La lunghezza di <paramref name="indexes" /> non è uguale a 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-150">The length of <paramref name="indexes" /> is not equal to 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15e7a-151">Il primo valore <paramref name="indexes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-151">The first <paramref name="indexes" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="15e7a-152">Il membro non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-152">The member does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TrySetMember">
      <MemberSignature Language="C#" Value="public override bool TrySetMember (System.Dynamic.SetMemberBinder binder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TrySetMember(class System.Dynamic.SetMemberBinder binder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TrySetMember (binder As SetMemberBinder, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TrySetMember(System::Dynamic::SetMemberBinder ^ binder, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member TrySetMember : System.Dynamic.SetMemberBinder * obj -&gt; bool&#xA;override this.TrySetMember : System.Dynamic.SetMemberBinder * obj -&gt; bool" Usage="dynamicScriptObject.TrySetMember (binder, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.SetMemberBinder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="15e7a-153">Gestore di associazione fornito dal sito di chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-153">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="15e7a-154">Valore da impostare per il membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-154">The value to set for the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15e7a-155">Imposta un membro dell'oggetto script sul valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-155">Sets a member on the script object to the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15e7a-156">Restituisce sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-156">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15e7a-157">Il <xref:System.Windows.Interop.DynamicScriptObject.TrySetMember%2A> metodo genera un'eccezione se si tenta un accesso non è valido.</span><span class="sxs-lookup"><span data-stu-id="15e7a-157">The <xref:System.Windows.Interop.DynamicScriptObject.TrySetMember%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="15e7a-158">
            <paramref name="binder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-158">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="15e7a-159">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-159">-or-</span>
          </span>
          <span data-ttu-id="15e7a-160">
            <paramref name="indexes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-160">
              <paramref name="indexes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="15e7a-161">La lunghezza di <paramref name="indexes" /> non è uguale a 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-161">The length of <paramref name="indexes" /> is not equal to 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15e7a-162">Il primo valore <paramref name="indexes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-162">The first <paramref name="indexes" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="15e7a-163">Il membro non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15e7a-163">The member does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>