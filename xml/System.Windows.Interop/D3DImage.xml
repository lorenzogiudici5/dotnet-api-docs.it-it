<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="D3DImage.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac567a591e7f26a5181b8d03d81e8af4ab098e8eb98.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67a591e7f26a5181b8d03d81e8af4ab098e8eb98</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.D3DImage">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Media.ImageSource" /&gt;</ph> that displays a user-created Direct3D surface.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Media.ImageSource" /&gt;</ph> che visualizza una superficie Direct3D creata dall'utente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> class to host Direct3D content in a Windows Presentation Foundation (WPF) application.</source>
          <target state="translated">Utilizzare la <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> classe per ospitare contenuto Direct3D in un'applicazione Windows Presentation Foundation (WPF).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> method to change the Direct3D content displayed by the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph>.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> metodo per modificare il contenuto Direct3D visualizzato dal <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> method to assign a Direct3D surface to a <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph>.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodo per assegnare una superficie Direct3D a un <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> method to track updates to the Direct3D surface.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> metodo per tenere traccia degli aggiornamenti all'area di Direct3D.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Unlock%2A&gt;</ph> method to display the changed areas.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Unlock%2A&gt;</ph> metodo per visualizzare le aree modificate.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> class manages two display buffers, which are called the <bpt id="p1">*</bpt>back buffer<ept id="p1">*</ept> and the <bpt id="p2">*</bpt>front buffer<ept id="p2">*</ept>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> classe gestisce due buffer di visualizzazione, ovvero il <bpt id="p1">*</bpt>buffer nascosto<ept id="p1">*</ept> e <bpt id="p2">*</bpt>buffer front-<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>The back buffer is your Direct3D surface.</source>
          <target state="translated">Il buffer rappresenta la superficie di Direct3D.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Changes to the back buffer are copied forward to the front buffer when you call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Unlock%2A&gt;</ph> method, where it is displayed on the hardware.</source>
          <target state="translated">Le modifiche apportate al buffer nascosto vengono copiate nel front buffer quando si chiama il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Unlock%2A&gt;</ph> (metodo), in cui vengono visualizzati nell'hardware.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Occasionally, the front buffer becomes unavailable.</source>
          <target state="translated">In alcuni casi, il front buffer non è più disponibile.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</source>
          <target state="translated">La mancanza di disponibilità può essere causata dal blocco dello schermo, applicazioni Direct3D esclusive a schermo intero, cambio utente o altre attività di sistema.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>When this occurs, your WPF application is notified by handling the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> event.</source>
          <target state="translated">In questo caso, l'applicazione WPF notifica gestendo il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</source>
          <target state="translated">Modalità di risposta dell'applicazione nel front buffer non sono più disponibili dipende dal tipo di attivazione WPF per eseguire il fallback per il rendering software.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodo presenta un overload che accetta un parametro che specifica se il fallback WPF per il rendering software.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Responding to an Unavailable Front Buffer when WPF Does not Fall Back to Software Rendering</source>
          <target state="translated">Risponde a un Buffer anteriore disponibile quando WPF non eseguire il fallback software Rendering</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>When you call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29&gt;</ph> overload or call the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> overload with the <ph id="ph3">`enableSoftwareFallback`</ph> parameter set to <ph id="ph4">`false`</ph>, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</source>
          <target state="translated">Quando si chiama il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29&gt;</ph> overload o chiamare il <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> eseguire l'overload con il <ph id="ph3">`enableSoftwareFallback`</ph> parametro impostato su <ph id="ph4">`false`</ph>, il sistema di rendering rilascia il riferimento al buffer nascosto quando il front buffer non è più disponibile e non è visualizzato.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>When the front buffer is available again, the rendering system raises the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> event to notify your WPF application.</source>
          <target state="translated">Quando il buffer anteriore è nuovamente disponibile, il sistema di rendering genera il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> evento per notificare all'applicazione WPF.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> event to restart rendering again with a valid Direct3D surface.</source>
          <target state="translated">È possibile creare un gestore eventi per il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> riavviare il rendering con una superficie Direct3D valida dell'evento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>To restart rendering, you must call <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph>.</source>
          <target state="translated">Per riavviare il rendering, è necessario chiamare <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Responding to an Unavailable Front Buffer when WPF Falls Back to Software Rendering</source>
          <target state="translated">Risponde a un Buffer anteriore disponibile quando esegue il fallback di WPF per il Rendering Software</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>When you call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> overload with the <ph id="ph2">`enableSoftwareFallback`</ph> parameter set to <ph id="ph3">`true`</ph>, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <ph id="ph4">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> when the front buffer is available again.</source>
          <target state="translated">Quando si chiama il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> eseguire l'overload con il <ph id="ph2">`enableSoftwareFallback`</ph> parametro impostato su <ph id="ph3">`true`</ph>, il sistema di rendering mantiene il relativo riferimento al buffer nascosto quando il front buffer non è disponibile, in modo non è necessario chiamare <ph id="ph4">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> quando all'inizio buffer sarà nuovamente disponibile.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>There may be situations where the user’s device becomes unavailable.</source>
          <target state="translated">Potrebbero verificarsi situazioni in cui il dispositivo dell'utente non è più disponibile.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>When that occurs, call <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> to release WPF’s reference to the back buffer.</source>
          <target state="translated">In questo caso, chiamare <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> per rilasciare il riferimento di WPF al buffer nascosto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>If you need to reset your device, call <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> with the <ph id="ph2">`backBuffer`</ph> parameter set to <ph id="ph3">`null`</ph>, and then call <ph id="ph4">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> again with <ph id="ph5">`backBuffer`</ph> set to a valid Direct3D surface.</source>
          <target state="translated">Per reimpostare il dispositivo, è necessario chiamare <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> con il <ph id="ph2">`backBuffer`</ph> parametro impostato su <ph id="ph3">`null`</ph>e quindi chiamare <ph id="ph4">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> con <ph id="ph5">`backBuffer`</ph> impostato su una superficie Direct3D valida.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Performance depends greatly on the settings of the Direct3D surface.</source>
          <target state="translated">Le prestazioni dipendono notevolmente le impostazioni dell'area di Direct3D.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>For more information, see <bpt id="p1">[</bpt>Performance Considerations for Direct3D9 and WPF Interoperability<ept id="p1">](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>considerazioni sulle prestazioni per l'interoperabilità di WPF e Direct3D9<ept id="p1">](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> class does not display Direct3D content when WPF renders in software, such as over a Remote Desktop connection, unless you call <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> and specify <ph id="ph3">`true`</ph> for the <ph id="ph4">`enableSoftwareFallback`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> classe non visualizza contenuto Direct3D quando WPF il rendering software, ad esempio tramite una connessione Desktop remoto, a meno che non si chiama <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> e specificare <ph id="ph3">`true`</ph> per il <ph id="ph4">`enableSoftwareFallback`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>The following code example shows how to declare a <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> in XAML.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come dichiarare un <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> in XAML.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>You must map the <ph id="ph1">&lt;xref:System.Windows.Interop&gt;</ph> namespace, because it is not included in the default XAML namespaces.</source>
          <target state="translated">È necessario eseguire il mapping di <ph id="ph1">&lt;xref:System.Windows.Interop&gt;</ph> dello spazio dei nomi, perché non è incluso negli spazi dei nomi XAML predefinito.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Hosting Direct3D9 Content in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura dettagliata: Hosting di contenuto Direct3D9 in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>for access to unmanaged resources.</source>
          <target state="translated">Per accedere alle risorse non gestite.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">Azione di sicurezza: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.D3DImage">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.D3DImage">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.#ctor">
          <source>The default display resolution is 1/96th inch.</source>
          <target state="translated">La risoluzione dello schermo predefinito è 1/96 di pollice.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.#ctor">
          <source>for access to unmanaged resources.</source>
          <target state="translated">Per accedere alle risorse non gestite.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.#ctor">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Azione di sicurezza: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.#ctor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)">
          <source>The display resolution on the x-axis.</source>
          <target state="translated">Risoluzione dello schermo sull'asse x.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)">
          <source>The display resolution on the y-axis.</source>
          <target state="translated">Risoluzione dello schermo sull'asse y.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> class with the specified display resolution.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> con la risoluzione dello schermo specificata.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)">
          <source>The default display resolution is 1/96th inch.</source>
          <target state="translated">La risoluzione dello schermo predefinito è 1/96 di pollice.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="dpiX" /&gt;</ph> or <ph id="ph2">&lt;paramref name="dpiY" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dpiX" /&gt;</ph> o <ph id="ph2">&lt;paramref name="dpiY" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">Per accedere alle risorse non gestite.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Azione di sicurezza: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Int32Rect" /&gt;</ph> that represents the area that changed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Int32Rect" /&gt;</ph> che rappresenta l'area modificata.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Specifies the area of the back buffer that changed.</source>
          <target state="translated">Specifica l'area del buffer nascosto che è stata modificata.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> method to indicate changes your code has made to the back buffer.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> metodo per indicare le modifiche apportate dal codice al buffer nascosto.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>To be rendered, the changed area on the back buffer must have a corresponding changed area on the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph>.</source>
          <target state="translated">Per eseguire il rendering dell'area modificata nel buffer nascosto necessario un'area modificata corrispondente <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> methods before calling the <ph id="ph3">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> method.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> prima di chiamare i metodi di <ph id="ph3">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Unlock%2A&gt;</ph> method to copy the changed areas to the front buffer.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Unlock%2A&gt;</ph> metodo per copiare le aree modificate nel front buffer.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>After a few calls to the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> method, the changed areas are merged into a single area.</source>
          <target state="translated">Dopo alcune chiamate al <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> (metodo), le aree modificate vengono unite in un'unica area.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>This means you must have valid data outside of the changed areas.</source>
          <target state="translated">Ciò significa che è necessario disporre di dati validi di fuori di aree modificate.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> method to specify the changed region in the back buffer.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> per specificare l'area modificata nel buffer nascosto.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Hosting Direct3D9 Content in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura dettagliata: Hosting di contenuto Direct3D9 in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>The bitmap has not been locked by a call to the <ph id="ph1">&lt;see cref="M:System.Windows.Interop.D3DImage.Lock" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /&gt;</ph> methods.</source>
          <target state="translated">La bitmap non è stata bloccata tramite una chiamata al metodo <ph id="ph1">&lt;see cref="M:System.Windows.Interop.D3DImage.Lock" /&gt;</ph> o <ph id="ph2">&lt;see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>The back buffer has not been assigned by a call to the <ph id="ph1">&lt;see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /&gt;</ph> method.</source>
          <target state="translated">Il buffer nascosto non è stato assegnato tramite una chiamata al metodo <ph id="ph1">&lt;see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>One or more of the following conditions is true.</source>
          <target state="translated">Una o più delle condizioni seguenti sono vere.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source><ph id="ph1">&lt;paramref name="dirtyRect.X" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dirtyRect.X" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source><ph id="ph1">&lt;paramref name="dirtyRect.Y" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dirtyRect.Y" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source><ph id="ph1">&lt;paramref name="dirtyRect.Width" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 or <ph id="ph3">&lt;paramref name="dirtyRect.Width" /&gt;</ph> <ph id="ph4">&amp;gt;</ph> <ph id="ph5">&lt;see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /&gt;</ph><ph id="ph6">&lt;paramref name="dirtyRect.Height" /&gt;</ph> <ph id="ph7">&amp;lt;</ph> 0 or <ph id="ph8">&lt;paramref name="dirtyRect.Height" /&gt;</ph> <ph id="ph9">&amp;gt;</ph> <ph id="ph10">&lt;see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dirtyRect.Width" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 o <ph id="ph3">&lt;paramref name="dirtyRect.Width" /&gt;</ph> <ph id="ph4">&amp;gt;</ph> <ph id="ph5">&lt;see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /&gt;</ph><ph id="ph6">&lt;paramref name="dirtyRect.Height" /&gt;</ph> <ph id="ph7">&amp;lt;</ph> 0 o <ph id="ph8">&lt;paramref name="dirtyRect.Height" /&gt;</ph> <ph id="ph9">&amp;gt;</ph> <ph id="ph10">&lt;see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">Per accedere alle risorse non gestite.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Azione di sicurezza: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.Clone">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> object, making deep copies of this object's values.</source>
          <target state="translated">Crea un clone modificabile dell'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>, eseguendo copie complete dei valori di tale oggetto.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.Clone">
          <source>When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</source>
          <target state="translated">Durante la copia delle proprietà di dipendenza, questo metodo copia i riferimenti a risorse e le associazioni dati (che potrebbero non essere più risolti), ma non le animazioni né i relativi valori correnti.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.Clone">
          <source>A modifiable clone of the current object.</source>
          <target state="translated">Clone modificabile dell'oggetto corrente.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.Clone">
          <source>The cloned object's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property will be <ph id="ph2">&lt;see langword="false" /&gt;</ph> even if the source's <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property was <ph id="ph4">&lt;see langword="true." /&gt;</ph></source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> dell'oggetto clonato sarà <ph id="ph2">&lt;see langword="false" /&gt;</ph>, anche se la proprietà <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> dell'oggetto di origine è <ph id="ph4">&lt;see langword="true." /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Clone">
          <source>This method is used to produce modifiable copies of frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> object).</source>
          <target state="translated">Questo metodo viene utilizzato per produrre copie modificabili di bloccata <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> oggetti (o qualsiasi <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> oggetto).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Clone">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
          <target state="translated">Per comodità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Clone">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)">
          <source>The object to clone.</source>
          <target state="translated">Oggetto da clonare.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)">
          <source>Makes the instance a clone (deep copy) of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> using base (non-animated) property values.</source>
          <target state="translated">Rende l'istanza un clone (copia completa) dell'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> specificato usando i valori di proprietà di base (non animati).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CloneCurrentValue">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> object, making deep copies of this object's current values.</source>
          <target state="translated">Crea un clone modificabile dell'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>, eseguendo copie complete dei valori correnti di tale oggetto.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CloneCurrentValue">
          <source>Resource references, data bindings, and animations are not copied, but their current values are copied.</source>
          <target state="translated">I riferimenti alle risorse, i data binding e le animazioni non vengono copiati, mentre vengono copiati i relativi valori correnti.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CloneCurrentValue">
          <source>A modifiable clone of the current object.</source>
          <target state="translated">Clone modificabile dell'oggetto corrente.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CloneCurrentValue">
          <source>The cloned object's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property will be <ph id="ph2">&lt;see langword="false" /&gt;</ph> even if the source's <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property was <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> dell'oggetto clonato sarà <ph id="ph2">&lt;see langword="false" /&gt;</ph>, anche se la proprietà <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> dell'oggetto di origine è <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CloneCurrentValue">
          <source>This method is used to produce modifiable copies of frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> object).</source>
          <target state="translated">Questo metodo viene utilizzato per produrre copie modificabili di bloccata <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> oggetti (o qualsiasi <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> oggetto).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CloneCurrentValue">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
          <target state="translated">Per comodità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CloneCurrentValue">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> to be cloned.</source>
          <target state="translated">Costruttore <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> da duplicare.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)">
          <source>Makes the instance a modifiable clone (deep copy) of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> using current property values.</source>
          <target state="translated">Rende l'istanza un clone (copia completa) modificabile dell'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> specificato usando i valori di proprietà correnti.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
          <source>Creates a software copy of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</source>
          <target state="translated">Crea una copia software di <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.BitmapSource" /&gt;</ph> that is a software copy of the current state of the back buffer; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the back buffer cannot be read.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.BitmapSource" /&gt;</ph> che corrisponde a una copia software dello stato corrente del buffer nascosto; in caso contrario, <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è possibile leggere il buffer nascosto.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A&gt;</ph> method is called by clients such as the printing system and the <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.RenderTargetBitmap&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A&gt;</ph> metodo viene chiamato dal client, ad esempio il sistema di stampa e <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.RenderTargetBitmap&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
          <source>Optionally override the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A&gt;</ph> method to implement custom logic and return a different <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.BitmapSource&gt;</ph>.</source>
          <target state="translated">Eseguire l'override di <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A&gt;</ph> metodo per implementare la logica personalizzata e restituire un oggetto diverso <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.BitmapSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
          <source>For example, you can return a placeholder <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapSource&gt;</ph> if the default <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A&gt;</ph> implementation returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Ad esempio, è possibile restituire un segnaposto <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapSource&gt;</ph> se il valore predefinito <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A&gt;</ph> implementazione restituisce <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
          <source>for access to unmanaged resources.</source>
          <target state="translated">Per accedere alle risorse non gestite.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Azione di sicurezza: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CreateInstanceCore">
          <source>When implemented in a derived class, creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> derived class.</source>
          <target state="translated">Quando è implementato in una classe derivata, crea una nuova istanza della classe derivata <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.CreateInstanceCore">
          <source>The new instance.</source>
          <target state="translated">Nuova istanza.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CreateInstanceCore">
          <source>If you derive from the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> class, you must override the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A&gt;</ph> method to enable correct cloning.</source>
          <target state="translated">Se si deriva dal <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> (classe), è necessario eseguire l'override di <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A&gt;</ph> metodo per consentire la corretta clonazione.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.CreateInstanceCore">
          <source>The default implementation performs a <ph id="ph1">`return new D3DImage()`</ph>, which will not be correct if the instance is a different class.</source>
          <target state="translated">L'implementazione predefinita esegue un <ph id="ph1">`return new D3DImage()`</ph>, che non sarà corretto se l'istanza è una classe diversa.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.Finalize">
          <source>Frees resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated">Libera risorse ed esegue altre operazioni di pulizia prima che l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> venga recuperato tramite Garbage Collection.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue l'override del metodo <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
          <target state="translated">Il codice dell'applicazione non deve chiamare questo metodo. un oggetto <ph id="ph1">`Finalize`</ph> metodo viene richiamato automaticamente durante l'operazione di garbage collection, a meno che la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>metodi Finalize e distruttori<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>la pulizia di risorse non gestite<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, e <bpt id="p3">[</bpt>si esegue l'override del metodo Finalize<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Finalize">
          <source>for access to unmanaged resources.</source>
          <target state="translated">Per accedere alle risorse non gestite.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Finalize">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Azione di sicurezza: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Finalize">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)">
          <source>Has no effect.</source>
          <target state="translated">Non ha effetto.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)">
          <source>Makes the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> unmodifiable or determines whether it can be made unmodifiable.</source>
          <target state="translated">Rende l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> immodificabile o determina se può essere reso immodificabile.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> in tutti i casi.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> class does not allow freezing because changes are always possible due to front buffer availability.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> classe non consente il blocco perché le modifiche sono sempre a causa della disponibilità del front-buffer.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)">
          <source>The instance to copy.</source>
          <target state="translated">Istanza da copiare.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)">
          <source>Makes the instance a frozen clone of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> using base (non-animated) property values.</source>
          <target state="translated">Si prenda ad esempio una copia bloccata di <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> specificato utilizzando valori della proprietà di base (non-animati).</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> to copy and freeze.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> da copiare e bloccare.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <source>Makes the current instance a frozen clone of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph>.</source>
          <target state="translated">Rende l’istanza corrente una copia bloccata di <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph>specificato.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <source>If the object has animated dependency properties, their current animated values are copied.</source>
          <target state="translated">Se l'oggetto ha proprietà di dipendenza animate, i valori animati correnti vengono copiati.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.D3DImage.Height">
          <source>Gets the height of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</source>
          <target state="translated">Ottiene l'altezza di <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.Height">
          <source>The height of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>, in measure units.</source>
          <target state="translated">Altezza di <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> espressa in unità di misura.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.Height">
          <source>A measure unit is 1/96th inch.</source>
          <target state="translated">Un'unità di misura è 1/96 di pollice.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.Height">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Height%2A&gt;</ph> can change when a new back buffer is assigned by a call to the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> method.</source>
          <target state="translated">Il valore di <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Height%2A&gt;</ph> possono cambiare quando viene assegnato un nuovo buffer nascosto da una chiamata al <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>Gets a value that indicates whether a front buffer exists.</source>
          <target state="translated">Ottiene un valore che indica se un front buffer esiste.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a front buffer exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un front buffer esiste; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>Occasionally, the front buffer becomes unavailable.</source>
          <target state="translated">In alcuni casi, il front buffer non è più disponibile.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</source>
          <target state="translated">La mancanza di disponibilità può essere causata dal blocco dello schermo, applicazioni Direct3D esclusive a schermo intero, cambio utente o altre attività di sistema.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>When this occurs, your WPF application is notified by handling the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> event.</source>
          <target state="translated">In questo caso, l'applicazione WPF notifica gestendo il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</source>
          <target state="translated">Modalità di risposta dell'applicazione nel front buffer non sono più disponibili dipende dal tipo di attivazione WPF per eseguire il fallback per il rendering software.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodo presenta un overload che accetta un parametro che specifica se il fallback WPF per il rendering software.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>For more information, see the remarks in the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> class.</source>
          <target state="translated">Per ulteriori informazioni, vedere la sezione osservazioni nel <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>Dependency Property Information</source>
          <target state="translated">Informazioni proprietà di dipendenza</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>Identifier field</source>
          <target state="translated">Campo dell'identificatore</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Impostare le proprietà dei metadati <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>None</source>
          <target state="translated">nessuno</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>The following code example shows how to check the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A&gt;</ph> property when rendering the composition target.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come controllare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A&gt;</ph> proprietà durante il rendering della destinazione di composizione.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Hosting Direct3D9 Content in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura dettagliata: Hosting di contenuto Direct3D9 in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /&gt;</ph> property changes.</source>
          <target state="translated">Si verifica quando la proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /&gt;</ph> cambia.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> to be notified when the status of the front buffer changes.</source>
          <target state="translated">Gestire il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> per ricevere una notifica quando viene modificato lo stato del buffer anteriore.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged">
          <source>How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</source>
          <target state="translated">Modalità di risposta dell'applicazione nel front buffer non sono più disponibili dipende dal tipo di attivazione WPF per eseguire il fallback per il rendering software.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodo presenta un overload che accetta un parametro che specifica se il fallback WPF per il rendering software.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged">
          <source>For more information, see the remarks in the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> class.</source>
          <target state="translated">Per ulteriori informazioni, vedere la sezione osservazioni nel <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la proprietà di dipendenza <ph id="ph1">&lt;see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.Lock">
          <source>Locks the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> and enables operations on the back buffer.</source>
          <target state="translated">Blocca <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> e consente l'esecuzione di operazioni nel buffer nascosto.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Lock">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> method to change the back buffer by calling the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> methods.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> metodo per modificare il buffer chiamando il <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Lock">
          <source>While the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> is locked, your application can also render to the Direct3D surface assigned to the back buffer.</source>
          <target state="translated">Mentre il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> è bloccato, l'applicazione può inoltre eseguire il rendering della superficie Direct3D assegnata al buffer nascosto.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Lock">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> method blocks when the rendering system is reading the back buffer to update the front buffer.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> metodo si blocca quando il sistema di rendering legge il buffer nascosto per aggiornare il front buffer.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Lock">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.TryLock%2A&gt;</ph> method to avoid blocking indefinitely.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.TryLock%2A&gt;</ph> metodo per evitare il blocco per un periodo illimitato.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Lock">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> method to enable updates to the back buffer.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> metodo per abilitare gli aggiornamenti al buffer nascosto.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Lock">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Hosting Direct3D9 Content in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura dettagliata: Hosting di contenuto Direct3D9 in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.Lock">
          <source>The lock count equals <ph id="ph1">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Il conteggio dei blocchi equivale a <ph id="ph1">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.D3DImage.Metadata">
          <source>Gets the metadata associated with the image source.</source>
          <target state="translated">Ottiene i metadati associati all'origine dell'immagine.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.Metadata">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> in all cases.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> in tutti i casi.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.D3DImage.PixelHeight">
          <source>Gets the height of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>, in pixels.</source>
          <target state="translated">Ottiene l'altezza di <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> espressa in pixel.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.PixelHeight">
          <source>The height of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>, in pixels.</source>
          <target state="translated">Altezza di <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> espressa in pixel.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.PixelHeight">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.PixelHeight%2A&gt;</ph> can change when a new back buffer is assigned by a call to the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> method.</source>
          <target state="translated">Il valore di <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.PixelHeight%2A&gt;</ph> possono cambiare quando viene assegnato un nuovo buffer nascosto da una chiamata al <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.PixelHeight">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.PixelHeight%2A&gt;</ph> property to specify the changed region in the back buffer.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.PixelHeight%2A&gt;</ph> proprietà per specificare l'area modificata nel buffer nascosto.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.PixelHeight">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Hosting Direct3D9 Content in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura dettagliata: Hosting di contenuto Direct3D9 in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.D3DImage.PixelWidth">
          <source>Gets the width of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>, in pixels.</source>
          <target state="translated">Ottiene la larghezza di <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> espressa in pixel.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.PixelWidth">
          <source>The width of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>, in pixels.</source>
          <target state="translated">Larghezza di <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> espressa in pixel.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.PixelWidth">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.PixelWidth%2A&gt;</ph> can change when a new back buffer is assigned by a call to the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> method.</source>
          <target state="translated">Il valore di <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.PixelWidth%2A&gt;</ph> possono cambiare quando viene assegnato un nuovo buffer nascosto da una chiamata al <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.PixelWidth">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.PixelWidth%2A&gt;</ph> property to specify the changed region in the back buffer.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.PixelWidth%2A&gt;</ph> proprietà per specificare l'area modificata nel buffer nascosto.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.PixelWidth">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Hosting Direct3D9 Content in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura dettagliata: Hosting di contenuto Direct3D9 in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.D3DImage">
          <source>Assigns a Direct3D surface as the source of the back buffer.</source>
          <target state="translated">Assegna una superficie Direct3D come origine del buffer nascosto.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>The type of Direct3D surface.</source>
          <target state="translated">Tipo di superficie Direct3D.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>Must be a valid <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DResourceType" /&gt;</ph>.</source>
          <target state="translated">Deve essere un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DResourceType" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>The Direct3D surface to assign as the back buffer.</source>
          <target state="translated">Superficie Direct3D da assegnare come buffer nascosto.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>Assigns a Direct3D surface as the source of the back buffer.</source>
          <target state="translated">Assegna una superficie Direct3D come origine del buffer nascosto.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> method to assign a Direct3D surface to the back buffer.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodo per assegnare una superficie Direct3D al buffer nascosto.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>Performance depends greatly on the settings of the Direct3D surface.</source>
          <target state="translated">Le prestazioni dipendono notevolmente le impostazioni dell'area di Direct3D.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>For more information, see <bpt id="p1">[</bpt>Performance Considerations for Direct3D9 and WPF Interoperability<ept id="p1">](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>considerazioni sulle prestazioni per l'interoperabilità di WPF e Direct3D9<ept id="p1">](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)</ept>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29&gt;</ph> overload is identical to calling the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> overload with the <ph id="ph3">`enableSoftwareFallback`</ph> parameter set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29&gt;</ph> overload è identica alla chiamata al metodo il <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> eseguire l'overload con il <ph id="ph3">`enableSoftwareFallback`</ph> parametro impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>When you call <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29&gt;</ph> or call <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> with the <ph id="ph3">`enableSoftwareFallback`</ph> parameter set to <ph id="ph4">`false`</ph>, the rendering system releases its reference to the back buffer when front buffer becomes unavailable and nothing is displayed.</source>
          <target state="translated">Quando si chiama <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29&gt;</ph> o chiamare <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> con il <ph id="ph3">`enableSoftwareFallback`</ph> parametro impostato su <ph id="ph4">`false`</ph>, il sistema di rendering rilascia il riferimento al buffer nascosto quando anteriore buffer non è più disponibile e viene visualizzato nulla.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>When the front buffer is available again, the rendering system raises the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> event to notify your WPF application.</source>
          <target state="translated">Quando il buffer anteriore è nuovamente disponibile, il sistema di rendering genera il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> evento per notificare all'applicazione WPF.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> event to restart rendering again with a valid Direct3D surface.</source>
          <target state="translated">È possibile creare un gestore eventi per il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> riavviare il rendering con una superficie Direct3D valida dell'evento.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>To restart rendering, you must call <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph>.</source>
          <target state="translated">Per riavviare il rendering, è necessario chiamare <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>The following list shows the required back buffer settings for the <ph id="ph1">`IDirect3DSurface9`</ph> type.</source>
          <target state="translated">L'elenco seguente mostra le impostazioni del buffer nascosto necessarie per il <ph id="ph1">`IDirect3DSurface9`</ph> tipo.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source><ph id="ph1">`D3DFMT_A8R8G8B8`</ph> or <ph id="ph2">`D3DFMT_X8R8G8B8`</ph></source>
          <target state="translated"><ph id="ph1">`D3DFMT_A8R8G8B8`</ph> o <ph id="ph2">`D3DFMT_X8R8G8B8`</ph></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>Multisampling is allowed on <ph id="ph1">`IDirect3DSurface9Ex`</ph> surfaces only.</source>
          <target state="translated">Il campionamento multiplo è consentito su <ph id="ph1">`IDirect3DSurface9Ex`</ph> copre solo.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> method to assign a Direct3D surface.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodo per assegnare una superficie Direct3D.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Hosting Direct3D9 Content in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura dettagliata: Hosting di contenuto Direct3D9 in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> has not been locked by a call to the <ph id="ph2">&lt;see cref="M:System.Windows.Interop.D3DImage.Lock" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /&gt;</ph> methods.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> non è stato bloccato tramite una chiamata al metodo <ph id="ph2">&lt;see cref="M:System.Windows.Interop.D3DImage.Lock" /&gt;</ph> o <ph id="ph3">&lt;see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="backBufferType" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Interop.D3DResourceType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="backBufferType" /&gt;</ph> non è un oggetto <ph id="ph2">&lt;see cref="T:System.Windows.Interop.D3DResourceType" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>The creation parameters for <ph id="ph1">&lt;paramref name="backBuffer" /&gt;</ph> do not meet the requirements for the <ph id="ph2">&lt;paramref name="backBufferType" /&gt;</ph>-or-The <ph id="ph3">&lt;paramref name="backBuffer" /&gt;</ph> device is not valid.</source>
          <target state="translated">I parametri di creazione per <ph id="ph1">&lt;paramref name="backBuffer" /&gt;</ph> non soddisfano i requisiti per <ph id="ph2">&lt;paramref name="backBufferType" /&gt;</ph> o il dispositivo <ph id="ph3">&lt;paramref name="backBuffer" /&gt;</ph> non è valido.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">Per accedere alle risorse non gestite.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Azione di sicurezza: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>The type of Direct3D surface.</source>
          <target state="translated">Tipo di superficie Direct3D.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>Must be a valid <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DResourceType" /&gt;</ph>.</source>
          <target state="translated">Deve essere un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DResourceType" /&gt;</ph> valido.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>The Direct3D surface to assign as the back buffer.</source>
          <target state="translated">Superficie Direct3D da assegnare come buffer nascosto.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to fall back on software rendering; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per eseguire il fallback nel rendering software; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>Assigns a Direct3D surface as the source of the back buffer.</source>
          <target state="translated">Assegna una superficie Direct3D come origine del buffer nascosto.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29&gt;</ph> overload or call the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> overload with the <ph id="ph3">`enableSoftwareFallback`</ph> parameter set to <ph id="ph4">`false`</ph>, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</source>
          <target state="translated">Quando si chiama il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29&gt;</ph> overload o chiamare il <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> eseguire l'overload con il <ph id="ph3">`enableSoftwareFallback`</ph> parametro impostato su <ph id="ph4">`false`</ph>, il sistema di rendering rilascia il riferimento al buffer nascosto quando il front buffer non è più disponibile e non è visualizzato.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>When the front buffer is available again, the rendering system raises the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> event to notify your WPF application.</source>
          <target state="translated">Quando il buffer anteriore è nuovamente disponibile, il sistema di rendering genera il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> evento per notificare all'applicazione WPF.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> event to restart rendering again with a valid Direct3D surface.</source>
          <target state="translated">È possibile creare un gestore eventi per il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged&gt;</ph> riavviare il rendering con una superficie Direct3D valida dell'evento.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>To restart rendering, you must call <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph>.</source>
          <target state="translated">Per riavviare il rendering, è necessario chiamare <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>When you call <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> with the <ph id="ph2">`enableSoftwareFallback`</ph> parameter set to <ph id="ph3">`true`</ph>, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <ph id="ph4">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> when the front buffer is available again.</source>
          <target state="translated">Quando si chiama <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> con il <ph id="ph2">`enableSoftwareFallback`</ph> parametro impostato su <ph id="ph3">`true`</ph>, il sistema di rendering mantiene il relativo riferimento al buffer nascosto quando il front buffer non è disponibile, in modo non è necessario chiamare <ph id="ph4">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> quando il buffer anteriore è disponibile nuovamente.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>There may be situations where the user’s device becomes unavailable.</source>
          <target state="translated">Potrebbero verificarsi situazioni in cui il dispositivo dell'utente non è più disponibile.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>When that occurs, call <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> to release WPF’s reference to the back buffer.</source>
          <target state="translated">In questo caso, chiamare <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> per rilasciare il riferimento di WPF al buffer nascosto.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>If you need to reset your device, call <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> with <ph id="ph2">`backBuffer`</ph> set to <ph id="ph3">`null`</ph>, and then call <ph id="ph4">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> again with <ph id="ph5">`backBuffer`</ph> set to a valid Direct3D surface.</source>
          <target state="translated">Per reimpostare il dispositivo, è necessario chiamare <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> con <ph id="ph2">`backBuffer`</ph> impostato su <ph id="ph3">`null`</ph>e quindi chiamare <ph id="ph4">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> con <ph id="ph5">`backBuffer`</ph> impostato su una superficie Direct3D valida.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>The following list shows the required back buffer settings for the <ph id="ph1">`IDirect3DSurface9`</ph> type.</source>
          <target state="translated">L'elenco seguente mostra le impostazioni del buffer nascosto necessarie per il <ph id="ph1">`IDirect3DSurface9`</ph> tipo.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source><ph id="ph1">`D3DFMT_A8R8G8B8`</ph> or <ph id="ph2">`D3DFMT_X8R8G8B8`</ph></source>
          <target state="translated"><ph id="ph1">`D3DFMT_A8R8G8B8`</ph> o <ph id="ph2">`D3DFMT_X8R8G8B8`</ph></target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)">
          <source>Multisampling is allowed on <ph id="ph1">`IDirect3DSurface9Ex`</ph> surfaces only.</source>
          <target state="translated">Il campionamento multiplo è consentito su <ph id="ph1">`IDirect3DSurface9Ex`</ph> copre solo.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)">
          <source>The duration to wait for the lock to be acquired.</source>
          <target state="translated">Intervallo di attesa dell'acquisizione del blocco.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)">
          <source>Attempts to lock the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> and waits for the specified duration.</source>
          <target state="translated">Tenta di bloccare <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> e attende per l'intervallo specificato.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the lock was acquired; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il blocco è stato acquisito; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="P:System.Windows.Duration.Automatic" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="P:System.Windows.Duration.Automatic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)">
          <source>The lock count equals <ph id="ph1">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Il conteggio dei blocchi equivale a <ph id="ph1">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.D3DImage.Unlock">
          <source>Decrements the lock count for the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</source>
          <target state="translated">Decrementa il conteggio dei blocchi per <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Unlock">
          <source>When the lock count for the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> reaches zero, the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> is fully unlocked.</source>
          <target state="translated">Quando il conteggio dei blocchi per il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> raggiunge lo zero, il <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> è completamente sbloccato.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Unlock">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> is marked for rendering if the image has changed areas that were specified by previous calls to the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> è contrassegnato per il rendering se l'immagine è stata modificata aree che sono state specificate tramite le precedenti chiamate al <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Unlock">
          <source>When the changes are committed and rendering occurs, additional calls to the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> method block until the render thread has copied the contents of the back buffer to the front buffer.</source>
          <target state="translated">Quando vengono eseguito il commit delle modifiche e il rendering viene eseguito, eventuali chiamate aggiuntive dal <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Lock%2A&gt;</ph> blocco di metodo fino a quando il thread di rendering è copiato il contenuto del buffer nascosto nel front buffer.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Unlock">
          <source>This synchronization avoids display artifacts, such as tearing.</source>
          <target state="translated">Questa sincronizzazione è possibile evitare gli elementi di visualizzazione, ad esempio di rimozione.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Unlock">
          <source>Do not update the Direct3D surface while the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> is unlocked.</source>
          <target state="translated">Non aggiornare l'area di Direct3D durante il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage&gt;</ph> è sbloccato.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Unlock">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Unlock%2A&gt;</ph> method to copy the updated back buffer to the front buffer.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Unlock%2A&gt;</ph> metodo per copiare il buffer nascosto aggiornato nel front buffer.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.D3DImage.Unlock">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Hosting Direct3D9 Content in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura dettagliata: Hosting di contenuto Direct3D9 in WPF<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.D3DImage.Width">
          <source>Gets the width of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</source>
          <target state="translated">Ottiene la larghezza di <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.Width">
          <source>The width of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph>, in measure units.</source>
          <target state="translated">Larghezza di <ph id="ph1">&lt;see cref="T:System.Windows.Interop.D3DImage" /&gt;</ph> espressa in unità di misura.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.Width">
          <source>A measure unit is 1/96th inch.</source>
          <target state="translated">Un'unità di misura è 1/96 di pollice.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.D3DImage.Width">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Width%2A&gt;</ph> can change when a new back buffer is assigned by a call to the <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> method.</source>
          <target state="translated">Il valore di <ph id="ph1">&lt;xref:System.Windows.Interop.D3DImage.Width%2A&gt;</ph> possono cambiare quando viene assegnato un nuovo buffer nascosto da una chiamata al <ph id="ph2">&lt;xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A&gt;</ph> metodo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>