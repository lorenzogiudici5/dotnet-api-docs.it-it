<Type Name="WindowInteropHelper" FullName="System.Windows.Interop.WindowInteropHelper">
  <TypeSignature Language="C#" Value="public sealed class WindowInteropHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowInteropHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.WindowInteropHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowInteropHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowInteropHelper sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6ce54-101">Supporta l'interoperatività tra Windows Presentation Foundation (WPF) e il codice Win32.</span><span class="sxs-lookup"><span data-stu-id="6ce54-101">Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ce54-102">Membri di questa classe consente al chiamante di avere accesso al [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND e HWND padre di un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="6ce54-102">Members of this class allows the caller to have internal access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND and the parent HWND of a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span></span>  <span data-ttu-id="6ce54-103">Controlli di sicurezza appropriati vengono eseguiti da tali membri.</span><span class="sxs-lookup"><span data-stu-id="6ce54-103">The proper security checks are performed by those members.</span></span>  
  
 <span data-ttu-id="6ce54-104">Utilizzare questa classe quando è necessario un oggetto più specifico basato su HWND.</span><span class="sxs-lookup"><span data-stu-id="6ce54-104">Use this class whenever you need a more specific object based on its HWND.</span></span>  
  
 <span data-ttu-id="6ce54-105">Questa operazione risulta utile se è necessario ospitare un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] nella finestra di dialogo un [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="6ce54-105">An example scenario is if you need to host a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span> <span data-ttu-id="6ce54-106">Inizializzare il <xref:System.Windows.Interop.WindowInteropHelper> con un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] oggetto finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="6ce54-106">Initialize the <xref:System.Windows.Interop.WindowInteropHelper> with a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object for the dialog box.</span></span> <span data-ttu-id="6ce54-107">È quindi possibile ottenere il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] handle della finestra (HWND) dal <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> proprietà e specificare il proprietario per il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] finestra con la <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="6ce54-107">You can then get the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window's handle (HWND) from the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property and specify the owner for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window with the <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> property.</span></span> <span data-ttu-id="6ce54-108">Esempio di codice seguente viene illustrato come utilizzare <xref:System.Windows.Interop.WindowInteropHelper> quando si ospita un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] nella finestra di dialogo un [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="6ce54-108">The following code example shows how to use <xref:System.Windows.Interop.WindowInteropHelper> when hosting a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 [!code-csharp[CorePseudocode#WindowInteropHelper](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#windowinterophelper)]
 [!code-vb[CorePseudocode#WindowInteropHelper](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#windowinterophelper)]  
  
 <span data-ttu-id="6ce54-109">Un altro scenario supportato da questa classe è per ottenere un <xref:System.Windows.Interop.HwndSource> dell'oggetto da un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> oggetto.</span><span class="sxs-lookup"><span data-stu-id="6ce54-109">Another scenario supported by this class is to obtain a <xref:System.Windows.Interop.HwndSource> object from a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> object.</span></span> <span data-ttu-id="6ce54-110">Il <xref:System.Windows.Interop.HwndSource> consente l'elaborazione di diretta [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] messaggi tramite il <xref:System.Windows.Interop.HwndSource.AddHook%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="6ce54-110">The <xref:System.Windows.Interop.HwndSource> enables direct processing of [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] messages through the <xref:System.Windows.Interop.HwndSource.AddHook%2A> method.</span></span> <span data-ttu-id="6ce54-111">Utilizzando <xref:System.Windows.Interop.HwndSource> e <xref:System.Windows.Interop.HwndSource.AddHook%2A> al posto di un <xref:System.Windows.Window> è ancora possibile gestire i messaggi che non hanno alcun equivalente o gestione in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="6ce54-111">By using <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndSource.AddHook%2A> in place of a <xref:System.Windows.Window> you can still handle messages that have no equivalent or handling in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="6ce54-112">Creare un <xref:System.Windows.Interop.WindowInteropHelper> con il <xref:System.Windows.Window> di origine, quindi chiamare <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> sul <xref:System.Windows.Interop.WindowInteropHelper> per ottenere da HWND <xref:System.Windows.Interop.HwndSource>.</span><span class="sxs-lookup"><span data-stu-id="6ce54-112">Create a <xref:System.Windows.Interop.WindowInteropHelper> with the <xref:System.Windows.Window> source, then call <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> on the <xref:System.Windows.Interop.WindowInteropHelper> to get from HWND to <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Window" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowInteropHelper (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowInteropHelper(System::Windows::Window ^ window);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window"><span data-ttu-id="6ce54-113">Oggetto finestra di [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="6ce54-113">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object.</span></span></param>
        <summary><span data-ttu-id="6ce54-114">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interop.WindowInteropHelper" /> per la finestra specificata di [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="6ce54-114">Initializes a new instance of the <see cref="T:System.Windows.Interop.WindowInteropHelper" /> class for a specified [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ce54-115">La finestra può essere una finestra di dialogo o una finestra che non è adatta a essere ospitata all'interno di un [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="6ce54-115">The window can be a dialog box, or a window that is otherwise not suitable for being hosted within the bounds of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureHandle">
      <MemberSignature Language="C#" Value="public IntPtr EnsureHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int EnsureHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr EnsureHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ce54-116">Crea l'handle della finestra (HWND) se non è ancora stato creato.</span><span class="sxs-lookup"><span data-stu-id="6ce54-116">Creates the HWND of the window if the HWND has not been created yet.</span></span></summary>
        <returns><span data-ttu-id="6ce54-117">Oggetto <see cref="T:System.IntPtr" /> che rappresenta l'handle della finestra (HWND).</span><span class="sxs-lookup"><span data-stu-id="6ce54-117">An <see cref="T:System.IntPtr" /> that represents the HWND.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ce54-118">Utilizzare il <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> metodo quando si desidera separare finestra (HWND) la creazione dell'handle dalla visualizzazione di gestito <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="6ce54-118">Use the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when you want to separate window handle (HWND) creation from the actual showing of the managed <xref:System.Windows.Window>.</span></span> <span data-ttu-id="6ce54-119">Ciò è utile quando si dispone di un client di automazione che è possibile eseguire le attività senza la necessità per visualizzare una finestra.</span><span class="sxs-lookup"><span data-stu-id="6ce54-119">This is useful when you have an automation client that can accomplish its tasks without the need for showing a window.</span></span>  
  
 <span data-ttu-id="6ce54-120">Se la finestra nativa non ha ancora creata, questo metodo crea la finestra nativa, set di <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> proprietà e restituisce l'elemento HWND.</span><span class="sxs-lookup"><span data-stu-id="6ce54-120">If the native window has not yet been created, this method creates the native window, sets the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property, and returns the HWND.</span></span> <span data-ttu-id="6ce54-121">Se la finestra nativa è già stata creata, viene restituito l'handle della finestra nativa esistente.</span><span class="sxs-lookup"><span data-stu-id="6ce54-121">If the native window has been created already, the handle of the existing native window is returned.</span></span>  
  
 <span data-ttu-id="6ce54-122">Se la finestra nativa viene creata come risultato di questo metodo, il <xref:System.Windows.Window.SourceInitialized> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="6ce54-122">If the native window is created as a result of calling this method, the <xref:System.Windows.Window.SourceInitialized> event is raised.</span></span>  
  
 <span data-ttu-id="6ce54-123">L'esecuzione di query di <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> proprietà dopo il <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> metodo viene chiamato restituisce l'handle di finestra esistente.</span><span class="sxs-lookup"><span data-stu-id="6ce54-123">Querying the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called returns the existing window handle.</span></span> <span data-ttu-id="6ce54-124">La struttura ad albero visuale non è collegata alla finestra fino a dopo il <xref:System.Windows.Window.Show%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="6ce54-124">The visual tree is not attached to the window until after the <xref:System.Windows.Window.Show%2A> method is called.</span></span>  
  
 <span data-ttu-id="6ce54-125">La chiamata di <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> metodo più volte non creare nuovi handle di finestra.</span><span class="sxs-lookup"><span data-stu-id="6ce54-125">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method more than one time does not create new window handles.</span></span> <span data-ttu-id="6ce54-126">La chiamata di <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> quando è già stato creato l'handle da una chiamata al metodo di <xref:System.Windows.Window.Show%2A> metodo crea un nuovo handle di finestra.</span><span class="sxs-lookup"><span data-stu-id="6ce54-126">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when the handle has already been created by a call to the <xref:System.Windows.Window.Show%2A> method does not create a new window handle.</span></span> <span data-ttu-id="6ce54-127">Una finestra nativa viene creata solo quando non esiste alcun handle quando il <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="6ce54-127">A native window is only created when no handle exists when the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called.</span></span>  
  
 <span data-ttu-id="6ce54-128">Proprietà della finestra che vengono impostate utilizzando la finestra nativa API tramite p/invoke non risulti nell'API gestite della finestra.</span><span class="sxs-lookup"><span data-stu-id="6ce54-128">Window properties that are set by using native window APIs via p/invoke may not appear in the managed window APIs.</span></span> <span data-ttu-id="6ce54-129">Ad esempio, se si imposta la finestra in primo piano usando il contrassegno MS_EX_TOPMOST nativo dopo il <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> metodo viene chiamato, il <xref:System.Windows.Window.Topmost%2A> proprietà non è garantito che rifletta l'impostazione nativa.</span><span class="sxs-lookup"><span data-stu-id="6ce54-129">For example, if you set the window to be topmost by using the native MS_EX_TOPMOST flag after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called, the <xref:System.Windows.Window.Topmost%2A> property is not guaranteed to reflect the native setting.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="6ce54-130">Per creare e accedere a un handle di finestra.</span><span class="sxs-lookup"><span data-stu-id="6ce54-130">to create and access a window handle.</span></span> <span data-ttu-id="6ce54-131">Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="6ce54-131">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6ce54-132">Ottiene l'handle di finestra per una finestra di [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] usata per creare questo oggetto <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span><span class="sxs-lookup"><span data-stu-id="6ce54-132">Gets the window handle for a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window that is used to create this <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span></span></summary>
        <value><span data-ttu-id="6ce54-133">Handle di finestra [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] (HWND).</span><span class="sxs-lookup"><span data-stu-id="6ce54-133">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window handle (HWND).</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="6ce54-134">Per ottenere un handle di finestra.</span><span class="sxs-lookup"><span data-stu-id="6ce54-134">to obtain a window handle.</span></span> <span data-ttu-id="6ce54-135">Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="6ce54-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public IntPtr Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Owner { IntPtr get(); void set(IntPtr value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6ce54-136">Ottiene o imposta l'handle della finestra proprietaria di [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="6ce54-136">Gets or sets the handle of the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] owner window.</span></span></summary>
        <value><span data-ttu-id="6ce54-137">Handle di finestra proprietaria (HWND).</span><span class="sxs-lookup"><span data-stu-id="6ce54-137">The owner window handle (HWND).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ce54-138">È possibile associare di nuovo elemento padre di windows, impostando questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="6ce54-138">You can reparent windows by setting this property.</span></span> <span data-ttu-id="6ce54-139">Come accade per uso generale [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] linguaggio di programmazione, non reimpostato windows che sono già in uso.</span><span class="sxs-lookup"><span data-stu-id="6ce54-139">As is true for general [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] programming, do not reparent windows that are already in use.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="6ce54-140">Per ottenere o impostare il valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="6ce54-140">to get or set this property value.</span></span> <span data-ttu-id="6ce54-141">Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="6ce54-141">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
  </Members>
</Type>