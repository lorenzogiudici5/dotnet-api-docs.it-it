<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3120cf880fee3bfbee4ccce673b07364bc06400a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30658675" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fornisce un sink della tastiera per i componenti che gestisce la tabulazione, gli acceleratori e i tasti di scelta rapida attraverso limiti di interoperatività e tra oggetti HWND. L'interfaccia implementa la gestione dei messaggi dalla tastiera negli scenari di interoperatività WPF-Win32.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un sink di tastiera gestisce input da determinati sottoinsiemi del modello generale di input dalla tastiera per [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] e [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]e consente alcuni input da elaborare e indirizzati a HWND diversa da quella con stato attivo della tastiera.  
  
 Se il componente contiene altri componenti e gestisce un ordine di tabulazione, il componente deve implementare anche <xref:System.Windows.Interop.IKeyboardInputSite> e tenere traccia dei componenti con stato attivo.  
  
 Per una discussione dell'architettura di input specificamente implementata per [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] interoperabilità, vedere [Windows Form e WPF Interoperability Input Architecture](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).  
  
 <xref:System.Windows.Interop.HwndSource> e <xref:System.Windows.Interop.HwndHost> ogni implementazione di <xref:System.Windows.Interop.IKeyboardInputSink> interfaccia tramite definizioni di interfaccia esplicita. Le definizioni esplicite forniscono i comportamenti predefiniti ed è anche possibile accedervi se necessario, tramite un <xref:System.Windows.Interop.IKeyboardInputSink> interfaccia cast di <xref:System.Windows.Interop.HwndSource> o <xref:System.Windows.Interop.HwndHost>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un valore che indica se il sink o uno dei componenti contenuti ha lo stato attivo.</summary>
        <returns>
          <see langword="true" /> se il sink o uno dei componenti contenuti ha lo stato attivo; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è necessario per l'inoltro <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> chiamate ai componenti figlio con lo stato attivo dall'interno di <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementazione. Chiamare <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> in modo ricorsivo fino a raggiungere il livello di stato attivo specifico e l'inoltro <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> non esiste.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un riferimento all'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del contenitore del componente.</summary>
        <value>Riferimento all'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del contenitore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà deve essere impostata inizialmente su `null`. Ogni contenitore che aggiunge il sink all'elenco dei componenti imposterà <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> prima degli altri metodi vengono chiamati e può essere impostato più volte dopo che. È necessario impostare la proprietà su `null` nuovamente prima dell'eliminazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Il messaggio per i tasti di scelta rapida e i dati associati. Non modificare questa struttura del messaggio. Viene passata in base al riferimento per soli motivi di prestazione.</param>
        <param name="modifiers">Tasti di modifica.</param>
        <summary>Chiamato quando viene richiamato uno dei tasti di scelta rapida (tasti di scelta) per questo sink.</summary>
        <returns>
          <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] deve essere messaggio WM_CHAR, WM_SYSCHAR, WM_DEADCHAR o WM_SYSDEADCHAR.  
  
 Se il componente ha contenuto componenti, il messaggio deve essere passato all'interno del componente di implementazione chiamando ogni contenuti <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> metodo.  
  
 Un'interfaccia che restituisce `true` da <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> non chiamerà <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>. Le implementazioni possono scegliere di eseguire ogni combinazione di tasti specifica gestione in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>e ignorare <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">Sink <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> del componente contenuto.</param>
        <summary>Registra l'interfaccia <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> di un componente contenuto.</summary>
        <returns>Il sito <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del componente contenuto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Componenti con i componenti figlio devono gestire insiemi di siti e utilizzare questo metodo per aggiungere un nuovo sink e restituire il nuovo sito. È sufficiente gestire la raccolta siti, perché il sink può essere ottenuto dal sito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">Specifica se lo stato attivo deve essere impostato sulla prima o l'ultima tabulazione.</param>
        <summary>Imposta lo stato attivo sulla prima tabulazione o l'ultima tabulazione del sink.</summary>
        <returns>
          <see langword="true" /> se lo stato attivo è stato impostato come richiesto; <see langword="false" />, se non ci sono tabulazioni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.FocusNavigationDirection.First> e <xref:System.Windows.Input.FocusNavigationDirection.Last> sono i soli valori pertinenti che devono essere passati al metodo nel <xref:System.Windows.Input.TraversalRequest>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Messaggio e dati associati. Non modificare questa struttura. Viene passata in base al riferimento per soli motivi di prestazione.</param>
        <param name="modifiers">Tasti di modifica.</param>
        <summary>Elabora input dalla tastiera al livello del messaggio Keydown.</summary>
        <returns>
          <see langword="true" /> se il messaggio è stato gestito dall'implementazione del metodo; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il messaggio deve essere WM_KEYDOWN o WM_SYSKEYDOWN.  
  
 Se il componente non è in grado di gestire le conversioni di input e i componenti figlio che potrebbero avere conversioni, chiama in genere <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> metodo sul componente figlio che contiene lo stato attivo corrente prima di restituire un risultato.  
  
 Se il messaggio non può essere gestito immediatamente, è possibile inviarlo nuovamente dall'interno di <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementazione, se necessario e quindi restituito `false`.  
  
 Gestisce il messaggio VK_TAB keydown e determinano l'opportunità di impostare lo stato attivo all'interno del componente, per chiamare un scenario principale per la conversione dei tasti di scelta rapida <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> a un componente figlio o chiamare <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> nel sito padre poiché la sequenza di tabulazione ha raggiunto i limiti di inizio o alla fine. Alcuni componenti è possono scegliere di non gestire il tasto tab in questo modo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Messaggio e dati associati. Non modificare questa struttura. Viene passata in base al riferimento per soli motivi di prestazione.</param>
        <param name="modifiers">Tasti di modifica.</param>
        <summary>Elabora i messaggi di input WM_CHAR, WM_SYSCHAR, WM_DEADCHAR e WM_SYSDEADCHAR prima che <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> venga chiamato.</summary>
        <returns>
          <see langword="true" /> se il messaggio è stato elaborato e <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> non deve essere chiamato; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si implementa questo metodo per restituire `true`, l'architettura di input non chiamerà <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> per il messaggio chiave.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>