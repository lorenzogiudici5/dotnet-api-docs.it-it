<Type Name="DataServiceContext" FullName="System.Data.Services.Client.DataServiceContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad213c16c8fc8c87944dead5caa02dd75dc97ee8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37676624" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataServiceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataServiceContext" />
  <TypeSignature Language="F#" Value="type DataServiceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The <see cref="T:System.Data.Services.Client.DataServiceContext" /> represents the runtime context of the data service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] è senza stato, a differenza di <xref:System.Data.Services.Client.DataServiceContext>. Lo stato nel client viene mantenuto tra le interazioni per supportare funzionalità quali la gestione degli aggiornamenti. Questa classe e la classe <xref:System.Data.Services.Client.DataServiceQuery> che rappresenta una particolare richiesta HTTP a un servizio dati sono le due classi principali nella libreria client.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare l'oggetto <xref:System.Data.Services.Client.DataServiceContext> generato dallo strumento Aggiungi riferimento al servizio per eseguire in modo implicito una query sul servizio dati Northwind che restituisce tutti i clienti. L'URI del set di entità `Customers` richiesto viene determinato automaticamente dal contesto. La query viene eseguita in modo implicito quando si verifica l'enumerazione. Il servizio dati Northwind viene creato quando si completa la [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#getallcustomers)]
 [!code-vb[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#getallcustomers)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceContext (Uri serviceRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri serviceRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceRoot As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceContext(Uri ^ serviceRoot);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceContext : Uri -&gt; System.Data.Services.Client.DataServiceContext" Usage="new System.Data.Services.Client.DataServiceContext serviceRoot" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceRoot" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="serviceRoot">An absolute URI that identifies the root of a data service.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceContext" /> class with the specified <paramref name="serviceRoot" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La libreria client prevede che `baseURI` punti alla radice di un servizio dati, ma non inoltra una richiesta per la convalida. Se `baseURI` non identifica la radice del servizio, il comportamento della libreria client non è definito.  
  
 Un URI con una barra finale è equivalente a un URI senza carattere finale.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When the <paramref name="serviceRoot" /> is null.</exception>
        <exception cref="T:System.ArgumentException">If the <paramref name="serviceRoot" /> is not an absolute URI  -or-  If the <paramref name="serviceRoot" /> is a well formed URI without a query or query fragment.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLink">
      <MemberSignature Language="C#" Value="public void AddLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The source object for the new link.</param>
        <param name="sourceProperty">The name of the navigation property on the source object that returns the related object.</param>
        <param name="target">The object related to the source object by the new link.</param>
        <summary>Adds the specified link to the set of objects the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Notifica a <xref:System.Data.Services.Client.DataServiceContext> l'esistenza di un nuovo collegamento tra gli oggetti di origine e destinazione correlati e la rappresentazione del collegamento da parte della proprietà di origine specificata. <xref:System.Data.Services.Client.DataServiceContext> aggiunge questo collegamento al set di collegamenti appena creati che verrà inviato al servizio dati alla chiamata successiva a <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 I collegamenti sono relazioni unidirezionali. Poiché le associazioni sono bidirezionali, in un'associazione uno a uno è necessario chiamare <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> nuovo per creare il collegamento inverso e in un'associazione molti-a-uno è necessario chiamare <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> per creare un collegamento di riferimento per il lato "uno" di associazione.  
  
 L'oggetto di destinazione deve essere del tipo identificato dal parametro `sourceProperty` o un sottotipo del tipo.  
  
   
  
## Examples  
 Nell'esempio seguente viene mostrato come utilizzare i metodi <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> e <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> per creare collegamenti che definiscono relazioni. In questo esempio le proprietà di navigazione sull'oggetto `Order_Details` vengono impostate anche in modo esplicito. Questo esempio Usa la <xref:System.Data.Services.Client.DataServiceContext> generato dallo strumento Aggiungi riferimento al servizio basato sul servizio dati Northwind, che viene creato quando si completa la [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" />, or <paramref name="target" /> are null.</exception>
        <exception cref="T:System.InvalidOperationException">If a link already exists.  -or-  If either the <paramref name="source" /> or <paramref name="target" /> objects are in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.  -or-  If <paramref name="sourceProperty" /> is not a collection.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddObject (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AddObject : string * obj -&gt; unit" Usage="dataServiceContext.AddObject (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">The name of the entity set to which the resource will be added.</param>
        <param name="entity">The object to be tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Adds the specified object to the set of objects that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto viene inserito nel set di rilevamento di <xref:System.Data.Services.Client.DataServiceContext> nello stato <xref:System.Data.Services.Client.EntityStates.Added>. <xref:System.Data.Services.Client.DataServiceContext> tenterà di inserire l'oggetto mediante HTTP POST alla successiva chiamata a <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>. Questo metodo non aggiunge oggetti correlati all'entità specificata a <xref:System.Data.Services.Client.DataServiceContext>. Ogni oggetto deve essere aggiunto tramite una chiamata separata a <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>.  
  
 Il metodo non convalida che il set di entità specificato è presente nel servizio dati associato con il <xref:System.Data.Services.Client.DataServiceContext> o che l'oggetto aggiunto dispone le proprietà obbligatorie necessarie per l'aggiunta all'entità specificata `entity set`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entitySetName" /> or <paramref name="entity" /> is null.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is empty.  -or-  When <paramref name="entity" /> does not have a key property defined.</exception>
        <exception cref="T:System.InvalidOperationException">When the entity is already being tracked by the context.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRelatedObject">
      <MemberSignature Language="C#" Value="public void AddRelatedObject (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRelatedObject(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRelatedObject (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRelatedObject(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddRelatedObject : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddRelatedObject (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The parent object that is being tracked by the context.</param>
        <param name="sourceProperty">The name of the navigation property that returns the related object based on an association between the two entities.</param>
        <param name="target">The related object that is being added.</param>
        <summary>Adds a related object to the context and creates the link that defines the relationship between the two objects in a single request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile chiamare il metodo <xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A> per aggiungere un oggetto correlato anziché chiamare questi tre metodi: <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyingChanges">
      <MemberSignature Language="C#" Value="public bool ApplyingChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyingChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyingChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyingChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyingChanges : bool" Usage="System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is currently applying changes to tracked objects.</summary>
        <value>Restituisce <see langword="true" /> quando vengono applicate le modifiche; in caso contrario restituisce <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachLink">
      <MemberSignature Language="C#" Value="public void AttachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AttachLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AttachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The source object in the new link.</param>
        <param name="sourceProperty">The name of the property on the source object that represents the link between the source and target object.</param>
        <param name="target">The target object in the link that is bound to the source object specified in this call. The target object must be of the type identified by the source property or a subtype.</param>
        <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified link that defines a relationship between entity objects.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" />, or <paramref name="target" /> is null.</exception>
        <exception cref="T:System.InvalidOperationException">When the link between the two entities already exists.  -or-  When <paramref name="source" /> or <paramref name="target" /> is in an <see cref="F:System.Data.Services.Client.EntityStates.Added" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AttachTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified resource and supplies the location of the resource in the specified resource set.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">The name of the set that contains the resource.</param>
        <param name="entity">The resource to be tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />. The resource is attached in the Unchanged state.</param>
        <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified resource and supplies the location of the resource within the specified resource set.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'entità è parte di un oggetto grafico, questa operazione non attraversa il grafico per aggiungere oggetti correlati. Si tratta di un'operazione superficiale.  
  
 Il metodo non convalida se il set di entità specificato si verifica nel servizio dati associato a <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> or <paramref name="entitySetName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is an empty string.  -or-  When the <paramref name="entity" /> does not have a key property defined.</exception>
        <exception cref="T:System.InvalidOperationException">When the <paramref name="entity" /> is already being tracked by the context.</exception>
      </Docs>
    </Member>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity, string etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity, string etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object, etag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity, System::String ^ etag);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj * string -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="etag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName">The string value that contains the name of the entity set to which to the entity is attached.</param>
        <param name="entity">The entity to add.</param>
        <param name="etag">An etag value that represents the state of the entity the last time it was retrieved from the data service. This value is treated as an opaque string; no validation is performed on it by the client library.</param>
        <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified resource and supplies the location of the resource in the specified resource set.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata di questo metodo notifica a <xref:System.Data.Services.Client.DataServiceContext> di iniziare a rilevare l'entità specificata e identifica il set di entità a cui appartiene l'entità.  
  
 Se l'entità è parte di un oggetto grafico, questa operazione non attraversa il grafico per aggiungere oggetti correlati. L'oggetto viene aggiunto a <xref:System.Data.Services.Client.DataServiceContext> in uno stato non modificato. Il metodo non convalida se il set di entità specificato si verifica nel servizio dati associato a <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Se viene utilizzato l'overload con un etag, l'etag specificato viene associato all'entità appena collegata. L'etag viene quindi inviato al servizio dati, con eventuali operazioni di query o aggiornamento successive per l'entità, sulla base della semantica HTTP. Non è consigliabile generare manualmente valori etag, ma questo overload viene fornito per abilitare entità che possono essere state serializzate e archiviate per poter essere riassociate ai relativi metadati di concorrenza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entitySetName" /> is <see langword="null" />.  -or-  When <paramref name="entity" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is an empty string.  -or-  When the supplied object does not have a key property.</exception>
        <exception cref="T:System.InvalidOperationException">When the supplied object is already being tracked by the context</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the absolute URI identifying the root of the target data service.</summary>
        <value>URI assoluto che identifica la radice di un servizio dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un URI provvisto di una barra finale è equivalente a un URI senza carattere finale.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Asynchronously sends a request to the data service to execute a specific URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of T) (continuation As DataServiceQueryContinuation(Of T), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; IAsyncResult ^ BeginExecute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo restituito dalla query.</typeparam>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of data to return from the data service.</param>
        <param name="callback">Delegate to invoke when results are available for client consumption.</param>
        <param name="state">User-defined state object passed to the callback.</param>
        <summary>Asynchronously sends a request to the data service to retrieve the next page of data in a paged query result.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> fornito contiene l'URI che, in caso di esecuzione, restituisce la pagina di dati successiva nel risultato della query.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;TElement&gt; (Uri requestUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;TElement&gt;(class System.Uri requestUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of TElement) (requestUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; IAsyncResult ^ BeginExecute(Uri ^ requestUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (requestUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Tipo restituito dalla query.</typeparam>
        <param name="requestUri">The URI to which the query request will be sent. The URI may be any valid data service URI; it can contain <c>$</c> query parameters.</param>
        <param name="callback">Delegate to invoke when results are available for client consumption.</param>
        <param name="state">User-defined state object passed to the callback.</param>
        <summary>Asynchronously sends the request so that this call does not block processing while waiting for the results from the service.</summary>
        <returns>An object that is used to track the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.IAsyncResult> restituito viene utilizzato per determinare se è stata completata l'operazione asincrona. Per altre informazioni, vedere [operazioni asincrone](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 Il metodo <xref:System.Data.Services.Client.DataServiceContext.BeginExecute%2A> utilizza la stessa semantica di <xref:System.Data.Services.Client.DataServiceContext.Execute%2A>. Questo metodo invia tuttavia in modo asincrono la richiesta in modo che la chiamata non blocchi elaborazione mentre è in attesa dei risultati dal servizio. In base al modello asincrono Begin-End standard, il callback fornito viene richiamato in fase di recupero dei risultati della query.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come eseguire una query asincrona chiamando il metodo <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> per l'avvio della query. Il delegato inline chiama il metodo <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> per visualizzare i risultati della query. Questo esempio Usa la <xref:System.Data.Services.Client.DataServiceContext> generato dallo strumento Aggiungi riferimento al servizio basato sul servizio dati Northwind, che viene creato quando si completa la [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteBatch">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteBatch (AsyncCallback callback, object state, params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteBatch(class System.AsyncCallback callback, object state, class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteBatch (callback As AsyncCallback, state As Object, ParamArray queries As DataServiceRequest()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteBatch(AsyncCallback ^ callback, System::Object ^ state, ... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteBatch : AsyncCallback * obj * System.Data.Services.Client.DataServiceRequest[] -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecuteBatch (callback, state, queries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">The delegate that is called when a response to the batch request is received.</param>
        <param name="state">User-defined state object that is used to pass context data to the callback method.</param>
        <param name="queries">The array of query requests to include in the batch request.</param>
        <summary>Asynchronously submits a group of queries as a batch to the data service.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.IAsyncResult> restituito viene utilizzato per determinare se è stata completata l'operazione asincrona. Per altre informazioni, vedere [operazioni asincrone](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 Le query vengono specificate come istanze di <xref:System.Data.Services.Client.DataServiceRequest%601>. Restituisce un oggetto <xref:System.Data.Services.Client.DataServiceResponse> che rappresenta la risposta dell'intera richiesta batch. Le singole risposte alle query vengono rappresentate come oggetti <xref:System.Data.Services.Client.DataServiceResponse> a cui è possibile accedere enumerando l'istanza di <xref:System.Data.Services.Client.DataServiceResponse>.  
  
 Se viene restituito questo metodo, tutte le risposte HTTP per la richiesta batch sono state lette dal flusso di rete, ma non sono state elaborate. Non si verifica alcuna risoluzione di identità o materializzazione di oggetti per un'entità specificata nella risposta, finché non viene enumerata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetReadStream">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetReadStream (entity As Object, args As DataServiceRequestArgs, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginGetReadStream (entity, args, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has the binary property to retrieve.</param>
        <param name="args">Instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
        <param name="callback">Delegate to invoke when results are available for client consumption.</param>
        <param name="state">User-defined state object passed to the callback.</param>
        <summary>Asynchronously gets binary property data for the specified entity as a data stream along with the specified message headers.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> metodo richiede in modo asincrono un flusso di dati che contiene la proprietà binaria dell'oggetto richiesto `entity`.  
  
 Nel protocollo AtomPub, il `entity` è una voce di collegamento multimediale e la proprietà binaria è la risorsa multimediale associata.  
  
 Non viene eseguita alcuna convalida delle intestazioni impostate in `args`. Non modificare pertanto un'intestazione HTTP in un modo che determinerebbe la modifica del significato della richiesta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.  -or-  The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.  -or-  The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Begins the operation to load the value of the specified property from the data service.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property on the specified entity to load.</param>
        <param name="callback">The delegate called when a response to the request is received.</param>
        <param name="state">The user-defined state object that is used to pass context data to the callback method.</param>
        <summary>Asynchronously loads the value of the specified property from the data service.</summary>
        <returns>An <see langword="IAsyncResult" /> that represents the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata di questo metodo richiama un'operazione di rete per recuperare il valore di una proprietà. La proprietà specificata può essere una qualsiasi proprietà in un'entità, incluse le proprietà che rappresentano associazioni o collegamenti. Se la proprietà rappresenta un'associazione o un collegamento oppure una proprietà posticipata, la chiamata di questo metodo fornisce al client un metodo per caricare in ritardo le risorse correlate. Se l'entità è nello stato modificato, il valore della proprietà carica entità correlate contrassegnandole insieme a eventuali collegamenti come non modificate.  
  
 Se la proprietà è già caricata, la chiamata di questo metodo consente di aggiornare il valore della proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of related entity data to return from the data service.</param>
        <param name="callback">Delegate to invoke when results are available for client consumption.</param>
        <param name="state">User-defined state object passed to the callback.</param>
        <summary>Asynchronously loads the next page of related entities from the data service by using the supplied query continuation object.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> fornito contiene l'URI che, in caso di esecuzione, restituisce la pagina di dati successiva nel risultato della query.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, Uri nextLinkUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Uri nextLinkUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, nextLinkUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <param name="nextLinkUri">The URI used to load the next results page.</param>
        <param name="callback">Delegate to invoke when results are available for client consumption.</param>
        <param name="state">User-defined state object passed to the callback.</param>
        <summary>Asynchronously loads a page of related entities from the data service by using the supplied next link URI.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `entity` è in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged> o <xref:System.Data.Services.Client.EntityStates.Modified>, le entità correlate vengono caricate in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged> e anche i collegamenti tra le entità vengono creati in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged>.  
  
 Se `entity` è in uno stato <xref:System.Data.Services.Client.EntityStates.Deleted>, le entità correlate vengono caricate in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged> e i collegamenti tra le entità vengono creati in uno stato <xref:System.Data.Services.Client.EntityStates.Deleted>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Submits the pending changes to the data service collected by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> since the last time changes were saved.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">The delegate to call when the operation is completed.</param>
        <param name="state">The user-defined state object that is used to pass context data to the callback method.</param>
        <summary>Asynchronously submits the pending changes to the data service collected by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> since the last time changes were saved.</summary>
        <returns>An <see langword="IAsyncResult" /> that represents the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le modifiche vengono aggiunte a <xref:System.Data.Services.Client.DataServiceContext> chiamando <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> o <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>.  
  
 Le modifiche vengono inviate al servizio dati come con il metodo <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>, ovvero un'operazione di modifica per richiesta HTTP.  
  
 Se si verifica un errore durante l'elaborazione di un'operazione, il servizio dati non elaborerà operazioni aggiuntive. Al contrario, viene generata una risposta indicante al client le operazioni eseguite, i risultati e le operazioni non tentate a causa di un errore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (System.Data.Services.Client.SaveChangesOptions options, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (options As SaveChangesOptions, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(System::Data::Services::Client::SaveChangesOptions options, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : System.Data.Services.Client.SaveChangesOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (options, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="options">The options for how the client can save the pending set of changes.</param>
        <param name="callback">The delegate to call when the operation is completed.</param>
        <param name="state">The user-defined state object that is used to pass context data to the callback method.</param>
        <summary>Asynchronously submits the pending changes to the data service collected by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> since the last time changes were saved.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le modifiche vengono aggiunte a <xref:System.Data.Services.Client.DataServiceContext> chiamando <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> o <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>.  
  
 Se viene impostato <xref:System.Data.Services.Client.SaveChangesOptions.Batch>, tutte le modifiche in sospeso vengono incluse in un singolo set di modifiche in un batch e inviate al servizio dati in un'unica richiesta HTTP. Richiede che il servizio di destinazione supporti l'invio in batch.  
  
 Se <xref:System.Data.Services.Client.SaveChangesOptions.Batch> non è impostato:  
  
-   Le modifiche vengono inviate al servizio dati come nel caso del metodo <xref:System.Data.Services.Client.DataServiceContext.SaveChanges>: un'operazione per richiesta HTTP.  
  
-   <xref:System.Data.Services.Client.OperationResponse.StatusCode%2A> è sempre 200.  
  
-   La proprietà <xref:System.Data.Services.Client.OperationResponse.Headers%2A> restituisce una raccolta vuota.  
  
 Se <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError> è impostato:  
  
-   Se si verifica un errore durante l'elaborazione di un'operazione in un insieme di modifiche, le operazioni successive nell'insieme non verranno tentate. Il servizio dati continuerà tuttavia a elaborare l'insieme di modifiche successivo nel batch.  
  
-   Non è possibile impostare questa opzione se <xref:System.Data.Services.Client.SaveChangesOptions.Batch> è impostato, poiché se è abilitato l'invio in batch, tutte le operazioni verranno posizionate in un unico set di modifiche.  
  
 Se <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError> non è impostato:  
  
-   Se si verifica un errore durante l'elaborazione di un'operazione, il servizio dati non elaborerà operazioni aggiuntive.  
  
 Viene generata una risposta indicante al client le operazioni eseguite, i rispettivi risultati e le operazioni non tentate a causa dell'errore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRequest">
      <MemberSignature Language="C#" Value="public void CancelRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelRequest (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.CancelRequest : IAsyncResult -&gt; unit" Usage="dataServiceContext.CancelRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> object from the operation being canceled.</param>
        <summary>Attempts to cancel the operation that is associated with the supplied <see cref="T:System.IAsyncResult" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.IAsyncResult> passato al parametro `asyncResult` è l'oggetto restituito quando viene eseguita un'operazione in modo asincrono. Per altre informazioni, vedere [operazioni asincrone](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md). Fino a quando non viene elaborata la richiesta, il <xref:System.Data.Services.Client.DataServiceContext> istanza non è in uno stato prevedibile. Il <xref:System.Data.Services.Client.DataServiceContext> può essere usata in modo sicuro quando le <xref:System.IAsyncResult.IsCompleted%2A> proprietà delle `asyncResult` restituisce un valore di `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;T&gt; CreateQuery&lt;T&gt; (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!!T&gt; CreateQuery&lt;T&gt;(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQuery(Of T) (entitySetName As String) As DataServiceQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::DataServiceQuery&lt;T&gt; ^ CreateQuery(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="member this.CreateQuery : string -&gt; System.Data.Services.Client.DataServiceQuery&lt;'T&gt;" Usage="dataServiceContext.CreateQuery entitySetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo restituito dalla query.</typeparam>
        <param name="entitySetName">A string that resolves to a URI.</param>
        <summary>Creates a data service query for data of a specified generic type.</summary>
        <returns>A new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instance that represents a data service query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the authentication information that is used by each query created by using the <see cref="T:System.Data.Services.Client.DataServiceContext" /> object.</summary>
        <value>Interfaccia di autenticazione di base per il recupero di credenziali per l'autenticazione del client Web.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataNamespace">
      <MemberSignature Language="C#" Value="public string DataNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property DataNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataNamespace : string with get, set" Usage="System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the XML namespace for data items, not metadata items, of an Atom payload.</summary>
        <value>Stringa che rappresenta lo spazio dei nomi XML per elementi di dati di un payload nel formato ATOM.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito di questa proprietà è lo spazio dei nomi [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] predefinito: `http://schemas.microsoft.com/ado/2007/08/dataservices`.  
  
 Questa proprietà influisce sia sullo spazio dei nomi utilizzato per l'analisi dei contenuti dal servizio dati, sia sullo spazio dei nomi utilizzato per generare i contenuti inviati al servizio dati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteLink">
      <MemberSignature Language="C#" Value="public void DeleteLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DeleteLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.DeleteLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The source object in the link to be marked for deletion.</param>
        <param name="sourceProperty">The name of the navigation property on the source object that is used to access the target object.</param>
        <param name="target">The target object involved in the link that is bound to the source object. The target object must be of the type identified by the source property or a subtype.</param>
        <summary>Changes the state of the link to deleted in the list of links being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile rimuovere qualsiasi collegamento rilevato da <xref:System.Data.Services.Client.DataServiceContext>, indipendentemente dal suo stato attuale.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" />, or <paramref name="target" /> is null.</exception>
        <exception cref="T:System.InvalidOperationException">When <paramref name="source" /> or <paramref name="target" /> is in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.  -or-  When <paramref name="sourceProperty" /> is not a collection.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.DeleteObject : obj -&gt; unit" Usage="dataServiceContext.DeleteObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The tracked entity to be changed to the deleted state.</param>
        <summary>Changes the state of the specified object to be deleted in the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vengono inoltre contrassegnati come eliminati tutti i collegamenti all'entità specificata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">When the object is not being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public bool Detach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Detach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Detach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Detach (entity As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Detach(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Detach : obj -&gt; bool" Usage="dataServiceContext.Detach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The tracked entity to be detached from the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Removes the entity from the list of entities that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
        <returns>Returns <see langword="true" /> if the specified entity was detached; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una volta rimosso un oggetto, non viene più rilevato da <xref:System.Data.Services.Client.DataServiceContext>.  
  
 È possibile chiamare il metodo <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> per rimuovere qualsiasi oggetto, indipendentemente da <xref:System.Data.Services.Client.EntityStates>.  
  
 Dopo aver rimosso l'entità specificata, questo metodo rimuoverà inoltre eventuali collegamenti correlati all'entità.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DetachLink">
      <MemberSignature Language="C#" Value="public bool DetachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DetachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DetachLink (source As Object, sourceProperty As String, target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DetachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DetachLink : obj * string * obj -&gt; bool" Usage="dataServiceContext.DetachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The source object participating in the link to be marked for deletion.</param>
        <param name="sourceProperty">The name of the property on the source object that represents the source in the link between the source and the target.</param>
        <param name="target">The target object involved in the link that is bound to the source object. The target object must be of the type identified by the source property or a subtype.</param>
        <summary>Removes the specified link from the list of links being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <returns>Returns true if the specified entity was detached; otherwise false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile rimuovere qualsiasi collegamento rilevato da <xref:System.Data.Services.Client.DataServiceContext>, indipendentemente dal suo stato attuale.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" /> or <paramref name="sourceProperty" /> are <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="sourceProperty" /> is an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; EndExecute&lt;TElement&gt; (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; EndExecute&lt;TElement&gt;(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute(Of TElement) (asyncResult As IAsyncResult) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ EndExecute(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.EndExecute asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Tipo restituito dalla query.</typeparam>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> object.</param>
        <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />.</summary>
        <returns>The results returned by the query operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In base al modello asincrono Begin-End standard, il callback fornito viene richiamato in fase di recupero dei risultati della query. Per altre informazioni, vedere [operazioni asincrone](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 Se viene richiamato il callback, tutti i risultati sono stati letti dal flusso HTTP, ma non sono stati elaborati. Nessun oggetto locale rivolto all'utente è stato materializzato o modificato e non si è verificata la risoluzione dell'identità. Se viene richiamato <xref:System.Data.Services.Client.DataServiceContext.EndExecute%2A>, un oggetto <xref:System.Data.Services.Client.DataServiceResponse> viene creato e restituito, ma i risultati non sono ancora stati elaborati. La risoluzione di identità, la materializzazione di oggetti e la modifica si verificano solo se l'utente enumera i risultati.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come eseguire una query asincrona chiamando il metodo <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> per l'avvio della query. Il delegato inline chiama il metodo <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> per visualizzare i risultati della query. Questo esempio Usa la <xref:System.Data.Services.Client.DataServiceContext> generato dallo strumento Aggiungi riferimento al servizio basato sul servizio dati Northwind, che viene creato quando si completa la [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="asyncResult" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="asyncResult" /> did not originate from this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance.  -or-  When the <see cref="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" /> method was previously called.</exception>
        <exception cref="T:System.InvalidOperationException">When an error is raised either during execution of the request or when it converts the contents of the response message into objects.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndExecuteBatch (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndExecuteBatch(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteBatch (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndExecuteBatch(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteBatch : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndExecuteBatch asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</param>
        <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />.</summary>
        <returns>The <see langword="DataServiceResult" /> object that indicates the result of the batch operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Invia un gruppo di query come batch al servizio dati. Le singole risposte alle query vengono rappresentate come oggetti <xref:System.Data.Services.Client.DataServiceResponse> derivati da <xref:System.Data.Services.Client.OperationResponse> a cui è possibile accedere dall'istanza di <xref:System.Data.Services.Client.DataServiceResponse>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetReadStream (asyncResult As IAsyncResult) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ EndGetReadStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetReadStream : IAsyncResult -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.EndGetReadStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The result from the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" /> operation that contains the binary data stream.</param>
        <summary>Called to complete the asynchronous operation of retrieving a binary property as a stream.</summary>
        <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> which contains the response stream along with its metadata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> viene chiamato per ricevere i risultati dal metodo <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A>.  
  
 Il metodo <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> non viene completato finché non verrà ricevuta la risposta dal metodo <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse EndLoadProperty (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse EndLoadProperty(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndLoadProperty (asyncResult As IAsyncResult) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ EndLoadProperty(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndLoadProperty : IAsyncResult -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.EndLoadProperty asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</param>
        <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" /> operation.</summary>
        <returns>The response to the load operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si verifica un errore durante la richiesta o l'elaborazione della risposta dal servizio dati, viene generata un'eccezione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndSaveChanges (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndSaveChanges(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSaveChanges (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndSaveChanges(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSaveChanges : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndSaveChanges asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</param>
        <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" /> operation.</summary>
        <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object that indicates the result of the batch operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario controllare <xref:System.Data.Services.Client.DataServiceResponse.BatchStatusCode%2A> per visualizzare il risultato delle operazioni batch. È possibile recuperare i singoli risultati delle operazioni negli oggetti operazione restituiti dall'enumeratore <xref:System.Data.Services.Client.DataServiceResponse>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entities">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt; Entities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.EntityDescriptor&gt; Entities" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entities As ReadOnlyCollection(Of EntityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ Entities { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of all the resources currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <value>Elenco di oggetti <see cref="T:System.Data.Services.Client.EntityDescriptor" /> che rappresenta tutte le risorse attualmente rilevate da <see cref="T:System.Data.Services.Client.DataServiceContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non viene rilevata alcuna risorsa, viene restituito un elenco con zero elementi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sends a request to the data service to execute a specific URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; Execute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; Execute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of T) (continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ Execute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.Execute continuation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo restituito dalla query.</typeparam>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of data to return from the data service.</param>
        <summary>Sends a request to the data service to retrieve the next page of data in a paged query result.</summary>
        <returns>The response that contains the next page of data in the query result.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> fornito contiene l'URI che, in caso di esecuzione, restituisce la pagina di dati successiva nel risultato della query.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When an error is raised either during execution of the request or when it converts the contents of the response message into objects.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; Execute&lt;TElement&gt; (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; Execute&lt;TElement&gt;(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of TElement) (requestUri As Uri) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ Execute(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.Execute : Uri -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.Execute requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Tipo restituito dalla query.</typeparam>
        <param name="requestUri">The URI to which the query request will be sent. The URI may be any valid data service URI. Can contain $ query parameters.</param>
        <summary>Sends a request to the data service to execute a specific URI.</summary>
        <returns>The results of the query operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> viene utilizzato per eseguire una query su un servizio dati in base all'URI; il metodo comporta la generazione di una richiesta HTTP GET al servizio dati. L'URI della richiesta specificato può essere assoluto o relativo.  
  
 Se `requestUri` è assoluto, questo metodo convalida se l'URI punta allo stesso servizio dati specificato in fase di costruzione di <xref:System.Data.Services.Client.DataServiceContext>. Se `requestUri` è relativo, questo metodo rimuove qualsiasi barra iniziale e aggiunge `requestUri` a quanto fornito in fase di costruzione di <xref:System.Data.Services.Client.DataServiceContext>. Se non è già presente, dopo l'URI passato al costruttore <xref:System.Data.Services.Client.DataServiceContext> viene aggiunta una barra.  
  
 Se viene restituito questo metodo, tutte le risposte HTTP per la richiesta sono state lette dal flusso di rete, ma non verranno elaborate. Non si verifica alcuna risoluzione di identità o materializzazione di oggetti completa per un'entità specificata nella risposta, finché non viene enumerata.  
  
   
  
## Examples  
 In questo esempio viene usato un ciclo `do…while` per caricare entità `Customers` dai risultati di paging del servizio dati. Il metodo <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> viene chiamato tramite l'URI di collegamento successivo per ricevere la successiva pagina di dati.  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#getcustomerspaged)]
 [!code-vb[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#getcustomerspaged)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">When a response is not received from a request to the <paramref name="requestUri" />.</exception>
        <exception cref="T:System.ArgumentNullException">When <paramref name="requestUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="requestUri" /> is not a valid URI for the data service.</exception>
        <exception cref="T:System.InvalidOperationException">When an error is raised either during execution of the request or when it converts the contents of the response message into objects.</exception>
        <exception cref="T:System.Data.Services.Client.DataServiceQueryException">When the data service returns an HTTP 404: Resource Not Found error.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse ExecuteBatch (params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse ExecuteBatch(class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteBatch (ParamArray queries As DataServiceRequest()) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ ExecuteBatch(... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.ExecuteBatch : System.Data.Services.Client.DataServiceRequest[] -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.ExecuteBatch queries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="queries">Array of <see cref="T:System.Data.Services.Client.DataServiceRequest[]" /> objects that make up the queries.</param>
        <summary>Submits a group of queries as a batch to the data service.</summary>
        <returns>The response to the batch operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le query vengono specificate come istanze di <xref:System.Data.Services.Client.DataServiceRequest%601>. Restituisce un oggetto <xref:System.Data.Services.Client.DataServiceResponse> che rappresenta la risposta dell'intera richiesta batch. Le singole risposte alle query vengono rappresentate come singoli oggetti <xref:System.Data.Services.Client.OperationResponse> a cui è possibile accedere enumerando l'istanza di <xref:System.Data.Services.Client.DataServiceResponse>.  
  
 Se viene restituito questo metodo, tutte le risposte HTTP per la richiesta batch sono state lette dal flusso di rete, ma non sono state elaborate. Non si verifica alcuna risoluzione di identità o materializzazione di oggetti per un'entità specificata nella risposta, finché non viene enumerata.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come chiamare il metodo <xref:System.Data.Services.Client.DataServiceContext.ExecuteBatch*> per eseguire una matrice di oggetti <xref:System.Data.Services.Client.DataServiceRequest%601> contenente query che restituiscono gli oggetti `Customers` e `Products` dal servizio dati Northwind. La raccolta di oggetti <xref:System.Data.Services.Client.QueryOperationResponse%601> inclusa nell'oggetto <xref:System.Data.Services.Client.DataServiceResponse> restituito viene enumerata, allo stesso modo della raccolta di oggetti inclusa in ogni oggetto <xref:System.Data.Services.Client.QueryOperationResponse%601>. Questo esempio Usa la <xref:System.Data.Services.Client.DataServiceContext> generato dallo strumento Aggiungi riferimento al servizio basato sul servizio dati Northwind, che viene creato quando si completa la [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#BatchQuery](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#batchquery)]
 [!code-vb[Astoria Northwind Client#BatchQuery](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#batchquery)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.EntityDescriptor GetEntityDescriptor (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.EntityDescriptor GetEntityDescriptor(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityDescriptor (entity As Object) As EntityDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::EntityDescriptor ^ GetEntityDescriptor(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetEntityDescriptor : obj -&gt; System.Data.Services.Client.EntityDescriptor" Usage="dataServiceContext.GetEntityDescriptor entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.EntityDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The object for which to return the entity descriptor.</param>
        <summary>Gets the <see cref="T:System.Data.Services.Client.EntityDescriptor" /> for the supplied entity object.</summary>
        <returns>The <see cref="T:System.Data.Services.Client.EntityDescriptor" /> instance for the <paramref name="entity" />, or <see langword="null" /> if an <see cref="T:System.Data.Services.Client.EntityDescriptor" /> does not exist for the object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLinkDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.LinkDescriptor GetLinkDescriptor (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.LinkDescriptor GetLinkDescriptor(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLinkDescriptor (source As Object, sourceProperty As String, target As Object) As LinkDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::LinkDescriptor ^ GetLinkDescriptor(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.GetLinkDescriptor : obj * string * obj -&gt; System.Data.Services.Client.LinkDescriptor" Usage="dataServiceContext.GetLinkDescriptor (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.LinkDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Source object in the link</param>
        <param name="sourceProperty">The name of the navigation property on the <c>source</c> object that returns the related object.</param>
        <param name="target">The related entity.</param>
        <summary>Gets the <see cref="T:System.Data.Services.Client.LinkDescriptor" /> for a specific link that defines the relationship between two entities.</summary>
        <returns>The <see cref="T:System.Data.Services.Client.LinkDescriptor" /> instance for the specified relationship, or <see langword="null" /> if a <see cref="T:System.Data.Services.Client.LinkDescriptor" /> does not exist for the relationship.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataUri">
      <MemberSignature Language="C#" Value="public Uri GetMetadataUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetMetadataUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetMetadataUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetMetadataUri();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataUri : unit -&gt; Uri" Usage="dataServiceContext.GetMetadataUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a URI of the location of .edmx metadata.</summary>
        <returns>A URI that identifies the location of the metadata description, in .edmx format, for the data service identified by the base URI that is passed to the constructor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Restituisce l'URI passato al costruttore con un solo segmento di percorso (`/$metadata`) aggiunto. La chiamata di questo metodo potrebbe generare un'operazione di rete per individuare dinamicamente l'URI dei metadati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReadStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets binary property data for the specified entity as a data stream.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has the binary property to retrieve.</param>
        <summary>Gets binary property data for the specified entity as a data stream.</summary>
        <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> that represents the response.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> metodo richiede in modo sincrono un flusso di dati che contiene la proprietà binaria dell'oggetto richiesto `entity`.  
  
 Nel protocollo AtomPub, il `entity` è una voce di collegamento multimediale e la proprietà binaria è la risorsa multimediale associata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="entity" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.  -or-  The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.  -or-  The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, args As DataServiceRequestArgs) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has the binary property to retrieve.</param>
        <param name="args">Instance of <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
        <summary>Gets binary property data for the specified entity as a data stream along with the specified message headers.</summary>
        <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> that represents the response.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> metodo richiede in modo sincrono un flusso di dati che contiene la proprietà binaria dell'oggetto richiesto `entity`.  
  
 Nel protocollo AtomPub, il `entity` è una voce di collegamento multimediale e la proprietà binaria è la risorsa multimediale associata.  
  
 Non viene eseguita alcuna convalida delle intestazioni impostate in `args`. Non modificare pertanto un'intestazione HTTP in un modo che determinerebbe la modifica del significato della richiesta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> is <see langword="null" />.  -or-  <paramref name="args" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.  -or-  The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.  -or-  The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, string acceptContentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, string acceptContentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, acceptContentType As String) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::String ^ acceptContentType);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * string -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, acceptContentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="acceptContentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has the binary property to retrieve.</param>
        <param name="acceptContentType">The content type of the data requested from the data service, specified in the Accept header.</param>
        <summary>Gets binary property data for the specified entity as a data stream, with the specified Accept message header.</summary>
        <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> that represents the response.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `acceptContentType` parametro deve essere un valore valido per l'intestazione HTTP Accept.  
  
 Il <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> metodo richiede in modo sincrono un flusso di dati che contiene la proprietà binaria dell'oggetto richiesto `entity`.  
  
 Nel protocollo AtomPub, il `entity` è una voce di collegamento multimediale e la proprietà binaria è la risorsa multimediale associata.  
  
 Non viene eseguita alcuna convalida delle intestazioni impostate in `acceptContentType`. Non modificare pertanto questa intestazione HTTP in un modo che determinerebbe la modifica del significato della richiesta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> is <see langword="null" />.  -or-  <paramref name="acceptContentType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.  -or-  The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.  -or-  The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStreamUri">
      <MemberSignature Language="C#" Value="public Uri GetReadStreamUri (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetReadStreamUri(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStreamUri (entity As Object) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetReadStreamUri(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStreamUri : obj -&gt; Uri" Usage="dataServiceContext.GetReadStreamUri entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has the binary property to retrieve.</param>
        <summary>Gets the URI that is used to return binary property data as a data stream.</summary>
        <returns>The read URI of the binary data stream.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'oggetto `entity` specificato è una voce di collegamento multimediale, il metodo <xref:System.Data.Services.Client.DataServiceContext.GetReadStreamUri%2A> restituisce un URI utilizzato per accedere al contenuto della risorsa multimediale.  
  
 Questo URI viene utilizzato solo in una richiesta GET per leggere il contenuto di una risorsa multimediale. Potrebbe non rispondere a richieste POST, PUT o DELETE.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">If the entity specified is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnoreMissingProperties">
      <MemberSignature Language="C#" Value="public bool IgnoreMissingProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreMissingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreMissingProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreMissingProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreMissingProperties : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the properties read from the type must be mapped to properties on the client-side type.</summary>
        <value>Valore booleano che indica se è necessario eseguire il mapping delle proprietà lette dal tipo alle proprietà nel tipo lato client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `true`, materializzazione avrà esito positivo anche se non è possibile eseguire il mapping di proprietà dal tipo alle proprietà del tipo di client. Se `false`, la mancata corrispondenza della proprietà genererà un'eccezione durante la materializzazione degli oggetti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreResourceNotFoundException">
      <MemberSignature Language="C#" Value="public bool IgnoreResourceNotFoundException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreResourceNotFoundException" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreResourceNotFoundException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreResourceNotFoundException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreResourceNotFoundException : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether an exception is raised when a 404 error (resource not found) is returned by the data service.</summary>
        <value>Se impostato su <see langword="true" />, la libreria client restituisce un set vuoto anziché generare un <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> quando il servizio dati restituisce un errore HTTP 404: errore di risorsa non trovata.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.LinkDescriptor&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As ReadOnlyCollection(Of LinkDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ Links { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of all associations or links currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> object.</summary>
        <value>Raccolta di oggetti <see cref="T:System.Data.Services.Client.LinkDescriptor" /> che rappresenta tutte le associazioni o tutti i collegamenti attualmente rilevati tramite l'oggetto <see cref="T:System.Data.Services.Client.DataServiceContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non viene rilevato alcun collegamento, viene restituito un elenco con 0 elementi. La raccolta è di sola lettura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Loads deferred content from the data service.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <summary>Loads deferred content for a specified property from the data service.</summary>
        <returns>The response to the load operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata di questo metodo richiama un'operazione di rete per recuperare il valore della proprietà. La proprietà specificata può essere una qualsiasi proprietà nell'entità, incluse le proprietà che rappresentano associazioni o collegamenti.  
  
 Se la proprietà rappresenta un'associazione o un collegamento oppure una proprietà posticipata, la chiamata di questo metodo fornisce al client un metodo per caricare in ritardo le risorse correlate.  
  
 Se l'entità è nello stato non modificato o modificato, il valore della proprietà carica le entità correlate contrassegnandole come non modificate con collegamenti non modificati.  
  
 Se la proprietà è già caricata, la chiamata di questo metodo consente di aggiornare il valore della proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come caricare in modo esplicito l'oggetto `Customers` correlato a ogni istanza di `Orders` restituita. Questo esempio Usa la <xref:System.Data.Services.Client.DataServiceContext> generato dallo strumento Aggiungi riferimento al servizio basato sul servizio dati Northwind, che viene creato quando si completa la [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#loadrelatedordercustomer)]
 [!code-vb[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#loadrelatedordercustomer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of related entities to load from the data service.</param>
        <summary>Loads the next page of related entities from the data service by using the supplied query continuation object.</summary>
        <returns>The response that contains the next page of related entity data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `entity` è in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged> o <xref:System.Data.Services.Client.EntityStates.Modified>, le entità correlate vengono caricate come oggetti in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged>, con i collegamenti sempre in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged>.  
  
 Se `entity` è in uno stato <xref:System.Data.Services.Client.EntityStates.Deleted>, le entità correlate vengono caricate come oggetti in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged>, con i collegamenti sempre in uno stato <xref:System.Data.Services.Client.EntityStates.Deleted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, Uri nextLinkUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Uri nextLinkUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * Uri -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, nextLinkUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <param name="nextLinkUri">The URI that is used to load the next results page.</param>
        <summary>Loads a page of related entities by using the supplied next link URI.</summary>
        <returns>An instance of <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" /> that contains the results of the request.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `entity` è in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged> o <xref:System.Data.Services.Client.EntityStates.Modified>, le entità correlate vengono caricate in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged> e anche i collegamenti tra le entità vengono creati in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged>.  
  
 Se `entity` è in uno stato <xref:System.Data.Services.Client.EntityStates.Deleted>, le entità correlate vengono caricate in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged> e i collegamenti tra le entità vengono creati in uno stato <xref:System.Data.Services.Client.EntityStates.Deleted>.  
  
   
  
## Examples  
 In questo esempio vengono restituite entità `Orders` correlate con ogni entità `Customers` e vengono usati un ciclo `do…while` per caricare pagine di entità `Customers` e un ciclo `while` annidato per caricare pagine di entità `Orders` correlate dal servizio dati. Il metodo <xref:System.Data.Services.Client.DataServiceContext.LoadProperty%2A> viene utilizzato per caricare pagine di entità `Orders` correlate.  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#getcustomerspagednested)]
 [!code-vb[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#getcustomerspagednested)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; LoadProperty&lt;T&gt; (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; LoadProperty&lt;T&gt;(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty(Of T) (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo di elemento della raccolta da caricare.</typeparam>
        <param name="entity">The entity that contains the property to load.</param>
        <param name="propertyName">The name of the property of the specified entity to load.</param>
        <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of related entities to load from the data service.</param>
        <summary>Loads the next page of related entities from the data service by using the supplied generic query continuation object.</summary>
        <returns>The response that contains the next page of related entity data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `entity` è in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged> o <xref:System.Data.Services.Client.EntityStates.Modified>, le entità correlate vengono caricate come oggetti in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged>, con i collegamenti sempre in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged>.  
  
 Se `entity` è in uno stato <xref:System.Data.Services.Client.EntityStates.Deleted>, le entità correlate vengono caricate come oggetti in uno stato <xref:System.Data.Services.Client.EntityStates.Unchanged>, con i collegamenti sempre in uno stato <xref:System.Data.Services.Client.EntityStates.Deleted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.</exception>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::MergeOption MergeOption { System::Data::Services::Client::MergeOption get(); void set(System::Data::Services::Client::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Services.Client.MergeOption with get, set" Usage="System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the synchronization option for receiving entities from a data service.</summary>
        <value>Uno dei membri dell'enumerazione <see cref="T:System.Data.Services.Client.MergeOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore viene letto dal componente di deserializzazione del client prima della materializzazione degli oggetti. Impostare questa proprietà sull'opzione di materializzazione appropriata prima di eseguire eventuali query o aggiornamenti relativi al servizio dati. Il valore predefinito è <xref:System.Data.Services.Client.MergeOption.AppendOnly>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.ReadingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ ReadingEntity;" />
      <MemberSignature Language="F#" Value="member this.ReadingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.ReadingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after entity data has been completely read into the entity object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'evento <xref:System.Data.Services.Client.DataServiceContext.ReadingEntity> si verifica dopo che i dati dell'entità sono stati completamente letti nell'oggetto di destinazione con tutte le entità annidate. Se il rilevamento è diverso da <xref:System.Data.Services.Client.MergeOption.NoTracking>, si collega l'oggetto prima che si verifichi l'evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="public Func&lt;Type,string&gt; ResolveName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Type, string&gt; ResolveName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveName As Func(Of Type, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Type ^, System::String ^&gt; ^ ResolveName { Func&lt;Type ^, System::String ^&gt; ^ get(); void set(Func&lt;Type ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveName : Func&lt;Type, string&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Type,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a function to override the default type resolution strategy used by the client library when you send entities to a data service.</summary>
        <value>Restituisce una stringa che contiene il nome dell'oggetto <see cref="T:System.Data.Services.Client.DataServiceContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consente l'override della risoluzione del tipo predefinita utilizzata dalla libreria client. Impostare questa proprietà su un delegato che identifica una funzione utilizzata per risolvere un tipo nell'applicazione client in un nome di tipo completo di spazio dei nomi. In questo modo, tramite il client può essere eseguito il mapping personalizzato tra il nome del tipo fornito in una risposta del server e un tipo nel client.  
  
> [!NOTE]
>  Questo metodo consente l'override del nome dell'entità serializzato sulla rappresentazione di destinazione, ad esempio Atom o JSON, per il tipo specificato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public Func&lt;string,Type&gt; ResolveType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;string, class System.Type&gt; ResolveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveType As Func(Of String, Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::String ^, Type ^&gt; ^ ResolveType { Func&lt;System::String ^, Type ^&gt; ^ get(); void set(Func&lt;System::String ^, Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveType : Func&lt;string, Type&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.String,System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a function that is used to override the default type resolution option that is used by the client library when receiving entities from a data service.</summary>
        <value>Delegato di una funzione che identifica una funzione utilizzata per eseguire l'override dell'opzione di risoluzione del tipo predefinita utilizzata dalla libreria client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consente l'override della strategia di risoluzione del tipo predefinita utilizzata dalla libreria client. Impostare questa proprietà su un delegato che identifica una funzione che risolve un nome di tipo completo di spazio dei nomi in un tipo nell'applicazione client. In questo modo, tramite il client può essere eseguito il mapping personalizzato tra il nome del tipo fornito in una risposta del server e un tipo nel client.  
  
 L'override della risoluzione del tipo consente inoltre di inserire una strategia di mapping personalizzata tra un nome del tipo e un tipo. Non influisce sul modo in cui una risposta viene materializzata nel tipo identificato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Saves the changes the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking to storage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceResponse> che contiene stato, intestazioni ed errori risultanti dalla chiamata a <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges () As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves the changes that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking to storage.</summary>
        <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> that contains status, headers, and errors that result from the call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges.Remarks" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges (System.Data.Services.Client.SaveChangesOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges(System.Data.Services.Client.SaveChangesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges (options As SaveChangesOptions) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges(System::Data::Services::Client::SaveChangesOptions options);" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : System.Data.Services.Client.SaveChangesOptions -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
      </Parameters>
      <Docs>
        <param name="options">A member of the <see cref="T:System.Data.Services.Client.MergeOption" /> enumeration that specifies the materialization option.</param>
        <summary>Saves the changes that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking to storage.</summary>
        <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> that contains status, headers, and errors that result from the call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operazioni vengono inviate al servizio dati nell'ordine seguente  
  
1.  <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>  
  
2.  <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>  
  
3.  <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A>  
  
4.  <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>  
  
5.  <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> e <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesDefaultOptions">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveChangesDefaultOptions As SaveChangesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::SaveChangesOptions SaveChangesDefaultOptions { System::Data::Services::Client::SaveChangesOptions get(); void set(System::Data::Services::Client::SaveChangesOptions value); };" />
      <MemberSignature Language="F#" Value="member this.SaveChangesDefaultOptions : System.Data.Services.Client.SaveChangesOptions with get, set" Usage="System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.SaveChangesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Data.Services.Client.SaveChangesOptions" /> values that are used by the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method.</summary>
        <value>Opzioni attuali per l'operazione di salvataggio modifiche.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene fornita per consentire l'impostazione di opzioni quali l'unione e la sostituzione di semantica una volta per <xref:System.Data.Services.Client.DataServiceContext> e quindi consentirne l'override in base alle esigenze chiamando uno degli overload <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendingRequest">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.SendingRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendingRequest As EventHandler(Of SendingRequestEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::SendingRequestEventArgs ^&gt; ^ SendingRequest;" />
      <MemberSignature Language="F#" Value="member this.SendingRequest : EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " Usage="member this.SendingRequest : System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a new <see cref="T:System.Net.HttpWebRequest" /> has been created.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'evento <xref:System.Data.Services.Client.DataServiceContext.SendingRequest> si verifica prima che i valori della proprietà richiesti vengano impostati sull'oggetto. garanzie  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLink">
      <MemberSignature Language="C#" Value="public void SetLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.SetLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.SetLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">The source object for the new link.</param>
        <param name="sourceProperty">The property on the source object that identifies the target object of the new link.</param>
        <param name="target">The child object involved in the new link that is to be initialized by calling this method. The target object must be a subtype of the type identified by the <c>sourceProperty</c> parameter. If <c>target</c> is set to null, the call represents a delete link operation.</param>
        <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> that a new link exists between the objects specified and that the link is represented by the property specified by the <paramref name="sourceProperty" /> parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene creato un nuovo collegamento in uno stato <xref:System.Data.Services.Client.EntityStates.Added>. <xref:System.Data.Services.Client.DataServiceContext> aggiunge questo nuovo collegamento al set di collegamenti appena creati da inviare al servizio dati alla chiamata successiva a <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 Se l'argomento di destinazione è Null, il collegamento rappresentato da sourceProperty deve essere rimosso o eliminato (il collegamento viene modificato nello stato <xref:System.Data.Services.Client.EntityStates.Deleted>).  
  
 I collegamenti sono relazioni unidirezionali. Se un puntatore all'indietro presente, a indicare un'associazione bidirezionale, questo metodo deve essere chiamato nuovamente per notificare il <xref:System.Data.Services.Client.DataServiceContext> del secondo collegamento  
  
 Questo metodo supporta solo l'aggiunta di collegamenti a relazioni con molteplicità = 1 (la proprietà di origine è un riferimento all'oggetto). Se ad esempio una classe `Person` è correlata a un'altra classe `Person` tramite una proprietà `Friend`, questa chiamata può essere utilizzata per correlare `Person` a `Person`. Questo metodo genererà un'eccezione se l'oggetto `sourceProperty` rappresentato dispone di più di una relazione di cardinalità pari a uno.  
  
   
  
## Examples  
 Nell'esempio seguente viene mostrato come utilizzare i metodi <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> e <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> per creare collegamenti che definiscono relazioni. In questo esempio le proprietà di navigazione sull'oggetto `Order_Details` vengono impostate anche in modo esplicito.  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" /> or <paramref name="target" /> are null.</exception>
        <exception cref="T:System.InvalidOperationException">When the specified link already exists.  -or-  When the objects supplied as <paramref name="source" /> or <paramref name="target" /> are in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.  -or-  When <paramref name="sourceProperty" /> is not a navigation property that defines a reference to a single related object.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSaveStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets a new data stream as the binary property of an entity.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * System.Data.Services.Client.DataServiceRequestArgs -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has a binary property to which to assign the data stream.</param>
        <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the binary data.</param>
        <param name="closeStream">A <see cref="T:System.Boolean" /> value that determines whether the data stream is closed when the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method is completed.</param>
        <param name="args">An instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
        <summary>Sets a new data stream as the binary property of an entity, with the specified settings in the request message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> metodo imposta il flusso di dati binari è la risorsa multimediale associata la `entity`, che viene chiamato una voce di collegamento multimediale.  
  
 La chiamata del metodo <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> contrassegna l'entità come voce di collegamento multimediale. Anche lo stato dell'entità viene impostato su <xref:System.Data.Services.Client.EntityStates.Modified> in modo che il flusso venga inviato al servizio dati alla successiva chiamata del metodo <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 Il metodo <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> legge <xref:System.IO.Stream> dall'inizio alla fine. Nell'oggetto <xref:System.IO.Stream.Seek%2A> non viene tentata un'operazione <xref:System.IO.Stream>.  
  
 Quando `closeStream` viene `true`, il <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> metodo chiude il flusso prima della restituzione. Il flusso viene inoltre chiuso se si verifica un errore di lettura.  
  
 Se all'oggetto `entity` viene applicato l'oggetto <xref:System.Data.Services.Client.MediaEntryAttribute>, la risorsa multimediale non può essere un flusso di dati. Rimuovere questo attributo prima di tentare di impostare il flusso di dati per `entity`.  
  
 Non viene eseguita alcuna convalida delle intestazioni impostate in `args`. Non modificare pertanto un'intestazione HTTP in un modo che determinerebbe la modifica del significato della richiesta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method are <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not being tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance.  -or-  The <paramref name="entity" /> has the <see cref="T:System.Data.Services.Client.MediaEntryAttribute" /> applied.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, string contentType, string slug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, string contentType, string slug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::String ^ contentType, System::String ^ slug);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * string * string -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, contentType, slug)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="slug" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">The entity that has a binary property to which to assign the data stream.</param>
        <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the binary data.</param>
        <param name="closeStream">A <see cref="T:System.Boolean" /> value that determines whether the data stream is closed when the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method is completed.</param>
        <param name="contentType">The Content-Type header value for the request message.</param>
        <param name="slug">The Slug header value for the request message.</param>
        <summary>Sets a new data stream as the binary property of an entity. The specified Content-Type and Slug headers are included in the request message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> metodo imposta il flusso di dati binari è la risorsa multimediale associata la `entity`, che viene chiamato una voce di collegamento multimediale.  
  
 La chiamata del metodo <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> contrassegna l'entità come voce di collegamento multimediale. Anche lo stato dell'entità viene impostato su <xref:System.Data.Services.Client.EntityStates.Modified> in modo che il flusso venga inviato al servizio dati alla successiva chiamata del metodo <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 Il metodo <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> legge <xref:System.IO.Stream> dall'inizio alla fine. Nell'oggetto <xref:System.IO.Stream.Seek%2A> non viene tentata un'operazione <xref:System.IO.Stream>.  
  
 Quando `closeStream` viene `true`, il <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> metodo chiude il flusso prima della restituzione. Il flusso viene inoltre chiuso se si verifica un errore di lettura.  
  
 Se all'oggetto `entity` viene applicato l'oggetto <xref:System.Data.Services.Client.MediaEntryAttribute>, la risorsa multimediale non può essere un flusso di dati. Rimuovere questo attributo prima di tentare di impostare il flusso di dati per `entity`.  
  
 Non viene eseguita alcuna convalida delle intestazioni impostate in `contentType` e `slug`. Non modificare pertanto queste intestazioni HTTP in un modo che determinerebbe la modifica del significato della richiesta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method are <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not being tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance.  -or-  The <see langword="entity" /> has the <see cref="T:System.Data.Services.Client.MediaEntryAttribute" /> applied.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the time-out option that is used for the underlying HTTP request to the data service.</summary>
        <value>Numero intero che indica l'intervallo di tempo prima del timeout di una richiesta di servizio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore viene passato per il <xref:System.Net.HttpWebRequest.Timeout> proprietà dell'oggetto sottostante <xref:System.Net.HttpWebRequest> oggetto. È necessario impostare il valore prima che l'esecuzione di qualsiasi operazione di aggiornamento o query rispetto al servizio dati di destinazione possa influire sulla richiesta. Il valore può essere modificato tra le richieste a un servizio dati e il nuovo valore verrà scelto dalla richiesta successiva del servizio dati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntity&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetEntity&lt;TEntity&gt; (Uri identity, out TEntity entity) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntity&lt;class TEntity&gt;(class System.Uri identity, [out] !!TEntity&amp; entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntity(Of TEntity As Class) (identity As Uri, ByRef entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class bool TryGetEntity(Uri ^ identity, [Runtime::InteropServices::Out] TEntity % entity);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntity : Uri *  -&gt; bool (requires 'Entity : null)" Usage="dataServiceContext.TryGetEntity (identity, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.Uri" />
        <Parameter Name="entity" Type="TEntity&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Tipo dell'entità.</typeparam>
        <param name="identity">The URI of the tracked entity to be retrieved.</param>
        <param name="entity">The entity to be retrieved.</param>
        <summary>Test retrieval of an entity being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> by reference to the URI of the entity.</summary>
        <returns>If an entity is found at <paramref name="resourceUri" />, the entity is returned in the out parameter <paramref name="entity" /> and true is returned. If no entity is found, false is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un'entità è nello stato <xref:System.Data.Services.Client.EntityStates.Detached> o <xref:System.Data.Services.Client.EntityStates.Added>, non dispone di un URI e non può essere recuperata tramite questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="identity" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUri">
      <MemberSignature Language="C#" Value="public bool TryGetUri (object entity, out Uri identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUri(object entity, [out] class System.Uri&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUri (entity As Object, ByRef identity As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUri(System::Object ^ entity, [Runtime::InteropServices::Out] Uri ^ % identity);" />
      <MemberSignature Language="F#" Value="member this.TryGetUri : obj *  -&gt; bool" Usage="dataServiceContext.TryGetUri (entity, identity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="identity" Type="System.Uri&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">The entity identified by the <c>identity</c>.</param>
        <param name="identity">The URI of the entity.</param>
        <summary>Retrieves the canonical URI associated with the specified entity, if available.</summary>
        <returns>Returns true if the canonical URI is returned in the out parameter. If the specified entity is not tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> or is in the added state, no URI is available and false is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli oggetti in uno stato <xref:System.Data.Services.Client.EntityStates.Added> non dispongono ancora di un URI.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeScheme">
      <MemberSignature Language="C#" Value="public Uri TypeScheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TypeScheme" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeScheme As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TypeScheme { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeScheme : Uri with get, set" Usage="System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URI used to indicate what type scheme is used by the service.</summary>
        <value>Oggetto <see cref="T:System.Uri" /> contenente lo schema del tipo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un payload ATOM il valore restituito corrisponderà all'attributo di schema di un elemento di categoria utilizzato per identificare il tipo di un'entità. Il valore predefinito è `http://schemas.microsoft.com/ado/2007/08/dataservices/scheme`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateObject">
      <MemberSignature Language="C#" Value="public void UpdateObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.UpdateObject : obj -&gt; unit" Usage="dataServiceContext.UpdateObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The tracked entity to be assigned to the <see cref="F:System.Data.Services.Client.EntityStates.Modified" /> state.</param>
        <summary>Changes the state of the specified object in the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to <see cref="F:System.Data.Services.Client.EntityStates.Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene recuperato e modificato un oggetto esistente e viene quindi chiamato il metodo <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A> sull'oggetto <xref:System.Data.Services.Client.DataServiceContext> per contrassegnare l'elemento come aggiornato. Un messaggio MERGE HTTP viene inviato al servizio dati al momento della chiamata di <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>. Questo esempio Usa la <xref:System.Data.Services.Client.DataServiceContext> generato dallo strumento Aggiungi riferimento al servizio basato sul servizio dati Northwind, che viene creato quando si completa la [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#modifycustomer)]
 [!code-vb[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#modifycustomer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">When <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> state.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePostTunneling">
      <MemberSignature Language="C#" Value="public bool UsePostTunneling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePostTunneling" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePostTunneling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePostTunneling { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePostTunneling : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether to use post tunneling.</summary>
        <value>Valore booleano che indica se utilizzare il post tunneling.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà controlla se per le richieste di creazione, aggiornamento ed eliminazione inviate al servizio dati verrà o meno utilizzata la funzionalità di post tunneling del protocollo. Se impostata su true, viene utilizzato il tunneling. Se impostata su false, vengono utilizzati i metodi HTTP standard.  
  
 Il valore predefinito di questa proprietà è false.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.WritingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WritingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ WritingEntity;" />
      <MemberSignature Language="F#" Value="member this.WritingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.WritingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after an entity has been fully serialized into XML in a request message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La gestione dell'evento <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> consente di modificare l'XML in una richiesta prima dell'invio.  
  
 L'evento <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> si può verificare in un thread diverso in caso di chiamata di <xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%28System.Data.Services.Client.SaveChangesOptions%2CSystem.AsyncCallback%2CSystem.Object%29> senza includere <xref:System.Data.Services.Client.SaveChangesOptions.Batch> nel valore <xref:System.Data.Services.Client.SaveChangesOptions> fornito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>