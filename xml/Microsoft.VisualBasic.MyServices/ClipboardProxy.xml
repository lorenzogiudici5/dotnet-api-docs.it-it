<Type Name="ClipboardProxy" FullName="Microsoft.VisualBasic.MyServices.ClipboardProxy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1906613adf5cb0983338fa416e39f91624f82de8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37710467" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClipboardProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ClipboardProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.ClipboardProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class ClipboardProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClipboardProxy" />
  <TypeSignature Language="F#" Value="type ClipboardProxy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica i metodi per la modifica degli Appunti.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli elementi spostati o copiati negli Appunti mantenuti anche dopo l'applicazione è stata arrestata.  
  
 Dati negli Appunti possono essere in qualsiasi formato di dati, detto anche un formato degli Appunti. Per un elenco dei formati predefiniti da usare con gli Appunti, vedere <xref:System.Windows.Forms.DataFormats>. Quando un elemento viene spostato o copiato negli Appunti, cancellare gli elementi in altri formati. Per rendere altri formati di salvare in modo permanente, usare <xref:Microsoft.VisualBasic.VariantType.DataObject>, che copia tutti gli elementi presenti negli Appunti correnti, inclusi gli elementi incollati da altre applicazioni. Inserire dati negli Appunti in più formati per aumentare la possibilità che un'applicazione di destinazione, il cui potrebbe non essere noto, i requisiti di formato è stato possibile recuperare i dati.  
  
 Poiché tutte le applicazioni Windows condividono gli Appunti di sistema, il contenuto può subire modifiche quando si passa a un'altra applicazione.  
  
 Una classe deve essere serializzabile per poter essere inserita negli Appunti. Visualizzare [serializzazione](http://msdn.microsoft.com/library/f7570c09-7db5-44f2-983a-e8859caeb0d5) per altre informazioni.  
  
 Quando si accede in remoto, negli Appunti un <xref:System.Threading.ThreadStateException> viene generata un'eccezione, a meno che il thread che accede operi in modalità STA (apartment a thread singolo). Per risolvere questo problema, impostare il `ThreadApartmentState` a `STA`. Per ulteriori informazioni, vedere <xref:System.STAThreadAttribute>.  
  
 Per altre informazioni, vedere [l'archiviazione e lettura dati dagli Appunti](~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md).  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio viene letto il testo dagli Appunti nella stringa di `textOnClipboard`.  
  
 [!code-vb[VbVbcnMyClipboard#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#6)]  
  
 In questo esempio avrà esito negativo se non è presente testo negli Appunti.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
    <altmember cref="T:System.Windows.Forms.Clipboard" />
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="clipboardProxy.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella il contenuto degli Appunti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.Permissions.UIPermission> classe Controlla accesso agli Appunti e associato <xref:System.Security.Permissions.UIPermissionClipboard> valore di enumerazione indica il livello di accesso. Per altre informazioni, vedere [altre considerazioni sulla sicurezza in Windows Form](~/docs/framework/winforms/additional-security-considerations-in-windows-forms.md).  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio mostra come cancellare gli Appunti.  
  
```  
My.Computer.Clipboard.Clear()  
```  
  
 Rimuove tutti i dati dagli Appunti.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="member this.ContainsAudio : unit -&gt; bool" Usage="clipboardProxy.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se gli Appunti contengono dati audio.</summary>
        <returns>
          <see langword="True" /> se negli Appunti sono memorizzati dati audio. In caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio determina se gli Appunti contengono dati audio e visualizza il risultato.  
  
 [!code-vb[VbRefClipbd#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="member this.ContainsData : string -&gt; bool" Usage="clipboardProxy.ContainsData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <see langword="String" />. Nome del formato personalizzato da verificare. Obbligatorio.</param>
        <summary>Indica se gli Appunti contengono dati nel formato personalizzato specificato.</summary>
        <returns>
          <see langword="True" /> se i dati nel formato personalizzato specificato sono memorizzati negli Appunti. In caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è stata posizionata dati formattati personalizzati negli Appunti, questo metodo consente di effettuare una ricerca per i dati in tale formato.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio controlla i dati nel formato personalizzato `specialFormat`.  
  
 [!code-vb[VbRefClipbd#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#6)]  
  
 Sostituire `specialFormat` con il nome del formato personalizzato che si desidera verificare.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="member this.ContainsFileDropList : unit -&gt; bool" Usage="clipboardProxy.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore <see langword="Boolean" /> che indica se gli Appunti contengono un tipo Drop List.</summary>
        <returns>
          <see langword="True" /> se negli Appunti è memorizzato un tipo Drop List. In caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un elenco a discesa file è una raccolta di stringhe contenente le informazioni sul percorso per i file.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio viene determinato se è presente un elenco a discesa file negli Appunti e aggiunge l'elenco per il `ListBox.lstFiles` se presenti.  
  
 [!code-vb[VbRefClipbd#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#12)]  
  
 Questo codice viene generata un'eccezione se è presente alcun `ListBox` denominato `lstFiles`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsImage();" />
      <MemberSignature Language="F#" Value="member this.ContainsImage : unit -&gt; bool" Usage="clipboardProxy.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore <see langword="Boolean" /> che indica se negli Appunti è memorizzata un'immagine.</summary>
        <returns>
          <see langword="True" /> se negli Appunti è memorizzata un'immagine. In caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio viene verificato se è disponibile un'immagine negli Appunti e, in caso affermativo, ottiene l'immagine e lo aggiunge alla `PictureBox1`.  
  
 [!code-vb[VbRefClipbd#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#8)]  
  
 In questo esempio dipende dalla presenza di un `PictureBox` denominato `PictureBox1`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se negli Appunti è presente del testo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsText();" />
      <MemberSignature Language="F#" Value="member this.ContainsText : unit -&gt; bool" Usage="clipboardProxy.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se negli Appunti è presente del testo.</summary>
        <returns>
          <see langword="True" /> se gli Appunti contengono testo. In caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sono possibili formati <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> e <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio determina se il testo HTML viene archiviato negli Appunti e operazioni di lettura dagli Appunti in caso affermativo.  
  
 [!code-vb[VbRefClipbd#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="member this.ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="clipboardProxy.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Windows.Forms.TextDataFormat" />. Se specificato, identifica il formato di testo da verificare. Obbligatorio.</param>
        <summary>Determina se negli Appunti è presente del testo.</summary>
        <returns>
          <see langword="True" /> se gli Appunti contengono testo. In caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sono possibili formati <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> e <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio determina se il testo HTML viene archiviato negli Appunti e operazioni di lettura dagli Appunti in caso affermativo.  
  
 [!code-vb[VbRefClipbd#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="member this.GetAudioStream : unit -&gt; System.IO.Stream" Usage="clipboardProxy.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un flusso audio dagli Appunti.</summary>
        <returns>Oggetto <see cref="T:System.IO.Stream" /> contenente dati audio oppure <see langword="Nothing" /> se gli Appunti non contengono dati audio.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio recupera un flusso audio dagli Appunti e riprodurlo.  
  
 [!code-vb[VbRefClipbd#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="member this.GetData : string -&gt; obj" Usage="clipboardProxy.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <see langword="String" />. Nome del formato dati. Obbligatorio.</param>
        <summary>Recupera dati in un formato personalizzato dagli Appunti.</summary>
        <returns>Oggetto <see langword="Object" /> che rappresenta i dati degli Appunti oppure <see langword="Nothing" /> se gli Appunti non contengono dati nel formato specificato o che è possibile convertire in tale formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio legge i dati nel formato `specialformat` dagli Appunti e lo scrive nel file.  
  
 [!code-vb[VbRefClipbd#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#7)]  
  
 Sostituire `specialformat` con il formato di dati personalizzate che si desidera recuperare.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberSignature Language="F#" Value="member this.GetDataObject : unit -&gt; System.Windows.Forms.IDataObject" Usage="clipboardProxy.GetDataObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera i dati dagli Appunti come <see cref="T:System.Windows.Forms.IDataObject" />.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Forms.IDataObject" /> che rappresenta i dati attualmente presenti negli Appunti oppure <see langword="Nothing" /> se negli Appunti non sono presenti dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di un membro avanzato. non è visibile in IntelliSense a meno che non si fa clic sul **tutti** scheda.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio legge i dati dagli Appunti sotto forma di un <xref:System.Windows.Forms.IDataObject> e quindi lo scrive in un file.  
  
 [!code-vb[VbRefClipbd#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#1)]  
  
 Sostituire `C:\mylogfile` con il nome del file in cui si desidera registrare.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="member this.GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="clipboardProxy.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera dagli Appunti un insieme di stringhe che rappresentano i nomi file.</summary>
        <returns>Classe <see cref="T:System.Collections.Specialized.StringCollection" /> contenente i nomi di file o <see langword="Nothing" /> se gli Appunti non contengono dati nel formato <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> o che possano essere convertiti in tale formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è disponibile solo per le applicazioni non server.  
  
 Un elenco a discesa file è una raccolta di stringhe contenente le informazioni sul percorso per i file.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio viene determinato se è presente un elenco a discesa file negli Appunti e aggiunge l'elenco per il `ListBox.lstFiles` se presenti.  
  
 [!code-vb[VbRefClipbd#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#9)]  
  
 Questo codice crea un'eccezione se è presente alcun `ListBox` denominato `lstFiles`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="member this.GetImage : unit -&gt; System.Drawing.Image" Usage="clipboardProxy.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un'immagine dagli Appunti.</summary>
        <returns>Classe <see cref="T:System.Drawing.Image" /> che rappresenta i dati di immagine degli Appunti o <see langword="Nothing" /> se gli Appunti non contengono dati nel formato <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> specificato o che possano essere convertiti in tale formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio verifica se è disponibile un'immagine negli Appunti prima di tentarne il recupero e assegnarlo a `PictureBox1`.  
  
 [!code-vb[VbRefClipbd#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#4)]  
  
 Per questo esempio funzioni correttamente, deve essere presente una `PictureBox` denominato `PictureBox1` sul form.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera il testo dagli Appunti.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="member this.GetText : unit -&gt; string" Usage="clipboardProxy.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera il testo dagli Appunti.</summary>
        <returns>Dati di testo degli Appunti o stringa vuota se gli Appunti non contengono dati nel formato <see cref="F:System.Windows.Forms.DataFormats.Text" /> o <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />, a seconda del sistema operativo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sono possibili formati <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> e <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio viene letto il testo dagli Appunti nella stringa di `textOnClipboard`.  
  
 [!code-vb[VbVbcnMyClipboard#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#6)]  
  
 In questo esempio non riesce se è disponibile alcun testo negli Appunti.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="member this.GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="clipboardProxy.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Windows.Forms.TextDataFormat" />. Se specificato, identifica il formato di testo da recuperare. Il valore predefinito è <see cref="F:System.Windows.Forms.TextDataFormat.CommaSeparatedValue" />. Obbligatorio.</param>
        <summary>Recupera il testo dagli Appunti.</summary>
        <returns>Dati di testo degli Appunti o stringa vuota se gli Appunti non contengono dati nel formato specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sono possibili formati <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> e <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio viene letto il testo dagli Appunti nella stringa di `textOnClipboard`.  
  
 [!code-vb[VbVbcnMyClipboard#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#6)]  
  
 In questo esempio non riesce se è disponibile alcun testo negli Appunti.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive dati audio negli Appunti.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="member this.SetAudio : byte[] -&gt; unit" Usage="clipboardProxy.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Matrice <see langword="Byte" />. Dati audio da scrivere negli Appunti. Obbligatorio.</param>
        <summary>Scrive dati audio negli Appunti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Dal momento che gli Appunti sono accessibili da altri utenti, non usarli per archiviare informazioni sensibili, ad esempio password o dati riservati.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio crea la matrice di byte `musicReader`, legge il file `cool.wav` al suo interno e lo scrive quindi negli Appunti.  
  
 [!code-vb[VbRefClipbd#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#2)]  
  
 Sostituire `cool.wav` con il nome e percorso del file che si desidera leggere.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="member this.SetAudio : System.IO.Stream -&gt; unit" Usage="clipboardProxy.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">Dati audio <see cref="T:System.IO.Stream" /> da scrivere negli Appunti. Obbligatorio.</param>
        <summary>Scrive dati audio negli Appunti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Dal momento che gli Appunti sono accessibili da altri utenti, non usarli per archiviare informazioni sensibili, ad esempio password o dati riservati.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio crea la matrice di byte `musicReader`, legge il file `cool.wav` al suo interno e lo scrive quindi negli Appunti.  
  
 [!code-vb[VbRefClipbd#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#2)]  
  
 Sostituire `cool.wav` con il nome e percorso del file che si desidera leggere.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.SetData : string * obj -&gt; unit" Usage="clipboardProxy.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <see langword="String" />. Formato dei dati. Obbligatorio.</param>
        <param name="data">
          <see langword="Object" />. Oggetto dati da scrivere negli Appunti. Obbligatorio.</param>
        <summary>Scrive dati in un formato personalizzato negli Appunti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Dal momento che gli Appunti sono accessibili da altri utenti, non usarli per archiviare informazioni sensibili, ad esempio password o dati riservati.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio `DataObject.dataChunk` viene scritto negli Appunti nel formato personalizzato `specialFormat`.  
  
 [!code-vb[VbVbcnMyClipboard#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#7)]  
  
 In questo esempio dipende dalla presenza del formato dati personalizzati `specialFormat`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public void SetDataObject (System.Windows.Forms.DataObject data);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetDataObject(class System.Windows.Forms.DataObject data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDataObject (data As DataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDataObject(System::Windows::Forms::DataObject ^ data);" />
      <MemberSignature Language="F#" Value="member this.SetDataObject : System.Windows.Forms.DataObject -&gt; unit" Usage="clipboardProxy.SetDataObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.DataObject" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Windows.Forms.DataObject" />. Oggetto dati da scrivere negli Appunti. Obbligatorio.</param>
        <summary>Scrive un oggetto <see cref="T:System.Windows.Forms.DataObject" /> negli Appunti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta di un membro avanzato. non è visibile in IntelliSense a meno che non si fa clic sul **tutti** scheda.  
  
> [!IMPORTANT]
>  Dal momento che gli Appunti sono accessibili da altri utenti, non usarli per archiviare informazioni sensibili, ad esempio password o dati riservati.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio scrive l'oggetto dati `dataChunk` negli Appunti.  
  
 [!code-vb[VbVbcnMyClipboard#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#9)]  
  
 In questo esempio dipende dalla presenza dell'oggetto dati `dataChunk`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="member this.SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="clipboardProxy.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths">
          <see cref="T:System.Collections.Specialized.StringCollection" />. Elenco di nomi di file. Obbligatorio.</param>
        <summary>Scriev negli Appunti un insieme di stringhe che rappresentano i percorsi di file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un elenco a discesa file è una raccolta di stringhe che rappresentano i nomi di file.  
  
> [!IMPORTANT]
>  Dal momento che gli Appunti sono accessibili da altri utenti, non usarli per archiviare informazioni sensibili, ad esempio password o dati riservati.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio ottiene una raccolta di nomi di file dalla **MyDocuments**, lo converte in un elenco di trascinamento di file e lo scrive negli Appunti.  
  
 [!code-vb[VbRefClipbd#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.SetImage : System.Drawing.Image -&gt; unit" Usage="clipboardProxy.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">
          <see cref="T:System.Drawing.Image" />. Immagine da scrivere. Obbligatorio.</param>
        <summary>Scrive un'immagine negli Appunti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Dal momento che gli Appunti sono accessibili da altri utenti, non usarli per archiviare informazioni sensibili, ad esempio password o dati riservati.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 Questo esempio scrive l'immagine `coolPicture` negli Appunti.  
  
 [!code-vb[VbVbcnMyClipboard#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#8)]  
  
 In questo esempio dipende dalla presenza dell'immagine `coolPicture`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive testo negli Appunti.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.SetText : string -&gt; unit" Usage="clipboardProxy.SetText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <see langword="String" />. Testo da scrivere. Obbligatorio.</param>
        <summary>Scrive testo negli Appunti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sono possibili formati <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> e <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
 Formati degli Appunti precedenti non vengono mantenuti.  
  
> [!IMPORTANT]
>  Dal momento che gli Appunti sono accessibili da altri utenti, non usarli per archiviare informazioni sensibili, ad esempio password o dati riservati.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio scrive la stringa `This is a test string.` negli Appunti.  
  
 [!code-vb[VbVbcnMyClipboard#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="text" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> è <see langword="Nothing" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="member this.SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="clipboardProxy.SetText (text, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="text">
          <see langword="String" />. Testo da scrivere. Obbligatorio.</param>
        <param name="format">
          <see cref="T:System.Windows.Forms.TextDataFormat" />. Formato da utilizzare per la scrittura di testo. Il valore predefinito è <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />. Obbligatorio.</param>
        <summary>Scrive testo negli Appunti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sono possibili formati <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> e <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
 Formati degli Appunti precedenti non vengono mantenuti.  
  
> [!IMPORTANT]
>  Dal momento che gli Appunti sono accessibili da altri utenti, non usarli per archiviare informazioni sensibili, ad esempio password o dati riservati.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|------------------|---------------|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|No|  
|Servizio Windows|**Sì**|  
|Sito Web|No|  
  
   
  
## Examples  
 In questo esempio scrive la stringa `This is a test string.` negli Appunti.  
  
 [!code-vb[VbVbcnMyClipboard#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="text" /> è una stringa vuota.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> è <see langword="Nothing" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorizzazione è necessaria per accedere al sistema negli Appunti.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>