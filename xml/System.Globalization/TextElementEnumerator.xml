<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fb3464827a5444befa67fc3c606f41e583b23520" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36562596" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumera gli elementi di testo di una stringa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework definisce un elemento di testo come un'unità di testo che viene visualizzato come un singolo carattere, vale a dire, un grafemi. Un elemento di testo può essere uno dei seguenti:  
  
-   Un carattere di base, che è rappresentato come una singola <xref:System.Char> valore. Ad esempio, maiuscola lettera un (u+0041) e LATINO AE lettera minuscola (U + 00E6) sono caratteri di base.  
  
-   Una combinazione di caratteri sequenza, che è costituito da un carattere di base e uno o più caratteri di unione. Ad esempio, esempio lettera latina a maiuscola una (u+0041) seguito da combinazione MACRON (U + 0304) è una combinazione sequenza di caratteri.  
  
-   Le coppie di surrogati che il [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) definisce come una rappresentazione di caratteri codificati per un singolo carattere astratto costituito da una sequenza di due unità di codice: un surrogato alto e un surrogato basso. Coppie di surrogati vengono utilizzate per rappresentare i caratteri esterni nel Unicode Basic Multilingual Plane come caratteri con codificata UTF-16. Ad esempio, GOTHIC lettera SAUIL (U + 10343) è rappresentato nella codifica come un surrogato alto il cui valore è 0xD800 e un surrogato basso il cui valore è 0xDF43 UTF-16. Una coppia di surrogati può rappresentare un carattere di base o un carattere di combinazione.  
  
 Il <xref:System.Globalization.TextElementEnumerator> classe consente di lavorare con gli elementi di testo in una stringa anziché con singola <xref:System.Char> oggetti.  
  
 Creare un'istanza di un <xref:System.Globalization.TextElementEnumerator> oggetto che rappresenta una particolare stringa passando la stringa per il <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> (metodo). Restituisce un enumeratore è posizionato davanti al primo elemento di testo nella stringa. La chiamata di <xref:System.Globalization.TextElementEnumerator.Reset%2A> metodo riporta l'enumeratore in questa posizione. Poiché ciò rappresenta uno stato non valido, è necessario chiamare <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> per passare l'enumeratore al primo elemento di testo della stringa prima di leggere il valore di <xref:System.Globalization.TextElementEnumerator.Current%2A> proprietà per restituire l'elemento di testo corrente.  
  
 Quando si lavora con un <xref:System.Globalization.TextElementEnumerator> dell'oggetto, è responsabile per il posizionamento dell'enumeratore. Il <xref:System.Globalization.TextElementEnumerator.Current%2A> proprietà restituisce lo stesso elemento di testo fino a quando non si chiameranno <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> o <xref:System.Globalization.TextElementEnumerator.Reset%2A>. L'enumeratore è in uno stato non valido se è posizionato davanti al primo elemento di testo o dopo l'ultimo elemento di testo nella stringa. Quando l'enumeratore è in uno stato non valido, il tentativo di recuperare il valore della <xref:System.Globalization.TextElementEnumerator.Current%2A> proprietà genera un'eccezione. È possibile determinare se l'enumeratore si trova in uno stato non valido test se il valore restituito del <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> proprietà `false`.  
  
 Il <xref:System.Globalization.TextElementEnumerator> oggetto rappresenta uno snapshot dello stato corrente di una variabile di tipo stringa o una stringa letterale al momento che il <xref:System.Globalization.TextElementEnumerator> viene creata un'istanza di oggetto. Come si può notare:  
  
-   Gli enumeratori di elemento di testo utilizzabile solo per leggere i dati in una stringa. Non possono modificare la stringa sottostante.  
  
-   Un enumeratore non dispone di accesso esclusivo a una stringa che rappresenta. Una variabile stringa può essere modificata dopo la creazione dell'enumeratore.  
  
-   Un <xref:System.Globalization.TextElementEnumerator> oggetto enumera gli elementi di testo presenti nella stringa al momento che il <xref:System.Globalization.TextElementEnumerator> è stata creata un'istanza di oggetto. Non riflette le modifiche successive alla variabile della stringa se tale variabile viene modificata in un secondo momento.  
  
-   Poiché il <xref:System.Globalization.TextElementEnumerator> classe non esegue l'override <xref:System.Object.Equals%2A?displayProperty=nameWithType>, due <xref:System.Globalization.TextElementEnumerator> gli oggetti che rappresentano la stessa stringa verranno considerati non uguali.  
  
   
  
## Examples  
 Nell'esempio seguente viene utilizzata la <xref:System.Globalization.TextElementEnumerator> classe per enumerare gli elementi di testo di una stringa.  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'elemento di testo corrente nella stringa.</summary>
        <value>Oggetto che contiene l'elemento di testo corrente nella stringa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo aver creato un enumeratore o dopo una <xref:System.Globalization.TextElementEnumerator.Reset%2A> viene chiamato <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> deve essere chiamato per passare l'enumeratore al primo elemento di testo della stringa prima di leggere il valore di <xref:System.Globalization.TextElementEnumerator.Current%2A>. In caso contrario, <xref:System.Globalization.TextElementEnumerator.Current%2A> è definito.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> Inoltre, genera un'eccezione se l'ultima chiamata a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> restituito `false`, che indica la fine della stringa.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> non spostare la posizione dell'enumeratore e le chiamate successive a <xref:System.Globalization.TextElementEnumerator.Current%2A> restituiscono lo stesso oggetto finché <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> o <xref:System.Globalization.TextElementEnumerator.Reset%2A> viene chiamato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'enumeratore viene posizionato prima del primo elemento di testo della stringa oppure dopo l'ultimo.</exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indice dell'elemento di testo sul quale l'enumeratore è attualmente posizionato.</summary>
        <value>Indice dell'elemento di testo sul quale l'enumeratore è attualmente posizionato.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">L'enumeratore viene posizionato prima del primo elemento di testo della stringa oppure dopo l'ultimo.</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene l'elemento di testo corrente nella stringa.</summary>
        <returns>Nuova stringa che contiene l'elemento di testo corrente nella stringa in fase di lettura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo restituisce lo stesso elemento di testo come il <xref:System.Globalization.TextElementEnumerator.Current%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'enumeratore viene posizionato prima del primo elemento di testo della stringa oppure dopo l'ultimo.</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta l'enumeratore sull'elemento di testo successivo della stringa.</summary>
        <returns>
          <see langword="true" /> se l'enumeratore è stato spostato correttamente sull'elemento di testo successivo; <see langword="false" /> se l'enumeratore ha oltrepassato la fine della stringa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo aver creato un enumeratore o dopo una <xref:System.Globalization.TextElementEnumerator.Reset%2A> viene chiamato, l'enumeratore è posizionato davanti al primo elemento di testo della stringa e la prima chiamata a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> Sposta l'enumeratore sul primo elemento di testo della stringa.  
  
 Se la stringa viene modificata dopo questo enumeratore è stato creato, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> genera un'eccezione.  
  
 Dopo la fine della stringa è passate, le chiamate successive a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> restituire `false` fino a quando non <xref:System.Globalization.TextElementEnumerator.Reset%2A> viene chiamato.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta l'enumeratore sulla relativa posizione iniziale, ovvero prima del primo elemento di testo nella stringa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Globalization.TextElementEnumerator.Reset%2A> metodo sposta l'enumeratore all'inizio della stringa davanti al primo elemento di testo. Dopo la chiamata <xref:System.Globalization.TextElementEnumerator.Reset%2A>, è necessario chiamare <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> per passare l'enumeratore al primo elemento di testo della stringa prima di chiamare <xref:System.Globalization.TextElementEnumerator.Current%2A> leggere il valore del primo elemento di testo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>