<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6fca710b6ed3fd9bd606a31ecf264d79a3c5fdaf" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48722481" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortKey" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" />
  <TypeSignature Language="F#" Value="type SortKey = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta il risultato del mapping di una stringa alla chiave di ordinamento.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un confronto con distinzione delle impostazioni cultura di due stringhe dipende da ogni carattere nelle stringhe diverse categorie di ordinamenti, script, alfabetici, inclusi con maiuscole e minuscole e segni diacritici. Una chiave di ordinamento funge da archivio di tali pesi per una determinata stringa.  
  
 Il metodo <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> restituisce un'istanza della classe <xref:System.Globalization.SortKey> che riflette il mapping dei caratteri dipendente dalle impostazioni cultura in una stringa specificata. Il valore di una <xref:System.Globalization.SortKey> oggetto sia i dati chiave, che viene restituiti dal <xref:System.Globalization.SortKey.KeyData%2A> proprietà. Dati di questa chiave è costituito da una serie di byte che codificano la stringa, le regole di ordinamento specifiche delle impostazioni cultura e le opzioni di confronto specificate dall'utente. Un confronto usando chiavi di ordinamento è costituito da un confronto bit per bit dei dati della chiave corrispondenti in ogni chiave di ordinamento.  Ad esempio, se si crea una chiave di ordinamento chiamando il metodo <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> con un valore di <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>, un'operazione di confronto tra stringhe che utilizza la chiave di ordinamento prevede la distinzione tra maiuscole e minuscole.  
  
 Dopo aver creato una chiave di ordinamento per una stringa, è possibile confrontare le chiavi di ordinamento chiamando il metodo statico <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType>. Questo metodo rappresenta una soluzione molto più rapida rispetto a <xref:System.String.Compare%2A?displayProperty=nameWithType> o <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>, poiché esegue un semplice confronto byte per byte.  

> [!NOTE]
> È possibile scaricare il [l'ordinamento delle tabelle di peso](https://www.microsoft.com/en-us/download/details.aspx?id=10921), un set di file di testo che contengono informazioni sul peso carattere utilizzato nelle operazioni di ordinamento e confronto per i sistemi operativi Windows, il il [Unicode predefinito Le regole di confronto elemento tabella](https://www.unicode.org/Public/UCA/latest/allkeys.txt), la tabella di peso di ordinamento per Linux e macOS.

## <a name="performance-considerations"></a>Considerazioni sulle prestazioni  
 Quando si esegue un confronto tra stringhe, i metodi <xref:System.Globalization.SortKey.Compare%2A> e <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> restituiscono gli stessi risultati, ma destinati a scenari diversi.  
  
 A livello generale, il <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> metodo genera la chiave di ordinamento per ogni stringa, esegue il confronto e quindi elimina la chiave di ordinamento e restituisce il risultato del confronto. Tuttavia, il <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> metodo non genera effettivamente un'intera chiave di ordinamento per eseguire il confronto. Genera invece i dati di chiave per ciascun elemento di testo, ovvero carattere di base, coppia di surrogati o sequenza di caratteri di combinazione, in ciascuna stringa. Il metodo confronta quindi i dati della chiave per gli elementi di testo corrispondenti. L'operazione viene interrotta, non appena viene determinato il risultato finale del confronto. Informazioni sulla chiave di ordinamento è calcolate, ma nessun <xref:System.Globalization.SortKey> oggetto viene creato. Questa strategia è conveniente in termini di prestazioni se entrambe le stringhe vengono confrontate con una sola volta, ma diventa dispendiosa se le stesse stringhe vengono confrontate più volte.  
  
 Il <xref:System.Globalization.SortKey.Compare%2A> metodo richiede la generazione di un <xref:System.Globalization.SortKey> oggetto per ogni stringa prima di eseguire il confronto. Questa strategia è dispendiosa in termini di prestazioni per il confronto prima a causa di tempo e memoria utilizzati per generare il <xref:System.Globalization.SortKey> oggetti. Tuttavia, risulta vantaggioso se le stesse chiavi di ordinamento vengono confrontate molte volte.  
  
 Ad esempio, si supponga di che scrittura un'applicazione che cerca una tabella di database per la riga in cui la colonna di indice basato su stringa, corrisponde a una stringa di ricerca specificati. La tabella contiene migliaia di righe e il confronto della stringa di ricerca nell'indice in ogni riga richiederà molto tempo. Pertanto, quando l'applicazione archivia una riga e la relativa colonna di indice, vengono anche generati e archivia la chiave di ordinamento per l'indice in una colonna dedicata per migliorare le prestazioni della ricerca. Quando l'applicazione cerca una riga di destinazione, confronta la chiave di ordinamento per la stringa di ricerca per la chiave di ordinamento per la stringa di indice, invece di confrontare la stringa di ricerca nella stringa di indice.  
  
## <a name="security-considerations"></a>Considerazioni sulla sicurezza  
 Il <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> metodo restituisce un <xref:System.Globalization.SortKey> oggetto con il valore basato su una stringa specificata e <xref:System.Globalization.CompareOptions> valore e le impostazioni cultura associate sottostante <xref:System.Globalization.CompareInfo> oggetto. Se una decisione relativa alla sicurezza è basata sul risultato di un confronto di stringhe o di un'operazione di modifica delle lettere maiuscole e minuscole, è necessario utilizzare il metodo <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> della lingua inglese per garantire la coerenza del comportamento dell'operazione, indipendentemente dalle impostazioni cultura del sistema operativo.  
  
 Utilizzare i passaggi indicati di seguito per ottenere una chiave di ordinamento:  
  
1.  Recuperare la lingua inglese dalla proprietà <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType>.  
  
2.  Recuperare un oggetto <xref:System.Globalization.CompareInfo> della lingua inglese dalla proprietà <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType>.  
  
3.  Chiamare il metodo <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>.  
  
 L'utilizzo del valore di un oggetto <xref:System.Globalization.SortKey> equivale alla chiamata al metodo `LCMapString` di Windows con specificato il valore LCMAP_SORTKEY. Tuttavia, per il <xref:System.Globalization.SortKey> dell'oggetto, le chiavi di ordinamento per i caratteri in lingua inglese precedono le chiavi di ordinamento per i caratteri coreani.  
  
 <xref:System.Globalization.SortKey> gli oggetti possono essere serializzati, ma solo in modo che possano incrociare <xref:System.AppDomain> oggetti. Se un'applicazione serializza un oggetto <xref:System.Globalization.SortKey>, quando è disponibile una nuova versione di Framework .NET, l'applicazione deve rigenerare tutte le chiavi di ordinamento.  
  
 Per altre informazioni sulle chiavi di ordinamento, vedere lo Standard tecnico Unicode n. 10, "Algoritmo delle regole di confronto Unicode" sul [sito Web Unicode Consortium](http://go.microsoft.com/fwlink/?linkid=37123).  
  
   
  
## Examples  
 Nell'esempio seguente viene confrontata la stringa "llama" utilizzando le impostazioni cultura "en-US" ed "es-ES" e le impostazioni cultura tradizionali "en-US" ed "es-ES".  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 Nell'esempio seguente viene illustrato come utilizzare la classe <xref:System.Globalization.SortKey> per migliorare le prestazioni in un'applicazione basata ampiamente sull'ordinamento e la ricerca di una matrice di grandi dimensioni. Nell'esempio viene creata una matrice non ordinata di nomi, che in questo caso contiene 13 elementi. Viene quindi archiviata la chiave di ordinamento di ogni nome in una matrice parallela, che viene passata al metodo <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType>. Il risultato è una matrice ordinata. Nell'esempio viene quindi eseguita la ricerca delle tre stringhe nella matrice. Per ogni stringa di ricerca viene chiamato il metodo <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> per recuperare la chiave di ordinamento delle stringhe, quindi il metodo <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> per recuperare l'indice di tale chiave di ordinamento nella matrice delle chiavi di ordinamento. Poiché le matrici dei nomi e delle chiave di ordinamento sono parallele, l'indice restituito è anche l'indice del nome nella matrice `names`.  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Globalization.SortKey * System.Globalization.SortKey -&gt; int" Usage="System.Globalization.SortKey.Compare (sortkey1, sortkey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1">Prima chiave di ordinamento da confrontare.</param>
        <param name="sortkey2">Seconda chiave di ordinamento da confrontare.</param>
        <summary>Confronta due chiavi di ordinamento.</summary>
        <returns>Intero con segno che indica la relazione tra <paramref name="sortkey1" /> e <paramref name="sortkey2" />.  
  
 <list type="table"><listheader><term> Valore 
 </term><description> Condizione 
 </description></listheader><item><term> Minore di zero 
 </term><description><paramref name="sortkey1" /> è minore di <paramref name="sortkey2" />.  
  
 </description></item><item><term> Zero 
 </term><description><paramref name="sortkey1" /> è uguale a <paramref name="sortkey2" />.  
  
 </description></item><item><term> Maggiore di zero 
 </term><description><paramref name="sortkey1" /> è maggiore di <paramref name="sortkey2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Globalization.SortKey.Compare%2A> metodo confronta la <xref:System.Globalization.SortKey.KeyData%2A> proprietà delle `sortkey1` e `sortkey2` parametri. Il metodo restituisce gli stessi risultati di <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> (metodo).  
  
 Per altre informazioni sul <xref:System.Globalization.SortKey.Compare%2A> metodo e il confronto di chiavi di ordinamento, vedere il <xref:System.Globalization.SortKey> argomento relativo alla classe.  
  
   
  
## Examples  
 Esempio di codice seguente vengono confrontate due stringhe usando il <xref:System.Globalization.SortKey.Compare%2A> metodo e l'equivalente <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> (metodo).  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sortkey1" /> o <paramref name="sortkey2" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortKey.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da confrontare con l'oggetto <see cref="T:System.Globalization.SortKey" /> corrente.</param>
        <summary>Determina se l'oggetto specificato è uguale all'oggetto <see cref="T:System.Globalization.SortKey" /> corrente.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="value" /> è uguale all'oggetto <see cref="T:System.Globalization.SortKey" /> corrente; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Due <xref:System.Globalization.SortKey> gli oggetti sono considerati uguali se i <xref:System.Globalization.SortKey.KeyData%2A> proprietà sono uguali.  
  
 Questo metodo esegue l'override del metodo <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Esempio di codice seguente mostra i risultati dei <xref:System.Globalization.SortKey.Equals%2A> quando vengono confrontati con diversi <xref:System.Globalization.SortKey> oggetti.  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Viene utilizzato come funzione hash per l'oggetto <see cref="T:System.Globalization.SortKey" /> corrente adatto per algoritmi di hash e strutture di dati, ad esempio una tabella hash.</summary>
        <returns>Codice hash per l'oggetto <see cref="T:System.Globalization.SortKey" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo genera lo stesso codice hash per due oggetti uguali in base al metodo <xref:System.Globalization.SortKey.Equals%2A>.  
  
 Questo metodo esegue l'override del metodo <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : byte[]" Usage="System.Globalization.SortKey.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la matrice di byte che rappresenta l'oggetto <see cref="T:System.Globalization.SortKey" /> corrente.</summary>
        <value>Matrice di byte che rappresenta l'oggetto <see cref="T:System.Globalization.SortKey" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sull'utilizzo dei dati restituiti dai <xref:System.Globalization.SortKey.KeyData%2A> proprietà nell'operazione di confronto di stringhe, vedere il <xref:System.Globalization.SortKey> argomento relativo alla classe.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare una stringa originale e la stringa equivalente e i dati della chiave per una chiave di ordinamento tra maiuscole e minuscole e una chiave di ordinamento tra maiuscole e minuscole.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Globalization.SortKey.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la stringa originale utilizzata per creare l'oggetto <see cref="T:System.Globalization.SortKey" /> corrente.</summary>
        <value>Stringa originale utilizzata per creare l'oggetto <see cref="T:System.Globalization.SortKey" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente consente di visualizzare una stringa originale e la stringa equivalente e i dati della chiave per una chiave di ordinamento tra maiuscole e minuscole e una chiave di ordinamento tra maiuscole e minuscole.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sortKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Globalization.SortKey" /> corrente.</summary>
        <returns>Stringa che rappresenta l'oggetto <see cref="T:System.Globalization.SortKey" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito è la concatenazione della stringa "SortKey -", l'identificatore delle impostazioni cultura e le opzioni di confronto dell'oggetto corrente <xref:System.Globalization.SortKey> oggetto e il valore della <xref:System.Globalization.SortKey.OriginalString%2A> proprietà.  
  
 Questo metodo esegue l'override del metodo <xref:System.Object.ToString%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare una stringa originale, le stringhe generate dal <xref:System.Globalization.SortKey.ToString%2A> metodo per le chiavi di ordinamento tra maiuscole e minuscole e tra maiuscole e minuscole e i dati della chiave per le chiavi di ordinamento con distinzione maiuscole/minuscole e tra maiuscole e minuscole.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>