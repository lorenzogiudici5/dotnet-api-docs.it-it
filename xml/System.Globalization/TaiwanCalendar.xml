<Type Name="TaiwanCalendar" FullName="System.Globalization.TaiwanCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f61ea0e805d6530d359b1eacdeb16f2c02637fa6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36563123" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TaiwanCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TaiwanCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TaiwanCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class TaiwanCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaiwanCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type TaiwanCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="360d4-101">the Taiwan calendar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="360d4-101">the Taiwan calendar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-102">Il calendario taiwanese funziona esattamente come il calendario gregoriano, ad eccezione del fatto che l'anno e dell'era sono diversi.</span><span class="sxs-lookup"><span data-stu-id="360d4-102">The Taiwan calendar works exactly like the Gregorian calendar, except that the year and era are different.</span></span> <span data-ttu-id="360d4-103">Il <xref:System.Globalization.TaiwanCalendar> classe riconosce solo l'era corrente.</span><span class="sxs-lookup"><span data-stu-id="360d4-103">The <xref:System.Globalization.TaiwanCalendar> class recognizes only the current era.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="360d4-104">Per informazioni sull'utilizzo di <xref:System.Globalization.TaiwanCalendar> classe e l'altro calendario classi in .NET Framework, vedere [utilizzo di calendari](~/docs/standard/datetime/working-with-calendars.md).</span><span class="sxs-lookup"><span data-stu-id="360d4-104">For information about using the <xref:System.Globalization.TaiwanCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="360d4-105">Anni bisestili nel calendario taiwanese corrispondono agli anni bisestili del calendario gregoriano.</span><span class="sxs-lookup"><span data-stu-id="360d4-105">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="360d4-106">Un anno bisestile nel calendario gregoriano viene definito come un anno gregoriano divisibile per quattro, eccetto quando è divisibile per 100.</span><span class="sxs-lookup"><span data-stu-id="360d4-106">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="360d4-107">Tuttavia, gli anni di calendario gregoriano divisibili per 400 sono gli anni bisestili.</span><span class="sxs-lookup"><span data-stu-id="360d4-107">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="360d4-108">Un anno normale è 365 giorni e un anno bisestile ha 366 giorni.</span><span class="sxs-lookup"><span data-stu-id="360d4-108">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="360d4-109">Il calendario taiwanese dispone di dodici mesi con 28 e 31 giorni ogni:</span><span class="sxs-lookup"><span data-stu-id="360d4-109">The Taiwan calendar has 12 months with 28 to 31 days each:</span></span>  
  
|<span data-ttu-id="360d4-110">Valore GetMonth</span><span class="sxs-lookup"><span data-stu-id="360d4-110">GetMonth value</span></span>|<span data-ttu-id="360d4-111">Mese</span><span class="sxs-lookup"><span data-stu-id="360d4-111">Month</span></span>|<span data-ttu-id="360d4-112">Giorni di anni comuni</span><span class="sxs-lookup"><span data-stu-id="360d4-112">Days in common years</span></span>|<span data-ttu-id="360d4-113">Giorni negli anni bisestili</span><span class="sxs-lookup"><span data-stu-id="360d4-113">Days in leap years</span></span>|  
|--------------------|-----------|--------------------------|------------------------|  
|<span data-ttu-id="360d4-114">1</span><span class="sxs-lookup"><span data-stu-id="360d4-114">1</span></span>|<span data-ttu-id="360d4-115">1 月 (gennaio)</span><span class="sxs-lookup"><span data-stu-id="360d4-115">1月 (January)</span></span>|<span data-ttu-id="360d4-116">31</span><span class="sxs-lookup"><span data-stu-id="360d4-116">31</span></span>|<span data-ttu-id="360d4-117">31</span><span class="sxs-lookup"><span data-stu-id="360d4-117">31</span></span>|  
|<span data-ttu-id="360d4-118">2</span><span class="sxs-lookup"><span data-stu-id="360d4-118">2</span></span>|<span data-ttu-id="360d4-119">2 月 (febbraio)</span><span class="sxs-lookup"><span data-stu-id="360d4-119">2月 (February)</span></span>|<span data-ttu-id="360d4-120">28</span><span class="sxs-lookup"><span data-stu-id="360d4-120">28</span></span>|<span data-ttu-id="360d4-121">29</span><span class="sxs-lookup"><span data-stu-id="360d4-121">29</span></span>|  
|<span data-ttu-id="360d4-122">3</span><span class="sxs-lookup"><span data-stu-id="360d4-122">3</span></span>|<span data-ttu-id="360d4-123">3月 (marzo)</span><span class="sxs-lookup"><span data-stu-id="360d4-123">3月 (March)</span></span>|<span data-ttu-id="360d4-124">31</span><span class="sxs-lookup"><span data-stu-id="360d4-124">31</span></span>|<span data-ttu-id="360d4-125">31</span><span class="sxs-lookup"><span data-stu-id="360d4-125">31</span></span>|  
|<span data-ttu-id="360d4-126">4</span><span class="sxs-lookup"><span data-stu-id="360d4-126">4</span></span>|<span data-ttu-id="360d4-127">4 月 (aprile)</span><span class="sxs-lookup"><span data-stu-id="360d4-127">4月 (April)</span></span>|<span data-ttu-id="360d4-128">30</span><span class="sxs-lookup"><span data-stu-id="360d4-128">30</span></span>|<span data-ttu-id="360d4-129">30</span><span class="sxs-lookup"><span data-stu-id="360d4-129">30</span></span>|  
|<span data-ttu-id="360d4-130">5</span><span class="sxs-lookup"><span data-stu-id="360d4-130">5</span></span>|<span data-ttu-id="360d4-131">5 月 (maggio)</span><span class="sxs-lookup"><span data-stu-id="360d4-131">5月 (May)</span></span>|<span data-ttu-id="360d4-132">31</span><span class="sxs-lookup"><span data-stu-id="360d4-132">31</span></span>|<span data-ttu-id="360d4-133">31</span><span class="sxs-lookup"><span data-stu-id="360d4-133">31</span></span>|  
|<span data-ttu-id="360d4-134">6</span><span class="sxs-lookup"><span data-stu-id="360d4-134">6</span></span>|<span data-ttu-id="360d4-135">6 月 (giugno)</span><span class="sxs-lookup"><span data-stu-id="360d4-135">6月 (June)</span></span>|<span data-ttu-id="360d4-136">30</span><span class="sxs-lookup"><span data-stu-id="360d4-136">30</span></span>|<span data-ttu-id="360d4-137">30</span><span class="sxs-lookup"><span data-stu-id="360d4-137">30</span></span>|  
|<span data-ttu-id="360d4-138">7</span><span class="sxs-lookup"><span data-stu-id="360d4-138">7</span></span>|<span data-ttu-id="360d4-139">7 月 (luglio)</span><span class="sxs-lookup"><span data-stu-id="360d4-139">7月 (July)</span></span>|<span data-ttu-id="360d4-140">31</span><span class="sxs-lookup"><span data-stu-id="360d4-140">31</span></span>|<span data-ttu-id="360d4-141">31</span><span class="sxs-lookup"><span data-stu-id="360d4-141">31</span></span>|  
|<span data-ttu-id="360d4-142">8</span><span class="sxs-lookup"><span data-stu-id="360d4-142">8</span></span>|<span data-ttu-id="360d4-143">8月 (agosto)</span><span class="sxs-lookup"><span data-stu-id="360d4-143">8月 (August)</span></span>|<span data-ttu-id="360d4-144">31</span><span class="sxs-lookup"><span data-stu-id="360d4-144">31</span></span>|<span data-ttu-id="360d4-145">31</span><span class="sxs-lookup"><span data-stu-id="360d4-145">31</span></span>|  
|<span data-ttu-id="360d4-146">9</span><span class="sxs-lookup"><span data-stu-id="360d4-146">9</span></span>|<span data-ttu-id="360d4-147">9 月 (settembre)</span><span class="sxs-lookup"><span data-stu-id="360d4-147">9月 (September)</span></span>|<span data-ttu-id="360d4-148">30</span><span class="sxs-lookup"><span data-stu-id="360d4-148">30</span></span>|<span data-ttu-id="360d4-149">30</span><span class="sxs-lookup"><span data-stu-id="360d4-149">30</span></span>|  
|<span data-ttu-id="360d4-150">10</span><span class="sxs-lookup"><span data-stu-id="360d4-150">10</span></span>|<span data-ttu-id="360d4-151">10 月 (ottobre)</span><span class="sxs-lookup"><span data-stu-id="360d4-151">10月 (October)</span></span>|<span data-ttu-id="360d4-152">31</span><span class="sxs-lookup"><span data-stu-id="360d4-152">31</span></span>|<span data-ttu-id="360d4-153">31</span><span class="sxs-lookup"><span data-stu-id="360d4-153">31</span></span>|  
|<span data-ttu-id="360d4-154">11</span><span class="sxs-lookup"><span data-stu-id="360d4-154">11</span></span>|<span data-ttu-id="360d4-155">11月 (novembre)</span><span class="sxs-lookup"><span data-stu-id="360d4-155">11月 (November)</span></span>|<span data-ttu-id="360d4-156">30</span><span class="sxs-lookup"><span data-stu-id="360d4-156">30</span></span>|<span data-ttu-id="360d4-157">30</span><span class="sxs-lookup"><span data-stu-id="360d4-157">30</span></span>|  
|<span data-ttu-id="360d4-158">12</span><span class="sxs-lookup"><span data-stu-id="360d4-158">12</span></span>|<span data-ttu-id="360d4-159">12 月 (dicembre)</span><span class="sxs-lookup"><span data-stu-id="360d4-159">12月 (December)</span></span>|<span data-ttu-id="360d4-160">31</span><span class="sxs-lookup"><span data-stu-id="360d4-160">31</span></span>|<span data-ttu-id="360d4-161">31</span><span class="sxs-lookup"><span data-stu-id="360d4-161">31</span></span>|  
  
 <span data-ttu-id="360d4-162">Febbraio ha 29 giorni durante gli anni bisestili e 28 durante gli anni normali.</span><span class="sxs-lookup"><span data-stu-id="360d4-162">February has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="360d4-163">La data 1 gennaio 2001 E.V.</span><span class="sxs-lookup"><span data-stu-id="360d4-163">The date January 1, 2001 C.E.</span></span> <span data-ttu-id="360d4-164">nel calendario gregoriano equivale al primo giorno del mese di gennaio dell'anno 90 dell'era corrente nel calendario taiwanese.</span><span class="sxs-lookup"><span data-stu-id="360d4-164">in the Gregorian calendar is equivalent to the first day of January in the year 90 of the current era in the Taiwan calendar.</span></span>  
  
 <span data-ttu-id="360d4-165">Ogni <xref:System.Globalization.CultureInfo> supporta un set di calendari.</span><span class="sxs-lookup"><span data-stu-id="360d4-165">Each <xref:System.Globalization.CultureInfo> supports a set of calendars.</span></span> <span data-ttu-id="360d4-166">Il <xref:System.Globalization.CultureInfo.Calendar%2A> proprietà restituisce il calendario predefinito per le impostazioni cultura e il <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> proprietà restituisce una matrice contenente tutti i calendari supportati dalle impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="360d4-166">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="360d4-167">Per modificare il calendario utilizzato da un <xref:System.Globalization.CultureInfo>, l'applicazione deve impostare la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> proprietà di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> a un nuovo <xref:System.Globalization.Calendar>.</span><span class="sxs-lookup"><span data-stu-id="360d4-167">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <span data-ttu-id="360d4-168">
        <para>-If <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> è il <see cref="T:System.Globalization.TaiwanCalendar" /> ma la <see cref="P:System.Threading.Thread.CurrentCulture" /> non è "zh-TW", quindi <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, e <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> restituiscono una stringa vuota ("").</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="360d4-168">
          <para>-   If <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> is the <see cref="T:System.Globalization.TaiwanCalendar" /> but the <see cref="P:System.Threading.Thread.CurrentCulture" /> is not "zh-TW", then <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, and <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> return an empty string ("").</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaiwanCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaiwanCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="360d4-169">Initializes a new instance of the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-169">Initializes a new instance of the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeInitializationException">
          <span data-ttu-id="360d4-170">Unable to initialize a <see cref="T:System.Globalization.TaiwanCalendar" /> object because of missing culture information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-170">Unable to initialize a <see cref="T:System.Globalization.TaiwanCalendar" /> object because of missing culture information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="taiwanCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="360d4-171">The <see cref="T:System.DateTime" /> to which to add months.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-171">The <see cref="T:System.DateTime" /> to which to add months.</span>
          </span>
        </param>
        <param name="months">
          <span data-ttu-id="360d4-172">The number of months to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-172">The number of months to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-173">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-173">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-174">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-174">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-175">La parte del giorno dell'oggetto risultante <xref:System.DateTime> viene influenzata se il giorno risultante non è un giorno del mese dell'anno risultante risultante valido.</span><span class="sxs-lookup"><span data-stu-id="360d4-175">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="360d4-176">Viene modificata e l'ultimo giorno del mese dell'anno risultante risultante valido.</span><span class="sxs-lookup"><span data-stu-id="360d4-176">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="360d4-177">La parte dell'anno dell'oggetto risultante <xref:System.DateTime> viene influenzata se il mese risultante è all'esterno dell'anno specificato <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="360d4-177">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="360d4-178">Questa implementazione supporta solo l'era corrente.</span><span class="sxs-lookup"><span data-stu-id="360d4-178">This implementation supports only the current era.</span></span> <span data-ttu-id="360d4-179">Pertanto, <xref:System.ArgumentException> viene generata se l'anno risulta è all'esterno dell'oggetto specificato dell'era <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="360d4-179">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="360d4-180">La parte del tempo del giorno dell'oggetto risultante <xref:System.DateTime> analoghe a quelle specificato <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="360d4-180">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="360d4-181">Ad esempio, se il mese specificato è ottobre, che ha 31 giorni, il giorno specificato è 31 giorni del mese e il valore della `months` parametro è 6, l'anno risulta è uno più rispetto a quello specificato, il mese risultante è aprile e il risultante da y è il giorno 30, ovvero l'ultimo giorno nel mese di aprile.</span><span class="sxs-lookup"><span data-stu-id="360d4-181">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="360d4-182">Se il valore della `months` parametro è negativo, il valore risultante <xref:System.DateTime> precedente a specificato <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="360d4-182">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="360d4-183">Il <xref:System.DateTime.Kind%2A> proprietà dell'oggetto restituito <xref:System.DateTime> sempre valore è uguale a <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="360d4-183">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="360d4-184">È possibile mantenere il <xref:System.DateTime.Kind%2A> proprietà del `time` parametro chiamando il <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metodo, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="360d4-184">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="360d4-185">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Globalization.TaiwanCalendar.AddMonths%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="360d4-185">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.AddMonths%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="360d4-186">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-186">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-187">
            <paramref name="months" /> is less than -120000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-187">
              <paramref name="months" /> is less than -120000.</span>
          </span>
          <span data-ttu-id="360d4-188">-or-  <paramref name="months" /> is greater than 120000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-188">-or-  <paramref name="months" /> is greater than 120000.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="taiwanCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="360d4-189">The <see cref="T:System.DateTime" /> to which to add years.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-189">The <see cref="T:System.DateTime" /> to which to add years.</span>
          </span>
        </param>
        <param name="years">
          <span data-ttu-id="360d4-190">The number of years to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-190">The number of years to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-191">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-191">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-192">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-192">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-193">La parte del giorno dell'oggetto risultante <xref:System.DateTime> viene influenzata se il giorno risultante non è un giorno del mese dell'anno risultante risultante valido.</span><span class="sxs-lookup"><span data-stu-id="360d4-193">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="360d4-194">Viene modificata e l'ultimo giorno del mese dell'anno risultante risultante valido.</span><span class="sxs-lookup"><span data-stu-id="360d4-194">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="360d4-195">La parte del mese dell'oggetto risultante <xref:System.DateTime> analoghe a quelle specificato <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="360d4-195">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="360d4-196">Questa implementazione supporta solo l'era corrente.</span><span class="sxs-lookup"><span data-stu-id="360d4-196">This implementation supports only the current era.</span></span> <span data-ttu-id="360d4-197">Pertanto, <xref:System.ArgumentException> viene generata se l'anno risulta è all'esterno dell'oggetto specificato dell'era <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="360d4-197">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="360d4-198">La parte del tempo del giorno dell'oggetto risultante <xref:System.DateTime> analoghe a quelle specificato <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="360d4-198">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="360d4-199">Ad esempio, febbraio ha 28 giorni, eccetto durante gli anni bisestili quando ne ha 29 giorni.</span><span class="sxs-lookup"><span data-stu-id="360d4-199">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="360d4-200">Se la data specificata è il giorno del mese di febbraio di un anno bisestile 29 e il valore di `years` è 1, la data risultante è il giorno 28 febbraio nell'anno seguente.</span><span class="sxs-lookup"><span data-stu-id="360d4-200">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="360d4-201">Se `years` è negativo, il valore risultante <xref:System.DateTime> precedente a specificato <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="360d4-201">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="360d4-202">Il <xref:System.DateTime.Kind%2A> proprietà dell'oggetto restituito <xref:System.DateTime> sempre valore è uguale a <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="360d4-202">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="360d4-203">È possibile mantenere il <xref:System.DateTime.Kind%2A> proprietà del `time` parametro chiamando il <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> metodo, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="360d4-203">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="360d4-204">Esempio di codice seguente consente di visualizzare l'utilizzo del <xref:System.Globalization.TaiwanCalendar.AddYears%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="360d4-204">The following code example displays the use of the <xref:System.Globalization.TaiwanCalendar.AddYears%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="360d4-205">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-205">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.TaiwanCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="360d4-206">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-206">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="360d4-207">Restituisce sempre <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-207">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="360d4-208">Nell'esempio seguente usa la reflection per creare un'istanza di ognuna <xref:System.Globalization.Calendar> tipo trovato in .NET Framework e viene visualizzato il valore della relativa <xref:System.Globalization.Calendar.AlgorithmType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="360d4-208">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.TaiwanCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="360d4-209">Gets the list of eras in the <see cref="T:System.Globalization.TaiwanCalendar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-209">Gets the list of eras in the <see cref="T:System.Globalization.TaiwanCalendar" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="360d4-210">Matrice costituita da un singolo elemento per cui il valore è sempre l'era corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-210">An array that consists of a single element for which the value is always the current era.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-211">I valori nella matrice restituita da questa proprietà sono numeri compresi tra 1 e il numero dell'era più grande.</span><span class="sxs-lookup"><span data-stu-id="360d4-211">The values in the array returned by this property are numbers that range from 1 to the largest era number.</span></span> <span data-ttu-id="360d4-212">Il numero dell'era più grande viene restituito nel primo elemento della matrice e viene restituito il più piccolo numero era nell'ultimo elemento.</span><span class="sxs-lookup"><span data-stu-id="360d4-212">The largest era number is returned in the first array element and the smallest era number is returned in the last element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="taiwanCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="360d4-213">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-213">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-214">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-214">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-215">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-215">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="360d4-216">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Globalization.TaiwanCalendar.GetDayOfMonth%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="360d4-216">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfMonth%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="taiwanCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="360d4-217">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-217">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-218">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-218">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-219">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-219">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-220">Il <xref:System.DayOfWeek> valori sono i seguenti:</span><span class="sxs-lookup"><span data-stu-id="360d4-220">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="360d4-221">Valore DayOfWeek</span><span class="sxs-lookup"><span data-stu-id="360d4-221">DayOfWeek value</span></span>|<span data-ttu-id="360d4-222">Che indica</span><span class="sxs-lookup"><span data-stu-id="360d4-222">which indicates</span></span>|  
|---------------------|---------------------|  
|<span data-ttu-id="360d4-223">Domenica</span><span class="sxs-lookup"><span data-stu-id="360d4-223">Sunday</span></span>|<span data-ttu-id="360d4-224">星期日</span><span class="sxs-lookup"><span data-stu-id="360d4-224">星期日</span></span>|  
|<span data-ttu-id="360d4-225">Lunedì</span><span class="sxs-lookup"><span data-stu-id="360d4-225">Monday</span></span>|<span data-ttu-id="360d4-226">星期一</span><span class="sxs-lookup"><span data-stu-id="360d4-226">星期一</span></span>|  
|<span data-ttu-id="360d4-227">Martedì</span><span class="sxs-lookup"><span data-stu-id="360d4-227">Tuesday</span></span>|<span data-ttu-id="360d4-228">星期二</span><span class="sxs-lookup"><span data-stu-id="360d4-228">星期二</span></span>|  
|<span data-ttu-id="360d4-229">Mercoledì</span><span class="sxs-lookup"><span data-stu-id="360d4-229">Wednesday</span></span>|<span data-ttu-id="360d4-230">星期三</span><span class="sxs-lookup"><span data-stu-id="360d4-230">星期三</span></span>|  
|<span data-ttu-id="360d4-231">Giovedì</span><span class="sxs-lookup"><span data-stu-id="360d4-231">Thursday</span></span>|<span data-ttu-id="360d4-232">星期四</span><span class="sxs-lookup"><span data-stu-id="360d4-232">星期四</span></span>|  
|<span data-ttu-id="360d4-233">Venerdì</span><span class="sxs-lookup"><span data-stu-id="360d4-233">Friday</span></span>|<span data-ttu-id="360d4-234">星期五</span><span class="sxs-lookup"><span data-stu-id="360d4-234">星期五</span></span>|  
|<span data-ttu-id="360d4-235">Saturday</span><span class="sxs-lookup"><span data-stu-id="360d4-235">Saturday</span></span>|<span data-ttu-id="360d4-236">星期六</span><span class="sxs-lookup"><span data-stu-id="360d4-236">星期六</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="360d4-237">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Globalization.TaiwanCalendar.GetDayOfWeek%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="360d4-237">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfWeek%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="taiwanCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="360d4-238">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-238">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-239">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-239">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-240">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-240">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-241">Il giorno dell'anno viene definito come il numero di giorni dal primo giorno dell'anno.</span><span class="sxs-lookup"><span data-stu-id="360d4-241">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="360d4-242">Ad esempio <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> per il primo giorno del mese primo restituisce 1, e <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> per l'ultimo giorno del mese ultimo restituisce il numero totale di giorni nell'anno.</span><span class="sxs-lookup"><span data-stu-id="360d4-242">For example, <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year.</span></span> <span data-ttu-id="360d4-243">Il totale è identico al valore restituito da <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>.</span><span class="sxs-lookup"><span data-stu-id="360d4-243">The total is the same as the value returned by <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="360d4-244">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="360d4-244">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="taiwanCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="360d4-245">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-245">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="360d4-246">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-246">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="360d4-247">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-247">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-248">Returns the number of days in the specified month in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-248">Returns the number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-249">The number of days in the specified month in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-249">The number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-250">Ad esempio, questo metodo restituisce 28 o 29 per febbraio (`month` = 2), a seconda del fatto `year` è bisestile.</span><span class="sxs-lookup"><span data-stu-id="360d4-250">For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="360d4-251">L'esempio seguente chiama <xref:System.Globalization.TaiwanCalendar.GetDaysInMonth%2A> per il secondo mese in ognuno dei cinque anni in ogni era.</span><span class="sxs-lookup"><span data-stu-id="360d4-251">The following example calls <xref:System.Globalization.TaiwanCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/CPP/taiwancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/CS/taiwancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/VB/taiwancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-252">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-252">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-253">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-253">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-254">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-254">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="taiwanCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="360d4-255">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-255">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="360d4-256">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-256">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-257">Returns the number of days in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-257">Returns the number of days in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-258">The number of days in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-258">The number of days in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-259">Ad esempio, questo metodo restituisce 365 o 366, a seconda che `year` è bisestile.</span><span class="sxs-lookup"><span data-stu-id="360d4-259">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="360d4-260">L'esempio seguente chiama <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A> per cinque anni in ogni era.</span><span class="sxs-lookup"><span data-stu-id="360d4-260">The following example calls <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/CPP/taiwancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/CS/taiwancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/VB/taiwancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-261">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-261">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-262">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-262">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="taiwanCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="360d4-263">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-263">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-264">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-264">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-265">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-265">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-266">Il <xref:System.Globalization.TaiwanCalendar> classe riconosce solo l'era corrente.</span><span class="sxs-lookup"><span data-stu-id="360d4-266">The <xref:System.Globalization.TaiwanCalendar> class recognizes only the current era.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="360d4-267">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Globalization.TaiwanCalendar.GetEra%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="360d4-267">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetEra%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="taiwanCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="360d4-268">A year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-268">A year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="360d4-269">An era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-269">An era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-270">Calculates the leap month for a specified year and era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-270">Calculates the leap month for a specified year and era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-271">The return value is always 0 because the <see cref="T:System.Globalization.TaiwanCalendar" /> class does not support the notion of a leap month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-271">The return value is always 0 because the <see cref="T:System.Globalization.TaiwanCalendar" /> class does not support the notion of a leap month.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-272">In un calendario che supporta la nozione di mese intercalare, il mese intercalare può verificarsi dopo un determinato mese o dopo un mese in un anno.</span><span class="sxs-lookup"><span data-stu-id="360d4-272">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="360d4-273">Ad esempio, il <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> metodo restituisce un numero compreso tra 1 e 13 che indica il mese associato a una data specificata.</span><span class="sxs-lookup"><span data-stu-id="360d4-273">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="360d4-274">Se non c'è un mese intercalare tra l'ottavo e nono mesi dell'anno, il <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> (metodo) restituisce 8 per il mese ottavo, 9 per l'ottavo mese intercalare e 10 per il nono mese.</span><span class="sxs-lookup"><span data-stu-id="360d4-274">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="taiwanCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="360d4-275">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-275">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-276">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-276">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-277">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-277">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="360d4-278">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Globalization.TaiwanCalendar.GetMonth%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="360d4-278">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetMonth%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="taiwanCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="360d4-279">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-279">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="360d4-280">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-280">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-281">Returns the number of months in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-281">Returns the number of months in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-282">The number of months in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-282">The number of months in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="360d4-283">L'esempio seguente chiama <xref:System.Globalization.TaiwanCalendar.GetMonthsInYear%2A> per cinque anni in ogni era.</span><span class="sxs-lookup"><span data-stu-id="360d4-283">The following example calls <xref:System.Globalization.TaiwanCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/CPP/taiwancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/CS/taiwancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/VB/taiwancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-284">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-284">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-285">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-285">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="taiwanCalendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="360d4-286">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-286">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="360d4-287">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-287">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span>
          </span>
        </param>
        <param name="firstDayOfWeek">
          <span data-ttu-id="360d4-288">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-288">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-289">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-289">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-290">A positive integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-290">A positive integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-291">Questo metodo può essere utilizzato per determinare il numero di settimane nell'anno impostando il `time` parametro e l'ultimo giorno dell'anno.</span><span class="sxs-lookup"><span data-stu-id="360d4-291">This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.</span></span>  
  
 <span data-ttu-id="360d4-292">Il <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> proprietà contiene i valori di impostazioni cultura specifiche che possono essere usati per il `rule` e `firstDayOfWeek` parametri.</span><span class="sxs-lookup"><span data-stu-id="360d4-292">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.</span></span>  
  
 <span data-ttu-id="360d4-293">Il <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> proprietà di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contiene il valore predefinito <xref:System.DayOfWeek> valore che rappresenta il primo giorno della settimana per impostazioni cultura specifiche, il calendario specificato nella <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> proprietà di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="360d4-293">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="360d4-294">Il <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> proprietà di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contiene il valore predefinito <xref:System.Globalization.CalendarWeekRule> valore che definisce una settimana di calendario per impostazioni cultura specifiche, il calendario specificato nella <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> proprietà di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="360d4-294">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="360d4-295">Ad esempio, nel <xref:System.Globalization.GregorianCalendar>, il <xref:System.Globalization.Calendar.GetWeekOfYear%2A> metodo restituisce 1 per il 1 ° gennaio.</span><span class="sxs-lookup"><span data-stu-id="360d4-295">For example, in <xref:System.Globalization.GregorianCalendar>, the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method for January 1 returns 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="360d4-296">Il codice seguente esempio viene illustrato come il risultato del <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varia in base al <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> e <xref:System.Globalization.CalendarWeekRule> valori usati.</span><span class="sxs-lookup"><span data-stu-id="360d4-296">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used.</span></span> <span data-ttu-id="360d4-297">Se la data specificata è l'ultimo giorno dell'anno, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> restituisce il numero totale di settimane in tale anno.</span><span class="sxs-lookup"><span data-stu-id="360d4-297">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-298">
            <paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-298">
              <paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-299">-or-  <paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-299">-or-  <paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="taiwanCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="360d4-300">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-300">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-301">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-301">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-302">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-302">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="360d4-303">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Globalization.TaiwanCalendar.GetYear%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="360d4-303">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetYear%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="taiwanCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="360d4-304">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-304">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="360d4-305">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-305">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="360d4-306">An integer from 1 to 31 that represents the day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-306">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="360d4-307">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-307">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-308">Determines whether the specified date in the specified era is a leap day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-308">Determines whether the specified date in the specified era is a leap day.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-309">
            <see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-309">
              <see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-310">Anni bisestili nel calendario taiwanese corrispondono agli anni bisestili del calendario gregoriano.</span><span class="sxs-lookup"><span data-stu-id="360d4-310">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="360d4-311">Un anno bisestile nel calendario gregoriano viene definito come un anno gregoriano divisibile per quattro, eccetto quando è divisibile per 100.</span><span class="sxs-lookup"><span data-stu-id="360d4-311">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="360d4-312">Tuttavia, gli anni di calendario gregoriano divisibili per 400 sono gli anni bisestili.</span><span class="sxs-lookup"><span data-stu-id="360d4-312">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="360d4-313">Un anno normale è 365 giorni e un anno bisestile ha 366 giorni.</span><span class="sxs-lookup"><span data-stu-id="360d4-313">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="360d4-314">Un giorno intercalare è un giorno in cui si verifica solo in un anno bisestile.</span><span class="sxs-lookup"><span data-stu-id="360d4-314">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="360d4-315">Ad esempio, il giorno del mese di febbraio 29 è l'unico giorno intercalare.</span><span class="sxs-lookup"><span data-stu-id="360d4-315">For example, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="360d4-316">L'esempio seguente chiama <xref:System.Globalization.TaiwanCalendar.IsLeapDay%2A> per l'ultimo giorno del mese di secondo (febbraio) per cinque anni in ognuna delle ere.</span><span class="sxs-lookup"><span data-stu-id="360d4-316">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/CPP/taiwancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/CS/taiwancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/VB/taiwancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-317">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-317">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-318">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-318">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-319">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-319">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-320">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-320">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="taiwanCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="360d4-321">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-321">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="360d4-322">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-322">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="360d4-323">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-323">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-324">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-324">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-325">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-325">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-326">Anni bisestili nel calendario taiwanese corrispondono agli anni bisestili del calendario gregoriano.</span><span class="sxs-lookup"><span data-stu-id="360d4-326">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="360d4-327">Un anno bisestile nel calendario gregoriano viene definito come un anno gregoriano divisibile per quattro, eccetto quando è divisibile per 100.</span><span class="sxs-lookup"><span data-stu-id="360d4-327">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="360d4-328">Tuttavia, gli anni di calendario gregoriano divisibili per 400 sono gli anni bisestili.</span><span class="sxs-lookup"><span data-stu-id="360d4-328">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="360d4-329">Un anno normale è 365 giorni e un anno bisestile ha 366 giorni.</span><span class="sxs-lookup"><span data-stu-id="360d4-329">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="360d4-330">Un mese intercalare è un intero mese che si verifica solo in un anno bisestile.</span><span class="sxs-lookup"><span data-stu-id="360d4-330">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="360d4-331">Il calendario taiwanese non dispone di qualsiasi mesi intercalare.</span><span class="sxs-lookup"><span data-stu-id="360d4-331">The Taiwan calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="360d4-332">L'esempio seguente chiama <xref:System.Globalization.TaiwanCalendar.IsLeapMonth%2A> per tutti i mesi in cinque anni nell'era corrente.</span><span class="sxs-lookup"><span data-stu-id="360d4-332">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/CPP/taiwancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/CS/taiwancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/VB/taiwancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-333">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-333">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-334">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-334">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-335">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-335">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="taiwanCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="360d4-336">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-336">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="360d4-337">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-337">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-338">Determines whether the specified year in the specified era is a leap year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-338">Determines whether the specified year in the specified era is a leap year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-339">
            <see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-339">
              <see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-340">Anni bisestili nel calendario taiwanese corrispondono agli anni bisestili del calendario gregoriano.</span><span class="sxs-lookup"><span data-stu-id="360d4-340">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="360d4-341">Un anno bisestile nel calendario gregoriano viene definito come un anno gregoriano divisibile per quattro, eccetto quando è divisibile per 100.</span><span class="sxs-lookup"><span data-stu-id="360d4-341">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="360d4-342">Tuttavia, gli anni di calendario gregoriano divisibili per 400 sono gli anni bisestili.</span><span class="sxs-lookup"><span data-stu-id="360d4-342">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="360d4-343">Un anno normale è 365 giorni e un anno bisestile ha 366 giorni.</span><span class="sxs-lookup"><span data-stu-id="360d4-343">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="360d4-344">L'esempio seguente chiama <xref:System.Globalization.TaiwanCalendar.IsLeapYear%2A> per cinque anni in ognuna delle ere.</span><span class="sxs-lookup"><span data-stu-id="360d4-344">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/CPP/taiwancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/CS/taiwancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/VB/taiwancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-345">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-345">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-346">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-346">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.TaiwanCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="360d4-347">Gets the latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-347">Gets the latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="360d4-348">Data e ora supportate da più recente di <see cref="T:System.Globalization.TaiwanCalendar" /> (classe), che equivale all'ultimo istante del 31 dicembre 9999 D.C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-348">The latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class, which is equivalent to the last moment of December 31, 9999 C.E.</span>
          </span>
          <span data-ttu-id="360d4-349">nel calendario gregoriano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-349">in the Gregorian calendar.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="360d4-350">Esempio di codice seguente ottiene il valore minimo e il valore massimo del calendario.</span><span class="sxs-lookup"><span data-stu-id="360d4-350">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CPP/taiwancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CS/taiwancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/VB/taiwancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.TaiwanCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="360d4-351">Gets the earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-351">Gets the earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="360d4-352">La prima data e ora supportati i <see cref="T:System.Globalization.TaiwanCalendar" /> (classe), che equivale al primo istante del 1 ° gennaio 1912 E.V.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-352">The earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class, which is equivalent to the first moment of January 1, 1912 C.E.</span>
          </span>
          <span data-ttu-id="360d4-353">nel calendario gregoriano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-353">in the Gregorian calendar.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-354">Microsoft Visual Basic rappresenta l'ora del giorno come il tempo specificato nel valore minimo supportato da <xref:System.DateTime>, ovvero 1 ° gennaio 0001. D.C.</span><span class="sxs-lookup"><span data-stu-id="360d4-354">Microsoft Visual Basic represents time of day as the specified time on the minimum date supported by <xref:System.DateTime>, which is January 1, 0001 C.E.</span></span> <span data-ttu-id="360d4-355">Tuttavia, il <xref:System.Globalization.TaiwanCalendar> classe non supporta quel valore minimo.</span><span class="sxs-lookup"><span data-stu-id="360d4-355">However, the <xref:System.Globalization.TaiwanCalendar> class does not support that minimum date.</span></span> <span data-ttu-id="360d4-356">Di conseguenza, se l'applicazione chiama un metodo per formattare l'ora del giorno utilizzando il calendario corrente ma non specifica un identificatore di formato, formattazione utilizza l'identificatore di formato modello di data/ora ISO 8601 ordinabile ("s") anziché il valore predefinito generale ("G") di data / Identificatore del modello.</span><span class="sxs-lookup"><span data-stu-id="360d4-356">Consequently, if your application calls a method to format the time of day using the current calendar but does not specify a format specifier, formatting uses the ISO 8601 sortable ("s") date/time pattern format specifier instead of the default general ("G") date/time pattern format specifier.</span></span> <span data-ttu-id="360d4-357">Per altre informazioni, vedere [stringhe di formato di ora e data Standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="360d4-357">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="360d4-358">Esempio di codice seguente ottiene il valore minimo e il valore massimo del calendario.</span><span class="sxs-lookup"><span data-stu-id="360d4-358">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CPP/taiwancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CS/taiwancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/VB/taiwancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="taiwanCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="360d4-359">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-359">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="360d4-360">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-360">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="360d4-361">An integer from 1 to 31 that represents the day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-361">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="360d4-362">An integer from 0 to 23 that represents the hour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-362">An integer from 0 to 23 that represents the hour.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="360d4-363">An integer from 0 to 59 that represents the minute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-363">An integer from 0 to 59 that represents the minute.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="360d4-364">An integer from 0 to 59 that represents the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-364">An integer from 0 to 59 that represents the second.</span>
          </span>
        </param>
        <param name="millisecond">
          <span data-ttu-id="360d4-365">An integer from 0 to 999 that represents the millisecond.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-365">An integer from 0 to 999 that represents the millisecond.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="360d4-366">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-366">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-367">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-367">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-368">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-368">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-369">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-369">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-370">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-370">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-371">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-371">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="360d4-372">-or-  <paramref name="hour" /> is less than zero or greater than 23.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-372">-or-  <paramref name="hour" /> is less than zero or greater than 23.</span>
          </span>
          <span data-ttu-id="360d4-373">-or-  <paramref name="minute" /> is less than zero or greater than 59.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-373">-or-  <paramref name="minute" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="360d4-374">-or-  <paramref name="second" /> is less than zero or greater than 59.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-374">-or-  <paramref name="second" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="360d4-375">-or-  <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-375">-or-  <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          </span>
          <span data-ttu-id="360d4-376">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-376">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="taiwanCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="360d4-377">A two-digit or four-digit integer that represents the year to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-377">A two-digit or four-digit integer that represents the year to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="360d4-378">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-378">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="360d4-379">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-379">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-380">Questo metodo implementa <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="360d4-380">This method implements <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="360d4-381">Poiché l'anno del calendario taiwanese è in genere meno di quattro cifre, questa implementazione restituisce sempre il valore di `year` parametro.</span><span class="sxs-lookup"><span data-stu-id="360d4-381">Because the year in the Taiwan calendar is typically less than four digits long, this implementation always returns the value of the `year` parameter.</span></span>  
  
 <span data-ttu-id="360d4-382"><xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A> supporta un anno a due cifre o un anno a quattro cifre.</span><span class="sxs-lookup"><span data-stu-id="360d4-382"><xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="360d4-383">Se si passa un valore di anno a due cifre (minore di 100), il metodo convertire il valore su un valore a quattro cifre in base al <xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A> valore che rappresenta il secolo.</span><span class="sxs-lookup"><span data-stu-id="360d4-383">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="360d4-384">Se l'applicazione fornisce un valore di anno a quattro cifre che rientra nell'intervallo supportato dal calendario a <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>, il metodo restituisce il valore di input effettivo.</span><span class="sxs-lookup"><span data-stu-id="360d4-384">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="360d4-385">Se l'applicazione fornisce un valore a quattro cifre che rientra nell'intervallo supportato dal calendario oppure se viene fornito un valore negativo, il metodo genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="360d4-385">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-386">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-386">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="360d4-387">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-387">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="360d4-388">L'ultimo anno che, nell'intervallo di un secolo, può essere rappresentato da un anno a due cifre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-388">The last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="360d4-389">Questa proprietà implementa <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="360d4-389">This property implements <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="360d4-390">Poiché l'anno del calendario taiwanese è in genere meno di quattro cifre, questa implementazione restituisce 99 per impostazione predefinita e non influisce sul valore restituito di <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>.</span><span class="sxs-lookup"><span data-stu-id="360d4-390">Because the year in the Taiwan calendar is typically less than four digits long, this implementation returns 99 by default and does not affect the return value of <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="360d4-391">The value specified in a set operation is less than 99.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-391">The value specified in a set operation is less than 99.</span>
          </span>
          <span data-ttu-id="360d4-392">-or-  The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-392">-or-  The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="360d4-393">In a set operation, the current instance is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="360d4-393">In a set operation, the current instance is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>