<Type Name="IdnMapping" FullName="System.Globalization.IdnMapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b781c139360058ce3da0da31a2cc025e76e3ef26" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51903619" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IdnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IdnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.IdnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnMapping sealed" />
  <TypeSignature Language="F#" Value="type IdnMapping = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Supporta l'uso di caratteri non ASCII per i nomi di dominio Internet. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nome di dominio Internet è costituito da una o più parti, chiamate etichette del nome di dominio, delimitate da separatori di etichetta. Ad esempio, il nome di dominio "www.proseware.com" è costituito dalle etichette, "www", "proseware" e "com", separati da punti. I nomi di dominio standard è costituito da caratteri designati in un intervallo di caratteri US-ASCII (o latino di base), da u+0021 a U + 007E. Per facilitare l'utilizzo di Internet nelle impostazioni cultura che non usano il set di caratteri US-ASCII, l'internazionalizzazione IDNA Domain Names in Applications () è stato adottato standard 2003 per supportare l'inclusione di caratteri Unicode compreso nell'intervallo di caratteri US-ASCII. Tuttavia, i server dei nomi e la risoluzione dei nomi di dominio continuano a si basano sui caratteri all'interno dell'intervallo di caratteri US-ASCII.  
  
 Il meccanismo IDNA Usa Punycode per eseguire il mapping di un nome di dominio internazionalizzati contenente caratteri Unicode compreso nell'intervallo di caratteri US-ASCII all'intervallo di caratteri US-ASCII supportato dal sistema di nome di dominio. Il meccanismo IDNA viene utilizzato per convertire solo i nomi di dominio, non i dati trasmessi tramite Internet.  
  
> [!IMPORTANT]
>  Nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)], il <xref:System.Globalization.IdnMapping> classe supporta diverse versioni dello standard IDNA, a seconda del sistema operativo in uso:  
>   
>  -   Quando viene eseguito [!INCLUDE[win8](~/includes/win8-md.md)], supporta la versione 2008 dello standard IDNA delineato dai [RFC 5891: Internationalized Domain Names in Applications IDNA (): protocollo](https://go.microsoft.com/fwlink/?LinkId=231875).  
> -   Quando eseguito in versioni precedenti del sistema operativo Windows, supporta la versione 2003 dello standard delineato dai [RFC 3490: internazionalizzazione IDNA Domain Names in Applications ()](https://go.microsoft.com/fwlink/?LinkId=158110).  
>   
>  Visualizzare [Unicode Technical Standard #46: elaborazione compatibilità IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) per le differenze nel modo questi standard di handle di specifici set di caratteri.  
  
 Il <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType> metodo normalizza un nome di dominio, converte il nome normalizzato in una rappresentazione che è costituito da caratteri Unicode visualizzabili compresi nell'intervallo di punti di codice US-ASCII (da U+10000 0020 a U + 007E) e consente di anteporre un prefisso di codifica (ACE) compatibile con ASCII (" Xn--") a ogni etichetta. Il <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType> metodo ripristina le etichette del nome di dominio convertite da parte di <xref:System.Globalization.IdnMapping.GetAscii%2A> (metodo).  
  
 Se la stringa da convertire include il separatore di etichetta caratteri IDEOGRAFICI arresto totale (U + 3002), spesso pieno (U + FF0E) e metà larghezza arresto totale IDEOGRAFICI (U + FF61), il <xref:System.Globalization.IdnMapping.GetAscii%2A> li converte in separatori di etichetta arresto totale (periodo di U +, metodo 002E). Il <xref:System.Globalization.IdnMapping.GetUnicode%2A> metodo, tuttavia, non ripristina il carattere separatore etichette originali.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodo per convertire una matrice di nomi di dominio in Punycode internazionalizzati. Il <xref:System.Globalization.IdnMapping.GetUnicode%2A> metodo quindi converte il nome di dominio Punycode nuovamente con il nome di dominio originale, ma sostituisce i separatori di etichetta originale con il separatore di etichetta standard.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Tutti i metodi pubblici della <see cref="T:System.Globalization.IdnMapping" /> sono thread-safe e possono essere utilizzati contemporaneamente da più thread, purché il <see cref="T:System.Globalization.IdnMapping" /> dell'istanza non sono inoltre impostate contemporaneamente.</threadsafe>
    <altmember cref="Overload:System.String.Normalize" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Globalization.IdnMapping" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType> e <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType> le proprietà vengono inizializzate `false`. Un piccolo subset di caratteri ASCII diverso da A-Z, 0-9, trattino (-) (U + 002D), di caratteri e il carattere punto (.) sono consentiti nei nomi di dominio, ma non assegnati punti di codice Unicode non lo sono.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnassigned">
      <MemberSignature Language="C#" Value="public bool AllowUnassigned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnassigned" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUnassigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUnassigned { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUnassigned : bool with get, set" Usage="System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se punti di codice Unicode non assegnati vengono utilizzati nelle operazioni eseguite da membri dell'oggetto <see cref="T:System.Globalization.IdnMapping" /> corrente.</summary>
        <value>
          <see langword="true" /> se punti di codice non assegnati vengono utilizzati nelle operazioni; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nome di dominio registrato non può contenere punti di codice non assegnati. Di conseguenza, il valore predefinito di <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> è di proprietà `false`. La specifica IDNA consente i punti di codice non assegnati solo nelle query per la corrispondenza di stringhe (vale a dire, nella ricerca del nome di dominio). Per altre informazioni sull'uso di punti di codice non assegnati nei nomi di dominio, vedere ["Preparazione delle stringhe internazionali (stringprep)", RFC 3454](https://go.microsoft.com/fwlink/?LinkId=231873) e [5891 RFC, "Internationalized Domain Names in Applications ( IDNA): protocollo "](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
> [!IMPORTANT]
>  Se il <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> è di proprietà `false`, il comportamento associato alla proprietà dipende dal sistema operativo sottostante. Sul [!INCLUDE[win8](~/includes/win8-md.md)], il <xref:System.Globalization.IdnMapping> classe conforme a IDNA 2008, che si basa sullo standard Unicode 6.0. Nelle versioni precedenti di Windows, il <xref:System.Globalization.IdnMapping> classe si basa su IDNA 2003, che è basato su Unicode 3. *x*. Alcuni punti di codice che sono stati non assegnati IDNA 2003 sono stati assegnati caratteri e sono supportati in IDNA 2008. Ad esempio, U + 0221 è stato introdotto in Unicode 4.0. In [!INCLUDE[win8](~/includes/win8-md.md)], viene codificato come "xn-6la". Nelle versioni precedenti di Windows, genera un <xref:System.ArgumentException> eccezione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="idnMapping.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
        <summary>Indica se l'oggetto specificato e l'oggetto <see cref="T:System.Globalization.IdnMapping" /> sono uguali.</summary>
        <returns>
          <see langword="true" /> se l'oggetto specificato dal <paramref name="obj" /> parametro deriva da <see cref="T:System.Globalization.IdnMapping" /> e le relative proprietà <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> e <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAscii">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Codifica una stringa di etichette di nome di dominio che includono caratteri Unicode non compresi nell'intervallo di caratteri US-ASCII in una stringa di caratteri Unicode visualizzabili nell'intervallo di caratteri US-ASCII (da U+0020 a U+007E). La stringa viene formattata in base allo standard IDNA.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string -&gt; string" Usage="idnMapping.GetAscii unicode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unicode">Stringa da convertire, costituita da una o più etichette del nome di dominio delimitate da separatori di etichetta.</param>
        <summary>Codifica una stringa di etichette del nome di dominio costituite da caratteri Unicode in una stringa di caratteri Unicode visualizzabili compresi nell'intervallo di caratteri US-ASCII. La stringa viene formattata in base allo standard IDNA.</summary>
        <returns>Equivalente della stringa specificata dal parametro <paramref name="unicode" />, costituito da caratteri Unicode visualizzabili compresi nell'intervallo di caratteri US-ASCII (da U+0020 a U+007E) e formattato in base allo standard IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `unicode` parametro specifica una stringa di una o più etichette costituiti da caratteri Unicode validi. Le etichette sono separate da separatori di etichetta. Il `unicode` parametro non può iniziare con un separatore di etichette, ma può includere e facoltativamente terminare con un separatore. I separatori di etichetta sono arresto totale (punto, U+10000 002E), FULL IDEOGRAFICI STOP (U + 3002), spesso pieno (U + FF0E) e metà larghezza arresto totale IDEOGRAFICI (U + FF61). Ad esempio, il nome di dominio "www.adatum.com" è costituito dalle etichette, "www", "adatum" e "com", separati da punti.  
  
 Un'etichetta non può contenere i caratteri seguenti:  
  
-   Caratteri di controllo Unicode da U+10000 0001 a U + 001F e U + 007F.  
  
-   Senza l'assegnazione di caratteri Unicode, se il valore della <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> è di proprietà `false`.  
  
-   Intervallo, ad esempio lo spazio di caratteri non standard caratteri US-ASCII (u+0020), punto ESCLAMATIVO CONTRASSEGNARE (u+0021), e a bassa caratteri di riga (U + 005F), se il valore della <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> proprietà è `true`.  
  
-   Caratteri non consentiti da una versione specifica dello standard IDNA. Per altre informazioni sui caratteri non consentiti, vedere [RFC 3454: preparazione di Internationalized stringhe ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) per IDNA 2003, e [RFC 5982: The punti di codice Unicode e i nomi di dominio internazionali per Le applicazioni](https://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.  
  
 Il <xref:System.Globalization.IdnMapping.GetAscii%2A> metodo converte tutti i separatori di etichetta in arresto totale (punto, U+10000 002E).  
  
 Se `unicode` non contiene caratteri di fuori di US-ASCII nell'intervallo di caratteri e nessun carattere all'interno dell'intervallo di caratteri US-ASCII non sono consentito, il metodo restituisce `unicode` invariato.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metodo per convertire una matrice di internationalized nomi di dominio Punycode, ovvero un equivalente codificato che è costituito da caratteri nell'intervallo di caratteri US-ASCII. Il <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> metodo quindi converte il nome di dominio Punycode nel nome di dominio originale, ma sostituisce i separatori di etichetta originale con il separatore di etichetta standard.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> non è valido in base alle proprietà <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> e <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> e allo standard IDNA.</exception>
        <block subset="none" type="usage">
          <para>Nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)], il <see cref="T:System.Globalization.IdnMapping" /> classe supporta diverse versioni dello standard IDNA, a seconda del sistema operativo in uso: 
-Quando viene eseguito [!INCLUDE[win8](~/includes/win8-md.md)], supporta la versione 2008 dello standard IDNA delineato dai [RFC 5891: Internationalized Domain Names in Applications IDNA (): protocollo](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
-Quando si esegue in versioni precedenti del sistema operativo Windows, supporta la versione 2003 dello standard delineato dai [RFC 3490: internazionalizzazione IDNA Domain Names in Applications ()](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
Visualizzare [Unicode Technical Standard #46: elaborazione compatibilità IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) per le differenze nel modo questi standard di handle di specifici set di caratteri.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Stringa da convertire, costituita da una o più etichette del nome di dominio delimitate da separatori di etichetta.</param>
        <param name="index">Offset in base zero in <c>unicode</c> che specifica l'inizio della sottostringa da convertire. L'operazione di conversione continua fino alla fine della stringa <c>unicode</c>.</param>
        <summary>Codifica una sottostringa di etichette di nome di dominio che include caratteri Unicode non compresi nell'intervallo di caratteri US-ASCII. La sottostringa viene convertita in una stringa di caratteri Unicode visualizzabili nell'intervallo di caratteri US-ASCII e formattata in base allo standard IDNA.</summary>
        <returns>Equivalente della sottostringa specificata dai parametri <paramref name="unicode" />, <paramref name="index" />, costituito da caratteri Unicode visualizzabili compresi nell'intervallo di caratteri US-ASCII (da U+0020 a U+007E) e formattato in base allo standard IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `unicode` e `index` parametri definiscono una sottostringa con una o più etichette costituiti da caratteri Unicode validi. Le etichette sono separate da separatori di etichetta. Il primo carattere della sottostringa non può iniziare con un separatore di etichette, ma può includere e, facoltativamente, terminare con un separatore. I separatori di etichetta sono arresto totale (punto, U+10000 002E), FULL IDEOGRAFICI STOP (U + 3002), spesso pieno (U + FF0E) e metà larghezza arresto totale IDEOGRAFICI (U + FF61). Ad esempio, il nome di dominio "www.adatum.com" è costituito dalle etichette, "www", "adatum" e "com", separati da punti.  
  
 Un'etichetta non può contenere i caratteri seguenti:  
  
-   Caratteri di controllo Unicode da U+10000 0001 a U + 001F e U + 007F.  
  
-   Senza l'assegnazione di caratteri Unicode, in base al valore di <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> proprietà.  
  
-   Intervallo, ad esempio lo spazio di caratteri non standard caratteri US-ASCII (u+0020), punto ESCLAMATIVO CONTRASSEGNARE (u+0021) e caratteri di punteggiatura (U + 005F), in base al valore di <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> proprietà.  
  
-   Caratteri non consentiti da una versione specifica dello standard IDNA. Per altre informazioni sui caratteri non consentiti, vedere [RFC 3454: preparazione di Internationalized stringhe ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) per IDNA 2003, e [RFC 5982: The punti di codice Unicode e i nomi di dominio internazionali per Le applicazioni](https://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.  
  
 Il <xref:System.Globalization.IdnMapping.GetAscii%2A> metodo converte tutti i separatori di etichetta in arresto totale (punto, U+10000 002E).  
  
 Se `unicode` non contiene caratteri di fuori di US-ASCII nell'intervallo di caratteri e nessun carattere all'interno dell'intervallo di caratteri US-ASCII non sono consentito, il metodo restituisce `unicode` invariato.  
  
   
  
## Examples  
 L'esempio seguente rimuove la parte locale e il @ carattere dall'indirizzo di posta elettronica e passa al dominio risulta assegnare un nome per il <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> per creare un nome di dominio Punycode equivalente codificata costituito da caratteri US-ASCII (metodo) intervallo di caratteri. Il <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodo quindi converte il nome di dominio Punycode nel nome di dominio originale, ma sostituisce i separatori di etichetta originale con il separatore di etichetta standard.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1a.cs#2)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> è minore di zero.  
  
oppure 
 <paramref name="index" /> è maggiore della lunghezza di <paramref name="unicode" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> non è valido in base alle proprietà <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> e <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> e allo standard IDNA.</exception>
        <block subset="none" type="usage">
          <para>Nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)], il <see cref="T:System.Globalization.IdnMapping" /> classe supporta diverse versioni dello standard IDNA, a seconda del sistema operativo in uso: 
-Quando viene eseguito [!INCLUDE[win8](~/includes/win8-md.md)], supporta la versione 2008 dello standard IDNA delineato dai [RFC 5891: Internationalized Domain Names in Applications IDNA (): protocollo](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
-Quando si esegue in versioni precedenti del sistema operativo Windows, supporta la versione 2003 dello standard delineato dai [RFC 3490: internazionalizzazione IDNA Domain Names in Applications ()](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
Visualizzare [Unicode Technical Standard #46: elaborazione compatibilità IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) per le differenze nel modo questi standard di handle di specifici set di caratteri.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Stringa da convertire, costituita da una o più etichette del nome di dominio delimitate da separatori di etichetta.</param>
        <param name="index">Offset in base zero in <c>unicode</c> che specifica l'inizio della sottostringa.</param>
        <param name="count">Numero di caratteri da convertire nella sottostringa a partire dalla posizione specificata da <c>index</c> nella stringa <c>unicode</c>.</param>
        <summary>Codifica il numero di caratteri specificato in una sottostringa di etichette di nome di dominio che include caratteri Unicode non compresi nell'intervallo di caratteri US-ASCII. La sottostringa viene convertita in una stringa di caratteri Unicode visualizzabili nell'intervallo di caratteri US-ASCII e formattata in base allo standard IDNA.</summary>
        <returns>Equivalente della sottostringa specificata dai parametri <paramref name="unicode" />, <paramref name="index" /> e <paramref name="count" />, costituito da caratteri Unicode visualizzabili compresi nell'intervallo di caratteri US-ASCII (da U+0020 a U+007E) e formattato in base allo standard IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Unicode`, `index`, e `count` parametri definiscono una sottostringa con una o più etichette costituiti da caratteri Unicode validi. Le etichette sono separate da separatori di etichetta. Il primo carattere della sottostringa non può iniziare con un separatore di etichette, ma può includere e, facoltativamente, terminare con un separatore. I separatori di etichetta sono arresto totale (punto, U+10000 002E), FULL IDEOGRAFICI STOP (U + 3002), spesso pieno (U + FF0E) e metà larghezza arresto totale IDEOGRAFICI (U + FF61). Ad esempio, il nome di dominio "www.adatum.com" è costituito dalle etichette, "www", "adatum" e "com", separati da punti.  
  
 Un'etichetta non può contenere i caratteri seguenti:  
  
-   Caratteri di controllo Unicode da U+10000 0001 a U + 001F e U + 007F.  
  
-   Senza l'assegnazione di caratteri Unicode, in base al valore di <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> proprietà.  
  
-   Intervallo, ad esempio lo spazio di caratteri non standard caratteri US-ASCII (u+0020), punto ESCLAMATIVO CONTRASSEGNARE (u+0021) e caratteri di punteggiatura (U + 005F), in base al valore di <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> proprietà.  
  
-   Caratteri non consentiti da una versione specifica dello standard IDNA. Per altre informazioni sui caratteri non consentiti, vedere [RFC 3454: preparazione di Internationalized stringhe ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) per IDNA 2003, e [RFC 5982: The punti di codice Unicode e i nomi di dominio internazionali per Le applicazioni](https://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.  
  
 Il <xref:System.Globalization.IdnMapping.GetAscii%2A> metodo converte tutti i separatori di etichetta in arresto totale (punto, U+10000 002E). Se la sottostringa non contiene alcun carattere compreso nell'intervallo di caratteri US-ASCII e nessun carattere all'interno dell'intervallo di caratteri US-ASCII non sono consentito, il metodo restituisce la sottostringa non modificata.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodo per convertire un nome di dominio internazionalizzati in un nome di dominio che sia conforme allo standard IDNA. Il <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodo quindi converte il nome di dominio standard nel nome di dominio originale, ma sostituisce i separatori di etichetta originale con il separatore di etichetta standard.  
  
 [!code-csharp[IdnMapping.GetX#1](~/samples/snippets/csharp/VS_Snippets_CLR/IdnMapping.GetX/CS/getx.cs#1)]
 [!code-vb[IdnMapping.GetX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IdnMapping.GetX/VB/getx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> o <paramref name="count" /> è minore di zero.  
  
oppure 
 <paramref name="index" /> è maggiore della lunghezza di <paramref name="unicode" />.  
  
oppure 
 <paramref name="index" /> è maggiore della lunghezza di <paramref name="unicode" />, meno <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> non è valido in base alle proprietà <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> e <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> e allo standard IDNA.</exception>
        <block subset="none" type="usage">
          <para>Nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)], il <see cref="T:System.Globalization.IdnMapping" /> classe supporta diverse versioni dello standard IDNA, a seconda del sistema operativo in uso: 
-Quando viene eseguito [!INCLUDE[win8](~/includes/win8-md.md)], supporta la versione 2008 dello standard IDNA delineato dai [RFC 5891: Internationalized Domain Names in Applications IDNA (): protocollo](https://go.microsoft.com/fwlink/?LinkId=231875).  
  
-Quando si esegue in versioni precedenti del sistema operativo Windows, supporta la versione 2003 dello standard delineato dai [RFC 3490: internazionalizzazione IDNA Domain Names in Applications ()](https://go.microsoft.com/fwlink/?LinkId=158110).  
  
Visualizzare [Unicode Technical Standard #46: elaborazione compatibilità IDNA](https://go.microsoft.com/fwlink/?LinkId=232459) per le differenze nel modo questi standard di handle di specifici set di caratteri.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="idnMapping.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un codice hash per l'oggetto <see cref="T:System.Globalization.IdnMapping" />.</summary>
        <returns>Una delle quattro costanti con segno a 32 bit derivate dalle proprietà di un oggetto <see cref="T:System.Globalization.IdnMapping" />.  Il valore restituito non ha alcun significato speciale e non può essere utilizzato in un algoritmo di codice hash.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di <xref:System.Globalization.IdnMapping.GetHashCode%2A> metodo se l'applicazione deve implementare un algoritmo di codice hash significativo.  
  
   
  
## Examples  
 Nell'esempio seguente si presuppone che una singola stringa può contenere più indirizzi di posta elettronica separati da spazi. Rimuove la parte locale e il @ carattere da ogni indirizzo di posta elettronica e passa al dominio risulta assegnare un nome per il <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> o <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodo per creare un nome di dominio Punycode. Il <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> metodo converte quindi il nome di dominio Punycode nel nome di dominio originale.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1b.cs#3)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1b.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Decodifica uno o più etichette del nome di dominio codificate in base allo standard IDNA in una stringa di caratteri Unicode.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string -&gt; string" Usage="idnMapping.GetUnicode ascii" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ascii">Stringa da decodificare costituita da una o più etichette nell'intervallo di caratteri US-ASCII (U+0020 to U+007E) codificate in base allo standard IDNA.</param>
        <summary>Decodifica una stringa di una o più etichette del nome di dominio codificate in base allo standard IDNA in una stringa di caratteri Unicode.</summary>
        <returns>Equivalente Unicode della sottostringa IDNA specificata dal parametro <paramref name="ascii" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sui nomi di dominio, le etichette e i separatori di etichetta, vedere la sezione Osservazioni per il <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> (metodo).  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metodo per convertire una matrice di nomi di dominio in Punycode internazionalizzati. Il <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> metodo quindi converte il nome di dominio Punycode nel nome di dominio originale, ma sostituisce i separatori di etichetta originale con il separatore di etichetta standard.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> non è valido in base alle proprietà <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> e <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> e allo standard IDNA.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">Stringa da decodificare costituita da una o più etichette nell'intervallo di caratteri US-ASCII (U+0020 to U+007E) codificate in base allo standard IDNA.</param>
        <param name="index">Offset in base zero in <c>ascii</c> che specifica l'inizio della sottostringa da decodificare. L'operazione di decodificazione continua fino alla fine della stringa <c>ascii</c>.</param>
        <summary>Decodifica una sottostringa di una o più etichette del nome di dominio codificate in base allo standard IDNA in una stringa di caratteri Unicode.</summary>
        <returns>Equivalente Unicode della sottostringa IDNA specificata dai parametri <paramref name="ascii" /> e <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sui nomi di dominio, le etichette e i separatori di etichetta, vedere la sezione Osservazioni per il <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> è minore di zero.  
  
oppure 
 <paramref name="index" /> è maggiore della lunghezza di <paramref name="ascii" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> non è valido in base alle proprietà <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> e <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> e allo standard IDNA.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">Stringa da decodificare costituita da una o più etichette nell'intervallo di caratteri US-ASCII (U+0020 to U+007E) codificate in base allo standard IDNA.</param>
        <param name="index">Offset in base zero nel parametro <c>ascii</c> che specifica l'inizio della sottostringa.</param>
        <param name="count">Numero di caratteri da convertire nella sottostringa a partire dalla posizione specificata da <c>index</c> nella stringa <c>ascii</c>.</param>
        <summary>Decodifica una sottostringa di una lunghezza specificata contenente una o più etichette del nome di dominio codificate in base allo standard IDNA in una stringa di caratteri Unicode.</summary>
        <returns>Equivalente Unicode della sottostringa IDNA specificata dai parametri <paramref name="ascii" />, <paramref name="index" /> e <paramref name="count" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sui nomi di dominio, le etichette e i separatori di etichetta, vedere la sezione Osservazioni per il <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> o <paramref name="count" /> è minore di zero.  
  
oppure 
 <paramref name="index" /> è maggiore della lunghezza di <paramref name="ascii" />.  
  
oppure 
 <paramref name="index" /> è maggiore della lunghezza di <paramref name="ascii" />, meno <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> non è valido in base alle proprietà <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> e <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> e allo standard IDNA.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseStd3AsciiRules">
      <MemberSignature Language="C#" Value="public bool UseStd3AsciiRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseStd3AsciiRules" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStd3AsciiRules As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseStd3AsciiRules { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseStd3AsciiRules : bool with get, set" Usage="System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se convenzioni di denominazione standard o relaxed vengono utilizzate nelle operazioni eseguite da membri dell'oggetto <see cref="T:System.Globalization.IdnMapping" /> corrente.</summary>
        <value>
          <see langword="true" /> se convenzioni di denominazione standard vengono utilizzate nelle operazioni; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I nomi di dominio che seguono le regole di denominazione standard sono costituiti da uno specifico sottoinsieme di caratteri nell'intervallo di caratteri US-ASCII. I caratteri sono le lettere da A Z, cifre da 0 a 9, il carattere trattino (-) (U + 002D) e il carattere punto (.). Il caso dei caratteri non è significativo. Le convenzioni di denominazione di tipo "relaxed" consentono l'uso di un intervallo più ampio di ASCII caratteri, incluso lo spazio (u+0020) di caratteri, caratteri di punto esclamativo (u+0021) e la barra di sotto di caratteri (U + 005F). Se <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> viene `true`, possono essere visualizzati solo i caratteri standard in un'etichetta restituita dal <xref:System.Globalization.IdnMapping.GetAscii%2A> (metodo).  
  
 Per impostazione predefinita, il valore della <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> è di proprietà `false`, e un subset di caratteri ASCII espanso è consentito in un'etichetta.  
  
> [!NOTE]
>  Il <xref:System.Globalization.IdnMapping> classe impedisce l'uso di caratteri non visualizzabili da u+0000 a U + 001F e U + 007F nel nome di dominio etichette indipendentemente dall'impostazione del <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> proprietà. In questo modo si riduce il rischio di attacchi alla sicurezza, ad esempio lo spoofing dei nomi.  
  
   
  
## Examples  
 Nell'esempio seguente genera gli URL contenenti caratteri nell'intervallo ASCII da u+0000 a U + 007F e li passa per la <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> metodo di due <xref:System.Globalization.IdnMapping> oggetti. Dispone di un oggetto relativo <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> impostata su `true`, e l'altro oggetto è impostato su `false`. L'output visualizza i caratteri non validi quando il <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> proprietà viene `true` ma valido in questo caso `false`.  
  
 [!code-csharp[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/cs/usestd3asciirules1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/vb/usestd3asciirules1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>