<Type Name="CultureInfo" FullName="System.Globalization.CultureInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="def27fc8960e34162ed6faf152d89b8f64a9e167" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34174405" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit CultureInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CultureInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureInfo : ICloneable, IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Offre informazioni su impostazioni cultura specifiche, ovvero *impostazioni locali* per lo sviluppo di codice non gestito. Le informazioni includono i nomi delle impostazioni cultura, il sistema di scrittura, il calendario usato, l'ordinamento delle stringhe e la formattazione di date e numeri.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Globalization.CultureInfo> classe fornisce informazioni specifiche delle impostazioni cultura, ad esempio la lingua, varietà di lingua, paese/area geografica, calendario e convenzioni associate a una determinata lingua. Questa classe fornisce inoltre l'accesso alle impostazioni cultura specifiche istanze del <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, e <xref:System.Globalization.TextInfo> oggetti. Questi oggetti contengono le informazioni necessarie per operazioni specifiche delle impostazioni cultura, ad esempio maiuscole e minuscole, la formattazione di date e numeri e il confronto di stringhe. Il <xref:System.Globalization.CultureInfo> classe viene utilizzata direttamente o indirettamente dalle classi che formattano, analizzano o modificare i dati specifici della lingua, ad esempio <xref:System.String>, <xref:System.DateTime>, <xref:System.DateTimeOffset>e i tipi numerici.  
  
 Contenuto della sezione:  
  
 [Gli identificatori e nomi delle impostazioni cultura](#CultureNames)   
 [Impostazioni cultura invarianti, neutre e specifiche](#Invariant)   
 [Impostazioni cultura personalizzate](#Custom)   
 [Dati dinamici delle impostazioni cultura](#Dynamic)   
 [Le impostazioni cultura correnti e impostazioni cultura correnti dell'interfaccia utente](#Current)   
 [Recupero di tutte le impostazioni cultura](#GetAll)   
 [Impostazioni cultura e thread](#Threads)   
 [Domini applicazione e di impostazioni cultura](#AppDomain)   
 [Impostazioni cultura e alle operazioni asincrone basate su attività](#Async)   
 [Serializzazione un oggetto CultureInfo](#Serialization)   
 [Esegue l'override del Pannello di controllo](#CPanel)   
 [Tipi di ordinamento alternativo](#AlternateSort)   
 [App di Windows e di impostazioni cultura](#Windows)  
  
<a name="CultureNames"></a>   
## <a name="culture-names-and-identifiers"></a>Gli identificatori e nomi delle impostazioni cultura  
 La <xref:System.Globalization.CultureInfo> classe specifica un nome univoco per ogni impostazione cultura, in base allo standard RFC 4646. Il nome è una combinazione di un codice di due lettere minuscole ISO 639 associata a una lingua e un codice di secondarie a due lettere maiuscole ISO 3166 associata a un paese o area geografica. Inoltre, per le app destinate a [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] o versioni successive e sono in esecuzione in Windows 10 o versioni successive, i nomi delle impostazioni cultura che corrispondono a una lingua BCP-47 valido tag sono supportati.  
  
> [!NOTE]
>  Quando un nome delle impostazioni cultura viene passato a un costruttore di classe o un metodo, ad esempio <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> o <xref:System.Globalization.CultureInfo>, il caso non è significativo.  
  
 Il formato per il nome delle impostazioni cultura in base allo standard RFC 4646 è *codicelingua2*>-*codicepaese2*, dove *codicelingua2* è il codice lingua di due lettere e *codicepaese2* è il codice secondarie a due lettere. Esempi includono ja-JP per giapponese (Giappone) ed en-US per inglese (Stati Uniti). Nei casi in cui non è disponibile un codice lingua di due lettere, viene utilizzato un codice di tre lettere derivato da ISO 639-2.  
  
 Si noti che alcuni nomi di impostazioni cultura specificano anche uno script ISO 15924. Ad esempio, Cyrl specifica l'alfabeto cirillico e Latn specifica l'alfabeto latino. Un nome di impostazioni cultura che include uno script utilizza il modello *codicelingua2*-*scripttag*-*codicepaese2*. Un esempio di questo tipo di nome delle impostazioni cultura è uz-Cyrl-UZ per Uzbeco (Uzbekistan, alfabeto cirillico). Nei sistemi operativi Windows prima di Windows Vista, un nome di impostazioni cultura che include uno script utilizza il modello *codicelingua2*-*codicepaese2* - * scripttag*, ad esempio uz-UZ-Cyrl per Uzbeco (Uzbekistan, alfabeto cirillico).  
  
 Una lingua non viene specificata solo il codice di lingua di due lettere minuscole. Ad esempio, fr specifica la lingua per il francese e Germania specifica la lingua per il tedesco.  
  
> [!NOTE]
>  Esistono due nomi di impostazioni cultura contraddicono tale regola. Le impostazioni cultura Cinese (semplificato), denominato zh-Hans e cinese (tradizionale), denominato zh-Hant sono associate ad alcun paese. I nomi delle impostazioni cultura rappresentano lo standard corrente e devono essere utilizzati a meno che non esista un motivo per l'utilizzo precedenti zh-CHT e zh-CHS nomi.  
  
 Un identificatore delle impostazioni cultura è un'abbreviazione numerica internazionale standard e i componenti necessari per identificare in modo univoco una delle impostazioni cultura installate. L'applicazione può utilizzare identificatori delle impostazioni cultura predefinite o definire identificatori personalizzati.  
  
 Determinati nomi delle impostazioni cultura e predefiniti identificatori sono utilizzati da questa e altre classi di <xref:System.Globalization?displayProperty=nameWithType> dello spazio dei nomi. Informazioni dettagliate sulle impostazioni cultura nella [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) a Developer Center.  
  
 Tenere presente che i nomi delle impostazioni cultura e gli identificatori rappresentano solo un subset di impostazioni cultura che possono trovarsi in un computer specifico. Versioni di Windows o i service pack è possibile modificare le impostazioni cultura disponibili. Le applicazioni aggiungono impostazioni cultura personalizzate utilizzando la <xref:System.Globalization.CultureAndRegionInfoBuilder> classe. Gli utenti di aggiungere impostazioni cultura personalizzate utilizzando lo strumento generatore di impostazioni locali di Microsoft. Microsoft Locale Builder viene scritto in codice gestito utilizzando il `CultureAndRegionInfoBuilder` classe.  
  
 Molti nomi distinti sono strettamente associati a una lingua, in particolare i nomi associati ai membri di classe seguente:  
  
-   <xref:System.Globalization.CultureInfo.ToString%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CompareInfo.Name%2A?displayProperty=nameWithType>  
  
<a name="Invariant"></a>   
## <a name="invariant-neutral-and-specific-cultures"></a>Impostazioni cultura invarianti, neutre e specifiche  
 Le impostazioni cultura sono in genere raggruppate in tre gruppi: impostazioni cultura invarianti, su impostazioni cultura e le impostazioni cultura specifiche.  
  
 Le impostazioni cultura invarianti sono indipendente dalle impostazioni cultura. L'applicazione specifica le impostazioni cultura invarianti per nome utilizzando una stringa vuota ("") o tramite il relativo identificatore. <xref:System.Globalization.CultureInfo.InvariantCulture%2A> Definisce un'istanza delle impostazioni cultura invarianti. È associato con la lingua inglese, ma non con qualsiasi paese/area geografica. Viene usato in quasi tutti i metodi di `Globalization` dello spazio dei nomi che richiedono una lingua.  
  
 Impostazioni cultura neutre sono una lingua che è associata una lingua ma non con un paese/area geografica. Impostazioni cultura specifiche sono una lingua associata a una lingua e un paese/area geografica. Ad esempio, fr è il nome di sistema per le impostazioni cultura francesi e fr-FR è il nome delle impostazioni cultura francesi (Francia) specifico. Si noti che il cinese semplificato e cinese (tradizionale) sono considerato anche su impostazioni cultura.  
  
 Creazione di un'istanza di un <xref:System.Globalization.CompareInfo> classe per una lingua non è consigliata poiché i dati in esso contenuti sono arbitrari. Per visualizzare e ordinare i dati, specificare la lingua e l'area. Inoltre, il <xref:System.Globalization.CompareInfo.Name%2A> proprietà di un <xref:System.Globalization.CompareInfo> oggetto creato per una lingua restituisce solo il paese e non include l'area.  
  
 Le impostazioni di cultura definiti dispone di una gerarchia in cui l'elemento padre di una lingua specifica è una lingua e l'elemento padre della lingua è la lingua inglese. Il <xref:System.Globalization.CultureInfo.Parent%2A> proprietà contiene la lingua associata a una lingua specifica. Impostazioni cultura personalizzate è necessario definire il <xref:System.Globalization.CultureInfo.Parent%2A> proprietà in conformità con questo modello.  
  
 Se le risorse per una lingua specifica non sono disponibili nel sistema operativo, vengono utilizzate le risorse per la lingua associata. Se le risorse per la lingua non sono disponibili, vengono utilizzate le risorse incorporate nell'assembly principale. Per ulteriori informazioni sul processo di fallback delle risorse, vedere [package e distribuzione delle risorse](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
 L'elenco delle impostazioni locali nell'API di Windows è leggermente diverso dall'elenco di impostazioni cultura supportate da .NET Framework. Se è richiesta l'interoperabilità con Windows, ad esempio, tramite il meccanismo p/invoke, l'applicazione deve utilizzare una lingua specifica è definita per il sistema operativo. Utilizzo delle impostazioni cultura specifiche garantisce la coerenza con le equivalenti impostazioni locali di Windows, viene identificata con un identificatore delle impostazioni locali che corrisponde al <xref:System.Globalization.CultureInfo.LCID%2A>.  
  
 Oggetto <xref:System.Globalization.DateTimeFormatInfo> o <xref:System.Globalization.NumberFormatInfo> può essere creato solo per le impostazioni cultura invarianti o per impostazioni cultura specifiche, non per impostazioni cultura neutre.  
  
 Se <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> è il <xref:System.Globalization.TaiwanCalendar> ma la <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> non è impostata su zh-TW, quindi <xref:System.Globalization.DateTimeFormatInfo.NativeCalendarName%2A?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A?displayProperty=nameWithType>, e <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A?displayProperty=nameWithType> restituiscono una stringa vuota ("").  
  
<a name="Custom"></a>   
## <a name="custom-cultures"></a>Impostazioni cultura personalizzate  
 Oltre alle impostazioni cultura predefinite supportate dal sistema operativo Windows e .NET Framework, .NET Framework supporta tre tipi di impostazioni cultura personalizzate:  
  
-   Nuove impostazioni cultura che integrano le lingue disponibili in Windows o .NET Framework. Ad esempio, un'applicazione è stato possibile installare un <xref:System.Globalization.CultureInfo> oggetto che rappresenta il fj-FJ (o Fijan (Fiji)) delle impostazioni cultura su un sistema.  
  
-   Impostazioni cultura sostitutive le cui proprietà sono diverse dalle proprietà delle impostazioni cultura standard supportate da Windows e .NET Framework.  
  
-   Impostazioni cultura standard con l'utente esegue l'override. L'utente può utilizzare il **paese e lingua** applicazione **Pannello di controllo** per personalizzare i valori delle proprietà di una lingua esistente.  
  
> [!NOTE]
>  È possibile utilizzare la <xref:System.Globalization.CultureAndRegionInfoBuilder> classe per definire, salvare e registrare le impostazioni cultura personalizzate che integrano o sostituiscono le impostazioni cultura esistente. Il <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A?displayProperty=nameWithType> metodo crea un file di dati Markup Language LDML (locale) che può essere utilizzato per installare una lingua personalizzata sui sistemi di destinazione. Per informazioni passo-passo passo sull'utilizzo di <xref:System.Globalization.CultureAndRegionInfoBuilder> classe per creare un nuovo o impostazioni cultura di sostituzione, vedere il <xref:System.Globalization.CultureAndRegionInfoBuilder> argomento relativo alla classe.  
  
 Poiché .NET Framework supporta le impostazioni cultura personalizzate, è necessario tenere presente quanto segue quando si lavora con dati specifici della lingua:  
  
-   Impostazioni cultura personalizzate possono avere valori che superano gli intervalli delle impostazioni cultura predefinite. Ad esempio, alcune impostazioni cultura hanno nomi dei mesi insolitamente lungo, data imprevisto o formati di ora o altri dati insoliti.  
  
-   Quando si visualizzano i dati specifici della lingua dell'interfaccia utente, è necessario rispettare personalizzazioni dell'utente. ad esempio, l'utente potrebbe essere un formato a 24 ore oppure in un formato di data aaaammgg.  
  
-   Tenere presente che le impostazioni cultura personalizzate eseguono l'override di valori predefiniti. Pertanto, è possibile considerare stabile dei dati delle impostazioni cultura. I nomi di paese e formati di data e numero di parole possono cambiare in futuro. Se si desidera serializzare i dati dipendenti dalle impostazioni cultura, ad esempio le stringhe di data e ora deve essere passato a data e ora di funzioni di analisi, utilizzare le impostazioni cultura invarianti o un oggetto specifico.  
  
 Il <xref:System.Globalization.CultureInfo.CultureTypes%2A> include il valore della proprietà di impostazioni cultura personalizzate installato in un sistema di <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> flag e le impostazioni cultura personalizzate vengono assegnati un <xref:System.Globalization.CultureInfo.LCID%2A> valore della proprietà `LOCALE_CUSTOM_UNSPECIFIED` (0x1000 o 4096). Si noti che, a partire da Windows 10, questo valore è assegnato anche a impostazioni cultura definite dal sistema che non dispongono di dati relative alla lingua.  
  
<a name="Dynamic"></a>   
## <a name="dynamic-culture-data"></a>Dati dinamici delle impostazioni cultura  
 La lingua inglese, ad eccezione di dati delle impostazioni cultura sono dinamici. Questo vale anche per le impostazioni cultura predefinite. Ad esempio paesi o regioni adottano nuove valute, modificare i relativi ortografia di parole o modificare il calendario preferito e modificare le definizioni delle impostazioni cultura per tenere traccia dell'operazione.  Impostazioni cultura personalizzate sono soggetti a modifiche senza preavviso e le impostazioni cultura specifiche potrebbe essere sottoposto a override dalle impostazioni cultura di sostituzione personalizzato. Inoltre, come descritto di seguito, un singolo utente può eseguire l'override preferenze relative alla lingua. Le applicazioni devono sempre ottenere i dati delle impostazioni cultura in fase di esecuzione.  
  
> [!CAUTION]
>  Durante il salvataggio dei dati, l'applicazione deve utilizzare le impostazioni cultura invarianti, un formato binario o un formato indipendente dalle impostazioni cultura specifico. I dati salvati secondo i valori correnti associati a una particolare lingua, diverso dalle impostazioni cultura invarianti, potrebbero diventare illeggibili o cambiare significato in se cambiano le impostazioni cultura.  
  
<a name="Current"></a>   
## <a name="the-current-culture-and-current-ui-culture"></a>Le impostazioni cultura correnti e impostazioni cultura correnti dell'interfaccia utente  
 Ogni thread in un'applicazione .NET Framework dispone di impostazioni cultura correnti e impostazioni cultura dell'interfaccia utente corrente. Le impostazioni cultura correnti determinano le convenzioni di formattazione per date, ore, numeri e i valori di valuta, l'ordinamento di testo, le convenzioni di maiuscole e minuscole e i modi in cui vengono confrontate le stringhe. Le impostazioni cultura dell'interfaccia utente correnti viene utilizzata per recuperare le risorse specifiche delle impostazioni cultura in fase di esecuzione.  
  
> [!NOTE]
>  Per informazioni su come le impostazioni cultura dell'interfaccia utente corrente e quella corrente viene determinata in base al thread, vedere il [delle impostazioni cultura e thread](#Threads) sezione. Per informazioni sulla determinazione delle impostazioni cultura dell'interfaccia utente di corrente e quella corrente nel thread in esecuzione in un nuovo dominio applicazione e nel thread che superano i limiti del dominio applicazione, vedere il [delle impostazioni cultura e i domini applicazione](#AppDomain) sezione. Per informazioni su come viene determinata la corrente e corrente nel thread di esecuzione di operazioni asincrone basate su attività, vedere il [delle impostazioni cultura e alle operazioni asincrone basate su attività](#Async) sezione.  
  
 Per ulteriori informazioni sulle impostazioni cultura correnti, vedere il <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> argomento relativo alla proprietà. Per ulteriori informazioni sulle impostazioni cultura dell'interfaccia utente corrente, vedere il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> argomento relativo alla proprietà.  
  
### <a name="retrieving-the-current-and-current-ui-cultures"></a>Recuperare le impostazioni cultura dell'interfaccia utente corrente e quella corrente  
 È possibile ottenere un <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura correnti in uno dei due modi:  
  
-   Recuperando il valore di <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> proprietà.  
  
-   Recuperando il valore di [CurrentThread](<xref:System.Threading.Thread.CurrentCulture>) proprietà.  
  
 Nell'esempio seguente recupera entrambi i valori delle proprietà, vengono quindi confrontati per mostrare che sono uguali e visualizza il nome della lingua corrente.  
  
 [!code-csharp[System.Globalization.CultureInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Current1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Current1.vb#1)]  
  
 È possibile ottenere un <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura dell'interfaccia utente correnti in uno dei due modi:  
  
-   Recuperando il valore di <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà.  
  
-   Recuperando il valore di [Thread.CurrentThread.CurrentUICulture](<xref:System.Threading.Thread.CurrentUICulture>) proprietà.  
  
 Nell'esempio seguente recupera entrambi i valori delle proprietà, li confronta per mostrare che sono uguali e visualizza il nome delle impostazioni cultura dell'interfaccia utente corrente.  
  
 [!code-csharp[System.Globalization.CultureInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/CurrentUI1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/CurrentUI1.vb#2)]  
  
### <a name="setting-the-current-and-current-ui-cultures"></a>Impostare le impostazioni cultura dell'interfaccia utente corrente e quella corrente  
 Per modificare le impostazioni cultura e le impostazioni cultura dell'interfaccia utente di un thread, eseguire le operazioni seguenti:  
  
1.  Creare un'istanza di un <xref:System.Globalization.CultureInfo> oggetto che rappresenta quelle impostazioni cultura chiamando un <xref:System.Globalization.CultureInfo> classe costruttore e passando il nome delle impostazioni cultura. Il <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> costruttore crea un <xref:System.Globalization.CultureInfo> oggetto che riflette l'utente esegue l'override se le nuove impostazioni cultura sono lo stesso come lingua di Windows corrente.   Il <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> costruttore consente di specificare se l'istanza appena <xref:System.Globalization.CultureInfo> oggetto riflette l'utente esegue l'override se le nuove impostazioni cultura sono lo stesso come lingua di Windows corrente.  
  
2.  Assegnare il <xref:System.Globalization.CultureInfo> dell'oggetto per il <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> o <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> proprietà. Inoltre, per le App in esecuzione la versione 4.6 o versione successiva di .NET Framework desktop, è inoltre possibile assegnare il <xref:System.Globalization.CultureInfo> dell'oggetto per il <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> o <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà.  
  
 L'esempio seguente recupera le impostazioni cultura correnti. Se è diverso dalle impostazioni cultura francesi (Francia), vengono modificate le impostazioni cultura correnti in francese (Francia). In caso contrario, vengono modificate le impostazioni cultura correnti in francese (Lussemburgo).  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 L'esempio seguente recupera le impostazioni cultura correnti. In caso di qualsiasi altro elemento le impostazioni cultura sloveno (Slovenia), modifica le impostazioni cultura correnti per sloveno (Slovenia). In caso contrario, vengono modificate le impostazioni cultura correnti in croato (Croazia).  
  
 [!code-csharp[System.Globalization.CultureInfo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/ChangeUI1.cs#4)]
 [!code-vb[System.Globalization.CultureInfo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/ChangeUI1.vb#4)]  
  
<a name="GetAll"></a>   
## <a name="getting-all-cultures"></a>Recupero di tutte le impostazioni cultura  
 È possibile recuperare un categorie specifiche di matrice di impostazioni cultura o di tutte le lingue disponibili nel computer locale chiamando il <xref:System.Globalization.CultureInfo.GetCultures%2A> metodo. Ad esempio, è possibile recuperare le impostazioni cultura personalizzate, impostazioni cultura specifiche o impostazioni cultura neutre singolarmente o in combinazione.  
  
 L'esempio seguente chiama il <xref:System.Globalization.CultureInfo.GetCultures%2A> metodo due volte, prima con la <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> membro di enumerazione per recuperare tutte le impostazioni cultura personalizzate e quindi con il <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> membro di enumerazione per recuperare tutte le lingue di sostituzione.  
  
 [!code-csharp[System.Globalization.CultureInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/GetCultures1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/GetCultures1.vb#5)]  
  
<a name="Threads"></a>   
## <a name="culture-and-threads"></a>Impostazioni cultura e thread  
 Quando viene avviato un nuovo thread dell'applicazione, le impostazioni cultura correnti e impostazioni cultura correnti dell'interfaccia utente sono definiti dalle impostazioni cultura del sistema corrente e non da impostazioni cultura del thread corrente. Nell'esempio che segue viene illustrata la differenza. Imposta le impostazioni cultura correnti e corrente delle impostazioni cultura dell'interfaccia utente di un thread dell'applicazione per le impostazioni cultura francesi (Francia) (fr-FR). Se le impostazioni cultura correnti sono già fr-FR, nell'esempio viene imposta per le impostazioni cultura inglese (Stati Uniti) (en-US). Visualizza tre numeri casuali come valori di valuta e quindi crea un nuovo thread, che, a sua volta, vengono visualizzati tre numeri più casuali i valori di valuta. Ma, come nell'esempio viene illustrato dall'output, i valori di valuta visualizzati dal nuovo thread non riflettono le convenzioni di formattazione delle impostazioni cultura francesi (Francia), a differenza di output dal thread principale dell'applicazione.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/defaultthread1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/defaultthread1.vb#1)]  
  
 Nelle versioni di .NET Framework prima di [!INCLUDE[net_v45](~/includes/net-v45-md.md)], la maggior parte modo comune per garantire che il thread principale dell'applicazione condivide le stesse impostazioni cultura con tutti gli altri thread di lavoro consiste nel passare il nome delle impostazioni cultura a livello di applicazione o un <xref:System.Globalization.CultureInfo> oggetto rappresenta le impostazioni cultura a livello di applicazione da un <xref:System.Threading.ParameterizedThreadStart?displayProperty=nameWithType> delegato. L'esempio seguente usa questo approccio per garantire che i valori di valuta visualizzati da due thread riflettono le convenzioni di formattazione delle stesse impostazioni cultura.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/perthread1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/perthread1.vb#2)]  
  
 È possibile impostare la lingua e impostazioni cultura dell'interfaccia utente del thread del pool di thread in modo simile chiamando il <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> metodo.  
  
 A partire dal [!INCLUDE[net_v45](~/includes/net-v45-md.md)], è possibile impostare le impostazioni cultura e le impostazioni cultura dell'interfaccia utente di tutti i thread in un dominio applicazione in modo più diretto assegnando un <xref:System.Globalization.CultureInfo> oggetto che rappresenta quelle impostazioni cultura per il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> e <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà. Nell'esempio seguente utilizza queste proprietà per assicurarsi che tutti i thread nel dominio applicazione predefinito condividono le stesse impostazioni cultura.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/setthreads1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/setthreads1.vb#3)]  
  
> [!WARNING]
>  Sebbene il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> e <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> le proprietà sono i membri statici, definiscono le impostazioni cultura predefinite e delle impostazioni cultura dell'interfaccia utente predefinita solo per il dominio applicazione corrente in fase di valori di queste proprietà vengono impostati. Per ulteriori informazioni, vedere la sezione successiva, [delle impostazioni cultura e i domini applicazione](#AppDomain).  
  
 Quando si assegnano valori al <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> e <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà, le impostazioni cultura e le impostazioni cultura dell'interfaccia utente di thread nel dominio dell'applicazione di modificare anche se non esplicitamente assegnati a impostazioni cultura. Tuttavia, questi thread riflettono le nuove impostazioni cultura solo quando vengono eseguiti nel dominio applicazione corrente. Se questi thread vengono eseguiti in un altro dominio applicazione, le impostazioni cultura diventa le impostazioni cultura predefinite definite per tale dominio applicazione. Di conseguenza, è consigliabile impostare sempre le impostazioni cultura del thread principale dell'applicazione e non si basano sul <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> e <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà per modificarlo.  
  
<a name="AppDomain"></a>   
## <a name="culture-and-application-domains"></a>Domini applicazione e di impostazioni cultura  
 <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> e <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> sono proprietà statiche che definiscono in modo esplicito una lingua predefinita solo per il dominio applicazione corrente quando il valore della proprietà è impostato o recuperato. Nell'esempio seguente imposta la lingua predefinita e impostazioni cultura dell'interfaccia utente predefinite nel dominio applicazione predefinito francese (Francia) e quindi viene utilizzato il <xref:System.AppDomainSetup> classe e <xref:System.AppDomainInitializer> delegato per impostare la lingua predefinita e delle impostazioni cultura dell'interfaccia utente in un nuovo dominio applicazione per Russo (Russia). Un singolo thread esegue quindi i due metodi in ogni dominio applicazione. Si noti che le impostazioni cultura del thread e delle impostazioni cultura dell'interfaccia utente non sono esplicitamente impostati; derivano dalle impostazioni cultura predefinite e delle impostazioni cultura dell'interfaccia utente del dominio dell'applicazione in cui il thread è in esecuzione. Si noti inoltre che il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> e <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> restituiscono il valore predefinito <xref:System.Globalization.CultureInfo> i valori del dominio applicazione corrente quando viene effettuata la chiamata al metodo.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/cs/appdomainex1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/vb/appdomainex1.vb#1)]  
  
 Per ulteriori informazioni sulle impostazioni cultura e domini applicazione, vedere la sezione "Thread e domini di applicazione" nell'argomento.  
  
<a name="Async"></a>   
## <a name="culture-and-task-based-asynchronous-operations"></a>Impostazioni cultura e alle operazioni asincrone basate su attività  
 Il [modello di programmazione asincrono basato su attività](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md) Usa <xref:System.Threading.Tasks.Task> e <xref:System.Threading.Tasks.Task%601> oggetti per eseguire in modo asincrono i delegati sul thread del pool di thread. Il thread specifico in cui viene eseguito una determinata operazione non è noto in anticipo, ma viene determinato solo in fase di esecuzione.  
  
 Per le applicazioni che usano il [!INCLUDE[net_v46](~/includes/net-v46-md.md)] o versioni successive, le impostazioni cultura è parte del contesto dell'operazione asincrona. In altre parole, a partire dalle App destinate il [!INCLUDE[net_v46](~/includes/net-v46-md.md)], operazioni asincrone per impostazione predefinita ereditano i valori del <xref:System.Globalization.CultureInfo.CurrentCulture%2A> e <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> le proprietà del thread da cui vengono avviate. Se le impostazioni cultura correnti o impostazioni cultura correnti dell'interfaccia utente diversa da impostazioni cultura del sistema, le impostazioni cultura correnti supera i limiti dei thread e diventa le impostazioni cultura correnti del thread del pool che esegue un'operazione asincrona.  
  
 Nell'esempio seguente viene illustrato questo concetto. Usa il <xref:System.Runtime.Versioning.TargetFrameworkAttribute> attributo di destinazione di [!INCLUDE[net_v46](~/includes/net-v46-md.md)]. Nell'esempio viene definito un <xref:System.Func%601> delegare, `formatDelegate`, che restituisce alcuni numeri formattati come valori di valuta. Nell'esempio viene modificata la lingua corrente in francese (Francia) o, se francese (Francia) è già impostazioni cultura correnti, inglese (Stati Uniti). Viene quindi:  
  
-   Richiama il delegato direttamente in modo che venga eseguito in modo sincrono sul thread principale di un'app.  
  
-   Crea un'attività che esegue il delegato in modo asincrono in un pool di thread.  
  
-   Crea un'attività che esegue il delegato in modo sincrono sul thread principale di un'app mediante la chiamata di <xref:System.Threading.Tasks.Task.RunSynchronously%2A?displayProperty=nameWithType> metodo.  
  
 Come illustrato nell'output dell'esempio, quando le impostazioni cultura correnti viene modificata in francese (Francia), le impostazioni cultura correnti del thread da cui le attività vengono richiamate in modo asincrono diventa le impostazioni cultura correnti per l'operazione asincrona.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture1.vb#1)]  
  
 Per le app destinate alle versioni di .NET Framework precedenti al [!INCLUDE[net_v46](~/includes/net-v46-md.md)], o per le applicazioni non destinate a una particolare versione di .NET Framework, le impostazioni cultura del thread chiamante non fa parte del contesto di un'attività. In alternativa, a meno che uno è definito in modo esplicito, le impostazioni cultura del nuovo thread per impostazione predefinita sono la lingua del sistema. Nell'esempio seguente, che è identico all'esempio precedente, che manca il <xref:System.Runtime.Versioning.TargetFrameworkAttribute> attributo, viene illustrata questa situazione. Poiché la lingua del sistema del sistema in cui è stato eseguito l'esempio è stato in lingua inglese (Stati Uniti), le impostazioni cultura dell'attività che esegue in modo asincrono in un pool di thread sono en-US anziché fr-FR.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture2.vb#2)]  
  
 Per le app destinate alle versioni di .NET Framework dal [!INCLUDE[net_v45](~/includes/net-v45-md.md)] e versioni successive, ma prima del [!INCLUDE[net_v46](~/includes/net-v46-md.md)], è possibile utilizzare il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> e <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> attività proprietà per assicurarsi che le impostazioni cultura del thread chiamante viene utilizzata in asincrona l'esecuzione nel thread del pool. Nell'esempio seguente è identico all'esempio precedente, ad eccezione del fatto che usa il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> proprietà per verificare che il thread del pool di thread hanno le stesse impostazioni cultura del thread principale di un'app.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture3.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture3.vb#3)]  
  
 <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> e <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> sono per app proprietà dominio; vale a dire stabiliscono una lingua predefinita per tutti i thread assegnati in modo non esplicito determinate impostazioni cultura in un dominio applicazione specifico. Tuttavia, per le applicazioni che usano il [!INCLUDE[net_v46](~/includes/net-v46-md.md)] o versioni successive, le impostazioni cultura del thread chiamante rimangono parte del contesto di un'attività asincrona, anche se l'attività supera i limiti del dominio applicazione.  
  
 Nell'esempio seguente viene illustrato che le impostazioni cultura del thread chiamante rimangono le impostazioni cultura correnti di un'operazione asincrona basata su attività, anche se il metodo che viene eseguita l'attività supera i limiti del dominio applicazione. Definisce una classe, `DataRetriever`, con un singolo metodo `GetFormattedNumber`, che restituisce un numero a virgola mobile a precisione doppia casuale compreso tra 1 e 1.000 formattato come un valore di valuta. Viene eseguita un'attività prima che crea semplicemente un `DataRetriever` istanza e chiama il relativo `GetFormattedNumber` (metodo). Una seconda attività indica il dominio applicazione corrente, crea un nuovo dominio applicazione, crea un'istanza di un `DataRetriever` istanza nel nuovo dominio applicazione e chiama il relativo `GetFormattedNumber` metodo. Come illustrato nell'output dell'esempio, le impostazioni cultura correnti sono rimasto inalterato il thread chiamante, la prima attività e la seconda attività entrambi durante l'esecuzione nel dominio dell'applicazione principale e del secondo dominio di applicazione.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture4.cs#4)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture4.vb#4)]  
  
<a name="Serialization"></a>   
## <a name="cultureinfo-object-serialization"></a>Serializzazione un oggetto CultureInfo  
 Quando un <xref:System.Globalization.CultureInfo> oggetto viene serializzato, tutto ciò che viene effettivamente archiviato è <xref:System.Globalization.CultureInfo.Name%2A> e <xref:System.Globalization.CultureInfo.UseUserOverride%2A>. Viene deserializzata correttamente solo in un ambiente in cui che <xref:System.Globalization.CultureInfo.Name%2A> ha lo stesso significato. I tre esempi seguenti mostrano perché non è sempre possibile:  
  
-   Se il <xref:System.Globalization.CultureInfo.CultureTypes%2A> valore della proprietà è <xref:System.Globalization.CultureTypes?displayProperty=nameWithType>, e se tali impostazioni cultura è stata introdotta in Windows Vista o una versione successiva del sistema operativo Windows, non è possibile deserializzare in Windows XP. Analogamente, se le impostazioni cultura è stata introdotta in Windows XP Service Pack 2, non è possibile deserializzare per un sistema di Windows XP in cui le impostazioni cultura non sono stata installata.  
  
-   Se il <xref:System.Globalization.CultureInfo.CultureTypes%2A> valore <xref:System.Globalization.CultureTypes?displayProperty=nameWithType>e il computer in cui viene deserializzata non dispone di impostazioni cultura personalizzate utente installata, non è possibile deserializzare il.  
  
-   Se il <xref:System.Globalization.CultureInfo.CultureTypes%2A> valore <xref:System.Globalization.CultureTypes?displayProperty=nameWithType>e il computer in cui viene deserializzata non dispone di queste impostazioni cultura di sostituzione, verrà deserializzata con lo stesso nome, ma non tutte le stesse caratteristiche. Ad esempio, se en-US è una lingua di sostituzione nel computer, ma non nel computer B e un <xref:System.Globalization.CultureInfo> dell'oggetto che fa riferimento a queste impostazioni cultura viene serializzato nel computer e deserializzato nel computer B, quindi nessuna delle caratteristiche delle impostazioni cultura personalizzate trasmesso. Le impostazioni cultura vengono deserializzate correttamente, ma con un significato diverso.  
  
<a name="CPanel"></a>   
## <a name="control-panel-overrides"></a>Esegue l'override del Pannello di controllo  
 L'utente può scegliere di eseguire l'override di alcuni dei valori associati alla lingua corrente di Windows tramite le opzioni internazionali e della lingua nel Pannello di controllo. Ad esempio, l'utente può scegliere per visualizzare la data in un formato diverso o utilizzare una valuta diversa da quella predefinita per le impostazioni cultura. In generale, le applicazioni devono rispettare questi override dell'utente.  
  
 Se <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è `true` e le impostazioni cultura specificate corrispondono alla lingua corrente di Windows, il <xref:System.Globalization.CultureInfo> utilizzerà tali override, incluse le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> , proprietà e le proprietà del <xref:System.Globalization.NumberFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Se le impostazioni utente non sono compatibili con le impostazioni cultura associate di <xref:System.Globalization.CultureInfo>, ad esempio, se il calendario selezionato non è uno del <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, i risultati dei metodi e i valori delle proprietà sono indefiniti.  
  
<a name="AlternateSort"></a>   
## <a name="alternate-sort-orders"></a>Tipi di ordinamento alternativo  
 Alcune impostazioni cultura supportano più di un criterio di ordinamento. Ad esempio:  
  
-   Le impostazioni cultura spagnole (Spagna) dispone di due tipi di ordinamento: ordinamento internazionale predefinito e l'ordinamento tradizionale. Quando crea un'istanza un <xref:System.Globalization.CultureInfo> dell'oggetto con il nome delle impostazioni cultura es-ES, viene usato l'ordinamento internazionale. Quando crea un'istanza un <xref:System.Globalization.CultureInfo> dell'oggetto con il nome delle impostazioni cultura es-ES-tradnl, viene usato l'ordinamento tradizionale.  
  
-   Le impostazioni cultura zh-CN (cinese (semplificato, Repubblica popolare cinese)) supportano due tipi di ordinamento: da pronuncia (predefinito) e al numero di tratti. Quando crea un'istanza un <xref:System.Globalization.CultureInfo> dell'oggetto con il nome delle impostazioni cultura zh-CN, viene usato l'ordinamento predefinito. Quando crea un'istanza un <xref:System.Globalization.CultureInfo> dell'oggetto con un identificatore locale della 0x00020804, le stringhe vengono ordinate al numero di tratti.  
  
 La tabella seguente elenca le lingue che supportano i tipi di ordinamento alternativo e gli identificatori per l'ordinamento predefiniti e alternativi.  
  
|Nome delle impostazioni cultura|culture|Identificatore e il nome di ordinamento predefinito|Identificatore e il nome di ordinamento alternativo|  
|------------------|-------------|--------------------------------------|----------------------------------------|  
|es-ES|Spagnolo (Spagna)|International: 0x00000C0A|Tradizionale: 0x0000040A|  
|zh-TW|Cinese (Taiwan)|Numero di tratti: 0x00000404|Bopomofo: 0x00030404|  
|zh-CN|Cinese (Repubblica popolare cinese)|Pronuncia: 0x00000804|Numero di tratti: 0x00020804|  
|zh-HK|Cinese (Hong Kong SAR)|Numero di tratti: 0x00000c04|Numero di tratti: 0x00020c04|  
|zh-SG|Cinese (Singapore)|Pronuncia: 0x00001004|Numero di tratti: 0x00021004|  
|zh-MO|Cinese (Macao)|Pronuncia: 0x00001404|Numero di tratti: 0x00021404|  
|ja-JP|Giapponese (Giappone)|Predefinito: 0x00000411|Unicode: 0x00010411|  
|ko-KR|Coreano (Corea)|Predefinito: 0x00000412|Coreano Xwansung - Unicode: 0x00010412|  
|de-DE|Tedesco (Germania)|Dizionario: 0x00000407|Ordinamento alfabetico telefonico DIN: 0x00010407|  
|hu-HU|Ungherese (Ungheria)|Predefinito: 0x0000040e|Ordinamento tecnico: 0x0001040e|  
|Ka-GE|Georgiano (Georgia)|Tradizionale: 0x00000437|Ordinamento moderno: 0x00010437|  
  
<a name="Windows"></a>   
## <a name="the-current-culture-and-uwp-apps"></a>Le impostazioni cultura correnti e App UWP  
 Nelle app di Windows della piattaforma UWP (Universal), il <xref:System.Globalization.CultureInfo.CurrentCulture%2A> e <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> proprietà sono di lettura / scrittura, come nelle app .NET Framework e .NET Core. Tuttavia, le app UWP riconoscono singole impostazioni cultura. Il <xref:System.Globalization.CultureInfo.CurrentCulture%2A> e <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> mappa di proprietà per il primo valore nel [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) insieme.  

In applicazioni .NET Framework e .NET Core, la lingua corrente è un'impostazione per singoli thread e <xref:System.Globalization.CultureInfo.CurrentCulture%2A> e <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> riflettono le impostazioni cultura e le impostazioni cultura dell'interfaccia utente del thread corrente. Nelle App UWP, esegue il mapping le impostazioni cultura correnti per il [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) raccolta, è un'impostazione globale. L'impostazione di <xref:System.Globalization.CultureInfo.CurrentCulture%2A> o <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> proprietà modifica le impostazioni cultura dell'intera app; non è possibile impostare le impostazioni cultura in base al thread.
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Globalization.CultureInfo> oggetto per lo spagnolo (Spagna) con l'ordinamento internazionale e un'altra <xref:System.Globalization.CultureInfo> oggetto con l'ordinamento tradizionale.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
    <altmember cref="T:System.Globalization.RegionInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Globalization.CultureInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">Identificatore <see cref="T:System.Globalization.CultureInfo" /> predefinito, proprietà <see cref="P:System.Globalization.CultureInfo.LCID" /> di un oggetto <see cref="T:System.Globalization.CultureInfo" /> esistente o identificatore di impostazioni cultura solo Windows.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Globalization.CultureInfo" /> in base alle impostazioni cultura specificate dall'identificatore delle impostazioni cultura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificatori delle impostazioni cultura predefinite sono elencati nel [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) a Developer Center.  
  
 Nella maggior parte dei casi, il `culture` parametro viene eseguito il mapping all'identificatore delle impostazioni locali National Language Support (NLS) corrispondente. Il valore della `culture` parametro diventa il valore della <xref:System.Globalization.CultureInfo.LCID%2A> proprietà del nuovo <xref:System.Globalization.CultureInfo>.  
  
 Si consiglia di chiamare il costruttore del nome delle impostazioni locali <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, poiché i nomi delle impostazioni locali sono preferibili per LCID. Per impostazioni locali personalizzate, è necessario un nome delle impostazioni locali.  
  
 L'utente può scegliere di eseguire l'override di alcuni dei valori associati alla lingua corrente di Windows tramite le opzioni internazionali e della lingua nel Pannello di controllo. Ad esempio, l'utente può scegliere per visualizzare la data in un formato diverso o utilizzare una valuta diversa da quella predefinita per le impostazioni cultura. Se l'identificatore di impostazioni cultura specificate corrisponde all'identificatore delle impostazioni cultura della lingua corrente di Windows, questo costruttore crea un <xref:System.Globalization.CultureInfo> che utilizzerà tali override, incluse le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> , proprietà e le proprietà del <xref:System.Globalization.NumberFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Se le impostazioni utente non sono compatibili con le impostazioni cultura associate di <xref:System.Globalization.CultureInfo> (ad esempio, se il calendario selezionato non è uno del <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>) sono definiti i risultati dei metodi e i valori delle proprietà.  
  
 Se l'identificatore di impostazioni cultura specificate non corrisponde l'identificatore delle impostazioni cultura di Windows, questo costruttore crea un <xref:System.Globalization.CultureInfo> che utilizza i valori predefiniti per le impostazioni cultura specificate.  
  
 Il <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è sempre impostata su `true`.  
  
 Si supponga, ad esempio, che arabe (Arabia Saudita) sono la lingua di Windows corrente e l'utente ha modificato il calendario Hijri a quello gregoriano.  
  
-   Con `CultureInfo("0x0401")` (impostazioni cultura nome ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.GregorianCalendar> (ovvero l'impostazione dell'utente) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `true`.  
  
-   Con `CultureInfo("0x041E")` (impostazioni cultura nome th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.ThaiBuddhistCalendar> (ovvero il calendario predefinito per th-TH) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `true`.  
  
 Per le lingue che utilizzano il simbolo dell'euro, .NET Framework e Windows XP impostare valuta predefinita euro. Tuttavia, le versioni precedenti di Windows non. Se l'utente di una versione precedente di Windows non è stato modificato l'impostazione di valuta tramite le opzioni internazionali e della lingua nel Pannello di controllo, la valuta potrebbe essere errata. Per utilizzare l'impostazione predefinita di .NET Framework per la valuta, l'applicazione deve utilizzare un <xref:System.Globalization.CultureInfo> overload del costruttore che accetta un `useUserOverride` parametro e impostarlo su `false`.  
  
> [!NOTE]
>  Per le versioni precedenti sulla compatibilità, delle impostazioni cultura costruito utilizzando un `culture` parametro di 0x0004 o 0x7c04 avrà un <xref:System.Globalization.CultureInfo.Name%2A> proprietà zh-CHS o zh-CHT, rispettivamente. È invece preferibile creare le impostazioni cultura utilizzando i nomi delle impostazioni cultura standard correnti di zh-Hans o zh-Hant, a meno che non esista un motivo per utilizzare i nomi precedenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="culture" /> è minore di zero.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="culture" /> non è un identificatore di impostazioni cultura valido. Per altre informazioni, vedere la sezione Note per i chiamanti.</exception>
        <block subset="none" type="usage">
          <para>Il [! INCLUDE[net_v35_long](~/Includes/NET-v35-Long-MD.MD)] e versioni precedenti generano un <see cref="T:System.ArgumentException" /> se <paramref name="culture" /> non è un identificatore di impostazioni cultura valido. A partire da di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)], questo costruttore genera un <see cref="T:System.Globalization.CultureNotFoundException" />. A partire da app eseguite in di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)] o versione successiva in Windows 7 o versioni successive, il metodo tenta di recuperare un <see cref="T:System.Globalization.CultureInfo" /> oggetto il cui identificatore è <paramref name="culture" /> dal sistema operativo; se il sistema operativo non supporta le specifiche impostazioni cultura , il metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" /> (eccezione).</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome <see cref="T:System.Globalization.CultureInfo" /> predefinito, proprietà <see cref="P:System.Globalization.CultureInfo.Name" /> di un oggetto <see cref="T:System.Globalization.CultureInfo" /> esistente o nome di impostazioni cultura solo Windows. <c>name</c> non è soggetto alla distinzione tra maiuscole e minuscole.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Globalization.CultureInfo" /> in base alle impostazioni cultura specificate per nome.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco di nomi di impostazioni cultura predefinite, vedere il [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) a Developer Center. Inoltre, a partire da Windows 10, `name` può essere qualsiasi tag di lingua BCP-47 valido.  
  
 Se `name` è <xref:System.String.Empty?displayProperty=nameWithType>, il costruttore crea un'istanza delle impostazioni cultura invarianti; ciò equivale a recuperare il valore della <xref:System.Globalization.CultureInfo.InvariantCulture%2A> proprietà.  
  
 L'utente può scegliere di eseguire l'override di alcuni dei valori associati alla lingua corrente di Windows tramite le opzioni internazionali e della lingua nel Pannello di controllo. Ad esempio, l'utente può scegliere per visualizzare la data in un formato diverso o utilizzare una valuta diversa da quella predefinita per le impostazioni cultura. Se l'identificatore delle impostazioni cultura associate `name` corrispondenze l'identificatore delle impostazioni cultura della lingua corrente di Windows, questo costruttore crea un <xref:System.Globalization.CultureInfo> oggetto che utilizza tali override, incluse le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo>istanza restituita dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> , proprietà e le proprietà del <xref:System.Globalization.NumberFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Se le impostazioni utente non sono compatibili con le impostazioni cultura associate di <xref:System.Globalization.CultureInfo>, ad esempio, se il calendario selezionato non è uno del <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, i risultati dei metodi e i valori delle proprietà sono indefiniti.  
  
 Se l'identificatore delle impostazioni cultura associate `name` non corrisponde l'identificatore delle impostazioni cultura della lingua corrente di Windows, questo costruttore crea un <xref:System.Globalization.CultureInfo> oggetto che utilizza i valori predefiniti per le impostazioni cultura specificate.  
  
 Il <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è sempre impostata su `true`.  
  
 Ad esempio, si supponga che arabe (Arabia Saudita) sono le impostazioni cultura correnti di Windows e l'utente ha modificato il calendario Hijri a quello gregoriano.  
  
-   Con `CultureInfo("ar-SA")`, <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.GregorianCalendar> (ovvero l'impostazione dell'utente) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `true`.  
  
-   Con `CultureInfo("th-TH")`, <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.ThaiBuddhistCalendar> (ovvero il calendario predefinito per th-TH) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `true`.  
  
 Il <xref:System.Globalization.CultureInfo.LCID%2A> proprietà del nuovo <xref:System.Globalization.CultureInfo> è impostata sull'identificatore di lingua associato al nome specificato.  
  
 Per le lingue che utilizzano il simbolo dell'euro, .NET Framework e Windows XP impostare valuta predefinita euro. Tuttavia, le versioni precedenti di Windows non eseguire questa operazione. Se l'utente di una versione precedente di Windows non è stato modificato l'impostazione di valuta tramite le opzioni internazionali e della lingua nel Pannello di controllo, la valuta potrebbe essere errata. Per utilizzare l'impostazione predefinita di .NET Framework per la valuta, l'applicazione deve utilizzare un <xref:System.Globalization.CultureInfo> overload del costruttore che accetta un `useUserOverride` parametro e impostarlo su `false`.  
  
   
  
## Examples  
 L'esempio seguente recupera le impostazioni cultura correnti. Se è diverso dalle impostazioni cultura francesi (Francia), chiama il <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> costruttore per creare un'istanza di un <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura francesi (Francia) e lo rende impostazioni cultura del thread corrente. In caso contrario, crea un'istanza di un <xref:System.Globalization.CultureInfo> oggetto che rappresenta la lingua francese (Lussemburgo) e lo rende le impostazioni cultura correnti.  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> è null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="name" /> non è un nome di impostazioni cultura valido. Per altre informazioni, vedere la sezione Note per i chiamanti.</exception>
        <block subset="none" type="usage">
          <para>Il [! INCLUDE[net_v35_long](~/Includes/NET-v35-Long-MD.MD)] e versioni precedenti generano un <see cref="T:System.ArgumentException" /> se <paramref name="name" /> non è un nome di impostazioni cultura valido. A partire da di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)], questo costruttore genera un <see cref="T:System.Globalization.CultureNotFoundException" />. A partire da app eseguite in di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)] o versione successiva in Windows 7 o versioni successive, il metodo tenta di recuperare un <see cref="T:System.Globalization.CultureInfo" /> oggetto il cui identificatore è <paramref name="name" /> dal sistema operativo; se il sistema operativo non supporta le specifiche impostazioni cultura e se <paramref name="name" /> non corrisponde al nome di una lingua supplementare o sostituzione, il metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" /> (eccezione).</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture, bool useUserOverride);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
        <Parameter Name="useUserOverride" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">Identificatore <see cref="T:System.Globalization.CultureInfo" /> predefinito, proprietà <see cref="P:System.Globalization.CultureInfo.LCID" /> di un oggetto <see cref="T:System.Globalization.CultureInfo" /> esistente o identificatore di impostazioni cultura solo Windows.</param>
        <param name="useUserOverride">Valore booleano che indica se usare le impostazioni cultura selezionate dall'utente (<see langword="true" />) oppure quelle predefinite (<see langword="false" />).</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Globalization.CultureInfo" /> in base alle impostazioni cultura specificate dall'identificatore di impostazioni cultura e al valore booleano che specifica se usare le impostazioni cultura del sistema selezionate dall'utente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificatori delle impostazioni cultura predefinite sono elencati nel [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) a Developer Center.  
  
 Nella maggior parte dei casi, il `culture` parametro viene eseguito il mapping all'identificatore delle impostazioni locali National Language Support (NLS) corrispondente. Il valore della `culture` parametro diventa il valore della <xref:System.Globalization.CultureInfo.LCID%2A> proprietà del nuovo <xref:System.Globalization.CultureInfo>.  
  
 Si consiglia di chiamare il costruttore del nome delle impostazioni locali <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, poiché i nomi delle impostazioni locali sono preferibili per LCID. Per impostazioni locali personalizzate, è necessario un nome delle impostazioni locali.  
  
 L'utente può scegliere di eseguire l'override di alcuni dei valori associati alla lingua corrente di Windows tramite le opzioni internazionali e della lingua nel Pannello di controllo. Ad esempio, l'utente può scegliere per visualizzare la data in un formato diverso o utilizzare una valuta diversa da quella predefinita per le impostazioni cultura.  
  
 Le applicazioni devono in genere non impedire override dell'utente. Si noti che la disattivazione di sostituzioni non garantiscono di per sé la stabilità dei dati; vedere il post di blog [dati delle impostazioni cultura non devono essere considerati stabili (tranne invariante)](http://go.microsoft.com/fwlink/?LinkId=156850).  
  
 Se il <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostata su `true` e l'identificatore di lingua specificato corrisponde all'identificatore di impostazioni cultura correnti di Windows, questo costruttore crea un <xref:System.Globalization.CultureInfo> che utilizzerà tali override, incluse le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> , proprietà e le proprietà del <xref:System.Globalization.NumberFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Se le impostazioni utente non sono compatibili con le impostazioni cultura associate di <xref:System.Globalization.CultureInfo>, ad esempio, se il calendario selezionato non è uno del <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, i risultati dei metodi e i valori delle proprietà sono indefiniti.  
  
 In caso contrario, questo costruttore crea un <xref:System.Globalization.CultureInfo> che utilizza i valori predefiniti per le impostazioni cultura specificate.  
  
 Il valore di `useUserOverride` parametro diventa il valore della <xref:System.Globalization.CultureInfo.UseUserOverride%2A> proprietà.  
  
 Ad esempio, si supponga che arabe (Arabia Saudita) sono le impostazioni cultura correnti di Windows e l'utente ha modificato il calendario Hijri a quello gregoriano.  
  
-   Con `CultureInfo("0x0401", true)` (impostazioni cultura nome ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.GregorianCalendar> (ovvero l'impostazione dell'utente) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `true`.  
  
-   Con `CultureInfo("0x0401", false)` (impostazioni cultura nome ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.HijriCalendar> (ovvero il calendario predefinito per ar-SA) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `false`.  
  
-   Con `CultureInfo("0x041E", true)` (impostazioni cultura nome th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.ThaiBuddhistCalendar> (ovvero il calendario predefinito per th-TH) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `true`.  
  
-   Con `CultureInfo("0x041E", false)` (impostazioni cultura nome th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.ThaiBuddhistCalendar> (ovvero il calendario predefinito per th-TH) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `false`.  
  
 Per le lingue che utilizzano il simbolo dell'euro, .NET Framework e Windows XP impostare valuta predefinita euro. Tuttavia, le versioni precedenti di Windows non. Se l'utente di una versione precedente di Windows non è stato modificato l'impostazione di valuta tramite le opzioni internazionali e della lingua nel Pannello di controllo, la valuta potrebbe essere errata. Per utilizzare l'impostazione predefinita di .NET Framework per la valuta, l'applicazione deve impostare la `useUserOverride` parametro `false`.  
  
> [!NOTE]
>  Per le versioni precedenti sulla compatibilità, delle impostazioni cultura costruito utilizzando un `culture` parametro di 0x0004 o 0x7c04 avrà un <xref:System.Globalization.CultureInfo.Name%2A> proprietà zh-CHS o zh-CHT, rispettivamente. È invece preferibile creare le impostazioni cultura utilizzando i nomi delle impostazioni cultura standard correnti di zh-Hans o zh-Hant, a meno che non esista un motivo per utilizzare i nomi precedenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="culture" /> è minore di zero.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="culture" /> non è un identificatore di impostazioni cultura valido. Per altre informazioni, vedere la sezione Note per i chiamanti.</exception>
        <block subset="none" type="usage">
          <para>Il [! INCLUDE[net_v35_long](~/Includes/NET-v35-Long-MD.MD)] e versioni precedenti generano un <see cref="T:System.ArgumentException" /> se <paramref name="culture" /> non è un identificatore di impostazioni cultura valido. A partire da di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)], questo costruttore genera un <see cref="T:System.Globalization.CultureNotFoundException" />. A partire da app eseguite in di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)] o versione successiva in Windows 7 o versioni successive, il metodo tenta di recuperare un <see cref="T:System.Globalization.CultureInfo" /> oggetto il cui identificatore è <paramref name="culture" /> dal sistema operativo; se il sistema operativo non supporta le specifiche impostazioni cultura , il metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" /> (eccezione).</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name, bool useUserOverride);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="useUserOverride" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Nome <see cref="T:System.Globalization.CultureInfo" /> predefinito, proprietà <see cref="P:System.Globalization.CultureInfo.Name" /> di un oggetto <see cref="T:System.Globalization.CultureInfo" /> esistente o nome di impostazioni cultura solo Windows. <c>name</c> non è soggetto alla distinzione tra maiuscole e minuscole.</param>
        <param name="useUserOverride">Valore booleano che indica se usare le impostazioni cultura selezionate dall'utente (<see langword="true" />) oppure quelle predefinite (<see langword="false" />).</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Globalization.CultureInfo" /> in base alle impostazioni cultura specificate per nome e al valore booleano che indica se usare le impostazioni cultura del sistema selezionate dall'utente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco di nomi di impostazioni cultura predefinite, vedere il [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) a Developer Center. Inoltre, a partire da Windows 10, `name` può essere qualsiasi tag di lingua BCP-47 valido.  
  
 Se `name` è <xref:System.String.Empty?displayProperty=nameWithType>, il costruttore crea un'istanza delle impostazioni cultura invarianti; ciò equivale a recuperare il valore della <xref:System.Globalization.CultureInfo.InvariantCulture%2A> proprietà.  
  
 L'utente può scegliere di eseguire l'override di alcuni dei valori associati alla lingua di Windows corrente tramite le opzioni internazionali e della lingua nel Pannello di controllo. Ad esempio, l'utente può scegliere per visualizzare la data in un formato diverso o utilizzare una valuta diversa da quella predefinita per le impostazioni cultura.  
  
 Le applicazioni devono in genere non impedire override dell'utente. Si noti che la disattivazione di sostituzioni non garantiscono di per sé la stabilità dei dati; vedere il post di blog [dati delle impostazioni cultura non devono essere considerati stabili (tranne invariante)](http://go.microsoft.com/fwlink/?LinkId=156850).  
  
 Se il <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostata su `true` e l'identificatore di impostazioni cultura associata al nome di impostazioni cultura specificate corrisponde all'identificatore delle impostazioni cultura della lingua corrente di Windows, questo costruttore crea un <xref:System.Globalization.CultureInfo> che utilizzerà tali override, incluse le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> , proprietà e le proprietà del <xref:System.Globalization.NumberFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Se le impostazioni utente non sono compatibili con le impostazioni cultura associate di <xref:System.Globalization.CultureInfo>, ad esempio, se il calendario selezionato non è uno del <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, i risultati dei metodi e i valori delle proprietà sono indefiniti.  
  
 In caso contrario, questo costruttore crea un <xref:System.Globalization.CultureInfo> che utilizza i valori predefiniti per le impostazioni cultura specificate.  
  
 Il valore di `useUserOverride` parametro diventa il valore della <xref:System.Globalization.CultureInfo.UseUserOverride%2A> proprietà.  
  
 Ad esempio, si supponga che arabe (Arabia Saudita) sono le impostazioni cultura correnti di Windows e l'utente ha modificato il calendario Hijri a quello gregoriano.  
  
-   Con `CultureInfo("ar-SA", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.GregorianCalendar> (ovvero l'impostazione dell'utente) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `true`.  
  
-   Con `CultureInfo("ar-SA", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.HijriCalendar> (ovvero il calendario predefinito per ar-SA) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `false`.  
  
-   Con `CultureInfo("th-TH", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.ThaiBuddhistCalendar> (ovvero il calendario predefinito per th-TH) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `true`.  
  
-   Con `CultureInfo("th-TH", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> è impostato su <xref:System.Globalization.ThaiBuddhistCalendar> (ovvero il calendario predefinito per th-TH) e <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è impostato su `false`.  
  
 Il <xref:System.Globalization.CultureInfo.LCID%2A> proprietà del nuovo <xref:System.Globalization.CultureInfo> è impostata sull'identificatore di lingua associato al nome specificato.  
  
 Per le lingue che utilizzano il simbolo dell'euro, .NET Framework e Windows XP impostare valuta predefinita euro. Tuttavia, le versioni precedenti di Windows non eseguire questa operazione. Se l'utente di una versione precedente di Windows non è stato modificato l'impostazione di valuta tramite le opzioni internazionali e della lingua nel Pannello di controllo, la valuta potrebbe essere errata. Per utilizzare l'impostazione predefinita di .NET Framework per la valuta, l'applicazione deve impostare la `useUserOverride` parametro `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> è null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="name" /> non è un nome di impostazioni cultura valido. Per altre informazioni, vedere la sezione Note per i chiamanti.</exception>
        <block subset="none" type="usage">
          <para>Il [! INCLUDE[net_v35_long](~/Includes/NET-v35-Long-MD.MD)] e versioni precedenti generano un <see cref="T:System.ArgumentException" /> se <paramref name="name" /> non è un nome di impostazioni cultura valido. A partire da di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)], questo costruttore genera un <see cref="T:System.Globalization.CultureNotFoundException" />. A partire da app eseguite in di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)] o versione successiva in Windows 7 o versioni successive, il metodo tenta di recuperare un <see cref="T:System.Globalization.CultureInfo" /> oggetto il cui identificatore è <paramref name="name" /> dal sistema operativo; se il sistema operativo non supporta le specifiche impostazioni cultura e se <paramref name="name" /> non corrisponde al nome di una lingua supplementare o sostituzione, il metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" /> (eccezione).</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar Calendar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il calendario predefinito usato per le impostazioni cultura.</summary>
        <value>Oggetto <see cref="T:System.Globalization.Calendar" /> che rappresenta il calendario predefinito usato per le impostazioni cultura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'utente può scegliere di eseguire l'override di alcuni dei valori associati alla lingua corrente di Windows tramite le opzioni internazionali e della lingua nel Pannello di controllo. Ad esempio, l'utente può scegliere per visualizzare la data in un formato diverso o utilizzare una valuta diversa da quella predefinita per le impostazioni cultura.  
  
 Se <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è `true` e le impostazioni cultura specificate corrispondono alla lingua corrente di Windows, il <xref:System.Globalization.CultureInfo> utilizzerà tali override, incluse le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> , proprietà e le proprietà del <xref:System.Globalization.NumberFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Se le impostazioni utente non sono compatibili con le impostazioni cultura associate di <xref:System.Globalization.CultureInfo>, ad esempio, se il calendario selezionato non è uno del <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, i risultati dei metodi e i valori delle proprietà sono indefiniti.  
  
 Pertanto, se <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è `true`, il valore di questa proprietà potrebbe essere diverso dal calendario predefinito usato dalle impostazioni cultura.  
  
 L'applicazione viene modificato il calendario utilizzato da corrente <xref:System.Globalization.CultureInfo> impostando il <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> proprietà di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, che è un'istanza del <xref:System.Globalization.DateTimeFormatInfo> classe. Il nuovo calendario deve essere uno dei calendari elencati in <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> include anche altre proprietà che consentono di personalizzare la formattazione di data e ora associata a tale <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCachedData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aggiorna le informazioni relative alle impostazioni cultura memorizzate nella cache.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informazioni, ad esempio i modelli di lingua e il formato predefinito, vengano memorizzato nella cache la prima volta che viene richiesto. Tali informazioni possono variare nel corso della durata del <xref:System.AppDomain>, ad esempio, quando l'utente modifica le opzioni internazionali e della lingua nel Pannello di controllo. Tuttavia, la <xref:System.Globalization.CultureInfo> classe non rileva automaticamente le modifiche nelle impostazioni di sistema.  
  
 Il <xref:System.Globalization.CultureInfo.ClearCachedData%2A> metodo cancella la cache di <xref:System.Globalization.CultureInfo> degli oggetti creati da <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> e aggiorna le informazioni contenute nel <xref:System.Globalization.CultureInfo.CurrentCulture%2A>, <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>, e <xref:System.Globalization.RegionInfo.CurrentRegion%2A> proprietà, in base alle impostazioni correnti di sistema.  
  
 Il <xref:System.Globalization.CultureInfo.ClearCachedData%2A> metodo non aggiorna le informazioni contenute nel <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> proprietà per i thread esistenti. Tuttavia, thread futuri avranno qualsiasi nuovo <xref:System.Globalization.CultureInfo> i valori delle proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia dell'oggetto <see cref="T:System.Globalization.CultureInfo" /> corrente.</summary>
        <returns>Copia dell'oggetto <see cref="T:System.Globalization.CultureInfo" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La copia è modificabile anche se originale <xref:System.Globalization.CultureInfo> è di sola lettura. Di conseguenza, le proprietà del clone possono essere modificate.  
  
 Una copia superficiale di un oggetto è una copia del solo oggetto. Se l'oggetto contiene riferimenti ad altri oggetti, il duplicato superficiale non crea copie degli oggetti cui viene fatto riferimento. Fa riferimento all'oggetto originale invece. Al contrario, una copia completa di un oggetto crea una copia dell'oggetto e una copia di tutti gli elementi direttamente o indirettamente a cui fa riferimento l'oggetto.  
  
 Il <xref:System.Globalization.CultureInfo.Clone%2A> metodo crea una copia superficiale avanzata. Gli oggetti restituiti dal <xref:System.Globalization.CultureInfo.NumberFormat%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.TextInfo%2A>, e <xref:System.Globalization.CultureInfo.Calendar%2A> vengano copiate anche le proprietà. Di conseguenza, il duplicato <xref:System.Globalization.CultureInfo> oggetto può modificare le relative proprietà copiate senza influire sull'originale <xref:System.Globalization.CultureInfo> oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente mostra che anche possibile clonare il <xref:System.Globalization.DateTimeFormatInfo> e <xref:System.Globalization.NumberFormatInfo> le istanze associate di <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CompareInfo CompareInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Globalization.CompareInfo" /> che definisce come confrontare le stringhe per le impostazioni cultura.</summary>
        <value>Oggetto <see cref="T:System.Globalization.CompareInfo" /> che definisce come confrontare le stringhe per le impostazioni cultura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Globalization.CultureInfo.CompareInfo%2A> proprietà restituisce un <xref:System.Globalization.CompareInfo> oggetto che fornisce informazioni specifiche delle impostazioni cultura utilizzate nelle operazioni di confronto di ordinamento e di stringa delle impostazioni cultura.  
  
 L'utente può scegliere di eseguire l'override di alcuni dei valori associati alla lingua corrente di Windows tramite le opzioni internazionali e della lingua nel Pannello di controllo. Ad esempio, l'utente può scegliere per visualizzare la data in un formato diverso o utilizzare una valuta diversa da quella predefinita per le impostazioni cultura.  
  
 Se <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è `true` e le impostazioni cultura specificate corrispondono alla lingua corrente di Windows, il <xref:System.Globalization.CultureInfo> utilizzerà tali override, incluse le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> , proprietà e le proprietà del <xref:System.Globalization.NumberFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Se le impostazioni utente non sono compatibili con le impostazioni cultura associate di <xref:System.Globalization.CultureInfo>, ad esempio, se il calendario selezionato non è uno del <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, i risultati dei metodi e i valori delle proprietà sono indefiniti.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Globalization.CultureInfo> per lo spagnolo (Spagna) con l'ordinamento internazionale e un'altra <xref:System.Globalization.CultureInfo> con ordinamento tradizionale.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateSpecificCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CreateSpecificCulture (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo CreateSpecificCulture(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSpecificCulture (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ CreateSpecificCulture(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome predefinito di <see cref="T:System.Globalization.CultureInfo" /> o nome di un oggetto <see cref="T:System.Globalization.CultureInfo" /> esistente. <c>name</c> non è soggetto alla distinzione tra maiuscole e minuscole.</param>
        <summary>Crea un oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni cultura specifiche associate al nome specificato.</summary>
        <returns>Un oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta:  Impostazioni cultura invarianti, se <paramref name="name" /> è una stringa vuota ("").  - oppure - Impostazioni cultura specifiche associate a <paramref name="name" />, se <paramref name="name" /> rappresenta impostazioni cultura non associate ad alcun paese.  - oppure - Impostazioni cultura specificate da <paramref name="name" />, se <paramref name="name" /> rappresenta già impostazioni cultura specifiche.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> metodo esegue il wrapping di una chiamata al <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> costruttore.  
  
> [!NOTE]
>  Per un elenco di nomi di impostazioni cultura predefinite, vedere il [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) a Developer Center. Inoltre, a partire da Windows 10, `name` può essere qualsiasi tag di lingua BCP-47 valido.  
  
 Le impostazioni cultura sono raggruppate in tre gruppi: le impostazioni cultura invarianti, associate ad alcun paese e le impostazioni cultura specifiche. Per ulteriori informazioni, vedere la descrizione del <xref:System.Globalization.CultureInfo> classe.  
  
 Se l'identificatore delle impostazioni cultura delle impostazioni cultura specifica restituita da questo metodo corrisponde all'identificatore delle impostazioni cultura della lingua corrente di Windows, questo metodo crea un <xref:System.Globalization.CultureInfo> esegue l'override di oggetto che viene utilizzata la lingua di Windows. Gli override includono le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> proprietà e <xref:System.Globalization.NumberFormatInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Per creare un'istanza di un <xref:System.Globalization.CultureInfo> dell'oggetto che predefinito impostazioni cultura piuttosto che l'utente esegue l'override, chiamare il <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> costruttore con un valore di `false` per il `useUserOverride` argomento.  
  
 Sebbene il <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> nome di metodo include il termine "Specifica", ricordare che i dati di impostazioni cultura possono cambiare tra le versioni, o a causa di impostazioni cultura personalizzate o a causa di override dell'utente. Utilizzare le impostazioni cultura invarianti o form binario o fisso per il salvataggio dei dati.  
  
   
  
## Examples  
 Nell'esempio seguente recupera una matrice di <xref:System.Globalization.CultureInfo> gli oggetti che rappresentano impostazioni cultura neutre dal <xref:System.Globalization.CultureInfo.GetCultures%2A> (metodo) e le ordina la matrice. Quando scorre gli elementi nella matrice, passa il nome di ogni lingua per il <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> metodo e consente di visualizzare il nome delle impostazioni cultura specifiche restituito dal metodo.  
  
> [!NOTE]
>  L'esempio Usa i nomi delle impostazioni cultura zh-CHS e zh-CHT. Tuttavia, le applicazioni destinate a Windows Vista e versioni successive devono utilizzare zh-Hans anziché zh-CHS e zh-Hant anziché zh-CHT. zh-Hans e zh-Hant rappresentano lo standard corrente e deve essere utilizzati a meno che non esista un motivo per utilizzare i nomi precedenti.  
>   
>  Si noti inoltre che i risultati dell'esempio potrebbero variare in un'installazione di Windows Taiwanese, in cui l'input di una lingua neutra (tradizionale) cinese (zh, zh-CHT e zh-Hant) restituirà zh-TW.  
  
 [!code-csharp[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/CS/createspecificculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/VB/createspecificculture2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="name" /> non è un nome di impostazioni cultura valido.  - oppure - Alle impostazioni cultura specificate da <paramref name="name" /> non sono associate impostazioni cultura specifiche.</exception>
        <exception cref="T:System.NullReferenceException">
          <paramref name="name" /> è null.</exception>
        <block subset="none" type="usage">
          <para>Il [! INCLUDE[net_v35_long](~/Includes/NET-v35-Long-MD.MD)] e versioni precedenti generano un <see cref="T:System.ArgumentException" /> se <paramref name="name" /> non è un nome di impostazioni cultura valido. A partire da di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)], questo metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" />.</para>
        </block>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i tipi di impostazioni cultura che riguardano l'oggetto <see cref="T:System.Globalization.CultureInfo" /> corrente.</summary>
        <value>Combinazione bit per bit di uno o più valori di <see cref="T:System.Globalization.CultureTypes" />. Non è previsto alcun valore predefinito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente illustra il <xref:System.Globalization.CultureTypes> enumerazione e <xref:System.Globalization.CultureInfo.CultureTypes%2A> proprietà.  
  
 [!code-cpp[system.globalization.cultureTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cpp/ct.cpp#1)]
 [!code-csharp[system.globalization.cultureTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cs/ct.cs#1)]
 [!code-vb[system.globalization.cultureTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureTypes/vb/ct.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni cultura usate dal thread corrente.</summary>
        <value>Oggetto che rappresenta le impostazioni cultura usate dal thread corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Globalization.CultureInfo> oggetto restituito da questa proprietà e gli oggetti associati determinare il formato predefinito per le date, ore, numeri, i valori di valuta, l'ordinamento del testo, convenzioni di maiuscole e minuscole e confronti tra stringhe.  
  
 Le impostazioni cultura correnti sono una proprietà del thread in esecuzione, viene restituito da statico <xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType> proprietà. Il valore di <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> proprietà corrisponde al valore del <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> proprietà. Il recupero del valore del <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> proprietà è equivalente al recupero di <xref:System.Globalization.CultureInfo> oggetto restituito dal `Thread.CurrentThread.CurrentCulture` proprietà. A partire dal [!INCLUDE[net_v46](~/includes/net-v46-md.md)], impostando il valore della <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> viene modificata anche proprietà impostazioni cultura del thread corrente.  
  
> [!NOTE]
>  In .NET Framework 4.5.2 e versioni precedenti, il <xref:System.Globalization.CultureInfo.CurrentCulture%2A> proprietà è di sola lettura.  ovvero, è possibile recuperare il valore della proprietà, ma non è possibile impostare. Per modificare le impostazioni cultura correnti, si assegna il <xref:System.Globalization.CultureInfo> oggetto che rappresenta la nuova lingua per il `Thread.CurrentThread.CurrentCulture` proprietà. A partire dal [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Globalization.CultureInfo.CurrentCulture%2A> proprietà è di lettura / scrittura, è possibile impostare e recuperare il valore della proprietà. Se si imposta il valore della proprietà su un <xref:System.Globalization.CultureInfo> oggetto che rappresenta una nuova impostazione cultura, il valore della `Thread.CurrentThread.CurrentCulture` cambia anche proprietà.  
  
 Contenuto della sezione:  
  
 [Determinazione delle impostazioni cultura di un Thread](#ThreadCulture)   
 [Ottenere le impostazioni cultura correnti](#Getting)   
 [Impostare in modo esplicito la proprietà CurrentCulture](#ExplicitSetting)   
 [Le impostazioni cultura correnti e override dell'utente](#Overrides)   
 [Le impostazioni cultura e le app di Windows](#WindowsAndCurr)  
  
<a name="ThreadCulture"></a>   
## <a name="how-a-threads-culture-is-determined"></a>Determinazione delle impostazioni cultura di un Thread  
 Quando viene avviato un thread, è possibile che le impostazioni cultura inizialmente vengano determinata come segue:  
  
-   Recuperando le impostazioni cultura specificati tramite il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> proprietà nel dominio dell'applicazione in cui il thread è in esecuzione, se il valore della proprietà non è `null`.  
  
-   Se il thread è un thread del pool di thread che esegue un'operazione asincrona basata su attività e l'app è destinato il [!INCLUDE[net_v46](~/includes/net-v46-md.md)] o una versione successiva di .NET Framework, le impostazioni cultura è determinata dalle impostazioni cultura del thread chiamante.  Nell'esempio seguente modifica le impostazioni cultura correnti in portoghese (Brasile) e avvia sei attività, ognuna delle quali consente di visualizzare il relativo ID thread, l'ID attività e la relativa lingua corrente. Ognuna delle attività (e i thread) ha ereditato le impostazioni cultura del thread chiamante.  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Async1.vb#14)]  
  
     Per ulteriori informazioni, vedere la sezione "Operazioni asincrone basate su attività e delle impostazioni cultura" nel <xref:System.Globalization.CultureInfo> argomento.  
  
-   Tramite la chiamata Windows `GetUserDefaultLocaleName` (funzione).  
  
 Si noti che se si imposta una lingua specifica è diversa da impostazioni cultura sistema installato o la lingua preferita dell'utente e avvio dell'applicazione più thread, le impostazioni cultura correnti di tali thread restituito da, le impostazioni cultura di `GetUserDefaultLocaleName` funzione, a meno che non si assegna una lingua per il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> proprietà nel dominio dell'applicazione in cui il thread è in esecuzione.  
  
 Per ulteriori informazioni sulla determinazione le impostazioni cultura di un thread, vedere la sezione "Impostazioni cultura e al thread" nel <xref:System.Globalization.CultureInfo> pagina di riferimento.  
  
<a name="Getting"></a>   
## <a name="getting-the-current-culture"></a>Ottenere le impostazioni cultura correnti  
 Il <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> proprietà è un'impostazione per ogni thread, vale a dire, ogni thread può avere una proprio delle impostazioni cultura. Per il recupero del valore di ottenere le impostazioni cultura del thread corrente di <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> proprietà, come nell'esempio riportato di seguito viene illustrato.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Get1.vb#5)]  
  
 È inoltre possibile recuperare il valore delle impostazioni cultura del thread corrente dal <xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType> proprietà.  
  
<a name="ExplicitSetting"></a>   
## <a name="explicitly-setting-the-currentculture-property"></a>Impostare in modo esplicito la proprietà CurrentCulture  
 A partire dal [!INCLUDE[net_v46](~/includes/net-v46-md.md)], per modificare la lingua utilizzata da un thread già esistente, si imposta la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> proprietà per le nuove impostazioni cultura. Se si modifica in modo esplicito le impostazioni cultura di un thread in questo modo, che modificano persiste se il thread supera i limiti del dominio applicazione. L'esempio seguente modifica impostazioni cultura del thread corrente sull'olandese (Paesi Bassi). Viene inoltre illustrato che, quando il thread corrente supera i limiti del dominio applicazione, la relativa lingua corrente rimane modificato.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/changeculture11.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/changeculture11.vb#11)]  
  
> [!NOTE]
>  Modifica le impostazioni cultura utilizzando il <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> proprietà richiede un <xref:System.Security.Permissions.SecurityPermission> autorizzazione con il <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> valore impostato. La modifica dei thread è pericolosa a causa dello stato di protezione associato ai thread. Pertanto, deve avere l'autorizzazione solo a codice attendibile e solo se necessario. È possibile modificare impostazioni cultura del thread in codice parzialmente attendibile.  
  
 A partire dal [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], in modo esplicito, è possibile modificare le impostazioni cultura del thread corrente per una lingua specifica (ad esempio francese (Canada)) o una lingua (ad esempio francese). Quando un <xref:System.Globalization.CultureInfo> oggetto rappresenta una lingua, i valori di <xref:System.Globalization.CultureInfo> proprietà, ad esempio <xref:System.Globalization.CultureInfo.Calendar%2A>, <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.NumberFormat%2A>, e <xref:System.Globalization.CultureInfo.TextInfo%2A> riflettono le impostazioni cultura specifiche sono associata il lingua neutra. Ad esempio, la lingua principale per la lingua inglese è l'inglese (Stati Uniti); la lingua principale per le impostazioni cultura tedesche è tedesco (Germania). Nell'esempio seguente viene illustrata la differenza nella formattazione quando le impostazioni cultura correnti sono impostata su una lingua specifica, francese (Canada) e una lingua, francese.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/specific12.cs#12)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/specific12.vb#12)]  
  
 È inoltre possibile utilizzare il <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> proprietà con il <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> proprietà da impostare il <xref:System.Globalization.CultureInfo.CurrentCulture%2A> preferita delle impostazioni cultura, come illustrato nell'esempio seguente una proprietà di un'applicazione ASP.NET per l'utente.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/aspculture13.cs#13)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/aspculture13.vb#13)]  
  
<a name="Overrides"></a>   
## <a name="the-current-culture-and-user-overrides"></a>Le impostazioni cultura correnti e override dell'utente  
 Windows consente agli utenti di eseguire l'override di valori delle proprietà standard di <xref:System.Globalization.CultureInfo> oggetto e gli oggetti associati utilizzando **internazionali e della lingua** nel Pannello di controllo. Il <xref:System.Globalization.CultureInfo> oggetto restituito dal <xref:System.Globalization.CultureInfo.CurrentCulture%2A> proprietà riflette queste utente esegue l'override nei casi seguenti:  
  
-   Se le impostazioni cultura del thread corrente sono impostata in modo implicito da Windows `GetUserDefaultLocaleName` (funzione).  
  
-   Se le impostazioni cultura correnti del thread definito dal <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> proprietà corrisponde alle impostazioni cultura correnti del sistema di Windows.  
  
-   Se le impostazioni cultura del thread corrente sono impostata in modo esplicito a impostazioni cultura restituita dal <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> (metodo) e che le impostazioni cultura corrisponde a impostazioni cultura correnti del sistema di Windows.  
  
-   Se le impostazioni cultura del thread corrente sono impostata in modo esplicito per creare un'istanza di determinate impostazioni cultura di <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> costruttore e che le impostazioni cultura corrisponde a impostazioni cultura correnti del sistema di Windows.  
  
 In alcuni casi, in particolare per le applicazioni server, impostare le impostazioni cultura correnti un <xref:System.Globalization.CultureInfo> oggetto che riflette l'override dell'utente potrebbe essere indesiderata. In alternativa, è possibile impostare impostazioni cultura del thread corrente un <xref:System.Globalization.CultureInfo> oggetto che non rifletta l'utente esegue l'override nei modi seguenti:  
  
-   Chiamando il <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> costruttore con un valore di `false` per il `useUserOverride` argomento.  
  
-   Chiamando il <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> metodo, che restituisce un oggetto nella cache, sola lettura <xref:System.Globalization.CultureInfo> oggetto.  
  
<a name="WindowsAndCurr"></a>   
## <a name="the-current-culture-and-uwp-apps"></a>Le impostazioni cultura correnti e App UWP  
 Nelle app di Windows della piattaforma UWP (Universal), il <xref:System.Globalization.CultureInfo.CurrentCulture%2A> proprietà è di lettura / scrittura, proprio come accade nelle app .NET Framework e .NET Core, è possibile utilizzare per ottenere e impostare le impostazioni cultura correnti. Tuttavia, le app UWP non viene fatta distinzione tra le impostazioni cultura correnti e le impostazioni cultura dell'interfaccia utente correnti. Il <xref:System.Globalization.CultureInfo.CurrentCulture%2A> e <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> mappa di proprietà per il primo valore nel [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) insieme.  

In applicazioni .NET Framework e .NET Core, la lingua corrente è un'impostazione per singoli thread e <xref:System.Globalization.CultureInfo.CurrentCulture%2A> proprietà riflette le impostazioni cultura del thread corrente. Nelle App UWP, esegue il mapping le impostazioni cultura correnti per il [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) proprietà, che è un'impostazione globale. L'impostazione di <xref:System.Globalization.CultureInfo.CurrentCulture%2A> proprietà modifica le impostazioni cultura dell'intera app; non è possibile impostare le impostazioni cultura in base al thread.
  
## Examples  
 Nell'esempio seguente viene illustrato come modificare il <xref:System.Globalization.CultureInfo.CurrentCulture%2A> e <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> del thread corrente.  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La proprietà è impostata su <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per impostare le impostazioni cultura correnti. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></permission>
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
        <altmember cref="T:System.Security.Permissions.SecurityPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni cultura correnti dell'interfaccia utente usate da Gestione risorse per cercare le risorse specifiche delle impostazioni cultura in fase di esecuzione.</summary>
        <value>Impostazioni cultura usate da Gestione risorse per cercare le risorse specifiche delle impostazioni cultura in fase di esecuzione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazioni cultura correnti dell'interfaccia utente sono una proprietà per ogni thread. Ovvero, ogni thread dispone di proprie impostazioni cultura dell'interfaccia utente correnti. Questa proprietà è equivalente al recupero o, a partire dal [!INCLUDE[net_v46](~/includes/net-v46-md.md)], l'impostazione di <xref:System.Globalization.CultureInfo> oggetto assegnato al `System.Threading.Thread.CurrentThread.CurrentUICulture` proprietà. Quando viene avviato un thread, è possibile che le impostazioni cultura dell'interfaccia utente inizialmente vengano determinata come segue:  
  
-   Recuperando le impostazioni cultura specificati tramite il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà nel dominio dell'applicazione in cui il thread è in esecuzione, se il valore della proprietà non è `null`.  
  
-   Se il thread è un thread del pool di thread che esegue un'operazione asincrona basata su attività e l'app è destinato il [!INCLUDE[net_v46](~/includes/net-v46-md.md)] o una versione successiva di .NET Framework, le impostazioni cultura dell'interfaccia utente è determinata dalle impostazioni cultura dell'interfaccia utente del thread chiamante.  Nell'esempio seguente modifica le impostazioni cultura dell'interfaccia utente correnti in portoghese (Brasile) e avvia sei attività, ognuna delle quali consente di visualizzare il relativo ID thread, l'ID attività e la relativa lingua dell'interfaccia utente corrente. Ognuna delle attività (e i thread) ha ereditato le impostazioni cultura dell'interfaccia utente del thread chiamante.  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Async1.vb#14)]  
  
     Per ulteriori informazioni, vedere la sezione "Operazioni asincrone basate su attività e delle impostazioni cultura" nel <xref:System.Globalization.CultureInfo> argomento.  
  
-   Tramite la chiamata Windows `GetUserDefaultUILanguage` (funzione).  
  
> [!NOTE]
>  Nel [!INCLUDE[Compact](~/includes/compact-md.md)], <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> proprietà è di sola lettura. Le impostazioni cultura dell'interfaccia utente correnti sono determinata dalle impostazioni internazionali del sistema e non possono essere modificata a livello di codice.  
  
 A partire dal [!INCLUDE[net_v46](~/includes/net-v46-md.md)], per modificare le impostazioni cultura dell'interfaccia utente utilizzata da un thread, impostare il <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> proprietà per le nuove impostazioni cultura. Se si modifica in modo esplicito le impostazioni cultura dell'interfaccia utente di un thread in questo modo, che modificano persiste se il thread supera i limiti del dominio applicazione.  
  
> [!NOTE]
>  In .NET Framework 4.5.2 e versioni precedenti, il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> proprietà è di sola lettura.  ovvero, è possibile recuperare il valore della proprietà, ma non è possibile impostare. Per modificare le impostazioni cultura dell'interfaccia utente correnti, si assegna il <xref:System.Globalization.CultureInfo> oggetto che rappresenta le nuove impostazioni cultura dell'interfaccia utente per il `Thread.CurrentThread.CurrentUICulture` proprietà. A partire dal [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà è di lettura / scrittura, è possibile impostare e recuperare il valore della proprietà. Se si imposta il valore della proprietà su un <xref:System.Globalization.CultureInfo> oggetto che rappresenta una nuova impostazione cultura, il valore della `Thread.CurrentThread.CurrentCulture` cambia anche proprietà.  
  
 Contenuto della sezione:  
  
 [Ottenere le impostazioni cultura dell'interfaccia utente correnti](#Getting)   
 [Impostare in modo esplicito le impostazioni cultura dell'interfaccia utente correnti](#Explicit)   
 [Impostazione implicita delle impostazioni cultura correnti dell'interfaccia utente](#Implicit)   
 [Considerazioni sulla sicurezza](#Security)   
 [Le app di Windows e di impostazioni cultura dell'interfaccia utente corrente](#WindowsAndCurrUI)  
  
<a name="Getting"></a>   
## <a name="getting-the-current-ui-culture"></a>Ottenere le impostazioni cultura dell'interfaccia utente correnti  
 Il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà è un'impostazione per ogni thread, vale a dire, ogni thread può avere una proprio delle impostazioni cultura dell'interfaccia utente. Per il recupero del valore di ottenere le impostazioni cultura dell'interfaccia utente del thread corrente di <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà, come nell'esempio riportato di seguito viene illustrato.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Get1.vb#5)]  
  
 È inoltre possibile recuperare il valore delle impostazioni cultura dell'interfaccia utente del thread corrente dal <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> proprietà.  
  
<a name="Explicit"></a>   
## <a name="explicitly-setting-the-current-ui-culture"></a>Impostare in modo esplicito le impostazioni cultura dell'interfaccia utente correnti  
 A partire dal [!INCLUDE[net_v46](~/includes/net-v46-md.md)], è possibile modificare le impostazioni cultura dell'interfaccia utente correnti assegnando un <xref:System.Globalization.CultureInfo> oggetto che rappresenta la nuova lingua per il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà. Entrambi a impostazioni cultura specifiche (ad esempio en-US o de-DE) o a una lingua (ad esempio en o de), è possono impostare le impostazioni cultura dell'interfaccia utente correnti. Nell'esempio seguente imposta le impostazioni cultura dell'interfaccia utente correnti fr-FR o francese (Francia).  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/currentuiculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/currentuiculture1.vb#1)]  
  
 In un'applicazione multithreading, è possibile impostare in modo esplicito le impostazioni cultura dell'interfaccia utente di qualsiasi thread assegnando un <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura del thread <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> proprietà. Se il thread le cui impostazioni cultura per impostare il thread corrente, è possibile assegnare le nuove impostazioni cultura per il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà. Quando le impostazioni cultura dell'interfaccia utente di un thread sono impostata in modo esplicito, che thread mantiene le stesse impostazioni cultura, anche se supera i limiti del dominio applicazione ed esegue codice in un altro dominio applicazione.  
  
<a name="Implicit"></a>   
## <a name="implicitly-setting-the-current-ui-culture"></a>Impostazione implicita delle impostazioni cultura correnti dell'interfaccia utente  
 Quando un thread, tra cui il thread principale dell'applicazione, viene prima creata, per impostazione predefinita, la relativa lingua dell'interfaccia utente corrente è impostato come indicato di seguito:  
  
-   Utilizzando le impostazioni cultura definite per il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà per il dominio applicazione corrente se non è il valore della proprietà `null`.  
  
-   Con impostazioni cultura predefinite del sistema. Nei sistemi che utilizzano il sistema operativo Windows, common language runtime chiama Windows `GetUserDefaultUILanguage` funzione per impostare le impostazioni cultura dell'interfaccia utente correnti. `GetUserDefaultUILanguage` Restituisce le impostazioni cultura dell'interfaccia utente predefinite impostate dall'utente. Se l'utente non ha impostato una lingua dell'interfaccia utente predefinita, restituisce le impostazioni cultura originariamente installate nel sistema.  
  
 Se il thread attraversa i limiti di applicazione e l'esecuzione di codice in un altro dominio applicazione, la lingua viene determinata nello stesso modo di quello di un thread appena creato.  
  
 Si noti che se si imposta una lingua dell'interfaccia utente specifica che è diversa dalla lingua dell'interfaccia utente di sistema installato o delle impostazioni cultura dell'interfaccia utente preferita dell'utente e più thread di avvio dell'applicazione, le impostazioni cultura dell'interfaccia utente correnti di tali thread sarà le impostazioni cultura restituita dal `GetUserDefaultUILanguage`funzione, a meno che non si assegna una lingua per il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà nel dominio dell'applicazione in cui il thread è in esecuzione.  
  
<a name="Security"></a>   
## <a name="security-considerations"></a>Considerazioni sulla sicurezza  
 Per modificare le impostazioni cultura del thread corrente è necessario un <xref:System.Security.Permissions.SecurityPermission> autorizzazione con il <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> valore impostato.  
  
> [!CAUTION]
>  La modifica dei thread è pericolosa a causa dello stato di protezione associato ai thread. Pertanto, deve avere l'autorizzazione solo a codice attendibile e solo se necessario. È possibile modificare impostazioni cultura del thread in codice parzialmente attendibile.  
  
<a name="WindowsAndCurrUI"></a>   
## <a name="the-current-ui-culture-and-uwp-apps"></a>Le impostazioni cultura correnti dell'interfaccia utente e App UWP  
 
Nelle app di Windows della piattaforma UWP (Universal), il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> proprietà è di lettura / scrittura, proprio come accade nelle app .NET Framework e .NET Core, è possibile utilizzare per ottenere e impostare le impostazioni cultura correnti. Tuttavia, le app UWP non viene fatta distinzione tra le impostazioni cultura correnti e le impostazioni cultura dell'interfaccia utente correnti. Il <xref:System.Globalization.CultureInfo.CurrentCulture%2A> e <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> mappa di proprietà per il primo valore nel [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) insieme.

In applicazioni .NET Framework e .NET Core, impostazioni cultura correnti dell'interfaccia utente sono un'impostazione per singoli thread e <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> proprietà riflette le impostazioni cultura dell'interfaccia utente del thread corrente. Nelle App UWP, esegue il mapping le impostazioni cultura correnti per il [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) proprietà, che è un'impostazione globale. L'impostazione di <xref:System.Globalization.CultureInfo.CurrentCulture%2A> proprietà modifica le impostazioni cultura dell'intera app; non è possibile impostare le impostazioni cultura in base al thread.    
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come modificare il <xref:System.Globalization.CultureInfo.CurrentCulture%2A> e <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> del thread corrente.  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La proprietà è impostata su <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La proprietà è impostata su un nome delle impostazioni cultura che non può essere usato per individuare un file di risorse. I nomi dei file di risorse possono includere solo lettere, numeri, trattini o caratteri di sottolineatura.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per impostare le impostazioni cultura dell'interfaccia utente correnti. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></permission>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.DateTimeFormatInfo DateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo DateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::DateTimeFormatInfo ^ DateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto <see cref="T:System.Globalization.DateTimeFormatInfo" /> che definisce il formato culturalmente appropriato per la visualizzazione della data e dell'ora.</summary>
        <value>Oggetto <see cref="T:System.Globalization.DateTimeFormatInfo" /> che definisce il formato culturalmente appropriato per la visualizzazione della data e dell'ora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a>Overrides  
 L'utente può scegliere di eseguire l'override di alcuni dei valori associati alla lingua corrente di Windows tramite le opzioni internazionali e della lingua nel Pannello di controllo. Ad esempio, l'utente può scegliere per visualizzare la data in un formato diverso o utilizzare una valuta diversa da quella predefinita per le impostazioni cultura.  
  
 Se <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è `true` e le impostazioni cultura specificate corrispondono alla lingua corrente di Windows, il <xref:System.Globalization.CultureInfo> utilizzerà tali override, incluse le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> , proprietà e le proprietà del <xref:System.Globalization.NumberFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Se le impostazioni utente non sono compatibili con le impostazioni cultura associate di <xref:System.Globalization.CultureInfo>, ad esempio, se il calendario selezionato non è uno del <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, i risultati dei metodi e i valori delle proprietà sono indefiniti.  
  
 Il valore di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> proprietà e <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà non viene calcolata finché l'applicazione accede alla proprietà. Se l'utente può modificare le impostazioni cultura correnti per una nuova impostazione cultura durante l'esecuzione dell'applicazione e quindi si accede all'applicazione di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> o <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà, l'applicazione recupera i valori predefiniti per le nuove impostazioni cultura anziché le sostituzioni per il impostazioni cultura originali. Per mantenere gli override delle impostazioni cultura correnti originale, l'applicazione deve accedere il <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> e <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà prima di modificare le impostazioni cultura correnti.  
  
   
  
## Examples  
 Esempio di codice seguente mostra che anche possibile clonare il <xref:System.Globalization.DateTimeFormatInfo> e <xref:System.Globalization.NumberFormatInfo> le istanze associate di <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La proprietà è impostata su Null.</exception>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> o una qualsiasi delle proprietà <see cref="T:System.Globalization.DateTimeFormatInfo" /> vengono impostate e l'interfaccia <see cref="T:System.Globalization.CultureInfo" /> è di sola lettura.</exception>
        <block subset="none" type="usage">
          <para>Se <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> è il <see cref="T:System.Globalization.TaiwanCalendar" /> ma la <see cref="P:System.Threading.Thread.CurrentCulture" /> non è impostata su cinese (Taiwan), denominato zh-TW, quindi <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, e <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> restituiscono una stringa vuota ("").</para>
        </block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le impostazioni cultura predefinite per i thread nel dominio dell'applicazione corrente.</summary>
        <value>Le impostazioni cultura predefinite dei thread nel dominio dell'applicazione corrente o <see langword="null" /> se le impostazioni cultura correnti del sistema sono le impostazioni cultura predefinite del thread nel dominio dell'applicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nel [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] e versioni precedenti, per impostazione predefinita, le impostazioni cultura di tutti i thread sono impostata su impostazioni cultura del sistema di Windows. Per le applicazioni con le impostazioni cultura corrente è diverso da impostazioni cultura del sistema predefinito, questo comportamento è spesso indesiderato. Nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> proprietà consente a un'applicazione definire le impostazioni cultura predefinite di tutti i thread in un dominio applicazione.  
  
> [!IMPORTANT]
>  Se non è stato impostato in modo esplicito le impostazioni cultura di eventuali thread in esecuzione in un dominio applicazione, l'impostazione di <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> cambia anche le impostazioni cultura del thread di queste proprietà. Tuttavia, se questi thread vengono eseguiti in un altro dominio applicazione, le impostazioni cultura sono definita per il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> proprietà nel dominio dell'applicazione o, se non è definito alcun valore predefinito, con le impostazioni cultura del sistema predefinito. Per questo motivo, è consigliabile impostare sempre in modo esplicito le impostazioni cultura del thread principale dell'applicazione e non si basano sul <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> proprietà per definire le impostazioni cultura del thread principale dell'applicazione.  
  
 Se è stata impostata in modo esplicito, il valore di <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> proprietà è `null`, e le impostazioni cultura del thread nel dominio applicazione che non sono stati assegnati impostazioni cultura esplicite viene definita dalle impostazioni cultura del sistema di Windows predefinito.  
  
 Per ulteriori informazioni sulle impostazioni cultura, thread e domini applicazione, vedere "impostazioni cultura e thread" e "impostazioni cultura e i domini applicazione" sezioni nel <xref:System.Globalization.CultureInfo> pagina di riferimento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il comportamento predefinito di .NET Framework per la definizione delle impostazioni cultura correnti di un nuovo thread. All'avvio, l'esempio imposta le impostazioni cultura correnti e le impostazioni cultura dell'interfaccia utente correnti francese (Francia) in tutti i sistemi, ad eccezione di quelli in cui la lingua predefinita è già francese (Francia). Se la lingua predefinita è già francese (Francia), il codice imposta le impostazioni cultura correnti e le impostazioni cultura dell'interfaccia utente correnti su inglese (Stati Uniti). Chiama quindi il `DisplayRandomNumbers` routine, che genera tre numeri casuali e li visualizza come valori di valuta. Successivamente, viene creato un nuovo thread che esegue anche il `DisplayRandomNumbers` routine.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture1.vb#1)]  
  
 Come illustrato nell'output dell'esempio, quando si esegue l'esempio in un computer le cui impostazioni cultura del sistema è inglese (Stati Uniti), il thread principale visualizza i valori di valuta usando le convenzioni di formattazione delle impostazioni cultura francesi (Francia). Tuttavia, poiché deriva da impostazioni cultura correnti del sistema di Windows anziché di impostazioni cultura correnti dell'applicazione delle impostazioni cultura del thread di lavoro, il thread di lavoro vengono visualizzati i valori di valuta usando le convenzioni di formattazione delle impostazioni cultura inglese (Stati Uniti).  
  
 L'esempio seguente usa il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> e <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà per definire le impostazioni cultura correnti e corrente delle impostazioni cultura dell'interfaccia utente di un nuovo thread dell'applicazione. All'avvio, l'esempio imposta le impostazioni cultura correnti e le impostazioni cultura dell'interfaccia utente correnti francese (Francia) in tutti i sistemi, ad eccezione di quelli in cui la lingua predefinita è già francese (Francia). Se la lingua predefinita è già francese (Francia), imposta le impostazioni cultura correnti e le impostazioni cultura dell'interfaccia utente correnti su inglese (Stati Uniti). Chiama quindi il `DisplayRandomNumbers` routine, che genera tre numeri casuali e li visualizza come valori di valuta. Successivamente, viene creato un nuovo thread che esegue anche il `DisplayRandomNumbers` routine.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture2.vb#2)]  
  
 Come illustrato nell'output dell'esempio, quando si esegue l'esempio in un computer le cui impostazioni cultura del sistema è inglese (Stati Uniti), il thread principale sia il thread di lavoro vengono visualizzati i valori di valuta usando le convenzioni di formattazione delle impostazioni cultura francesi (Francia).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le impostazioni cultura predefinite dell'interfaccia utente per i thread nel dominio dell'applicazione corrente.</summary>
        <value>Impostazioni cultura dell'interfaccia utente predefinite per i thread nel dominio dell'applicazione corrente oppure <see langword="null" /> se le impostazioni cultura dell'interfaccia utente correnti del sistema sono le impostazioni cultura dell'interfaccia utente predefinite per i thread nel dominio dell'applicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nel [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] e versioni precedenti, per impostazione predefinita, le impostazioni cultura dell'interfaccia utente di tutti i thread sono impostata su impostazioni cultura del sistema di Windows. Per le applicazioni le cui impostazioni cultura dell'interfaccia utente di corrente è diverso da impostazioni cultura del sistema predefinito, questo comportamento è spesso indesiderato. Nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà consente di definire le impostazioni cultura dell'interfaccia utente predefinite di tutti i thread in un dominio applicazione.  
  
> [!IMPORTANT]
>  Se non è stato impostato in modo esplicito le impostazioni cultura dell'interfaccia utente di eventuali thread in esecuzione in un dominio applicazione, l'impostazione di <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> cambia anche le impostazioni cultura del thread di queste proprietà. Tuttavia, se questi thread vengono eseguiti in un altro dominio applicazione, le impostazioni cultura sono definita per il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà nel dominio dell'applicazione o, se non è definito alcun valore predefinito, con le impostazioni cultura del sistema predefinito. Per questo motivo, è consigliabile sempre in modo esplicito le impostazioni cultura del thread principale dell'applicazione e non affidarsi il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà per definire le impostazioni cultura del thread principale dell'applicazione.  
  
 Se è stata impostata in modo esplicito, il valore di <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà è `null`, e le impostazioni cultura correnti di tutti i thread in un dominio applicazione che non sono stati assegnati impostazioni cultura esplicite viene definita dalle impostazioni cultura del sistema di Windows predefinito.  
  
 Per ulteriori informazioni sulle impostazioni cultura, thread e domini applicazione, vedere "impostazioni cultura e thread" e "impostazioni cultura e i domini applicazione" sezioni nel <xref:System.Globalization.CultureInfo> pagina di riferimento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il comportamento predefinito di .NET Framework per la definizione delle impostazioni cultura correnti di un nuovo thread. Usa le risorse della lingua inglese e russa. Il seguente file di testo denominato GreetingStrings.txt contiene le risorse di lingua inglese:  
  
```  
greeting =Hello again!  
newGreeting=Hello!  
```  
  
 Viene compilato in un file. Resources binario denominato GreetingStrings.resources utilizzando il [generatore di File di risorse](~/docs/framework/tools/resgen-exe-resource-file-generator.md) con il comando seguente.  
  
```console  
resgen greetingstrings.txt  
```  
  
 Il seguente file di testo denominato GreetingStrings.ru Strings.ru-RU.txt contiene le risorse di lingua russa:  
  
```  
greeting=Еще раз привет!  
newGreeting=Привет!  
```  
  
 Viene compilato in un file. Resources binario denominato GreetingStrings.ru RU.resources utilizzando il [generatore di File di risorse](~/docs/framework/tools/resgen-exe-resource-file-generator.md) con il comando seguente.  
  
```console  
resgen greetingstrings.ru-RU.txt  
```  
  
 Il codice dell'applicazione riportato di seguito, si trova in un file denominato Example1.vb o example1. Per un file eseguibile viene compilato utilizzando il comando seguente per il compilatore Visual Basic:  
  
```console  
vbc Example1.vb /resource:GreetingStrings.resources  
```  
  
 Per il compilatore c#, il comando è simile:  
  
```console  
csc /resource:GreetingStrings.resources Example1.cs  
```  
  
 Verrà creato un assembly che include il codice eseguibile dell'esempio con le risorse per le impostazioni cultura di fallback. È anche possibile usare il [Assembly Linker](~/docs/framework/tools/al-exe-assembly-linker.md) per creare il file di risorse per le impostazioni cultura russe (Russia) con il comando seguente:  
  
```console  
>al /embed:greetingstrings.ru-RU.resources /c:ru-RU /template:example1.exe /out:ru-RU\Example1.resources.dll  
```  
  
 All'avvio, l'esempio imposta le impostazioni cultura correnti e le impostazioni cultura dell'interfaccia utente correnti russe (Russia) in tutti i sistemi, ad eccezione di quelli in cui la lingua predefinita è già russa (Russia). Se la lingua predefinita è già russe (Russia), il codice imposta le impostazioni cultura correnti e l'interfaccia utente corrente delle impostazioni cultura per l'inglese (Stati Uniti). Chiama quindi il `ShowGreeting` routine, che visualizza una stringa semplice, la prima volta che viene chiamato e una stringa leggermente diversa in successive chiamate al metodo. Successivamente, viene creato un nuovo thread che esegue anche il `ShowGreeting` routine.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example1.vb#1)]  
  
 Come illustrato nell'output dell'esempio, quando si esegue l'esempio in un computer le cui impostazioni cultura del sistema è inglese (Stati Uniti), il thread principale consente di visualizzare la relativa stringa iniziale in russo. Tuttavia, perché le impostazioni cultura del thread di lavoro sono derivata da impostazioni cultura correnti del sistema di Windows anziché di impostazioni cultura correnti dell'applicazione, il thread di lavoro consente di visualizzare la relativa stringa di in inglese.  
  
 L'esempio seguente usa il <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> e <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> proprietà per definire le impostazioni cultura correnti e corrente delle impostazioni cultura dell'interfaccia utente di un nuovo thread dell'applicazione.  
  
 L'esempio Usa gli stessi file di risorse dell'esempio precedente. I comandi per compilare e per incorporare le risorse di lingua russa localizzata in un assembly satellite sono identici, anche con la differenza che viene modificato il nome dell'assembly eseguibile.  
  
 All'avvio, l'esempio imposta le impostazioni cultura correnti e le impostazioni cultura dell'interfaccia utente correnti russe (Russia) in tutti i sistemi, ad eccezione di quelli in cui la lingua predefinita è già russa (Russia). Se la lingua predefinita è già russa (Russia), imposta le impostazioni cultura correnti e le impostazioni cultura dell'interfaccia utente correnti su inglese (Stati Uniti). Chiama quindi il `ShowGreeting` routine, che visualizza una stringa semplice, la prima volta che viene chiamato e una stringa leggermente diversa in successive chiamate al metodo. Successivamente, viene creato un nuovo thread che esegue anche il `ShowGreeting` routine.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example2.vb#2)]  
  
 Come illustrato nell'output dell'esempio, quando si esegue l'esempio in un computer le cui impostazioni cultura del sistema è inglese (Stati Uniti), il thread principale sia il thread di lavoro visualizzare le relative stringhe in lingua russa.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In un'operazione set il valore della proprietà <see cref="P:System.Globalization.CultureInfo.Name" /> non è valido.</exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome completo delle impostazioni cultura localizzate.</summary>
        <value>Il nome completo delle impostazioni cultura localizzato nel formato * lingua * [* paese / regionfull *], dove * lingua * è il nome completo della lingua e * paese / regionfull * è il nome completo del paese/area geografica.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà rappresenta il nome localizzato del <xref:System.Globalization.CultureInfo> oggetto.  
  
 Nomi delle impostazioni cultura possono variare a causa di scripting o convenzioni di formattazione. È necessario utilizzare il nome restituito per la visualizzazione e non tenta di analizzare.  
  
 Se una lingua personalizzata viene creata mediante il <xref:System.Globalization.CultureAndRegionInfoBuilder> (classe), il <xref:System.Globalization.CultureInfo.DisplayName%2A> proprietà viene inizializzata sul valore del <xref:System.Globalization.CultureInfo.NativeName%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare diverse proprietà associate ad alcun paese.  
  
> [!NOTE]
>  Nell'esempio vengono visualizzate le impostazioni cultura zh-CHS e zh-CHT con gli identificatori delle impostazioni cultura 0x0004 e 0x7C04, rispettivamente. Tuttavia, le applicazioni di Windows Vista devono utilizzare il nome zh-Hans anziché zh-CHS e il nome zh-Hant anziché zh-CHT. Il zh-Hans e zh-Hant nomi rappresentano lo standard corrente e deve essere utilizzati a meno che non esista un motivo per utilizzare i nomi precedenti.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.EnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnglishName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome delle impostazioni cultura nel formato *lingua* [*paese/area*] in inglese.</summary>
        <value>Il nome delle impostazioni cultura nel formato * lingua * [* paese / regionfull *] in inglese, dove * lingua * è il nome completo della lingua e * paese / regionfull * è il nome completo del paese/area geografica.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ad esempio, il <xref:System.Globalization.CultureInfo.EnglishName%2A> per le impostazioni cultura specifiche nome en-US è "English (United States)".  
  
 Il valore di questa proprietà è lo stesso, indipendentemente dalla versione del linguaggio di .NET Framework.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare diverse proprietà associate ad alcun paese.  
  
> [!NOTE]
>  Nell'esempio vengono visualizzati i nomi delle impostazioni cultura precedenti zh-CHT e zh-CHS con gli identificatori delle impostazioni cultura 0x0004 e 0x7C04, rispettivamente. Tuttavia, le applicazioni di Windows Vista devono utilizzare il nome zh-Hans anziché zh-CHS e il nome zh-Hant anziché zh-CHT. Il zh-Hans e zh-Hant nomi rappresentano lo standard corrente e deve essere utilizzati a meno che non esista un motivo per utilizzare i nomi precedenti.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto da confrontare con l'oggetto <see cref="T:System.Globalization.CultureInfo" /> corrente.</param>
        <summary>Determina se l'oggetto specificato coincide con le stesse impostazioni cultura della classe <see cref="T:System.Globalization.CultureInfo" /> corrente.</summary>
        <returns>
          <see langword="true" /> se <paramref name="value" /> coincide con le impostazioni cultura della classe <see cref="T:System.Globalization.CultureInfo" /> corrente; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo esegue l'override del metodo <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
 Due <xref:System.Globalization.CultureInfo> gli oggetti sono considerati uguali se i relativi <xref:System.Globalization.CultureInfo.Name%2A> e <xref:System.Globalization.CultureInfo.CompareInfo%2A> le proprietà sono uguali.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetConsoleFallbackUICulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetConsoleFallbackUICulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsoleFallbackUICulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetConsoleFallbackUICulture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene impostazioni cultura dell'interfaccia utente alternative adatte per le applicazioni di console quando le impostazioni cultura predefinite dell'interfaccia utente grafica non sono adatte.</summary>
        <returns>Impostazioni cultura alternative usate per leggere e visualizzare testo sulla console.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lingue, ad esempio arabo, ebraico, Urdu e siriano sono basate su testo bidirezionale. Le applicazioni di Windows, che dispongono di un'interfaccia utente grafica, supportano lingue bidirezionali. Applicazioni console, che utilizzano l'interfaccia utente di testo della console del sistema operativo, tuttavia, non forniscono supporto bidirezionale. Pertanto, se si localizza un'applicazione console per l'arabo o l'ebraico, l'applicazione illeggibile testo visualizzato sullo schermo della console.  
  
 Le impostazioni cultura dell'interfaccia utente specificano le risorse di un'applicazione deve supportare l'input dell'utente e output e per impostazione predefinita è quella della lingua del sistema operativo. Ad esempio, il <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> proprietà restituisce la lingua araba per un sistema operativo arabo. Utilizzare il <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> metodo per recuperare impostazioni cultura appropriate per un'interfaccia utente di applicazione console. Dopo l'applicazione recupera le impostazioni cultura dell'interfaccia utente di fallback, è necessario assegnare le impostazioni cultura per le impostazioni cultura dell'interfaccia utente correnti del thread corrente. Per ulteriori informazioni, vedere la sezione "In modo esplicito impostazione di impostazioni cultura correnti" del <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> proprietà.  
  
 Di seguito sono impostazioni cultura predefinite che hanno un nome di impostazioni cultura dell'interfaccia utente fallback diverso dal nome di impostazioni cultura predefinite.  
  
|Impostazioni cultura predefinite|Nome delle impostazioni cultura|Nome delle impostazioni cultura dell'interfaccia utente di fallback|  
|------------------------|------------------|------------------------------------------|  
|Amharico|AM|it-IT|  
|Amarico (Etiopia)|AM-ET|it-IT|  
|(arabo)|ar|it-IT|  
|Arabo (Emirati Arabi Uniti)|ar-AE|it-IT|  
|Arabo (Bahrain)|AR orario di ufficio|it-IT|  
|Arabo (Algeria)|ar-DZ|fr-FR|  
|Arabo (Egitto)|ar-EG|it-IT|  
|Arabo (Iraq)|AR IQ|it-IT|  
|Arabo (Giordania)|ar-JO|it-IT|  
|Arabo (Kuwait)|AR-KW|it-IT|  
|Arabo (Libano)|AR LB|it-IT|  
|Arabo (Libia)|Rispondi a ar|it-IT|  
|Arabo (Marocco)|agente di gestione ar|fr-FR|  
|Arabo (Oman)|AR OM|it-IT|  
|Arabo (Qatar)|AR QA|it-IT|  
|Arabo (Arabia Saudita)|ar-SA|it-IT|  
|Arabo (Siria)|AR-SY|it-IT|  
|Arabo (Tunisia)|AR TN|fr-FR|  
|Arabo (Yemen)|AR-YE|it-IT|  
|Assamese|as|it-IT|  
|Assamese (India)|as-IN|it-IT|  
|Bengali|bn|it-IT|  
|Bengalese (Bangladesh)|bn-BD|it-IT|  
|Bengalese (India)|bn-IN|it-IT|  
|Tibetano|bo|it-IT|  
|Tibetano (RPC)|bo-CN|it-IT|  
|Divehi|dv|it-IT|  
|Divehi (India)|dv-MV|it-IT|  
|Farsi|fa|it-IT|  
|Persiano (Iran)|fa-IR|it-IT|  
|Gujarati|gu|it-IT|  
|Carattere (India)|GU IN|it-IT|  
|Ebraico|he|it-IT|  
|Ebraico (Israele)|he-IL|it-IT|  
|Hindi|hi|it-IT|  
|Hindi (India)|hi-IN|it-IT|  
|Yi|ii|it-IT|  
|Yi (PRC)|ii-CN|it-IT|  
|Inuktitut alfabeto sillabico|Iu lattine|it-IT|  
|Inuktitut alfabeto sillabico (Canada)|iu-Cans-CA|it-IT|  
|Khmer|km|it-IT|  
|Khmer (Cambogia)|km KH|it-IT|  
|Kannada|kn|it-IT|  
|Carattere (India)|kn-IN|it-IT|  
|Konkani|kok|it-IT|  
|Konkani (India)|kok IN|it-IT|  
|Lao|lo|it-IT|  
|Lao (Lao P.D.R.)|per LA|it-IT|  
|Malayalam|ml|it-IT|  
|Carattere (India)|ml-IN|it-IT|  
|Mohawk|MOH|it-IT|  
|Mohawk (Canada)|moh-CA|it-IT|  
|Marathi|Mr|it-IT|  
|Marathi (India)|MR IN|it-IT|  
|Nepalese|ne|it-IT|  
|Nepalese (Nepal)|ne-NP|it-IT|  
|Norvegese|No|nb-NO|  
|Carattere|o|it-IT|  
|Carattere (India)|o-IN|it-IT|  
|Punjabi|pa|it-IT|  
|Punjabi (India)|pa-IN|it-IT|  
|Dari|prenotazioni permanenti|it-IT|  
|Dari (Afghanistan)|prs-AF|it-IT|  
|Pashto|ps|it-IT|  
|Pashto (Afghanistan)|ps-AF|it-IT|  
|Sanskrit|sa|it-IT|  
|Sanscrito (India)|sa-IN|it-IT|  
|Singalese|si|it-IT|  
|Singalese (Sri Lanka)|si-LK|it-IT|  
|Siriaco|SYR|it-IT|  
|Siriano (Siria)|SYR SY|it-IT|  
|Tamil|ta|it-IT|  
|Carattere (India)|ta-IN|it-IT|  
|Telugu|te|it-IT|  
|Telugu (India)|te-IN|it-IT|  
|Thailandese|th|it-IT|  
|Thai (Thailandia)|th-Th|it-IT|  
|Uiguro|UG|it-IT|  
|Uiguro (RPC)|ug-CN|it-IT|  
|Urdu|il|it-IT|  
|Urdu (Pakistan)|Your PK|it-IT|  
|Vietnamita|vi|it-IT|  
|Vietnamita (Vietnam)|vi-VN|it-IT|  
  
 L'applicazione può utilizzare <xref:System.Globalization.CultureAndRegionInfoBuilder> per creare una sostituzione per una lingua e le impostazioni cultura possono avere impostazioni cultura di fallback console di propria scelta.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare le impostazioni cultura dell'interfaccia utente di fallback associata a un oggetto impostazioni cultura.  
  
 [!code-cpp[sys.glob.ci.getCFUIC#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/cpp/cfuic.cpp#1)]
 [!code-csharp[sys.glob.ci.getCFUIC#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/CS/cfuic.cs#1)]
 [!code-vb[sys.glob.ci.getCFUIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.ci.getCFUIC/VB/cfuic.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCultureInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera un'istanza di sola lettura e memorizzata nella cache di determinate impostazioni cultura.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (culture As Integer) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(int culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">Identificatore delle impostazioni locali (LCID).</param>
        <summary>Recupera un'istanza di sola lettura e memorizzata nella cache di determinate impostazioni cultura usando l'identificatore delle impostazioni cultura specificato.</summary>
        <returns>Oggetto <see cref="T:System.Globalization.CultureInfo" /> di sola lettura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È consigliabile utilizzare l'overload della stringa di questo metodo (<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>), poiché i nomi delle impostazioni locali da utilizzare invece gli LCID. Per impostazioni locali personalizzate, è necessario il nome delle impostazioni locali.  
  
 Se `culture` è l'identificatore delle impostazioni locali della lingua corrente, l'oggetto restituita <xref:System.Globalization.CultureInfo> oggetto non corrisponde alcun override dell'utente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="culture" /> è minore di zero.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="culture" /> specifica impostazioni cultura non supportate. Per altre informazioni, vedere la sezione Note per i chiamanti.</exception>
        <block subset="none" type="usage">
          <para>Il [! INCLUDE[net_v35_long](~/Includes/NET-v35-Long-MD.MD)] e versioni precedenti generano un <see cref="T:System.ArgumentException" /> se <paramref name="culture" /> non è un identificatore di impostazioni cultura valido. A partire da di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)], questo metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" />. A partire da app eseguite in di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)] o versione successiva in Windows 7 o versioni successive, il metodo tenta di recuperare un <see cref="T:System.Globalization.CultureInfo" /> oggetto il cui identificatore è <paramref name="culture" /> dal sistema operativo; se il sistema operativo non supporta le specifiche impostazioni cultura , il metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" />.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome di impostazioni cultura. <c>name</c> non è soggetto alla distinzione tra maiuscole e minuscole.</param>
        <summary>.Recupera un'istanza di sola lettura e memorizzata nella cache di determinate impostazioni cultura usando il nome delle impostazioni cultura specificato.</summary>
        <returns>Oggetto <see cref="T:System.Globalization.CultureInfo" /> di sola lettura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco di nomi di impostazioni cultura predefinite, vedere il [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) a Developer Center. Inoltre, a partire da Windows 10, `name` può essere qualsiasi tag di lingua BCP-47 valido.  
  
 Il <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> che consente di recuperare un oggetto nella cache, sola lettura <xref:System.Globalization.CultureInfo> oggetto. Offre prestazioni migliori rispetto a una chiamata corrispondente per il <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> costruttore.  
  
 Se `name` è il nome della lingua corrente, l'oggetto restituito <xref:System.Globalization.CultureInfo> oggetto non corrisponde alcun override dell'utente. In questo modo, il metodo è adatto per i server applicazioni o strumenti che non dispone di un account utente reale del sistema e che è necessario caricare in modo efficiente più impostazioni cultura.  
  
 Se `name` è <xref:System.String.Empty?displayProperty=nameWithType>, il metodo restituisce le impostazioni cultura invarianti. Ciò equivale a recuperare il valore della <xref:System.Globalization.CultureInfo.InvariantCulture%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> è null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="name" /> specifica impostazioni cultura non supportate. Per altre informazioni, vedere la sezione Note per i chiamanti.</exception>
        <block subset="none" type="usage">
          <para>Il [! INCLUDE[net_v35_long](~/Includes/NET-v35-Long-MD.MD)] e versioni precedenti generano un <see cref="T:System.ArgumentException" /> se <paramref name="name" /> non è un nome di impostazioni cultura valido. A partire da di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)], questo metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" />. A partire da app eseguite in di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)] o versione successiva in Windows 7 o versioni successive, il metodo tenta di recuperare un <see cref="T:System.Globalization.CultureInfo" /> oggetto il cui identificatore è <paramref name="name" /> dal sistema operativo; se il sistema operativo non supporta le specifiche impostazioni cultura e se <paramref name="name" /> non corrisponde al nome di una lingua supplementare o sostituzione, il metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" />.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name, string altName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name, string altName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String, altName As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name, System::String ^ altName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="altName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome di impostazioni cultura. <c>name</c> non è soggetto alla distinzione tra maiuscole e minuscole.</param>
        <param name="altName">Nome delle impostazioni cultura che forniscono gli oggetti <see cref="T:System.Globalization.TextInfo" /> e <see cref="T:System.Globalization.CompareInfo" /> usati per inizializzare <c>name</c>. <c>altName</c> non è soggetto alla distinzione tra maiuscole e minuscole.</param>
        <summary>Recupera un'istanza di sola lettura e memorizzata nella cache di determinate impostazioni cultura. I parametri specificano le impostazioni cultura inizializzate con gli oggetti <see cref="T:System.Globalization.TextInfo" /> e <see cref="T:System.Globalization.CompareInfo" /> specificati da altre impostazioni cultura.</summary>
        <returns>Oggetto <see cref="T:System.Globalization.CultureInfo" /> di sola lettura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco di nomi di impostazioni cultura predefinite, vedere il [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) a Developer Center. Inoltre, a partire da Windows 10, `name` può essere qualsiasi tag di lingua BCP-47 valido.  
  
 Il <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> metodo ottiene un oggetto nella cache, sola lettura <xref:System.Globalization.CultureInfo> oggetto. Offre prestazioni migliori rispetto a una chiamata corrispondente a un <xref:System.Globalization.CultureInfo.%23ctor%2A> costruttore. Il metodo viene utilizzato per creare una lingua simile a quello specificato da di `name` parametro, ma con diverse di ordinamento e di maiuscole e minuscole delle regole.  
  
 Se `name` o `altName` è il nome delle impostazioni cultura, gli oggetti restituiti non riflettono alcun override dell'utente. Se `name` è <xref:System.String.Empty?displayProperty=nameWithType>, il metodo restituisce le impostazioni cultura invarianti. Ciò equivale a recuperare il valore della <xref:System.Globalization.CultureInfo.InvariantCulture%2A> proprietà. Se `altName` è <xref:System.String.Empty?displayProperty=nameWithType>, il metodo utilizza il sistema di scrittura e il confronto tra le regole specificate dalle impostazioni cultura invarianti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> o <paramref name="altName" /> è null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="name" /> o <paramref name="altName" /> specifica impostazioni cultura non supportate. Per altre informazioni, vedere la sezione Note per i chiamanti.</exception>
        <block subset="none" type="usage">
          <para>Il [! INCLUDE[net_v35_long](~/Includes/NET-v35-Long-MD.MD)] e versioni precedenti generano un <see cref="T:System.ArgumentException" /> se <paramref name="name" /> o <paramref name="altName" /> non è un nome di impostazioni cultura valido. A partire da di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)], questo metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" />. A partire da app eseguite in di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)] o versione successiva in Windows 7 o versioni successive, il metodo tenta di recuperare un <see cref="T:System.Globalization.CultureInfo" /> oggetto il cui identificatore è <paramref name="name" /> dal sistema operativo; se il sistema operativo non supporta le specifiche impostazioni cultura e se <paramref name="name" /> non corrisponde al nome di una lingua supplementare o sostituzione, il metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" /> (eccezione). A partire da app eseguite in di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)] o versione successiva in Windows 7 o versioni successive, il metodo tenta di recuperare un <see cref="T:System.Globalization.CultureInfo" /> oggetto il cui identificatore è <paramref name="name" /> dal sistema operativo; se il sistema operativo non supporta le specifiche impostazioni cultura e se <paramref name="name" /> non corrisponde al nome di una lingua supplementare o sostituzione, il metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" /> (eccezione).</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfoByIetfLanguageTag">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfoByIetfLanguageTag (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfoByIetfLanguageTag(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome di una lingua come specificato dallo standard RFC 4646.</param>
        <summary>Deprecato. Recupera un oggetto <see cref="T:System.Globalization.CultureInfo" /> di sola lettura con caratteristiche linguistiche identificate dal tag della lingua RFC 4646 specificato.</summary>
        <returns>Oggetto <see cref="T:System.Globalization.CultureInfo" /> di sola lettura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questo metodo e <xref:System.Globalization.CultureInfo.IetfLanguageTag%2A> proprietà sono deprecati. Anziché utilizzare questi elementi, l'applicazione deve utilizzare un nuovo <xref:System.Globalization.CultureInfo> oggetto e le chiamate al <xref:System.Globalization.CultureInfo.Name%2A> proprietà. IETF tag e i nomi sono identici.  
  
 Lo standard RFC 4646 gestito da Internet Engineering Task Force (IETF) definisce un tag di linguaggio IETF, in modo uniforme di identificazione di una lingua. Il formato di un tag di linguaggio IETF è lo stesso nome delle impostazioni cultura restituito dal <xref:System.Globalization.CultureInfo.Name%2A> proprietà, ma non identifica in modo univoco le impostazioni cultura. Impostazioni cultura diverse condividono lo stesso tag di linguaggio IETF se dispongono di caratteristiche linguistiche identiche. Le caratteristiche linguistiche delle impostazioni cultura sono contenute nel <xref:System.Globalization.TextInfo> oggetto associato a un <xref:System.Globalization.CultureInfo> oggetto.  
  
 Un tag del linguaggio IETF è costituito da un identificatore di lingua obbligatorio, un identificatore di script facoltativo e un identificatore di paese facoltativo.  
  
 Le applicazioni devono utilizzare le impostazioni cultura recuperate per controllare le attività specifiche della lingua, ad esempio la gestione di un controllo ortografico o grammaticale. Applicazioni non devono utilizzare le impostazioni cultura recuperate per controllare le attività specifiche delle impostazioni cultura, ad esempio l'ordinamento del testo o la formattazione di ore e date.  
  
 Per altre informazioni, vedere RFC 4646, "tag per identificare i linguaggi" e la più recente versione bozza di standard, bozza-vite-langtags-05. txt, nella [ http://go.microsoft.com/fwlink/?LinkId=100231 ](http://go.microsoft.com/fwlink/?LinkId=100231).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> è null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="name" /> non corrisponde a impostazioni cultura supportate.</exception>
        <block subset="none" type="usage">
          <para>Il [! INCLUDE[net_v35_long](~/Includes/NET-v35-Long-MD.MD)] e versioni precedenti generano un <see cref="T:System.ArgumentException" /> se <paramref name="name" /> non corrisponde al nome di impostazioni cultura supportate. A partire da di [! INCLUDE[net_v40_long](~/Includes/NET-v40-Long-MD.MD)], questo metodo genera un <see cref="T:System.Globalization.CultureNotFoundException" />.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultures">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo[] GetCultures (System.Globalization.CultureTypes types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo[] GetCultures(valuetype System.Globalization.CultureTypes types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultures (types As CultureTypes) As CultureInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Globalization::CultureInfo ^&gt; ^ GetCultures(System::Globalization::CultureTypes types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Globalization.CultureTypes" />
      </Parameters>
      <Docs>
        <param name="types">Combinazione bit per bit dei valori di enumerazione che filtrano le impostazioni cultura da recuperare.</param>
        <summary>Ottiene l'elenco delle impostazioni cultura supportate filtrate dal parametro <see cref="T:System.Globalization.CultureTypes" /> specificato.</summary>
        <returns>Matrice che contiene le impostazioni cultura specificate dal parametro <paramref name="types" />. La matrice delle impostazioni cultura non è ordinata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Globalization.CultureInfo.GetCultures%2A> metodo viene chiamato più di frequente con il `types` parametro impostato per i valori seguenti:  
  
-   <xref:System.Globalization.CultureTypes.SpecificCultures>, che restituisce tutte le impostazioni cultura specifiche.  
  
-   <xref:System.Globalization.CultureTypes.NeutralCultures>, che restituisce tutte le impostazioni cultura neutre e le impostazioni cultura invarianti.  
  
-   <xref:System.Globalization.CultureTypes.AllCultures>, che restituisce tutte le impostazioni cultura neutre e specifiche impostazioni cultura installate nel sistema Windows e impostazioni cultura personalizzate create dall'utente.  
  
-   <xref:System.Globalization.CultureTypes.UserCustomCulture>, che restituisce tutte le impostazioni cultura personalizzate, ad esempio quelle registrate dalla <xref:System.Globalization.CultureAndRegionInfoBuilder> classe. Nelle versioni di Windows precedenti a Windows 10, il <xref:System.Globalization.CultureTypes.UserCustomCulture> valore si applica a tutte le impostazioni cultura personalizzate definite dall'utente. A partire da Windows 10, si applica alle impostazioni cultura di sistema che non dispongono di dati relative alla lingua completo e che non dispone di un identificatore univoco locale, come indicato dal <xref:System.Globalization.CultureInfo.LCID%2A> valore della proprietà. Di conseguenza, il codice seguente restituisce risultati diversi quando viene eseguito in Windows 10 e in una versione precedente di Windows.  
  
     [!code-csharp[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures3.cs#2)]
     [!code-vb[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures3.vb#2)]  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare diverse proprietà associate ad alcun paese.  
  
> [!NOTE]
>  Nell'esempio vengono visualizzate le impostazioni cultura zh-CHS e zh-CHT con gli identificatori delle impostazioni cultura 0x0004 e 0x7C04, rispettivamente. Tuttavia, le applicazioni di Windows Vista devono utilizzare il nome zh-Hans anziché zh-CHS e il nome zh-Hant anziché zh-CHT. Il zh-Hans e zh-Hant nomi rappresentano lo standard corrente e deve essere utilizzati a meno che non esista un motivo per utilizzare i nomi precedenti.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="types" /> specifica una combinazione di valori <see cref="T:System.Globalization.CultureTypes" /> non valida.</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public virtual object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Oggetto <see cref="T:System.Type" /> per il quale ottenere un oggetto di formattazione. Questo metodo supporta solo i tipi <see cref="T:System.Globalization.NumberFormatInfo" /> e <see cref="T:System.Globalization.DateTimeFormatInfo" />.</param>
        <summary>Ottiene un oggetto che definisce le modalità di formattazione del tipo specificato.</summary>
        <returns>Valore della proprietà <see cref="P:System.Globalization.CultureInfo.NumberFormat" />, che è una classe <see cref="T:System.Globalization.NumberFormatInfo" /> contenente le informazioni predefinite per la formattazione dei numeri per la classe <see cref="T:System.Globalization.CultureInfo" /> corrente, se <paramref name="formatType" /> è l'oggetto <see cref="T:System.Type" /> per la classe <see cref="T:System.Globalization.NumberFormatInfo" />.  - oppure - Il valore della proprietà <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" />, che è una classe <see cref="T:System.Globalization.DateTimeFormatInfo" /> contenente le informazioni predefinite per la formattazione di data e ora per la classe <see cref="T:System.Globalization.CultureInfo" /> corrente, se <paramref name="formatType" /> è l'oggetto <see cref="T:System.Type" /> per la classe <see cref="T:System.Globalization.DateTimeFormatInfo" />.  - oppure - null, se <paramref name="formatType" /> è qualsiasi altro oggetto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo.GetFormat%2A> implementa <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 `NumberFormatInfo` fornisce il formato numerico specifiche delle impostazioni cultura utilizzato in combinazione con i metodi di formato nei tipi di dati di base. `DateTimeFormatInfo` Controlla la formattazione di valori di data e ora per impostazioni cultura specifiche.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Viene usato come funzione hash per l'oggetto <see cref="T:System.Globalization.CultureInfo" /> corrente, adatto per algoritmi hash e strutture di dati, ad esempio una tabella hash.</summary>
        <returns>Codice hash per l'oggetto <see cref="T:System.Globalization.CultureInfo" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo esegue l'override del metodo <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 Il metodo genera lo stesso codice hash per due oggetti uguali in base al metodo <xref:System.Globalization.CultureInfo.Equals%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Deprecato. Ottiene l'identificazione dello standard RFC 4646 per una lingua.</summary>
        <value>Stringa che rappresenta l'identificazione dello standard RFC 4646 per una lingua.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questa proprietà e <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> metodo sono deprecati. Utilizzare invece un il <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> proprietà. IETF tag e i nomi sono identici.  
  
 Lo standard RFC 4646 gestito da Internet Engineering Task Force (IETF) definisce un tag di linguaggio IETF, in modo uniforme di identificazione di una lingua. Il formato di un tag di linguaggio IETF è simile al nome della lingua restituito dal <xref:System.Globalization.CultureInfo.Name%2A> proprietà, ma non identifica in modo univoco le impostazioni cultura. Ovvero, impostazioni cultura diverse condividono lo stesso tag di linguaggio IETF se dispongono di caratteristiche linguistiche identiche. Le caratteristiche linguistiche delle impostazioni cultura sono contenute nel <xref:System.Globalization.TextInfo> oggetto associato a un <xref:System.Globalization.CultureInfo> oggetto.  
  
 Un tag del linguaggio IETF è costituito da un identificatore di lingua obbligatorio, un identificatore di script facoltativo e un identificatore di paese facoltativo.  
  
 Per ulteriori informazioni, vedere [5646 RFC, "i tag di identificazione lingue](http://go.microsoft.com/fwlink/?LinkId=230876). Per un elenco di sottotag, vedere [IANA Language sottotag Registro di sistema](http://go.microsoft.com/fwlink/?LinkId=230877).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni cultura installate con il sistema operativo.</summary>
        <value>Oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni cultura installate con il sistema operativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un sistema operativo localizzato, ad esempio una versione giapponese di Windows, questa proprietà restituisce le impostazioni cultura del sistema operativo. Questa proprietà è l'equivalente di `GetSystemDefaultUILanguage` nell'API di Windows.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InvariantCulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Globalization.CultureInfo" /> indipendente dalle impostazioni cultura.</summary>
        <value>Oggetto indipendente dalle impostazioni cultura (non variabile).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le impostazioni cultura invarianti sono indipendente dalle impostazioni cultura; è associato con la lingua inglese, ma non con qualsiasi paese/area geografica. Specificare le impostazioni cultura invarianti in base al nome utilizzando una stringa vuota ("") nella chiamata a un <xref:System.Globalization.CultureInfo> metodo di creazione dell'istanza. <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> Recupera anche un'istanza delle impostazioni cultura invarianti. E può essere utilizzato in quasi tutti i metodi di <xref:System.Globalization> dello spazio dei nomi che richiedono una lingua. Gli oggetti restituiti dalle proprietà, ad esempio <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, e <xref:System.Globalization.CultureInfo.NumberFormat%2A> inoltre riflettere il confronto tra stringhe e le convenzioni della lingua inglese di formattazione.  
  
 A differenza dei dati dipendenti dalle impostazioni cultura, che è soggetto a modifiche di personalizzazione dell'utente o gli aggiornamenti di .NET Framework o il sistema operativo, i dati delle impostazioni cultura invarianti sono stabili nel tempo e nelle impostazioni cultura installate e non possono essere personalizzati dagli utenti. In questo modo le impostazioni cultura invarianti particolarmente utile per operazioni che richiedono risultati indipendente dalle impostazioni cultura, ad esempio la formattazione e l'analisi di operazioni che vengono mantenute formattato, dati o l'ordinamento operazioni che richiedono che i dati verranno visualizzati un ordine fisso indipendentemente dalle impostazioni cultura.  
  
## <a name="string-operations"></a>Operazioni su stringhe  
 È possibile utilizzare le impostazioni cultura invarianti per operazioni su stringhe dipendenti dalle impostazioni cultura che non sono interessati dalle convenzioni delle impostazioni cultura del thread corrente e che siano coerenti in impostazioni cultura. Ad esempio, si consiglia di dati ordinati in ordine predefinito o applicare un set standard di convenzioni di maiuscole e minuscole in stringhe indipendentemente dalle impostazioni cultura del thread corrente. A tale scopo, si passa il <xref:System.Globalization.CultureInfo.InvariantCulture%2A> oggetto a un metodo che presenta un <xref:System.Globalization.CultureInfo> parametro, ad esempio <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Globalization.CultureInfo%29> e <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29>.  
  
## <a name="persisting-data"></a>Rendere persistenti i dati  
 Il <xref:System.Globalization.CultureInfo.InvariantCulture%2A> proprietà può essere utilizzata per rendere persistenti i dati in un formato indipendente dalle impostazioni cultura. Ciò fornisce un formato noto che non viene modificato e che può essere utilizzato per serializzare e deserializzare i dati nelle impostazioni cultura. Dopo che i dati viene deserializzati, possono essere formattato in modo appropriato in base alle convenzioni relative alla lingua dell'utente corrente.  
  
 Ad esempio, se si sceglie di conservare i dati di data e ora in formato stringa, è possibile passare il <xref:System.Globalization.CultureInfo.InvariantCulture%2A> dell'oggetto per il <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> o <xref:System.DateTimeOffset.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> metodo per creare la stringa ed è possibile passare il <xref:System.Globalization.CultureInfo.InvariantCulture%2A> dell'oggetto per il <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> o <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> metodo per convertire la stringa in un valore di data e ora. Questa tecnica garantisce che la data sottostante e i valori di ora non cambiano quando i dati vengono letti o scritti da utenti con diverse impostazioni cultura.  
  
 L'esempio seguente usa le impostazioni cultura invarianti per rendere persistente un <xref:System.DateTime> valore sotto forma di stringa. Quindi, analizza la stringa e visualizza il relativo valore utilizzando le convenzioni di formattazione delle impostazioni cultura tedesco (Germania) e francese (Francia).  
  
 [!code-csharp[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/cs/persist1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/vb/persist1.vb#1)]  
  
## <a name="security-decisions"></a>Decisioni relative alla sicurezza  
 Se si sta effettuando una decisione relativa alla sicurezza (ad esempio, se si desidera consentire l'accesso a una risorsa di sistema) in base al risultato di una modifica di maiuscole o di un confronto tra stringhe, non utilizzare le impostazioni cultura invarianti. In alternativa, eseguire un confronto ordinale tra maiuscole e minuscole o maiuscole/minuscole chiamando un metodo che include un <xref:System.StringComparison> parametro e fornendo una <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> o <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> come argomento. Codice che esegue operazioni sulle stringhe dipendenti dalle impostazioni cultura può causare problemi di protezione se viene modificata le impostazioni cultura correnti o se le impostazioni cultura nel computer in cui è in esecuzione il codice è diverso dalle impostazioni cultura utilizzate per testare il codice. Al contrario, un confronto ordinale dipende esclusivamente il valore binario dei caratteri confrontati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsNeutralCulture">
      <MemberSignature Language="C#" Value="public virtual bool IsNeutralCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNeutralCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsNeutralCulture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNeutralCulture { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la classe <see cref="T:System.Globalization.CultureInfo" /> corrente rappresenta impostazioni cultura non associate ad alcun paese.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Globalization.CultureInfo" /> corrente rappresenta impostazioni cultura non associate ad alcun paese; in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazioni cultura neutre sono una lingua che è associata una lingua ma non con un paese o area geografica. Differisce da una lingua specifica, è una lingua associata a una lingua e un paese / regione. Ad esempio, fr è il nome per la lingua francese, mentre fr-FR è il nome per la lingua francese in Francia.  
  
 Se questa proprietà restituisce `false`, le impostazioni cultura sono impostazioni cultura specifiche o le impostazioni cultura invarianti.  
  
   
  
## Examples  
 Esempio di codice seguente determina quali impostazioni cultura basate sulla lingua cinese è associate ad alcun paese.  
  
> [!NOTE]
>  Nell'esempio vengono visualizzati i nomi delle impostazioni cultura precedenti zh-CHT e zh-CHS con gli identificatori delle impostazioni cultura 0x0004 e 0x7C04, rispettivamente. Tuttavia, le applicazioni di Windows Vista devono utilizzare il nome zh-Hans anziché zh-CHS e il nome zh-Hant anziché zh-CHT. Il zh-Hans e zh-Hant nomi rappresentano lo standard corrente e deve essere utilizzati a meno che non esista un motivo per utilizzare i nomi precedenti.  
  
 [!code-cpp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CPP/neutralculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CS/neutralculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/VB/neutralculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la classe <see cref="T:System.Globalization.CultureInfo" /> corrente è di sola lettura.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Globalization.CultureInfo" /> corrente è in sola lettura; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Globalization.CultureInfo> è di sola lettura, la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> e <xref:System.Globalization.CultureInfo.NumberFormat%2A> istanze anche sono di sola lettura.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato che <xref:System.Globalization.CultureInfo.IsReadOnly%2A> consente inoltre di proteggere il <xref:System.Globalization.DateTimeFormatInfo> e <xref:System.Globalization.NumberFormatInfo> le istanze associate di <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public virtual int KeyboardLayoutId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyboardLayoutId { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ID delle impostazioni locali di input attivo.</summary>
        <value>Numero con segno a 32 bit che specifica un ID delle impostazioni locali di input.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificatore delle impostazioni locali di input è stato chiamato in precedenza il layout di tastiera. Un identificatore delle impostazioni locali di input è un concetto più ampio rispetto al layout di tastiera, poiché può anche indicare un convertitore di tipi di riconoscimento vocale in testo, un Input Method Editor (IME) o qualsiasi altra forma di input.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public virtual int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LCID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'identificatore di impostazioni cultura per la classe <see cref="T:System.Globalization.CultureInfo" /> corrente.</summary>
        <value>Identificatore di impostazioni cultura per la classe <see cref="T:System.Globalization.CultureInfo" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella maggior parte dei casi, l'identificatore delle impostazioni cultura è mappato all'identificatore delle impostazioni internazionali NLS corrispondente.  
  
 Nelle versioni di Windows prima di Windows 10, l'identificatore delle impostazioni locali `LOCALE_CUSTOM_UNSPECIFIED` (0x1000 o 4096) viene assegnato a impostazioni cultura personalizzate create dall'utente. A partire da Windows 10, viene assegnato a tutte le impostazioni cultura che non dispone di un identificatore univoco delle impostazioni locali e non dispone di dati fornito dal sistema completati. Di conseguenza, il codice che esegue l'iterazione di impostazioni cultura e recupera quelli con un <xref:System.Globalization.CultureInfo.LCID%2A> valore `LOCALE_CUSTOM_UNSPECIFIED` restituisce un subset di dimensioni maggiore di <xref:System.Globalization.CultureInfo> oggetti se eseguito in Windows 10.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Globalization.CultureInfo> per lo spagnolo (Spagna) con l'ordinamento internazionale e un'altra <xref:System.Globalization.CultureInfo> con ordinamento tradizionale.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome delle impostazioni cultura nel formato *codicelingua2*-*paese/codicearea2*.</summary>
        <value>Il nome delle impostazioni cultura nel formato * codicelingua2 *-* paese / regioncode2 *. * codicelingua2 * è un codice di due lettere minuscole derivato da ISO 639-1. * paese / regioncode2 * è derivato da ISO 3166 e in genere costituito da due lettere maiuscole o da un tag di lingua BCP-47.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco dei nomi predefiniti delle impostazioni cultura e gli identificatori che il <xref:System.Globalization.CultureInfo.Name%2A> può restituire, vedere il [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) a Developer Center. Inoltre, a partire da Windows 10, `name` può essere qualsiasi tag di lingua BCP-47 valido. Si noti che i nomi delle impostazioni cultura sono soggetti a modifiche, e che inoltre può riflettono i nomi delle impostazioni cultura personalizzate.  
  
 Il <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> proprietà conforme agli standard di denominazione forniti nel <xref:System.Globalization.CultureInfo> argomento relativo alla classe. Restituisce la versione abbreviata del nome delle impostazioni cultura che esclude qualsiasi indicazione di ordinamento alternativo. Ad esempio, se si crea un'istanza un <xref:System.Globalization.CultureInfo> oggetto usando la stringa "de-de phoneb" in modo da riflettere un ordinamento alternativo di <xref:System.Globalization.CultureInfo.Name%2A> proprietà restituisce "de-DE".  
  
 Per ottenere il nome completo delle impostazioni cultura, è consigliabile utilizzare il <xref:System.Globalization.CultureInfo.DisplayName%2A>, <xref:System.Globalization.CultureInfo.EnglishName%2A>, o <xref:System.Globalization.CultureInfo.NativeName%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare diverse proprietà associate ad alcun paese.  
  
> [!NOTE]
>  Nell'esempio vengono visualizzati i nomi delle impostazioni cultura precedenti zh-CHT e zh-CHS con gli identificatori delle impostazioni cultura 0x0004 e 0x7C04, rispettivamente. Tuttavia, le applicazioni di Windows Vista devono utilizzare il nome zh-Hans anziché zh-CHS e il nome zh-Hant anziché zh-CHT. Il zh-Hans e zh-Hant nomi rappresentano lo standard corrente e deve essere utilizzati a meno che non esista un motivo per utilizzare i nomi precedenti.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NativeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome delle impostazioni cultura, costituito dalla lingua, dal paese dallo script facoltativo impostati per la visualizzazione.</summary>
        <value>Nome delle impostazioni cultura costituito dal nome completo della lingua e del paese e dallo script facoltativo. Il formato è illustrato nella descrizione della classe <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa proprietà è lo stesso, indipendentemente dalla versione del linguaggio di .NET Framework.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce il formato culturalmente appropriato per la visualizzazione di numeri, valute e percentuali.</summary>
        <value>Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce il formato culturalmente appropriato per la visualizzazione di numeri, valute e percentuali.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a>Overrides  
 L'utente può scegliere di eseguire l'override di alcuni dei valori associati alla lingua corrente di Windows tramite le opzioni internazionali e della lingua nel Pannello di controllo. Ad esempio, l'utente può scegliere per visualizzare la data in un formato diverso o utilizzare una valuta diversa da quella predefinita per le impostazioni cultura.  
  
 Se <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è `true` e le impostazioni cultura specificate corrispondono alla lingua corrente di Windows, il <xref:System.Globalization.CultureInfo> utilizzerà tali override, incluse le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> , proprietà e le proprietà del <xref:System.Globalization.NumberFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Se le impostazioni utente non sono compatibili con le impostazioni cultura associate di <xref:System.Globalization.CultureInfo>, ad esempio, se il calendario selezionato non è uno del <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, i risultati dei metodi e i valori delle proprietà sono indefiniti.  
  
 I valori del <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> proprietà e <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà non vengono calcolate fino a quando l'utente accede alla proprietà. Se l'utente utilizza il pannello di controllo per modificare le impostazioni cultura correnti per una nuova impostazione cultura, mentre l'applicazione è in esecuzione e quindi gli accessi di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> o <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà, l'applicazione recupera i valori predefiniti per le nuove impostazioni cultura. non gli override delle impostazioni cultura originali. Per mantenere gli override delle impostazioni cultura correnti originale, l'applicazione deve accedere il <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> e <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà prima di modificare le impostazioni cultura correnti.  
  
   
  
## Examples  
 Esempio di codice seguente mostra che anche possibile clonare il <xref:System.Globalization.DateTimeFormatInfo> e <xref:System.Globalization.NumberFormatInfo> le istanze associate di <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La proprietà è impostata su Null.</exception>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> o una qualsiasi delle proprietà <see cref="T:System.Globalization.NumberFormatInfo" /> vengono impostate e l'interfaccia <see cref="T:System.Globalization.CultureInfo" /> è di sola lettura.</exception>
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="OptionalCalendars">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar[] OptionalCalendars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] OptionalCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OptionalCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Globalization::Calendar ^&gt; ^ OptionalCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'elenco dei calendari utilizzabili con le impostazioni cultura.</summary>
        <value>Matrice di tipo <see cref="T:System.Globalization.Calendar" /> che rappresenta i calendari utilizzabili con le impostazioni cultura rappresentate dalla classe <see cref="T:System.Globalization.CultureInfo" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'applicazione viene modificato il calendario utilizzato da corrente <xref:System.Globalization.CultureInfo> impostando il <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> proprietà di <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, che è un'istanza del <xref:System.Globalization.DateTimeFormatInfo> classe. Il nuovo calendario deve essere uno dei calendari elencati in <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> include anche altre proprietà che consentono di personalizzare la formattazione di data e ora associata a tale <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come determinare la <xref:System.Globalization.GregorianCalendar> versioni supportate per le impostazioni cultura.  
  
 [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CPP/gregoriancalendartypes.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CS/gregoriancalendartypes.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/VB/gregoriancalendartypes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CultureInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni cultura padre dell'oggetto <see cref="T:System.Globalization.CultureInfo" /> corrente.</summary>
        <value>Oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni cultura padre dell'oggetto <see cref="T:System.Globalization.CultureInfo" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le impostazioni cultura dispongono di una gerarchia in cui l'elemento padre di una lingua specifica è una lingua, il padre di una lingua è il <xref:System.Globalization.CultureInfo.InvariantCulture%2A>e l'elemento padre del <xref:System.Globalization.CultureInfo.InvariantCulture%2A> è la stessa lingua inglese. Le impostazioni cultura padre include solo il set di informazioni comuni tra i relativi elementi figlio.  
  
 Se le risorse per le impostazioni cultura specifiche non sono disponibili nel sistema, vengono utilizzate le risorse per la lingua. Se le risorse per la lingua non sono disponibili, vengono utilizzate le risorse incorporate nell'assembly principale. Per ulteriori informazioni sul processo di fallback delle risorse, vedere [package e distribuzione delle risorse](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
   
  
## Examples  
 Esempio di codice seguente determina le impostazioni cultura padre delle singole impostazioni cultura specifica utilizzando la lingua cinese.  
  
> [!NOTE]
>  Nell'esempio vengono visualizzati i nomi delle impostazioni cultura precedenti zh-CHT e zh-CHS con gli identificatori delle impostazioni cultura 0x0004 e 0x7C04, rispettivamente. Tuttavia, le applicazioni di Windows Vista devono utilizzare il nome zh-Hans anziché zh-CHS e il nome zh-Hant anziché zh-CHT. Il zh-Hans e zh-Hant nomi rappresentano lo standard corrente e deve essere utilizzati a meno che non esista un motivo per utilizzare i nomi precedenti.  
  
 [!code-cpp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CPP/parentculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CS/parentculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/VB/parentculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo ReadOnly (System.Globalization.CultureInfo ci);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo ReadOnly(class System.Globalization.CultureInfo ci) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (ci As CultureInfo) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ ReadOnly(System::Globalization::CultureInfo ^ ci);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ci">Oggetto <see cref="T:System.Globalization.CultureInfo" /> di cui eseguire il wrapping.</param>
        <summary>Restituisce un wrapper di sola lettura per l'oggetto <see cref="T:System.Globalization.CultureInfo" /> specificato.</summary>
        <returns>Wrapper <see cref="T:System.Globalization.CultureInfo" /> di sola lettura di <paramref name="ci" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo wrapper impedisce che eventuali modifiche apportate ai `ci`, o gli oggetti restituiti dal `ci`.<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> e `ci`.<xref:System.Globalization.CultureInfo.NumberFormat%2A> Proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato che il <xref:System.Globalization.CultureInfo.ReadOnly%2A> metodo consente di proteggere il <xref:System.Globalization.DateTimeFormatInfo> e <xref:System.Globalization.NumberFormatInfo> le istanze associate di <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ci" /> è null.</exception>
        <altmember cref="P:System.Globalization.CultureInfo.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.TextInfo TextInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Globalization.TextInfo" /> che definisce il sistema di scrittura associato alle impostazioni cultura.</summary>
        <value>Oggetto <see cref="T:System.Globalization.TextInfo" /> che definisce il sistema di scrittura associato alle impostazioni cultura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Globalization.CultureInfo.TextInfo%2A> proprietà fornisce informazioni specifiche delle impostazioni cultura di maiuscole e minuscole nelle stringhe. Per eseguire le maiuscole e minuscole indipendente dalle impostazioni cultura, l'applicazione deve utilizzare il <xref:System.Globalization.CultureInfo.TextInfo%2A> proprietà <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Globalization.CultureInfo> per lo spagnolo (Spagna) con l'ordinamento internazionale e un'altra <xref:System.Globalization.CultureInfo> con ordinamento tradizionale.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il codice ISO 639-2 di tre lettere per la lingua della classe <see cref="T:System.Globalization.CultureInfo" /> corrente.</summary>
        <value>Codice ISO 639-2 di tre lettere per la lingua della classe <see cref="T:System.Globalization.CultureInfo" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'abbreviazione di tre lettere per la lingua inglese è, ad esempio, "eng".  
  
> [!NOTE]
>  Quando la comunicazione tra processi o rendere persistenti i dati in genere è preferibile per utilizzare la versione completa <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Utilizzando solo la lingua, è possibile perdere contesto e i dati.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare diverse proprietà associate ad alcun paese.  
  
> [!NOTE]
>  Nell'esempio vengono visualizzati i nomi delle impostazioni cultura precedenti zh-CHT e zh-CHS con gli identificatori delle impostazioni cultura 0x0004 e 0x7C04, rispettivamente. Tuttavia, le applicazioni di Windows Vista devono utilizzare il nome zh-Hans anziché zh-CHS e il nome zh-Hant anziché zh-CHT. Il zh-Hans e zh-Hant nomi rappresentano lo standard corrente e deve essere utilizzati a meno che non esista un motivo per utilizzare i nomi precedenti.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il codice di tre lettere per la lingua come definito nell'API di Windows.</summary>
        <value>Codice di tre lettere per la lingua come definito nell'API di Windows.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce lo stesso valore del metodo API di Windows `GetLocaleInfo` con il valore LOCALE_SABBREVLANGNAME. Ad esempio, il codice di tre lettere per la lingua inglese (Stati Uniti) come definito nell'API di Windows è "enu".  
  
> [!NOTE]
>  Quando la comunicazione tra processi o rendere persistenti i dati in genere è preferibile per utilizzare la versione completa <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Utilizzando solo la lingua, è possibile perdere contesto e i dati.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare diverse proprietà associate ad alcun paese.  
  
> [!NOTE]
>  Nell'esempio vengono visualizzati i nomi delle impostazioni cultura precedenti zh-CHT e zh-CHS con gli identificatori delle impostazioni cultura 0x0004 e 0x7C04, rispettivamente. Tuttavia, le applicazioni di Windows Vista devono utilizzare il nome zh-Hans anziché zh-CHS e il nome zh-Hant anziché zh-CHT. Il zh-Hans e zh-Hant nomi rappresentano lo standard corrente e deve essere utilizzati a meno che non esista un motivo per utilizzare i nomi precedenti.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una stringa contenente il nome della classe <see cref="T:System.Globalization.CultureInfo" /> corrente nel formato *codicelingua2*-*paese/codicearea2*.</summary>
        <returns>Stringa contenente il nome dell'oggetto <see cref="T:System.Globalization.CultureInfo" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo esegue l'override del metodo <xref:System.Object.ToString%2A?displayProperty=nameWithType>. Restituisce una versione normalizzata del nome delle impostazioni cultura che viene passato per il <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> o <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> costruttore o il <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> o <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29> (metodo). Normalizza stringa di risultato mediante la conversione di caratteri in *codicelingua2* a lettere minuscole e la conversione dei caratteri in *codicepaese2* in lettere maiuscole se necessario.  
  
 I nomi delle impostazioni cultura predefinite sono elencati nel [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) pagina all'indirizzo del Developer Center.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il codice ISO 639-1 di due lettere per la lingua della classe <see cref="T:System.Globalization.CultureInfo" /> corrente.</summary>
        <value>Codice ISO 639-1 di due lettere per la lingua della classe <see cref="T:System.Globalization.CultureInfo" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'abbreviazione di due lettere per la lingua inglese è, ad esempio, "en". Il <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> valore della proprietà per la lingua inglese è "iv".  
  
> [!NOTE]
>  Quando la comunicazione tra processi o rendere persistenti i dati in genere è preferibile per utilizzare la versione completa <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Utilizzando solo la lingua, è possibile perdere contesto e i dati.  
  
 Se non definisce un codice di lingua di due lettere per una particolare lingua ISO 639-1 di <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> proprietà restituisce una stringa costituita da tre o più lettere. Per ulteriori informazioni, vedere l'esempio.  
  
   
  
## Examples  
 Nell'esempio seguente vengono elencate le impostazioni cultura cui <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> proprietà è costituito da un codice lingua di due lettere.  
  
 [!code-csharp[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/cs/twoletterisolanguagename1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/vb/twoletterisolanguagename1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="UseUserOverride">
      <MemberSignature Language="C#" Value="public bool UseUserOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseUserOverride" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.UseUserOverride" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseUserOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseUserOverride { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Globalization.CultureInfo" /> corrente usa le impostazioni cultura selezionate dall'utente.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Globalization.CultureInfo" /> corrente utilizza le impostazioni cultura selezionate dall'utente; in caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'utente può scegliere di eseguire l'override di alcuni dei valori associati alla lingua corrente di Windows tramite le opzioni internazionali e della lingua nel Pannello di controllo. Ad esempio, l'utente può scegliere per visualizzare la data in un formato diverso o utilizzare una valuta diversa da quella predefinita per le impostazioni cultura.  
  
 Se <xref:System.Globalization.CultureInfo.UseUserOverride%2A> è `true` e le impostazioni cultura specificate corrispondono alla lingua corrente di Windows, il <xref:System.Globalization.CultureInfo> utilizzerà tali override, incluse le impostazioni utente per le proprietà del <xref:System.Globalization.DateTimeFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> , proprietà e le proprietà del <xref:System.Globalization.NumberFormatInfo> istanza restituita dal <xref:System.Globalization.CultureInfo.NumberFormat%2A> proprietà. Se le impostazioni utente non sono compatibili con le impostazioni cultura associate di <xref:System.Globalization.CultureInfo>, ad esempio, se il calendario selezionato non è uno del <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, i risultati dei metodi e i valori delle proprietà sono indefiniti.  
  
 Questa proprietà viene impostata quando il <xref:System.Globalization.CultureInfo> viene creato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>