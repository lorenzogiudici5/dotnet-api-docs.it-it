<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringInfo.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe07dfcadf1280b7a99ae67ace6278f0fb80976a6481.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dfcadf1280b7a99ae67ace6278f0fb80976a6481</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Globalization.StringInfo">
          <source>Provides functionality to split a string into text elements and to iterate through those text elements.</source>
          <target state="translated">Fornisce funzionalità per suddividere una stringa in elementi di testo e per scorrere tali elementi di testo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</source>
          <target state="translated">.NET Framework definisce un elemento di testo come un'unità di testo che viene visualizzato come un singolo carattere, vale a dire un grafemi.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>A text element can be a base character, a surrogate pair, or a combining character sequence.</source>
          <target state="translated">Un elemento di testo può essere un carattere di base, una coppia di surrogati o un carattere di combinazione sequenza.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</source>
          <target state="translated">Il <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> definisce una coppia di surrogati come una rappresentazione di caratteri codificati per un singolo carattere astratto costituito da una sequenza di due unità di codice, in cui la prima unità della coppia è un surrogato alto e il secondo è un valore basso surrogato.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</source>
          <target state="translated">Lo Unicode Standard definisce una combinazione sequenza come una combinazione di un carattere di base e uno o più caratteri di combinazione di caratteri.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>A surrogate pair can represent a base character or a combining character.</source>
          <target state="translated">Una coppia di surrogati può rappresentare un carattere di base o un carattere di combinazione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> class enables you to work with a string as a series of textual elements rather than individual <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> consente di utilizzare una stringa come serie di elementi testuali anziché singoli oggetti <ph id="ph2">&lt;xref:System.Char&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> object that represents a specified string, you can do either of the following:</source>
          <target state="translated">Per creare un'istanza di un <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> oggetto che rappresenta una stringa specificata, è possibile effettuare una delle operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>Call the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.%23ctor%28System.String%29&gt;</ph> constructor and pass it the string that the <ph id="ph2">&lt;xref:System.Globalization.StringInfo&gt;</ph> object is to represent as an argument.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Globalization.StringInfo.%23ctor%28System.String%29&gt;</ph> costruttore e passare la stringa che la <ph id="ph2">&lt;xref:System.Globalization.StringInfo&gt;</ph> oggetto deve essere rappresentato come un argomento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>Call the default <ph id="ph1">&lt;xref:System.Globalization.StringInfo.%23ctor&gt;</ph> constructor, and assign the string that the <ph id="ph2">&lt;xref:System.Globalization.StringInfo&gt;</ph> object is to represent to the <ph id="ph3">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> property.</source>
          <target state="translated">Chiamare il valore predefinito <ph id="ph1">&lt;xref:System.Globalization.StringInfo.%23ctor&gt;</ph> costruttore e assegnare la stringa che la <ph id="ph2">&lt;xref:System.Globalization.StringInfo&gt;</ph> oggetto è per rappresentare il <ph id="ph3">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>You can work with the individual text elements in a string in two ways:</source>
          <target state="translated">È possibile utilizzare i singoli elementi di testo di una stringa in due modi:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>By enumerating each text element.</source>
          <target state="translated">Enumerando ogni elemento di testo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>To do this, you call the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> method, and then repeatedly call the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> method on the returned <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object until the method returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated">A tale scopo, chiamare il metodo <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph>, quindi chiamare ripetutamente il metodo <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> sull'oggetto <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> restituito finché quest'ultimo non restituisce <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>By calling the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> method to retrieve an array that contains the starting index of each text element.</source>
          <target state="translated">Chiamando il metodo <ph id="ph1">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> per recuperare una matrice contenente l'indice iniziale di ogni elemento di testo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>You can then retrieve individual text elements by passing these indexes to the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> method.</source>
          <target state="translated">È quindi possibile recuperare i singoli elementi di testo passando questi indici al metodo <ph id="ph1">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>The following example illustrates both ways of working with the text elements in a string.</source>
          <target state="translated">Nell'esempio seguente vengono illustrate entrambe le modalità di utilizzo degli elementi di testo in una stringa.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>It creates two strings:</source>
          <target state="translated">Vengono create due stringhe:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source><ph id="ph1">`strCombining`</ph>, which is a string of Arabic characters that includes three text elements with multiple <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`strCombining`</ph>, una stringa di caratteri arabi contenente tre elementi di testo con più oggetti <ph id="ph2">&lt;xref:System.Char&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>The first text element is the base character ARABIC LETTER ALEF (U+-627) followed by ARABIC HAMZA BELOW (U+-655) and ARABIC KASRA (U+0650).</source>
          <target state="translated">Il primo elemento di testo è il carattere di base ARABIC LETTER ALEF (U+-627) seguito da ARABIC HAMZA BELOW (U+-655) e ARABIC KASRA (U+0650).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>The second text element is ARABIC LETTER HEH (U+0647) followed by ARABIC FATHA (U+-64E).</source>
          <target state="translated">Il secondo elemento di testo è ARABIC LETTER HEH (U+0647) seguito da ARABIC FATHA (U+-64E).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>The third text element is ARABIC LETTTER BEH (U+0628) followed by ARABIC DAMMATAN (U+064C).</source>
          <target state="translated">Il terzo elemento di testo è ARABIC LETTTER BEH (U+0628) seguito da ARABIC DAMMATAN (U+064C).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source><ph id="ph1">`strSurrogates`</ph>, which is a string that includes three surrogate pairs: GREEK ACROPHONIC FIVE TALENTS (U+10148) from the Supplementary Multilingual Plane, U+20026 from the Supplementary Ideographic Plane, and U+F1001 from the private user area.</source>
          <target state="translated"><ph id="ph1">`strSurrogates`</ph>, che è una stringa che include tre coppie di surrogati: AGREEK ACROPHONIC FIVE TALENTS (U+10148) del Piano multilingue supplementare, U+20026 del Piano ideografico supplementare e U+F1001 dall'area privata dell'utente.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>The UTF-16 encoding of each character is a surrogate pair that consists of a high surrogate followed by a low surrogate.</source>
          <target state="translated">La codifica UTF-16 di ciascun carattere è una coppia di surrogati costituita da un surrogato alto seguito da un surrogato basso.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>Each string is parsed once by the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> method and then by the <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Ogni stringa viene analizzata una volta dal metodo <ph id="ph1">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> e successivamente dal metodo <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>Both methods correctly parse the text elements in the two strings and display the results of the parsing operation.</source>
          <target state="translated">Entrambi i metodi analizzano correttamente gli elementi di testo nelle due stringhe e visualizzano i risultati dell'operazione di analisi.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>This example shows how to use the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Globalization.StringInfo&gt;</ph> class to manipulate a string that contains surrogate and combining characters.</source>
          <target state="translated">In questo esempio viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> metodi di <ph id="ph3">&lt;xref:System.Globalization.StringInfo&gt;</ph> classe per gestire una stringa che contiene caratteri surrogati e combinazione.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>Internally, the methods of the <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> class call the methods of the <ph id="ph2">&lt;see cref="T:System.Globalization.CharUnicodeInfo" /&gt;</ph> class to determine character categories.</source>
          <target state="translated">Internamente, i metodi del <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> classe chiamare i metodi del <ph id="ph2">&lt;see cref="T:System.Globalization.CharUnicodeInfo" /&gt;</ph> classe per determinare le categorie di caratteri.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, character classification is based on <bpt id="p1">[</bpt>The Unicode Standard, Version 8.0.0<ept id="p1">](https://unicode.org/versions/Unicode8.0.0)</ept>.</source>
          <target state="translated">A partire dal <ph id="ph1">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, classificazione di caratteri è basata su <bpt id="p1">[</bpt>lo Unicode Standard, versione 8.0.0<ept id="p1">](https://unicode.org/versions/Unicode8.0.0)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.StringInfo">
          <source>For the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> through the <ph id="ph2">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, it is based on <bpt id="p1">[</bpt>The Unicode Standard, Version 6.3.0<ept id="p1">](https://www.unicode.org/versions/Unicode6.3.0/)</ept>.</source>
          <target state="translated">Per il <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> tramite il <ph id="ph2">[!INCLUDE[net_v461](~/includes/net-v461-md.md)]</ph>, si basa su <bpt id="p1">[</bpt>lo Unicode Standard, versione 6.3.0<ept id="p1">](https://www.unicode.org/versions/Unicode6.3.0/)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Globalization.StringInfo">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.#ctor">
          <source>The value of the new <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> object is initialized to the empty string ("").</source>
          <target state="translated">Il valore del nuovo <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> oggetto viene inizializzato su una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.#ctor">
          <source>You can assign another string to it by using the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> property.</source>
          <target state="translated">È possibile assegnare un'altra stringa a esso tramite il <ph id="ph1">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.#ctor">
          <source>You can also instantiate a <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> object that represents a specified string in a single step by calling the <ph id="ph2">&lt;xref:System.Globalization.StringInfo.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">È possibile anche creare un'istanza di un <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> oggetto che rappresenta una stringa specificata in un unico passaggio chiamando il <ph id="ph2">&lt;xref:System.Globalization.StringInfo.%23ctor%28System.String%29&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.#ctor(System.String)">
          <source>A string to initialize this <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Stringa su cui inizializzare questo oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> class to a specified string.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> sulla stringa specificata.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.#ctor(System.String)">
          <source>This constructor assigns the value argument to the object's <ph id="ph1">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> property.</source>
          <target state="translated">Questo costruttore assegna l'argomento di tipo valore per l'oggetto <ph id="ph1">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.Equals(System.Object)">
          <source>An object.</source>
          <target state="translated">Oggetto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.Equals(System.Object)">
          <source>Indicates whether the current <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente è uguale a un oggetto specificato.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is a <ph id="ph3">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object and its <ph id="ph4">&lt;see cref="P:System.Globalization.StringInfo.String" /&gt;</ph> property equals the <ph id="ph5">&lt;see cref="P:System.Globalization.StringInfo.String" /&gt;</ph> property of this <ph id="ph6">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il parametro <ph id="ph2">&lt;paramref name="value" /&gt;</ph> è un oggetto <ph id="ph3">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> e la proprietà <ph id="ph4">&lt;see cref="P:System.Globalization.StringInfo.String" /&gt;</ph> relativa è uguale alla proprietà <ph id="ph5">&lt;see cref="P:System.Globalization.StringInfo.String" /&gt;</ph> di questo oggetto <ph id="ph6">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>; in caso contrario, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetHashCode">
          <source>Calculates a hash code for the value of the current <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Calcola un codice hash per il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetHashCode">
          <source>A 32-bit signed integer hash code based on the string value of this <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Codice hash integer con segno a 32 bit basato sul valore della stringa di questo oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetHashCode">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph> is dependent on its implementation, which might change from one version of the common language runtime to another.</source>
          <target state="translated">Il comportamento di <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph> dipende dalla relativa implementazione, che potrebbe cambiare da una versione di common language runtime.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetHashCode">
          <source>This might happen to improve the performance of <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph>.</source>
          <target state="translated">Questa situazione può verificarsi per migliorare le prestazioni di <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetHashCode">
          <source>To make the behavior of <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph> constant, the application should override the runtime implementation of <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph> with an implementation known to never change.</source>
          <target state="translated">Per rendere il comportamento di <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph> costante, l'applicazione deve eseguire l'override dell'implementazione di runtime di <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph> con un'implementazione stabile.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="T:System.Globalization.StringInfo">
          <source>Gets the first text element in a specified string.</source>
          <target state="translated">Ottiene il primo elemento di testo in una stringa specificata.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source>The string from which to get the text element.</source>
          <target state="translated">Stringa dalla quale ottenere l'elemento di testo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source>Gets the first text element in a specified string.</source>
          <target state="translated">Ottiene il primo elemento di testo in una stringa specificata.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source>A string containing the first text element in the specified string.</source>
          <target state="translated">Stringa contenente il primo elemento di testo nella stringa specificata.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source>The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</source>
          <target state="translated">.NET Framework definisce un elemento di testo come un'unità di testo che viene visualizzato come un singolo carattere, vale a dire un grafemi.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source>A text element can be a base character, a surrogate pair, or a combining character sequence.</source>
          <target state="translated">Un elemento di testo può essere un carattere di base, una coppia di surrogati o un carattere di combinazione sequenza.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</source>
          <target state="translated">Il <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> definisce una coppia di surrogati come una rappresentazione di caratteri codificati per un singolo carattere astratto costituito da una sequenza di due unità di codice, in cui la prima unità della coppia è un surrogato alto e il secondo è un valore basso surrogato.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a combining character sequence as a combination of a base character and one or more combining characters.</source>
          <target state="translated">Il <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> definisce una combinazione sequenza come una combinazione di un carattere di base e uno o più caratteri di combinazione di caratteri.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source>A surrogate pair can represent a base character or a combining character.</source>
          <target state="translated">Una coppia di surrogati può rappresentare un carattere di base o un carattere di combinazione.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source>This method only returns the first text element.</source>
          <target state="translated">Questo metodo restituisce solo il primo elemento di testo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source>To iterate through the text elements of the string, the application should use the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object generated by the <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Per scorrere gli elementi di testo della stringa, l'applicazione deve utilizzare il <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> oggetto generato dal <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
          <source><ph id="ph1">&lt;paramref name="str" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="str" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>The string from which to get the text element.</source>
          <target state="translated">Stringa dalla quale ottenere l'elemento di testo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>The zero-based index at which the text element starts.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale inizia l'elemento di testo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>Gets the text element at the specified index of the specified string.</source>
          <target state="translated">Ottiene l'elemento di testo in corrispondenza dell'indice specificato della stringa indicata.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>A string containing the text element at the specified index of the specified string.</source>
          <target state="translated">Stringa contenente l'elemento di testo in corrispondenza dell'indice specificato della stringa indicata.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</source>
          <target state="translated">.NET Framework definisce un elemento di testo come un'unità di testo che viene visualizzato come un singolo carattere, vale a dire un grafemi.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>A text element can be a base character, a surrogate pair, or a combining character sequence.</source>
          <target state="translated">Un elemento di testo può essere un carattere di base, una coppia di surrogati o un carattere di combinazione sequenza.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</source>
          <target state="translated">Il <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> definisce una coppia di surrogati come una rappresentazione di caratteri codificati per un singolo carattere astratto costituito da una sequenza di due unità di codice, in cui la prima unità della coppia è un surrogato alto e il secondo è un valore basso surrogato.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</source>
          <target state="translated">Lo Unicode Standard definisce una combinazione sequenza come una combinazione di un carattere di base e uno o più caratteri di combinazione di caratteri.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>A surrogate pair can represent a base character or a combining character.</source>
          <target state="translated">Una coppia di surrogati può rappresentare un carattere di base o un carattere di combinazione.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>This method only returns the first text element of the substring that starts at the specified index.</source>
          <target state="translated">Questo metodo restituisce solo il primo elemento di testo della sottostringa che inizia in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source>To iterate through the text elements of the string, the application should use the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> generated by the <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Per scorrere gli elementi di testo della stringa, l'applicazione deve utilizzare il <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> generati dal <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="str" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="str" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;paramref name="str" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> non è compreso nell'intervallo di indici validi per <ph id="ph2">&lt;paramref name="str" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.Globalization.StringInfo">
          <source>Returns an enumerator that iterates through the text elements of a string.</source>
          <target state="translated">Restituisce un enumeratore che consente di scorrere gli elementi di testo di una stringa.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>The string to iterate through.</source>
          <target state="translated">Stringa da scorrere.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>Returns an enumerator that iterates through the text elements of the entire string.</source>
          <target state="translated">Restituisce un enumeratore che consente di scorrere gli elementi di testo dell'intera stringa.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.TextElementEnumerator" /&gt;</ph> for the entire string.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.TextElementEnumerator" /&gt;</ph> per l'intera stringa.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</source>
          <target state="translated">.NET Framework definisce un elemento di testo come un'unità di testo che viene visualizzato come un singolo carattere, vale a dire un grafemi.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>A text element can be a base character, a surrogate pair, or a combining character sequence.</source>
          <target state="translated">Un elemento di testo può essere un carattere di base, una coppia di surrogati o un carattere di combinazione sequenza.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</source>
          <target state="translated">Il <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> definisce una coppia di surrogati come una rappresentazione di caratteri codificati per un singolo carattere astratto costituito da una sequenza di due unità di codice, in cui la prima unità della coppia è un surrogato alto e il secondo è un valore basso surrogato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</source>
          <target state="translated">Lo Unicode Standard definisce una combinazione sequenza come una combinazione di un carattere di base e uno o più caratteri di combinazione di caratteri.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>A surrogate pair can represent a base character or a combining character.</source>
          <target state="translated">Una coppia di surrogati può rappresentare un carattere di base o un carattere di combinazione.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>The text element enumerator is used only to read data in the string; it cannot modify the underlying string.</source>
          <target state="translated">L'enumeratore di elemento di testo viene utilizzato solo per leggere i dati nella stringa. Impossibile modificare la stringa sottostante.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>The enumerator does not have exclusive access to the string.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla stringa.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string.</source>
          <target state="translated">Se è posizionato davanti al primo elemento di testo nella stringa o dopo l'ultimo elemento nella stringa di testo, l'enumeratore è in uno stato non valido.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>When the enumerator is in an invalid state, calling <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Quando l'enumeratore è in uno stato non valido, la chiamata <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>Initially, the enumerator is positioned before the first text element in the string.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento di testo nella stringa.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated">Anche il metodo <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> riporta l'enumeratore in questa posizione.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>Therefore, after an enumerator is created or after <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first text element of the string before reading the value of <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Di conseguenza, dopo la creazione di un enumeratore o dopo <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> viene chiamato, <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> deve essere chiamato per passare l'enumeratore al primo elemento della stringa di testo prima di leggere il valore di <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> restituisce lo stesso oggetto finché non viene chiamato il metodo <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>After the end of the string is passed, the enumerator is again in an invalid state and calling <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Una volta raggiunta la fine della stringa, l'enumeratore è nuovo in un stato non valido e chiamato <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>Calling <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> throws an exception if the last call to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> genera un'eccezione se l'ultima chiamata a <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>The following code example demonstrates calling the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la chiamata di <ph id="ph1">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
          <source><ph id="ph1">&lt;paramref name="str" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="str" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>The string to iterate through.</source>
          <target state="translated">Stringa da scorrere.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>The zero-based index at which to start iterating.</source>
          <target state="translated">Indice in base zero dal quale iniziare lo scorrimento.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>Returns an enumerator that iterates through the text elements of the string, starting at the specified index.</source>
          <target state="translated">Restituisce un enumeratore che consente di scorrere gli elementi di testo della stringa, a partire dall'indice specificato.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.TextElementEnumerator" /&gt;</ph> for the string starting at <ph id="ph2">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.TextElementEnumerator" /&gt;</ph> per la stringa che parte da <ph id="ph2">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</source>
          <target state="translated">.NET Framework definisce un elemento di testo come un'unità di testo che viene visualizzato come un singolo carattere, vale a dire un grafemi.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>A text element can be a base character, a surrogate pair, or a combining character sequence.</source>
          <target state="translated">Un elemento di testo può essere un carattere di base, una coppia di surrogati o un carattere di combinazione sequenza.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</source>
          <target state="translated">Il <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> definisce una coppia di surrogati come una rappresentazione di caratteri codificati per un singolo carattere astratto costituito da una sequenza di due unità di codice, in cui la prima unità della coppia è un surrogato alto e il secondo è un valore basso surrogato.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</source>
          <target state="translated">Lo Unicode Standard definisce una combinazione sequenza come una combinazione di un carattere di base e uno o più caratteri di combinazione di caratteri.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>A surrogate pair can represent a base character or a combining character.</source>
          <target state="translated">Una coppia di surrogati può rappresentare un carattere di base o un carattere di combinazione.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>The text element enumerator is used only to read data in the string; it cannot modify the underlying string.</source>
          <target state="translated">L'enumeratore di elemento di testo viene utilizzato solo per leggere i dati nella stringa. Impossibile modificare la stringa sottostante.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>The enumerator does not have exclusive access to the string.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla stringa.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string.</source>
          <target state="translated">Se è posizionato davanti al primo elemento di testo nella stringa o dopo l'ultimo elemento nella stringa di testo, l'enumeratore è in uno stato non valido.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>When the enumerator is in an invalid state, calling <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Quando l'enumeratore è in uno stato non valido, la chiamata <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>Initially, the enumerator is positioned before the first text element in the string.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento di testo nella stringa.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated">Anche il metodo <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> riporta l'enumeratore in questa posizione.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>Therefore, after an enumerator is created or after <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first text element of the string before reading the value of <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Di conseguenza, dopo la creazione di un enumeratore o dopo <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> viene chiamato, <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> deve essere chiamato per passare l'enumeratore al primo elemento della stringa di testo prima di leggere il valore di <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> restituisce lo stesso oggetto finché non viene chiamato il metodo <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>After the end of the string is passed, the enumerator is again in an invalid state and calling <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Una volta raggiunta la fine della stringa, l'enumeratore è nuovo in un stato non valido e chiamato <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source>Calling <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> throws an exception if the last call to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> genera un'eccezione se l'ultima chiamata a <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="str" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="str" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;paramref name="str" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> non è compreso nell'intervallo di indici validi per <ph id="ph2">&lt;paramref name="str" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Globalization.StringInfo.LengthInTextElements">
          <source>Gets the number of text elements in the current <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Ottiene il numero di elementi di testo nell'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.StringInfo.LengthInTextElements">
          <source>The number of base characters, surrogate pairs, and combining character sequences in this <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Il numero di caratteri di base, coppie di surrogati e sequenze di caratteri di unione nell'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>The string to search.</source>
          <target state="translated">Stringa in cui effettuare la ricerca.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>Returns the indexes of each base character, high surrogate, or control character within the specified string.</source>
          <target state="translated">Restituisce gli indici di ciascun carattere base, surrogato alto o carattere di controllo all'interno della stringa specificata.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.</source>
          <target state="translated">Matrice di interi che contiene gli indici in base zero di ciascun carattere base, surrogato alto o carattere di controllo all'interno della stringa specificata.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</source>
          <target state="translated">Il <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> definisce una coppia di surrogati come una rappresentazione di caratteri codificati per un singolo carattere astratto costituito da una sequenza di due unità di codice, in cui la prima unità della coppia è un surrogato alto e il secondo è un valore basso surrogato.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>A high surrogate is a Unicode code point in the range U+D800 through U+DBFF and a low surrogate is a Unicode code point in the range U+DC00 through U+DFFF.</source>
          <target state="translated">Un surrogato alto è un punto di codice Unicode compreso nell'intervallo da U + D800 e U + DBFF e un surrogato basso è un punto di codice Unicode compreso nell'intervallo tra U + DC00 e U + DFFF.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>A control character is a character for which the Unicode value is U+007F or in the range U+0000 through U+001F or U+0080 through U+009F.</source>
          <target state="translated">Un carattere di controllo è un carattere per i quali il valore Unicode U + 007F o compreso nell'intervallo tra U + 0000 e U + 001F o U + 0080 a U + 009F.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</source>
          <target state="translated">.NET Framework definisce un elemento di testo come un'unità di testo che viene visualizzato come un singolo carattere, vale a dire un grafemi.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>A text element can be a base character, a surrogate pair, or a combining character sequence.</source>
          <target state="translated">Un elemento di testo può essere un carattere di base, una coppia di surrogati o un carattere di combinazione sequenza.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a combining character sequence as a combination of a base character and one or more combining characters.</source>
          <target state="translated">Il <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> definisce una combinazione sequenza come una combinazione di un carattere di base e uno o più caratteri di combinazione di caratteri.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>A surrogate pair can represent a base character or a combining character.</source>
          <target state="translated">Una coppia di surrogati può rappresentare un carattere di base o un carattere di combinazione.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>If a combining character sequence is invalid, every combining character in that sequence is also returned.</source>
          <target state="translated">Se una combinazione sequenza di caratteri non è valida, viene restituito anche ogni carattere di combinazione di tale sequenza.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>Each index in the resulting array is the beginning of a text element, that is, the index of the base character or the high surrogate.</source>
          <target state="translated">Ogni indice nella matrice risultante è l'inizio di un elemento di testo, vale a dire l'indice del carattere di base o il surrogato alto.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>The length of each element is easily computed as the difference between successive indexes.</source>
          <target state="translated">La lunghezza di ogni elemento facilmente viene calcolata come la differenza tra indici successivi.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>The length of the array will always be less than or equal to the length of the string.</source>
          <target state="translated">La lunghezza della matrice sarà sempre minore o uguale alla lunghezza della stringa.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>For example, given the string "\u4f00\u302a\ud800\udc00\u4f01", this method returns the indexes 0, 2, and 4.</source>
          <target state="translated">Condizione che la stringa "\u4f00\u302a\ud800\udc00\u4f01", è ad esempio, questo metodo restituisce gli indici 0, 2 e 4.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>Equivalent Members</source>
          <target state="translated">Membri equivalenti</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>Starting in version 2.0 of the .NET Framework, the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Globalization.StringInfo.LengthInTextElements%2A&gt;</ph> property provide an easy to use implementation of the functionality offered by the <ph id="ph3">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> method.</source>
          <target state="translated">A partire dalla versione 2.0 di .NET Framework, il <ph id="ph1">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> (metodo) e <ph id="ph2">&lt;xref:System.Globalization.StringInfo.LengthInTextElements%2A&gt;</ph> proprietà fornisce un'implementazione facile da usare la funzionalità offerta dal <ph id="ph3">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>The following code example demonstrates calling the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la chiamata di <ph id="ph1">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
          <source><ph id="ph1">&lt;paramref name="str" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="str" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Globalization.StringInfo.String">
          <source>Gets or sets the value of the current <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Ottiene o imposta il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.StringInfo.String">
          <source>The string that is the value of the current <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Stringa che rappresenta il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.StringInfo.String">
          <source>When a <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> object is instantiated, its <ph id="ph2">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> property is set to one of the following values:</source>
          <target state="translated">Quando un <ph id="ph1">&lt;xref:System.Globalization.StringInfo&gt;</ph> viene creata un'istanza di oggetto, il relativo <ph id="ph2">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> proprietà è impostata su uno dei valori seguenti:</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.StringInfo.String">
          <source><ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> if the default  <ph id="ph2">&lt;xref:System.Globalization.StringInfo.%23ctor&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> Se il valore predefinito <ph id="ph2">&lt;xref:System.Globalization.StringInfo.%23ctor&gt;</ph> viene chiamato.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.StringInfo.String">
          <source>You should then use the <ph id="ph1">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> property to assign the string that this <ph id="ph2">&lt;xref:System.Globalization.StringInfo&gt;</ph> object rperesents.</source>
          <target state="translated">Utilizzare quindi la <ph id="ph1">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> proprietà a cui assegnare la stringa da questo <ph id="ph2">&lt;xref:System.Globalization.StringInfo&gt;</ph> rperesents dell'oggetto.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.StringInfo.String">
          <source>The string supplied as the <ph id="ph1">`value`</ph> argument to the <ph id="ph2">&lt;xref:System.Globalization.StringInfo.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">La stringa fornita come il <ph id="ph1">`value`</ph> argomento per il <ph id="ph2">&lt;xref:System.Globalization.StringInfo.%23ctor%28System.String%29&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Globalization.StringInfo.String">
          <source>The value in a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore in un'operazione di impostazione è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Globalization.StringInfo">
          <source>Retrieves a substring of text elements from the current <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Recupera una sottostringa di elementi di testo dall'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)">
          <source>The zero-based index of a text element in this <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Indice in base zero di un elemento di testo in questo oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)">
          <source>Retrieves a substring of text elements from the current <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object starting from a specified text element and continuing through the last text element.</source>
          <target state="translated">Recupera una sottostringa degli elementi di testo dall'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente a partire da un elemento di testo specificato fino all'ultimo elemento di testo.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)">
          <source>A substring of text elements in this <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object, starting from the text element index specified by the <ph id="ph2">&lt;paramref name="startingTextElement" /&gt;</ph> parameter and continuing through the last text element in this object.</source>
          <target state="translated">Sottostringa degli elementi di testo in questo oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>, a partire dall'indice di elemento di testo specificato dal parametro <ph id="ph2">&lt;paramref name="startingTextElement" /&gt;</ph> fino all'ultimo elemento in questo oggetto.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)">
          <source>Consider a string that consists of five text elements, indexed from 0 through 4.</source>
          <target state="translated">Considerare una stringa costituita da cinque elementi di testo, indicizzati da 0 a 4.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)">
          <source>If the <ph id="ph1">`startingTextElement`</ph> parameter is 1, the  <ph id="ph2">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> method returns a substring that consists of the text elements for which the indexes are 1, 2, 3, and 4.</source>
          <target state="translated">Se il <ph id="ph1">`startingTextElement`</ph> parametro è 1, il <ph id="ph2">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> metodo restituisce una sottostringa che include gli elementi di testo i cui indici sono 1, 2, 3 e 4.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startingTextElement" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startingTextElement" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)">
          <source>The string that is the value of the current <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object is the empty string ("").</source>
          <target state="translated">La stringa che rappresenta il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente è la stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>The zero-based index of a text element in this <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Indice in base zero di un elemento di testo in questo oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>The number of text elements to retrieve.</source>
          <target state="translated">Numero di elementi di testo da recuperare.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>Retrieves a substring of text elements from the current <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object starting from a specified text element and continuing through the specified number of text elements.</source>
          <target state="translated">Recupera una sottostringa di elementi di testo dall'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente a partire da un elemento di testo specificato fino al numero specificato di elementi di testo.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>A substring of text elements in this <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated">Sottostringa di elementi di testo in questo oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>The substring consists of the number of text elements specified by the <ph id="ph1">&lt;paramref name="lengthInTextElements" /&gt;</ph> parameter and starts from the text element index specified by the <ph id="ph2">&lt;paramref name="startingTextElement" /&gt;</ph> parameter.</source>
          <target state="translated">La sottostringa è costituita dal numero di elementi di testo specificato dal parametro <ph id="ph1">&lt;paramref name="lengthInTextElements" /&gt;</ph> e inizia dall'indice di elemento di testo specificato dal parametro <ph id="ph2">&lt;paramref name="startingTextElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>Consider a string that consists of five text elements, indexed from 0 through 4.</source>
          <target state="translated">Considerare una stringa costituita da cinque elementi di testo, indicizzati da 0 a 4.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`startingTextElement`</ph> parameter is 1 and the <ph id="ph2">`lengthInTextElements`</ph> parameter is 3, the <ph id="ph3">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> method returns a substring that consists of the text elements for which the indexes are 1, 2, and 3.</source>
          <target state="translated">Se il <ph id="ph1">`startingTextElement`</ph> parametro è 1 e <ph id="ph2">`lengthInTextElements`</ph> parametro è 3, il <ph id="ph3">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> metodo restituisce una sottostringa che include gli elementi di testo i cui indici sono 1, 2 e 3.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startingTextElement" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startingTextElement" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startingTextElement" /&gt;</ph> is greater than or equal to the length of the string that is the value of the current <ph id="ph2">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startingTextElement" /&gt;</ph> è maggiore o uguale alla lunghezza della stringa che rappresenta il valore dell'oggetto <ph id="ph2">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="lengthInTextElements" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lengthInTextElements" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>The string that is the value of the current <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object is the empty string ("").</source>
          <target state="translated">La stringa che rappresenta il valore dell'oggetto <ph id="ph1">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> corrente è la stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startingTextElement" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="lengthInTextElements" /&gt;</ph> specify an index that is greater than the number of text elements in this <ph id="ph4">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startingTextElement" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="lengthInTextElements" /&gt;</ph> specifica un indice maggiore del numero di elementi di testo in questo oggetto <ph id="ph4">&lt;see cref="T:System.Globalization.StringInfo" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>