<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="02b77523e989609d168d7078124ce031549531a3" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51914357" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce proprietà e metodi per definire la modalità di mapping di un URL a un file fisico.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si passa un'istanza di <xref:System.Web.Routing.PageRouteHandler> per il <xref:System.Web.Routing.Route> costruttore per eseguire il mapping di un URL di un file fisico. Il <xref:System.Web.Routing.PageRouteHandler> oggetto specifica il percorso virtuale del file fisico e determina se le regole di autorizzazione per l'URL fisico è selezionato.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
    <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing di ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Procedura: definire le route per applicazioni Web Form</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Procedura dettagliata: Uso di Routing in un'applicazione Web Form ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Routing.PageRouteHandler" />.</summary>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing di ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Procedura: definire le route per applicazioni Web Form</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Procedura dettagliata: Uso di Routing in un'applicazione Web Form ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso virtuale del file fisico per l'oggetto <see cref="P:System.Web.Routing.RouteData.Route" />. Il file si deve trovare nell'applicazione corrente. Pertanto, il percorso deve iniziare con una tilde (~).</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Routing.PageRouteHandler" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si utilizza questo costruttore, il <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> è impostata su `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="virtualPath" /> è <see langword="null" /> o è una stringa vuota o non inizia con "~/".</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing di ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Procedura: definire le route per applicazioni Web Form</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Procedura dettagliata: Uso di Routing in un'applicazione Web Form ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Percorso virtuale del file fisico dell'oggetto <see cref="P:System.Web.Routing.RouteData.Route" />. Il file si deve trovare nell'applicazione corrente. Pertanto, il percorso deve iniziare con una tilde (~).</param>
        <param name="checkPhysicalUrlAccess">Se questa proprietà è impostata su <see langword="false" />, le regole di autorizzazione verranno applicate all'URL della richiesta e non all'URL della pagina fisica. Se questa proprietà è impostata su <see langword="true" />, le regole di autorizzazione verranno applicate all'URL della richiesta e all'URL della pagina fisica.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Routing.PageRouteHandler" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, il <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> è di proprietà `true`. Pertanto, se si desidera che le regole di autorizzazione da applicare a sia l'URL della pagina fisica e all'URL della route, è possibile usare il <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> costruttore invece di questo costruttore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="virtualPath" /> è <see langword="null" /> o è una stringa vuota o non inizia con "~/".</exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing di ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Procedura: definire le route per applicazioni Web Form</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Procedura dettagliata: Uso di Routing in un'applicazione Web Form ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che determina se le regole di autorizzazione vengono applicate all'URL del file fisico.</summary>
        <value>
          <see langword="true" /> se l'autorizzazione viene verificata per l'URL del file fisico associato alla route; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile impostare il <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> proprietà quando si usa il <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> costruttore.  
  
 Il valore della <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> proprietà determina se il <xref:System.Web.Routing.PageRouteHandler> oggetto controllerà le autorizzazioni di sicurezza solo per l'URL di route o per la pagina fisica e l'URL della route.  
  
 Quando la <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> è impostata su `true` (ovvero il valore predefinito), un utente deve disporre dell'autorizzazione per accedere all'URL fisico e l'URL della route. Quando la <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> è impostata su `false`, un utente richiede solo l'autorizzazione per accedere all'URL di route e non vengono controllate le autorizzazioni per l'URL fisico.  
  
 Le autorizzazioni vengono definite nel file Web. config, come illustrato nell'esempio seguente:  
  
```  
<configuration>  
  <location path="categoriespage.aspx">  
    <system.web>  
      <authorization>  
        <allow roles="admin"/>  
        <deny users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
  <location path="category">  
    <system.web>  
      <authorization>  
        <allow users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
</configuration>  
```  
  
 Per un URL di richiesta che contiene `Category/food/show` dopo il nome di dominio, se è il modello di URL di route `Category/{action}/{categoryName}` e la pagina fisica è Categoriespage. aspx, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applica le autorizzazioni definite nell'esempio precedente in uno dei modi seguenti:  
  
-   Se il <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> proprietà viene `false`, tutti gli utenti vengono concesso l'accesso, poiché tutti gli utenti verrà concesso l'accesso al modello di URL che inizia con `category`.  
  
-   Se il <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> proprietà viene `true`, solo `admin` agli utenti vengono concesso l'accesso. Tutti gli utenti hanno accesso al modello di URL che inizia con `category`, ma solo `admin` gli utenti hanno accesso alla pagina fisica Categoriespage. aspx.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing di ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Procedura: definire le route per applicazioni Web Form</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Procedura dettagliata: Uso di Routing in un'applicazione Web Form ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">Oggetto che incapsula le informazioni sulla richiesta.</param>
        <summary>Restituisce l'oggetto che elabora la richiesta.</summary>
        <returns>Oggetto che elabora la richiesta.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="requestContext" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing di ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Procedura: definire le route per applicazioni Web Form</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Procedura dettagliata: Uso di Routing in un'applicazione Web Form ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">Oggetto che incapsula le informazioni sulla richiesta.</param>
        <summary>Restituisce il percorso virtuale del file fisico per la route in seguito all'applicazione delle sostituzioni a qualsiasi parametro sostitutivo.</summary>
        <returns>URL del file fisico generato da una route.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> il valore non contiene alcun parametro di sostituzione, il <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> metodo viene restituito lo stesso valore di <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="requestContext" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing di ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Procedura: definire le route per applicazioni Web Form</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Procedura dettagliata: Uso di Routing in un'applicazione Web Form ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il percorso virtuale della pagina Web associata alla route.</summary>
        <value>URL della pagina Web, prima dell'applicazione delle sostituzioni per qualsiasi parametro sostitutivo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È impostato il <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> proprietà nel <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> costruttore o nel <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> costruttore.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing di ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Procedura: definire le route per applicazioni Web Form</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Procedura dettagliata: Uso di Routing in un'applicazione Web Form ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>