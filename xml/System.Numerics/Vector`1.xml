<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Vector`1.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86ce7743874a32e85e9fc3480f9d92c25c2d71ad800.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7743874a32e85e9fc3480f9d92c25c2d71ad800</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The vector type.</source>
          <target state="translated">Tipo di vettore.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> può essere qualsiasi tipo numerico primitivo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Numerics.Vector`1">
          <source>Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.</source>
          <target state="translated">Rappresenta un singolo vettore di un tipo numerico specificato adatto per l'ottimizzazione a basso livello degli algoritmi paralleli.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source><ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> is an immutable structure that represents a single vector of a specified numeric type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> è una struttura non modificabile che rappresenta un singolo vettore di un tipo numerico specificato.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The count of a <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> instance is fixed, but its upper limit is CPU-register dependent.</source>
          <target state="translated">Il numero di un <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> istanza è fisso, ma il relativo limite superiore registro della CPU dipendenti.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>It is intended to be used as a building block for vectorizing large algorithms.</source>
          <target state="translated">Destinato a essere utilizzato come un blocco predefinito per la vettorializzazione gli algoritmi di grandi dimensioni.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> structure provides support for hardware acceleration.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> struttura fornisce il supporto per l'accelerazione hardware.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source>The numeric type that defines the type of the components in the vector.</source>
          <target state="translated">Tipo numerico che definisce il tipo dei componenti nel vettore.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source>Creates a vector whose components are of a specified type.</source>
          <target state="translated">Crea un vettore i cui componenti sono del tipo specificato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source><ph id="ph1">`value`</ph> can be any primitive numeric type (that is, a numeric type whose <ph id="ph2">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`value`</ph> può essere qualsiasi tipo numerico primitivo (ovvero, il tipo il cui numerico <ph id="ph2">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> restituisce proprietà <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source>A numeric array.</source>
          <target state="translated">Matrice numerica.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source>Creates a vector from a specified array.</source>
          <target state="translated">Crea un vettore da una matrice specificata.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source><ph id="ph1">`values`</ph> must contain at least <ph id="ph2">&lt;xref:System.Numerics.Vector%601.Count%2A&gt;</ph> elements.</source>
          <target state="translated"><ph id="ph1">`values`</ph> deve contenere almeno <ph id="ph2">&lt;xref:System.Numerics.Vector%601.Count%2A&gt;</ph> elementi.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>A numeric array.</source>
          <target state="translated">Matrice numerica.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The starting index position from which to create the vector.</source>
          <target state="translated">Posizione di indice iniziale da cui creare il vettore.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>Creates a vector from a specified array starting at a specified index position.</source>
          <target state="translated">Crea un vettore da una matrice specificata, partendo da una posizione di indice specificata.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The array must contain at least [Vector(T) Constructor (T<ph id="ph1">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt; elements from the specified index.</source>
          <target state="translated">La matrice deve contenere almeno [Vector(T) costruttore (T<ph id="ph1">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType &gt; elementi dall'indice specificato.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The length of <ph id="ph1">&lt;paramref name="values" /&gt;</ph> minus <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</source>
          <target state="translated">La lunghezza di <ph id="ph1">&lt;paramref name="values" /&gt;</ph> meno <ph id="ph2">&lt;paramref name="index" /&gt;</ph> è minore di <ph id="ph3">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The array to receive a copy of the vector values.</source>
          <target state="translated">Matrice che riceve una copia dei valori del vettore.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>Copies the vector instance to a specified destination array.</source>
          <target state="translated">Copia l'istanza del vettore in una matrice di destinazione specificata.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The copy operation begins at index 0 of <ph id="ph1">`destination`</ph>.</source>
          <target state="translated">L'operazione di copia inizia in corrispondenza dell'indice 0 di <ph id="ph1">`destination`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The destination array must have at least <ph id="ph1">&lt;xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt;</ph> elements.</source>
          <target state="translated">La matrice di destinazione deve avere almeno <ph id="ph1">&lt;xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt;</ph> elementi.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The number of elements in the current vector is greater than the number of elements available in the <ph id="ph1">&lt;paramref name="destination" /&gt;</ph> array.</source>
          <target state="translated">Il numero di elementi nel vettore corrente è maggiore del numero di elementi disponibili nella matrice <ph id="ph1">&lt;paramref name="destination" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The array to receive a copy of the vector values.</source>
          <target state="translated">Matrice che riceve una copia dei valori del vettore.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The starting index in <bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept> at which to begin the copy operation.</source>
          <target state="translated">Indice iniziale in <bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept> in corrispondenza del quale iniziare l'operazione di copia.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>Copies the vector instance to a specified destination array starting at a specified index position.</source>
          <target state="translated">Copia l'istanza del vettore in una matrice di destinazione specificata, partendo dalla posizione dell'indice specificata.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The copy operation begins at index <ph id="ph1">`startIndex`</ph> of <ph id="ph2">`destination`</ph>.</source>
          <target state="translated">L'operazione di copia inizia in corrispondenza dell'indice <ph id="ph1">`startIndex`</ph> di <ph id="ph2">`destination`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The destination array must have at least <ph id="ph1">`startIndex`</ph> + [CopyTo Method (T<ph id="ph2">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A&gt; – 1 elements.</source>
          <target state="translated">La matrice di destinazione deve avere almeno <ph id="ph1">`startIndex`</ph> + [CopyTo (metodo) (T<ph id="ph2">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A &gt; – 1 elementi.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the current instance is greater than the number of elements available from <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> to the end of the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> array.</source>
          <target state="translated">Il numero di elementi nell'istanza corrente è maggiore del numero di elementi disponibili da <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> alla fine della matrice <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last index in <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero o maggiore dell'ultimo indice in <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Count">
          <source>Returns the number of elements stored in the vector.</source>
          <target state="translated">Restituisce il numero di elementi archiviati nel vettore.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Count">
          <source>The number of elements stored in the vector.</source>
          <target state="translated">Numero di elementi archiviati nel vettore.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Count">
          <source>Access to the property getter via reflection is not supported.</source>
          <target state="translated">L'accesso al getter proprietà tramite reflection non è supportato.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>The vector to compare with this instance.</source>
          <target state="translated">Vettore da confrontare con questa istanza.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether this instance is equal to a specified vector.</source>
          <target state="translated">Restituisce un valore che indica se questa istanza è uguale a un vettore specificato.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and <ph id="ph2">&lt;paramref name="other" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'istanza corrente è uguale a <ph id="ph2">&lt;paramref name="other" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">Due vettori sono uguali se sono dello stesso tipo, hanno lo stesso numero di valori, e ogni valore nell'istanza corrente è uguale al valore corrispondente in <ph id="ph1">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Oggetto da confrontare con questa istanza.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'istanza corrente è uguale a <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>The method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is null, or if <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> is a vector of a different type than the current instance.</source>
          <target state="translated">Il metodo restituisce <ph id="ph1">&lt;see langword="false" /&gt;</ph> se <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> è Null o se <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> è un vettore di un tipo diverso da quello dell'istanza corrente.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">Due vettori sono uguali se sono dello stesso tipo, hanno lo stesso numero di valori, e ogni valore nell'istanza corrente è uguale al valore corrispondente in <ph id="ph1">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Restituisce il codice hash per l'istanza.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.GetHashCode">
          <source>The hash code.</source>
          <target state="translated">Codice hash.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>The index of the element to return.</source>
          <target state="translated">Indice dell'elemento da restituire.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>Gets the element at a specified index.</source>
          <target state="translated">Ottiene l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>The element at index <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Elemento in corrispondenza dell'indice <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è maggiore o uguale a <ph id="ph2">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.One">
          <source>Returns a vector containing all ones.</source>
          <target state="translated">Restituisce un vettore contenente tutti uno.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.One">
          <source>A vector containing all ones.</source>
          <target state="translated">Vettore contenente tutti uno.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to add.</source>
          <target state="translated">Primo vettore da sommare.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to add.</source>
          <target state="translated">Secondo vettore da sommare.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Adds two vectors together.</source>
          <target state="translated">Somma due vettori.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The summed vector.</source>
          <target state="translated">Vettore sommato.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Addition%2A&gt;</ph> metodo definisce l'operazione di addizione per <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Primo vettore.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Secondo vettore.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">Restituisce un nuovo vettore tramite un'operazione <ph id="ph1">&lt;see langword="And" /&gt;</ph> bit per bit in ognuno degli elementi in due vettori.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> of <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Vettore risultante dall'operazione <ph id="ph1">&lt;see langword="And" /&gt;</ph> bit per bit di <ph id="ph2">&lt;paramref name="left" /&gt;</ph> e <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseAnd%2A&gt;</ph> method defines the bitwise <ph id="ph2">`And`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseAnd%2A&gt;</ph> metodo definisce bit per bit <ph id="ph2">`And`</ph> operazione per <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Primo vettore.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Secondo vettore.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">Restituisce un nuovo vettore tramite un'operazione <ph id="ph1">&lt;see langword="Or" /&gt;</ph> bit per bit in ognuno degli elementi in due vettori.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> of the elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Vettore risultante dall'operazione <ph id="ph1">&lt;see langword="Or" /&gt;</ph> bit per bit degli elementi in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> e <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`Or`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseOr%2A&gt;</ph> metodo definisce bit per bit <ph id="ph2">`Or`</ph> operazione per <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Primo vettore.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Secondo vettore.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Divides the first vector by the second.</source>
          <target state="translated">Divide il primo vettore per il secondo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from dividing <ph id="ph1">&lt;paramref name="left" /&gt;</ph> by <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Vettore risultante dalla divisione di <ph id="ph1">&lt;paramref name="left" /&gt;</ph> per <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Division%2A&gt;</ph> method defines the division operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Division%2A&gt;</ph> metodo definisce l'operazione di divisione per <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primo vettore da confrontare.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to compare.</source>
          <target state="translated">Secondo vettore da confrontare.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether each pair of elements in two specified vectors are equal.</source>
          <target state="translated">Restituisce un valore che indica se le coppie di elementi in due vettori specificati sono uguali.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="left" /&gt;</ph> e <ph id="ph3">&lt;paramref name="right" /&gt;</ph> sono uguali; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in <ph id="ph1">`left`</ph> is equal to the corresponding value in <ph id="ph2">`right`</ph>.</source>
          <target state="translated">Due vettori sono uguali se sono dello stesso tipo, hanno lo stesso numero di valori e ogni valore in <ph id="ph1">`left`</ph> è uguale al valore corrispondente in <ph id="ph2">`right`</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Primo vettore.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Secondo vettore.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">Restituisce un nuovo vettore tramite un'operazione <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> bit per bit in ognuno degli elementi in due vettori.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> of the elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Vettore risultante dall'operazione <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> bit per bit degli elementi in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> e <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_ExclusiveOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`XOr`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_ExclusiveOr%2A&gt;</ph> metodo definisce bit per bit <ph id="ph2">`XOr`</ph> operazione per <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Vettore da reinterpretare.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta i bit del vettore specificato in un vettore del tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vettore reinterpretato.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Vettore da reinterpretare.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta i bit del vettore specificato in un vettore del tipo <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vettore reinterpretato.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Vettore da reinterpretare.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta i bit del vettore specificato in un vettore del tipo <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vettore reinterpretato.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Vettore da reinterpretare.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta i bit del vettore specificato in un vettore del tipo <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vettore reinterpretato.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Vettore da reinterpretare.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta i bit del vettore specificato in un vettore del tipo <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vettore reinterpretato.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Vettore da reinterpretare.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta i bit del vettore specificato in un vettore del tipo <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vettore reinterpretato.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Vettore da reinterpretare.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta i bit del vettore specificato in un vettore del tipo <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vettore reinterpretato.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Vettore da reinterpretare.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta i bit del vettore specificato in un vettore del tipo <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vettore reinterpretato.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Vettore da reinterpretare.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta i bit del vettore specificato in un vettore del tipo <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vettore reinterpretato.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Vettore da reinterpretare.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta i bit del vettore specificato in un vettore del tipo <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vettore reinterpretato.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primo vettore da confrontare.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to compare.</source>
          <target state="translated">Secondo vettore da confrontare.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether any single pair of elements in the specified vectors is equal.</source>
          <target state="translated">Restituisce un valore che indica se qualsiasi singola coppia di elementi nei vettori specificati è uguale.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any element pairs in left and right are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se una qualsiasi coppia di elementi a sinistra e destra è uguale.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if no element pairs are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> se nessuna coppia di elementi è uguale.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Primo vettore.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Secondo vettore.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Multiplies two vectors together.</source>
          <target state="translated">Moltiplica due vettori.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The product vector.</source>
          <target state="translated">Vettore prodotto.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> metodo definisce l'operazione di moltiplicazione per <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The source vector.</source>
          <target state="translated">Vettore di origine.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>A scalar value.</source>
          <target state="translated">Valore scalare.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>Multiplies a vector by a specified scalar value.</source>
          <target state="translated">Moltiplica un vettore per un valore scalare specificato.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The scaled vector.</source>
          <target state="translated">Vettore scalato.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> metodo definisce l'operazione di moltiplicazione per <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The scalar value.</source>
          <target state="translated">Valore scalare.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The source vector.</source>
          <target state="translated">Vettore di origine.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>Multiplies a vector by the given scalar.</source>
          <target state="translated">Moltiplica un vettore per il valore scalare specificato.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The scaled vector.</source>
          <target state="translated">Vettore scalato.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> metodo definisce l'operazione di moltiplicazione per <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>The source vector.</source>
          <target state="translated">Vettore di origine.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.</source>
          <target state="translated">Restituisce un nuovo vettore i cui elementi sono ottenuti prendendo il complemento a uno degli elementi di un vettore specificato.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>The one's complement vector.</source>
          <target state="translated">Vettore di complemento a uno.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Primo vettore.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Secondo vettore.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Subtracts the second vector from the first.</source>
          <target state="translated">Sottrae il secondo vettore dal primo.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated">Vettore risultante dalla sottrazione di <ph id="ph1">&lt;paramref name="right" /&gt;</ph> da <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Subtraction%2A&gt;</ph> method defines the subtraction operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Subtraction%2A&gt;</ph> metodo definisce l'operazione di sottrazione per <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The vector to negate.</source>
          <target state="translated">Vettore da negare.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>Negates a given vector.</source>
          <target state="translated">Nega un vettore specificato.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The negated vector.</source>
          <target state="translated">Vettore negato.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_UnaryNegation%2A&gt;</ph> method defines the unary negation operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_UnaryNegation%2A&gt;</ph> metodo definisce l'operazione di negazione unario per <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString">
          <source>Returns the string representation of this vector using default formatting.</source>
          <target state="translated">Restituisce la rappresentazione di stringa del vettore corrente usando la formattazione predefinita.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString">
          <source>The string representation of this vector.</source>
          <target state="translated">Rappresentazione di stringa di questo vettore.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString">
          <source>This method returns a string in which each element of the vector is formatted using the "G" (general) format string and the formatting conventions of the current thread culture.</source>
          <target state="translated">Questo metodo restituisce una stringa in cui ciascun elemento del vettore viene formattato usando la stringa di formato (generale) "G" e le convenzioni di formattazione delle impostazioni cultura del thread corrente.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString">
          <source>The current culture's <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">Le impostazioni cultura correnti <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> seguiti da uno spazio di proprietà viene utilizzata per separare ogni elemento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>A  or  that defines the format of individual elements.</source>
          <target state="translated">Oggetto che definisce il formato di singoli elementi.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>Returns the string representation of this vector using the specified format string to format individual elements.</source>
          <target state="translated">Restituisce la rappresentazione di stringa del vettore corrente usando la stringa di formato specificata per formattare i singoli elementi.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>The string representation of the current instance.</source>
          <target state="translated">Rappresentazione di stringa dell'istanza corrente.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>This method returns a string in which each element of the vector is formatted using <ph id="ph1">`format`</ph> and the current culture's formatting conventions.</source>
          <target state="translated">Questo metodo restituisce una stringa in cui ogni elemento del vettore viene formattato utilizzando <ph id="ph1">`format`</ph> e le convenzioni di formattazione delle impostazioni cultura correnti.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>The current culture's <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">Le impostazioni cultura correnti <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> seguiti da uno spazio di proprietà viene utilizzata per separare ogni elemento.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>A  or  that defines the format of individual elements.</source>
          <target state="translated">Oggetto che definisce il formato di singoli elementi.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>A format provider that supplies culture-specific formatting information.</source>
          <target state="translated">Provider di formato che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.</source>
          <target state="translated">Restituisce la rappresentazione di stringa del vettore corrente usando la stringa di formato specificata per formattare i singoli elementi e il provider di formato specificato per definire la formattazione specifica delle impostazioni cultura.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current instance.</source>
          <target state="translated">Rappresentazione di stringa dell'istanza corrente.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>This method returns a string in which each element of the vector is formatted using <ph id="ph1">`format`</ph> and <ph id="ph2">`formatProvider`</ph>, and the format provider's <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">Questo metodo restituisce una stringa in cui ogni elemento del vettore viene formattato utilizzando <ph id="ph1">`format`</ph> e <ph id="ph2">`formatProvider`</ph>e il provider di formato <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> seguiti da uno spazio di proprietà viene utilizzata per separare ogni elemento.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Zero">
          <source>Returns a vector containing all zeroes.</source>
          <target state="translated">Restituisce un vettore contenente tutti zero.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Zero">
          <source>A vector containing all zeroes.</source>
          <target state="translated">Vettore contenente tutti zero.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>