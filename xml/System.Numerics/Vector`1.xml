<Type Name="Vector&lt;T&gt;" FullName="System.Numerics.Vector&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e7743874a32e85e9fc3480f9d92c25c2d71ad800" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Vector&lt;T&gt; : IEquatable&lt;System.Numerics.Vector&lt;T&gt;&gt;, IFormattable where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Vector`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Numerics.Vector`1&lt;!T&gt;&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.Vector`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Vector(Of T)&#xA;Implements IEquatable(Of Vector(Of T)), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Vector : IEquatable&lt;System::Numerics::Vector&lt;T&gt;&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Numerics.Vectors</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.Vector&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="4ada0-101">Tipo di vettore.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ada0-101">The vector type.</span>
      </span>
      <span data-ttu-id="4ada0-102">
        <c>T</c> può essere qualsiasi tipo numerico primitivo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ada0-102">
          <c>T</c> can be any primitive numeric type.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="4ada0-103">Rappresenta un singolo vettore di un tipo numerico specificato adatto per l'ottimizzazione a basso livello degli algoritmi paralleli.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ada0-103">Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-104"><xref:System.Numerics.Vector%601> è una struttura non modificabile che rappresenta un singolo vettore di un tipo numerico specificato.</span><span class="sxs-lookup"><span data-stu-id="4ada0-104"><xref:System.Numerics.Vector%601> is an immutable structure that represents a single vector of a specified numeric type.</span></span> <span data-ttu-id="4ada0-105">Il numero di un <xref:System.Numerics.Vector%601> istanza è fisso, ma il relativo limite superiore registro della CPU dipendenti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-105">The count of a <xref:System.Numerics.Vector%601> instance is fixed, but its upper limit is CPU-register dependent.</span></span> <span data-ttu-id="4ada0-106">Destinato a essere utilizzato come un blocco predefinito per la vettorializzazione gli algoritmi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="4ada0-106">It is intended to be used as a building block for vectorizing large algorithms.</span></span>  
  
 <span data-ttu-id="4ada0-107">Il <xref:System.Numerics.Vector%601> struttura fornisce il supporto per l'accelerazione hardware.</span><span class="sxs-lookup"><span data-stu-id="4ada0-107">The <xref:System.Numerics.Vector%601> structure provides support for hardware acceleration.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (Span&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Span`1&lt;!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Span(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(Span&lt;T&gt; values);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(T value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-108">Tipo numerico che definisce il tipo dei componenti nel vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-108">The numeric type that defines the type of the components in the vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-109">Crea un vettore i cui componenti sono del tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-109">Creates a vector whose components are of a specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-110">`value` può essere qualsiasi tipo numerico primitivo (ovvero, il tipo il cui numerico <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> restituisce proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="4ada0-110">`value` can be any primitive numeric type (that is, a numeric type whose <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(cli::array &lt;T&gt; ^ values);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="4ada0-111">Matrice numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-111">A numeric array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-112">Crea un vettore da una matrice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-112">Creates a vector from a specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-113">`values` deve contenere almeno <xref:System.Numerics.Vector%601.Count%2A> elementi.</span><span class="sxs-lookup"><span data-stu-id="4ada0-113">`values` must contain at least <xref:System.Numerics.Vector%601.Count%2A> elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ada0-114">
            <paramref name="values" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-114">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T[] values, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] values, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(cli::array &lt;T&gt; ^ values, int index);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="4ada0-115">Matrice numerica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-115">A numeric array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4ada0-116">Posizione di indice iniziale da cui creare il vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-116">The starting index position from which to create the vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-117">Crea un vettore da una matrice specificata, partendo da una posizione di indice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-117">Creates a vector from a specified array starting at a specified index position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-118">La matrice deve contenere almeno [Vector(T) costruttore (T\<xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType > elementi dall'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="4ada0-118">The array must contain at least [Vector(T) Constructor (T\<xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> elements from the specified index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ada0-119">
            <paramref name="values" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-119">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4ada0-120">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-120">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4ada0-121">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-121">-or-</span>
          </span>
          <span data-ttu-id="4ada0-122">La lunghezza di <paramref name="values" /> meno <paramref name="index" /> è minore di <see cref="P:System.Numerics.Vector`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-122">The length of <paramref name="values" /> minus <paramref name="index" /> is less than <see cref="P:System.Numerics.Vector`1.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="4ada0-123">Matrice che riceve una copia dei valori del vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-123">The array to receive a copy of the vector values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-124">Copia l'istanza del vettore in una matrice di destinazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-124">Copies the vector instance to a specified destination array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-125">L'operazione di copia inizia in corrispondenza dell'indice 0 di `destination`.</span><span class="sxs-lookup"><span data-stu-id="4ada0-125">The copy operation begins at index 0 of `destination`.</span></span> <span data-ttu-id="4ada0-126">La matrice di destinazione deve avere almeno <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> elementi.</span><span class="sxs-lookup"><span data-stu-id="4ada0-126">The destination array must have at least <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ada0-127">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-127">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4ada0-128">Il numero di elementi nel vettore corrente è maggiore del numero di elementi disponibili nella matrice <paramref name="destination" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-128">The number of elements in the current vector is greater than the number of elements available in the <paramref name="destination" /> array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] destination, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T(), startIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ destination, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="4ada0-129">Matrice che riceve una copia dei valori del vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-129">The array to receive a copy of the vector values.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4ada0-130">Indice iniziale in <c>destination</c> in corrispondenza del quale iniziare l'operazione di copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-130">The starting index in <c>destination</c> at which to begin the copy operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-131">Copia l'istanza del vettore in una matrice di destinazione specificata, partendo dalla posizione dell'indice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-131">Copies the vector instance to a specified destination array starting at a specified index position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-132">L'operazione di copia inizia in corrispondenza dell'indice `startIndex` di `destination`.</span><span class="sxs-lookup"><span data-stu-id="4ada0-132">The copy operation begins at index `startIndex` of `destination`.</span></span> <span data-ttu-id="4ada0-133">La matrice di destinazione deve avere almeno `startIndex` + [CopyTo (metodo) (T\<xref:System.Numerics.Vector%601.Count%2A > – 1 elementi.</span><span class="sxs-lookup"><span data-stu-id="4ada0-133">The destination array must have at least `startIndex` + [CopyTo Method (T\<xref:System.Numerics.Vector%601.Count%2A> – 1 elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ada0-134">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-134">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4ada0-135">Il numero di elementi nell'istanza corrente è maggiore del numero di elementi disponibili da <paramref name="startIndex" /> alla fine della matrice <paramref name="destination" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-135">The number of elements in the current instance is greater than the number of elements available from <paramref name="startIndex" /> to the end of the <paramref name="destination" /> array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4ada0-136">
            <paramref name="index" /> è minore di zero o maggiore dell'ultimo indice in <paramref name="destination" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-136">
              <paramref name="index" /> is less than zero or greater than the last index in <paramref name="destination" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ada0-137">Restituisce il numero di elementi archiviati nel vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-137">Returns the number of elements stored in the vector.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ada0-138">Numero di elementi archiviati nel vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-138">The number of elements stored in the vector.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4ada0-139">L'accesso al getter proprietà tramite reflection non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-139">Access to the property getter via reflection is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.Vector&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.Vector`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::Vector&lt;T&gt; other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="4ada0-140">Vettore da confrontare con questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-140">The vector to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-141">Restituisce un valore che indica se questa istanza è uguale a un vettore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-141">Returns a value that indicates whether this instance is equal to a specified vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-142">
            <see langword="true" /> se l'istanza corrente è uguale a <paramref name="other" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-142">
              <see langword="true" /> if the current instance and <paramref name="other" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-143">Due vettori sono uguali se sono dello stesso tipo, hanno lo stesso numero di valori, e ogni valore nell'istanza corrente è uguale al valore corrispondente in `other`.</span><span class="sxs-lookup"><span data-stu-id="4ada0-143">Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in `other`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4ada0-144">Oggetto da confrontare con questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-144">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-145">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-145">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-146">
            <see langword="true" /> se l'istanza corrente è uguale a <paramref name="obj" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-146">
              <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4ada0-147">Il metodo restituisce <see langword="false" /> se <paramref name="obj" /> è Null o se <paramref name="obj" /> è un vettore di un tipo diverso da quello dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-147">The method returns <see langword="false" /> if <paramref name="obj" /> is null, or if <paramref name="obj" /> is a vector of a different type than the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-148">Due vettori sono uguali se sono dello stesso tipo, hanno lo stesso numero di valori, e ogni valore nell'istanza corrente è uguale al valore corrispondente in `other`.</span><span class="sxs-lookup"><span data-stu-id="4ada0-148">Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in `other`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ada0-149">Restituisce il codice hash per l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-149">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-150">Codice hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-150">The hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4ada0-151">Indice dell'elemento da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-151">The index of the element to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-152">Ottiene l'elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-152">Gets the element at a specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ada0-153">Elemento in corrispondenza dell'indice <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-153">The element at index <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4ada0-154">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-154">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4ada0-155">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-155">-or-</span>
          </span>
          <span data-ttu-id="4ada0-156">
            <paramref name="index" /> è maggiore o uguale a <see cref="P:System.Numerics.Vector`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-156">
              <paramref name="index" /> is greater than or equal to <see cref="P:System.Numerics.Vector`1.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.Vector`1&lt;!T&gt; One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::Vector&lt;T&gt; One { System::Numerics::Vector&lt;T&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ada0-157">Restituisce un vettore contenente tutti uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-157">Returns a vector containing all ones.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ada0-158">Vettore contenente tutti uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-158">A vector containing all ones.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator + (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Addition(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator +(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4ada0-159">Primo vettore da sommare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-159">The first vector to add.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4ada0-160">Secondo vettore da sommare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-160">The second vector to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-161">Somma due vettori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-161">Adds two vectors together.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-162">Vettore sommato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-162">The summed vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-163">Il <xref:System.Numerics.Vector%601.op_Addition%2A> metodo definisce l'operazione di addizione per <xref:System.Numerics.Vector%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-163">The <xref:System.Numerics.Vector%601.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator &amp; (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_BitwiseAnd(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator &amp;(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4ada0-164">Primo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-164">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4ada0-165">Secondo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-165">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-166">Restituisce un nuovo vettore tramite un'operazione <see langword="And" /> bit per bit in ognuno degli elementi in due vettori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-166">Returns a new vector by performing a bitwise <see langword="And" /> operation on each of the elements in two vectors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-167">Vettore risultante dall'operazione <see langword="And" /> bit per bit di <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-167">The vector that results from the bitwise <see langword="And" /> of <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-168">Il <xref:System.Numerics.Vector%601.op_BitwiseAnd%2A> metodo definisce bit per bit `And` operazione per <xref:System.Numerics.Vector%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-168">The <xref:System.Numerics.Vector%601.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator | (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_BitwiseOr(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator |(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4ada0-169">Primo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-169">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4ada0-170">Secondo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-170">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-171">Restituisce un nuovo vettore tramite un'operazione <see langword="Or" /> bit per bit in ognuno degli elementi in due vettori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-171">Returns a new vector by performing a bitwise <see langword="Or" /> operation on each of the elements in two vectors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-172">Vettore risultante dall'operazione <see langword="Or" /> bit per bit degli elementi in <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-172">The vector that results from the bitwise <see langword="Or" /> of the elements in <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-173">Il <xref:System.Numerics.Vector%601.op_BitwiseOr%2A> metodo definisce bit per bit `Or` operazione per <xref:System.Numerics.Vector%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-173">The <xref:System.Numerics.Vector%601.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator / (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Division(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator /(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4ada0-174">Primo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-174">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4ada0-175">Secondo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-175">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-176">Divide il primo vettore per il secondo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-176">Divides the first vector by the second.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-177">Vettore risultante dalla divisione di <paramref name="left" /> per <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-177">The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-178">Il <xref:System.Numerics.Vector%601.op_Division%2A> metodo definisce l'operazione di divisione per <xref:System.Numerics.Vector%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-178">The <xref:System.Numerics.Vector%601.op_Division%2A> method defines the division operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Vector(Of T), right As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4ada0-179">Primo vettore da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-179">The first vector to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4ada0-180">Secondo vettore da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-180">The second vector to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-181">Restituisce un valore che indica se le coppie di elementi in due vettori specificati sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-181">Returns a value that indicates whether each pair of elements in two specified vectors are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-182">
            <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-182">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-183">Due vettori sono uguali se sono dello stesso tipo, hanno lo stesso numero di valori e ogni valore in `left` è uguale al valore corrispondente in `right`.</span><span class="sxs-lookup"><span data-stu-id="4ada0-183">Two vectors are equal if they are of the same type, have the same number of values, and each value in `left` is equal to the corresponding value in `right`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator ^ (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_ExclusiveOr(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator ^(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4ada0-184">Primo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-184">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4ada0-185">Secondo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-185">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-186">Restituisce un nuovo vettore tramite un'operazione <see langword="XOr" /> bit per bit in ognuno degli elementi in due vettori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-186">Returns a new vector by performing a bitwise <see langword="XOr" /> operation on each of the elements in two vectors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-187">Vettore risultante dall'operazione <see langword="XOr" /> bit per bit degli elementi in <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-187">The vector that results from the bitwise <see langword="XOr" /> of the elements in <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-188">Il <xref:System.Numerics.Vector%601.op_ExclusiveOr%2A> metodo definisce bit per bit `XOr` operazione per <xref:System.Numerics.Vector%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-188">The <xref:System.Numerics.Vector%601.op_ExclusiveOr%2A> method defines the bitwise `XOr` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;byte&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::Byte&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-189">Vettore da reinterpretare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-189">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-190">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-190">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Byte" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-191">Vettore reinterpretato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-191">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-192">Il <xref:System.Numerics.Vector%601.op_Explicit%2A> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4ada0-192">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;double&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;float64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;double&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-193">Vettore da reinterpretare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-193">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-194">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-194">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-195">Vettore reinterpretato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-195">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-196">Il <xref:System.Numerics.Vector%601.op_Explicit%2A> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4ada0-196">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;short&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int16&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;short&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-197">Vettore da reinterpretare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-197">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-198">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-198">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-199">Vettore reinterpretato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-199">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-200">Il <xref:System.Numerics.Vector%601.op_Explicit%2A> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4ada0-200">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;int&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;int&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-201">Vettore da reinterpretare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-201">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-202">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-202">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-203">Vettore reinterpretato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-203">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-204">Il <xref:System.Numerics.Vector%601.op_Explicit%2A> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4ada0-204">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;long&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;long&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-205">Vettore da reinterpretare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-205">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-206">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-206">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-207">Vettore reinterpretato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-207">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-208">Il <xref:System.Numerics.Vector%601.op_Explicit%2A> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4ada0-208">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;sbyte&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int8&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::SByte&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-209">Vettore da reinterpretare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-209">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-210">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.SByte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-210">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.SByte" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-211">Vettore reinterpretato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-211">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-212">Il <xref:System.Numerics.Vector%601.op_Explicit%2A> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4ada0-212">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;float&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;float32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;float&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-213">Vettore da reinterpretare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-213">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-214">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-214">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-215">Vettore reinterpretato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-215">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-216">Il <xref:System.Numerics.Vector%601.op_Explicit%2A> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4ada0-216">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;ushort&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt16&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-217">Vettore da reinterpretare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-217">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-218">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.UInt16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-218">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-219">Vettore reinterpretato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-219">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-220">Il <xref:System.Numerics.Vector%601.op_Explicit%2A> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4ada0-220">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;uint&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt32&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-221">Vettore da reinterpretare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-221">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-222">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.UInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-222">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-223">Vettore reinterpretato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-223">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-224">Il <xref:System.Numerics.Vector%601.op_Explicit%2A> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4ada0-224">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;ulong&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt64&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-225">Vettore da reinterpretare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-225">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-226">Reinterpreta i bit del vettore specificato in un vettore del tipo <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-226">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-227">Vettore reinterpretato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-227">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-228">Il <xref:System.Numerics.Vector%601.op_Explicit%2A> operatore definisce una conversione di narrowing, richiede un operatore di cast (in c#) o un metodo di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4ada0-228">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Vector(Of T), right As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4ada0-229">Primo vettore da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-229">The first vector to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4ada0-230">Secondo vettore da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-230">The second vector to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-231">Restituisce un valore che indica se qualsiasi singola coppia di elementi nei vettori specificati è uguale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-231">Returns a value that indicates whether any single pair of elements in the specified vectors is equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-232">
            <see langword="true" /> se una qualsiasi coppia di elementi a sinistra e destra è uguale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-232">
              <see langword="true" /> if any element pairs in left and right are equal.</span>
          </span>
          <span data-ttu-id="4ada0-233">
            <see langword="false" /> se nessuna coppia di elementi è uguale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-233">
              <see langword="false" /> if no element pairs are equal.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4ada0-234">Primo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-234">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4ada0-235">Secondo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-235">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-236">Moltiplica due vettori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-236">Multiplies two vectors together.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-237">Vettore prodotto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-237">The product vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-238">Il <xref:System.Numerics.Vector%601.op_Multiply%2A> metodo definisce l'operazione di moltiplicazione per <xref:System.Numerics.Vector%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-238">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (System.Numerics.Vector&lt;T&gt; value, T factor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(valuetype System.Numerics.Vector`1&lt;!T&gt; value, !T factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (value As Vector(Of T), factor As T) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(System::Numerics::Vector&lt;T&gt; value, T factor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="factor" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-239">Vettore di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-239">The source vector.</span>
          </span>
        </param>
        <param name="factor">
          <span data-ttu-id="4ada0-240">Valore scalare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-240">A scalar value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-241">Moltiplica un vettore per un valore scalare specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-241">Multiplies a vector by a specified scalar value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-242">Vettore scalato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-242">The scaled vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-243">Il <xref:System.Numerics.Vector%601.op_Multiply%2A> metodo definisce l'operazione di moltiplicazione per <xref:System.Numerics.Vector%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-243">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (T factor, System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(!T factor, valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (factor As T, value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(T factor, System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="T" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="factor">
          <span data-ttu-id="4ada0-244">Valore scalare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-244">The scalar value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4ada0-245">Vettore di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-245">The source vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-246">Moltiplica un vettore per il valore scalare specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-246">Multiplies a vector by the given scalar.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-247">Vettore scalato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-247">The scaled vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-248">Il <xref:System.Numerics.Vector%601.op_Multiply%2A> metodo definisce l'operazione di moltiplicazione per <xref:System.Numerics.Vector%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-248">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator ~ (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_OnesComplement(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator ~(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-249">Vettore di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-249">The source vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-250">Restituisce un nuovo vettore i cui elementi sono ottenuti prendendo il complemento a uno degli elementi di un vettore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-250">Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-251">Vettore di complemento a uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-251">The one's complement vector.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator - (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Subtraction(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator -(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4ada0-252">Primo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-252">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4ada0-253">Secondo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-253">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-254">Sottrae il secondo vettore dal primo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-254">Subtracts the second vector from the first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-255">Vettore risultante dalla sottrazione di <paramref name="right" /> da <paramref name="left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-255">The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-256">Il <xref:System.Numerics.Vector%601.op_Subtraction%2A> metodo definisce l'operazione di sottrazione per <xref:System.Numerics.Vector%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-256">The <xref:System.Numerics.Vector%601.op_Subtraction%2A> method defines the subtraction operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator - (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_UnaryNegation(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator -(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4ada0-257">Vettore da negare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-257">The vector to negate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-258">Nega un vettore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-258">Negates a given vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-259">Vettore negato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-259">The negated vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-260">Il <xref:System.Numerics.Vector%601.op_UnaryNegation%2A> metodo definisce l'operazione di negazione unario per <xref:System.Numerics.Vector%601> oggetti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-260">The <xref:System.Numerics.Vector%601.op_UnaryNegation%2A> method defines the unary negation operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ada0-261">Restituisce la rappresentazione di stringa del vettore corrente usando la formattazione predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-261">Returns the string representation of this vector using default formatting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-262">Rappresentazione di stringa di questo vettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-262">The string representation of this vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-263">Questo metodo restituisce una stringa in cui ciascun elemento del vettore viene formattato usando la stringa di formato (generale) "G" e le convenzioni di formattazione delle impostazioni cultura del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="4ada0-263">This method returns a string in which each element of the vector is formatted using the "G" (general) format string and the formatting conventions of the current thread culture.</span></span> <span data-ttu-id="4ada0-264">Le impostazioni cultura correnti <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> seguiti da uno spazio di proprietà viene utilizzata per separare ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="4ada0-264">The current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4ada0-265">Oggetto che definisce il formato di singoli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-265">A  or  that defines the format of individual elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-266">Restituisce la rappresentazione di stringa del vettore corrente usando la stringa di formato specificata per formattare i singoli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-266">Returns the string representation of this vector using the specified format string to format individual elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-267">Rappresentazione di stringa dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-267">The string representation of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-268">Questo metodo restituisce una stringa in cui ogni elemento del vettore viene formattato utilizzando `format` e le convenzioni di formattazione delle impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="4ada0-268">This method returns a string in which each element of the vector is formatted using `format` and the current culture's formatting conventions.</span></span> <span data-ttu-id="4ada0-269">Le impostazioni cultura correnti <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> seguiti da uno spazio di proprietà viene utilizzata per separare ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="4ada0-269">The current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4ada0-270">Oggetto che definisce il formato di singoli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-270">A  or  that defines the format of individual elements.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="4ada0-271">Provider di formato che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-271">A format provider that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ada0-272">Restituisce la rappresentazione di stringa del vettore corrente usando la stringa di formato specificata per formattare i singoli elementi e il provider di formato specificato per definire la formattazione specifica delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-272">Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ada0-273">Rappresentazione di stringa dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-273">The string representation of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ada0-274">Questo metodo restituisce una stringa in cui ogni elemento del vettore viene formattato utilizzando `format` e `formatProvider`e il provider di formato <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> seguiti da uno spazio di proprietà viene utilizzata per separare ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="4ada0-274">This method returns a string in which each element of the vector is formatted using `format` and `formatProvider`, and the format provider's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.Vector`1&lt;!T&gt; Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::Vector&lt;T&gt; Zero { System::Numerics::Vector&lt;T&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ada0-275">Restituisce un vettore contenente tutti zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-275">Returns a vector containing all zeroes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ada0-276">Vettore contenente tutti zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ada0-276">A vector containing all zeroes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>