<Type Name="BigInteger" FullName="System.Numerics.BigInteger">
  <TypeSignature Language="C#" Value="public struct BigInteger : IComparable, IComparable&lt;System.Numerics.BigInteger&gt;, IEquatable&lt;System.Numerics.BigInteger&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit BigInteger extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IEquatable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.BigInteger" />
  <TypeSignature Language="VB.NET" Value="Public Structure BigInteger&#xA;Implements IComparable, IComparable(Of BigInteger), IEquatable(Of BigInteger), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class BigInteger : IComparable, IComparable&lt;System::Numerics::BigInteger&gt;, IEquatable&lt;System::Numerics::BigInteger&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Numerics</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Numerics</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="467ec-101">Rappresenta un intero con segno arbitrariamente grande.</span><span class="sxs-lookup"><span data-stu-id="467ec-101">Represents an arbitrarily large signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-102">Il <xref:System.Numerics.BigInteger> è un tipo immutabile che rappresenta un integer arbitrariamente grande il cui valore in teoria non dispone di alcun superiore o inferiore.</span><span class="sxs-lookup"><span data-stu-id="467ec-102">The <xref:System.Numerics.BigInteger> type is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</span></span> <span data-ttu-id="467ec-103">I membri del <xref:System.Numerics.BigInteger> tipo strettamente paralleli a quelli di altri tipi integrali (il <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, e <xref:System.UInt64> tipi).</span><span class="sxs-lookup"><span data-stu-id="467ec-103">The members of the <xref:System.Numerics.BigInteger> type closely parallel those of other integral types (the <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> types).</span></span> <span data-ttu-id="467ec-104">Questo tipo è diverso da altri tipi integrali nel [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], che dispone di un intervallo indicato dalle loro `MinValue` e `MaxValue` proprietà.</span><span class="sxs-lookup"><span data-stu-id="467ec-104">This type differs from the other integral types in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], which have a range indicated by their `MinValue` and `MaxValue` properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="467ec-105">Poiché il <xref:System.Numerics.BigInteger> tipo non è modificabile (vedere [modificabilità e la struttura di BigInteger](#mutability)) e non prevede alcun limite superiore o inferiore, un <xref:System.OutOfMemoryException> possono essere generate per qualsiasi operazione che causa un <xref:System.Numerics.BigInteger> valore aumento delle dimensioni troppo grande.</span><span class="sxs-lookup"><span data-stu-id="467ec-105">Because the <xref:System.Numerics.BigInteger> type is immutable (see [Mutability and the BigInteger Structure](#mutability)) and because it has no upper or lower bounds, an <xref:System.OutOfMemoryException> can be thrown for any operation that causes a <xref:System.Numerics.BigInteger> value to grow too large.</span></span>  
  
## <a name="instantiating-a-biginteger-object"></a><span data-ttu-id="467ec-106">Creazione di un oggetto BigInteger</span><span class="sxs-lookup"><span data-stu-id="467ec-106">Instantiating a BigInteger Object</span></span>  
 <span data-ttu-id="467ec-107">È possibile creare un'istanza di un <xref:System.Numerics.BigInteger> oggetto in diversi modi:</span><span class="sxs-lookup"><span data-stu-id="467ec-107">You can instantiate a <xref:System.Numerics.BigInteger> object in several ways:</span></span>  
  
-   <span data-ttu-id="467ec-108">È possibile utilizzare il `new` (parola chiave) e fornire un valore integrale o a virgola mobile come parametro per il <xref:System.Numerics.BigInteger> costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-108">You can use the `new` keyword and provide any integral or floating-point value as a parameter to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="467ec-109">(Valori a virgola mobile vengono troncati prima che vengano assegnati per il <xref:System.Numerics.BigInteger>.) Nell'esempio seguente viene illustrato come utilizzare il `new` (parola chiave) per creare un'istanza <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-109">(Floating-point values are truncated before they are assigned to the <xref:System.Numerics.BigInteger>.) The following example illustrates how to use the `new` keyword to instantiate <xref:System.Numerics.BigInteger> values.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#1)]
     [!code-vb[System.Numerics.BigInteger.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#1)]  
  
-   <span data-ttu-id="467ec-110">È possibile dichiarare un <xref:System.Numerics.BigInteger> variabile e assegnare un valore come avverrebbe qualsiasi tipo numerico, purché tale valore è un tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="467ec-110">You can declare a <xref:System.Numerics.BigInteger> variable and assign it a value just as you would any numeric type, as long as that value is an integral type.</span></span> <span data-ttu-id="467ec-111">Nell'esempio seguente usa l'assegnazione per creare un <xref:System.Numerics.BigInteger> valore da un <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="467ec-111">The following example uses assignment to create a <xref:System.Numerics.BigInteger> value from an <xref:System.Int64>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#2)]
     [!code-vb[System.Numerics.BigInteger.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#2)]  
  
-   <span data-ttu-id="467ec-112">È possibile assegnare un valore decimale o a virgola mobile a un <xref:System.Numerics.BigInteger> se si esegue il cast di valore o convertirlo innanzitutto dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-112">You can assign a decimal or floating-point value to a <xref:System.Numerics.BigInteger> object if you cast the value or convert it first.</span></span> <span data-ttu-id="467ec-113">Nell'esempio seguente esegue il cast (in c#) o la conversione (in Visual Basic) in modo esplicito un <xref:System.Double> e <xref:System.Decimal> valore un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="467ec-113">The following example explicitly casts (in C#) or converts (in Visual Basic) a <xref:System.Double> and a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#3)]
     [!code-vb[System.Numerics.BigInteger.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#3)]  
  
 <span data-ttu-id="467ec-114">Questi metodi consentono di creare un'istanza di un <xref:System.Numerics.BigInteger> solo i tipi di oggetto il cui valore è compreso nell'intervallo tra il valore numerico esistente.</span><span class="sxs-lookup"><span data-stu-id="467ec-114">These methods enable you to instantiate a <xref:System.Numerics.BigInteger> object whose value is in the range of one of the existing numeric types only.</span></span> <span data-ttu-id="467ec-115">È possibile creare un'istanza di un <xref:System.Numerics.BigInteger> oggetto il cui valore può superare l'intervallo dei tipi numerici esistenti in uno dei tre modi:</span><span class="sxs-lookup"><span data-stu-id="467ec-115">You can instantiate a <xref:System.Numerics.BigInteger> object whose value can exceed the range of the existing numeric types in one of three ways:</span></span>  
  
-   <span data-ttu-id="467ec-116">È possibile utilizzare il `new` (parola chiave) e fornire una matrice di byte di qualsiasi dimensione per la <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-116">You can use the `new` keyword and provide a byte array of any size to the <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="467ec-117">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="467ec-117">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#4)]
     [!code-vb[System.Numerics.BigInteger.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#4)]  
  
-   <span data-ttu-id="467ec-118">È possibile chiamare il <xref:System.Numerics.BigInteger.Parse%2A> o <xref:System.Numerics.BigInteger.TryParse%2A> metodi per convertire la rappresentazione di stringa di un numero per un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="467ec-118">You can call the <xref:System.Numerics.BigInteger.Parse%2A> or <xref:System.Numerics.BigInteger.TryParse%2A> methods to convert the string representation of a number to a <xref:System.Numerics.BigInteger>.</span></span> <span data-ttu-id="467ec-119">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="467ec-119">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#5)]
     [!code-vb[System.Numerics.BigInteger.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#5)]  
  
-   <span data-ttu-id="467ec-120">È possibile chiamare un `static` (`Shared` in Visual Basic) <xref:System.Numerics.BigInteger> metodo che esegue alcune operazioni su un'espressione numerica e restituisce un calcolato <xref:System.Numerics.BigInteger> risultato.</span><span class="sxs-lookup"><span data-stu-id="467ec-120">You can call a `static` (`Shared` in Visual Basic) <xref:System.Numerics.BigInteger> method that performs some operation on a numeric expression and returns a calculated <xref:System.Numerics.BigInteger> result.</span></span> <span data-ttu-id="467ec-121">Nell'esempio seguente esegue questa operazione si <xref:System.UInt64.MaxValue?displayProperty=nameWithType> e l'assegnazione del risultato per un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="467ec-121">The following example does this by cubing <xref:System.UInt64.MaxValue?displayProperty=nameWithType> and assigning the result to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#6)]
     [!code-vb[System.Numerics.BigInteger.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#6)]  
  
 <span data-ttu-id="467ec-122">Il valore inizializzato di un <xref:System.Numerics.BigInteger> è <xref:System.Numerics.BigInteger.Zero%2A>.</span><span class="sxs-lookup"><span data-stu-id="467ec-122">The uninitialized value of a <xref:System.Numerics.BigInteger> is <xref:System.Numerics.BigInteger.Zero%2A>.</span></span>  
  
## <a name="performing-operations-on-biginteger-values"></a><span data-ttu-id="467ec-123">Esecuzione di operazioni sui valori BigInteger</span><span class="sxs-lookup"><span data-stu-id="467ec-123">Performing Operations on BigInteger Values</span></span>  
 <span data-ttu-id="467ec-124">È possibile utilizzare un <xref:System.Numerics.BigInteger> istanza si utilizza qualsiasi altro tipo integrale.</span><span class="sxs-lookup"><span data-stu-id="467ec-124">You can use a <xref:System.Numerics.BigInteger> instance as you would use any other integral type.</span></span> <span data-ttu-id="467ec-125"><xref:System.Numerics.BigInteger> esegue l'overload di operatori numerici standard per consentire di eseguire operazioni matematiche di base, ad esempio addizione, sottrazione, divisione, moltiplicazione, sottrazione, negazione e negazione unaria.</span><span class="sxs-lookup"><span data-stu-id="467ec-125"><xref:System.Numerics.BigInteger> overloads the standard numeric operators to enable you to perform basic mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</span></span> <span data-ttu-id="467ec-126">È inoltre possibile utilizzare gli operatori numerici standard per confrontare due <xref:System.Numerics.BigInteger> valori tra loro.</span><span class="sxs-lookup"><span data-stu-id="467ec-126">You can also use the standard numeric operators to compare two <xref:System.Numerics.BigInteger> values with each other.</span></span> <span data-ttu-id="467ec-127">Come altri tipi integrali, <xref:System.Numerics.BigInteger> supporta anche il bit per bit `And`, `Or`, `XOr`, left shift e right shift (operatori).</span><span class="sxs-lookup"><span data-stu-id="467ec-127">Like the other integral types, <xref:System.Numerics.BigInteger> also supports the bitwise `And`, `Or`, `XOr`, left shift, and right shift operators.</span></span> <span data-ttu-id="467ec-128">Per le lingue che non supportano gli operatori personalizzati, il <xref:System.Numerics.BigInteger> struttura fornisce anche metodi equivalenti per l'esecuzione di operazioni matematiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-128">For languages that do not support custom operators, the <xref:System.Numerics.BigInteger> structure also provides equivalent methods for performing mathematical operations.</span></span> <span data-ttu-id="467ec-129">Questi includono <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>e molti altri.</span><span class="sxs-lookup"><span data-stu-id="467ec-129">These include <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>, and several others.</span></span>  
  
 <span data-ttu-id="467ec-130">Numero di membri del <xref:System.Numerics.BigInteger> struttura corrispondono direttamente ai membri di altri tipi integrali.</span><span class="sxs-lookup"><span data-stu-id="467ec-130">Many members of the <xref:System.Numerics.BigInteger> structure correspond directly to members of the other integral types.</span></span> <span data-ttu-id="467ec-131">Inoltre, <xref:System.Numerics.BigInteger> aggiunge membri come illustrato di seguito:</span><span class="sxs-lookup"><span data-stu-id="467ec-131">In addition, <xref:System.Numerics.BigInteger> adds members such as the following:</span></span>  
  
-   <span data-ttu-id="467ec-132"><xref:System.Numerics.BigInteger.Sign%2A>, che restituisce un valore che indica il segno di un <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-132"><xref:System.Numerics.BigInteger.Sign%2A>, which returns a value that indicates the sign of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="467ec-133"><xref:System.Numerics.BigInteger.Abs%2A>, che restituisce il valore assoluto di un <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-133"><xref:System.Numerics.BigInteger.Abs%2A>, which returns the absolute value of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="467ec-134"><xref:System.Numerics.BigInteger.DivRem%2A>, che restituisce il quoziente e il resto di un'operazione di divisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-134"><xref:System.Numerics.BigInteger.DivRem%2A>, which returns both the quotient and remainder of a division operation.</span></span>  
  
-   <span data-ttu-id="467ec-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, che restituisce il massimo comune divisore di due <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, which returns the greatest common divisor of two <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="467ec-136">Molti di questi membri aggiuntivi corrispondono ai membri del <xref:System.Math> (classe), che fornisce la funzionalità per lavorare con i tipi numerici primitivi.</span><span class="sxs-lookup"><span data-stu-id="467ec-136">Many of these additional members correspond to the members of the <xref:System.Math> class, which provides the functionality to work with the primitive numeric types.</span></span>  
  
<a name="mutability"></a>   
## <a name="mutability-and-the-biginteger-structure"></a><span data-ttu-id="467ec-137">Modificabilità e BigInteger (struttura)</span><span class="sxs-lookup"><span data-stu-id="467ec-137">Mutability and the BigInteger Structure</span></span>  
 <span data-ttu-id="467ec-138">Nell'esempio seguente viene creata un'istanza di un <xref:System.Numerics.BigInteger> dell'oggetto e quindi incrementa il valore di uno.</span><span class="sxs-lookup"><span data-stu-id="467ec-138">The following example instantiates a <xref:System.Numerics.BigInteger> object and then increments its value by one.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#1)]  
  
 <span data-ttu-id="467ec-139">Sebbene in questo esempio viene visualizzato per modificare il valore dell'oggetto esistente, questo non è il caso.</span><span class="sxs-lookup"><span data-stu-id="467ec-139">Although this example appears to modify the value of the existing object, this is not the case.</span></span> <span data-ttu-id="467ec-140"><xref:System.Numerics.BigInteger> gli oggetti non sono modificabili, vale a dire che internamente, common language runtime crea un nuovo effettivamente <xref:System.Numerics.BigInteger> dell'oggetto e le assegna un valore più grande rispetto al suo valore precedente.</span><span class="sxs-lookup"><span data-stu-id="467ec-140"><xref:System.Numerics.BigInteger> objects are immutable, which means that internally, the common language runtime actually creates a new <xref:System.Numerics.BigInteger> object and assigns it a value one greater than its previous value.</span></span> <span data-ttu-id="467ec-141">Questo nuovo oggetto viene quindi restituito al chiamante.</span><span class="sxs-lookup"><span data-stu-id="467ec-141">This new object is then returned to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="467ec-142">Altri tipi numerici in .NET Framework sono inoltre non modificabile.</span><span class="sxs-lookup"><span data-stu-id="467ec-142">The other numeric types in the .NET Framework are also immutable.</span></span> <span data-ttu-id="467ec-143">Tuttavia, poiché il <xref:System.Numerics.BigInteger> tipo non dispone di alcun limite superiore o inferiore, i relativi valori possono divenire molto grandi e ha un impatto apprezzabile sulle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="467ec-143">However, because the <xref:System.Numerics.BigInteger> type has no upper or lower bounds, its values can grow extremely large and have a measurable impact on performance.</span></span>  
  
 <span data-ttu-id="467ec-144">Anche se questo processo è trasparente al chiamante, comportano una riduzione delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="467ec-144">Although this process is transparent to the caller, it does incur a performance penalty.</span></span> <span data-ttu-id="467ec-145">In alcuni casi, soprattutto quando vengono eseguite operazioni ripetute in un ciclo su grandi <xref:System.Numerics.BigInteger> valori, la riduzione delle prestazioni può essere significativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-145">In some cases, especially when repeated operations are performed in a loop on very large <xref:System.Numerics.BigInteger> values, that performance penalty can be significant.</span></span> <span data-ttu-id="467ec-146">Nell'esempio seguente, ad esempio, un'operazione viene eseguita ripetutamente fino a un milione di volte e una <xref:System.Numerics.BigInteger> valore viene incrementato di uno ogni volta che l'operazione ha esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-146">For example, in the following example, an operation is performed repetitively up to a million times, and a <xref:System.Numerics.BigInteger> value is incremented by one every time the operation succeeds.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#12)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#12)]  
  
 <span data-ttu-id="467ec-147">In tal caso, è possibile migliorare le prestazioni mediante l'esecuzione di tutte le assegnazioni intermedie a un <xref:System.Int32> variabile.</span><span class="sxs-lookup"><span data-stu-id="467ec-147">In such a case, you can improve performance by performing all intermediate assignments to an <xref:System.Int32> variable.</span></span> <span data-ttu-id="467ec-148">Il valore finale della variabile può quindi essere assegnato al <xref:System.Numerics.BigInteger> dell'oggetto quando il ciclo viene interrotto.</span><span class="sxs-lookup"><span data-stu-id="467ec-148">The final value of the variable can then be assigned to the <xref:System.Numerics.BigInteger> object when the loop exits.</span></span> <span data-ttu-id="467ec-149">Nell'esempio seguente viene illustrato questo concetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-149">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#3)]  
  
## <a name="working-with-byte-arrays-and-hexadecimal-strings"></a><span data-ttu-id="467ec-150">Utilizzo di matrici di Byte e stringhe esadecimali</span><span class="sxs-lookup"><span data-stu-id="467ec-150">Working with Byte Arrays and Hexadecimal Strings</span></span>  
 <span data-ttu-id="467ec-151">Se si converte <xref:System.Numerics.BigInteger> valori per le matrici di byte, o se si convertono le matrici di byte a <xref:System.Numerics.BigInteger> valori, è necessario considerare l'ordine dei byte.</span><span class="sxs-lookup"><span data-stu-id="467ec-151">If you convert <xref:System.Numerics.BigInteger> values to byte arrays, or if you convert byte arrays to <xref:System.Numerics.BigInteger> values, you must consider the order of bytes.</span></span> <span data-ttu-id="467ec-152">Il <xref:System.Numerics.BigInteger> struttura prevista singoli byte in una matrice di byte vengano visualizzati in ordine little-endian (byte di ordine inferiore del valore precedono i byte di ordine superiore).</span><span class="sxs-lookup"><span data-stu-id="467ec-152">The <xref:System.Numerics.BigInteger> structure expects the individual bytes in a byte array to appear in little-endian order (that is, the lower-order bytes of the value precede the higher-order bytes).</span></span> <span data-ttu-id="467ec-153">È possibile round trip un <xref:System.Numerics.BigInteger> valore chiamando il <xref:System.Numerics.BigInteger.ToByteArray%2A> matrice metodo e quindi si passa il byte risulta il <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> costruttore, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-153">You can round-trip a <xref:System.Numerics.BigInteger> value by calling the <xref:System.Numerics.BigInteger.ToByteArray%2A> method and then passing the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#1)]  
  
 <span data-ttu-id="467ec-154">Per creare un'istanza di un <xref:System.Numerics.BigInteger> valore da una matrice di byte che rappresenta un valore di un altro tipo integrale, è possibile passare il valore integrale per il <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> (metodo) e quindi passare la matrice di byte risultante al <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-154">To instantiate a <xref:System.Numerics.BigInteger> value from a byte array that represents a value of some other integral type, you can pass the integral value to the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method, and then pass the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span> <span data-ttu-id="467ec-155">Nell'esempio seguente viene creata un'istanza di un <xref:System.Numerics.BigInteger> valore da una matrice di byte che rappresenta un <xref:System.Int16> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-155">The following example instantiates a <xref:System.Numerics.BigInteger> value from a byte array that represents an <xref:System.Int16> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#2)]  
  
 <span data-ttu-id="467ec-156">Il <xref:System.Numerics.BigInteger> struttura si presuppone che i valori negativi vengono archiviati utilizzando la rappresentazione in complemento a due.</span><span class="sxs-lookup"><span data-stu-id="467ec-156">The <xref:System.Numerics.BigInteger> structure assumes that negative values are stored by using two's complement representation.</span></span> <span data-ttu-id="467ec-157">Poiché il <xref:System.Numerics.BigInteger> struttura rappresenta un valore numerico senza lunghezza fissa, il <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> costruttore interpreta sempre il bit più significativo dell'ultimo byte della matrice come bit di segno.</span><span class="sxs-lookup"><span data-stu-id="467ec-157">Because the <xref:System.Numerics.BigInteger> structure represents a numeric value with no fixed length, the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor always interprets the most significant bit of the last byte in the array as a sign bit.</span></span> <span data-ttu-id="467ec-158">Per evitare il <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> costruttore da della due rappresentazione di complemento di un valore negativo con la rappresentazione di segno e grandezza di un valore positivo, positivo confondere i valori in cui più significativa dell'ultimo byte nella matrice di byte solitamente sarebbe set deve includere un byte aggiuntivo il cui valore è 0.</span><span class="sxs-lookup"><span data-stu-id="467ec-158">To prevent the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor from confusing the two's complement representation of a negative value with the sign and magnitude representation of a positive value, positive values in which the most significant bit of the last byte in the byte array would ordinarily be set should include an additional byte whose value is 0.</span></span> <span data-ttu-id="467ec-159">Ad esempio, 0xC0 0xBD 0xF0 0xFF è la rappresentazione esadecimale little-endian di 1.000.000 o 4.293.967.296.</span><span class="sxs-lookup"><span data-stu-id="467ec-159">For example, 0xC0 0xBD 0xF0 0xFF is the little-endian hexadecimal representation of either -1,000,000 or 4,293,967,296.</span></span> <span data-ttu-id="467ec-160">Poiché il bit più significativo dell'ultimo byte nella matrice è attivato, il valore della matrice di byte verrebbe interpretato dal <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> costruttore come-1,000,000.</span><span class="sxs-lookup"><span data-stu-id="467ec-160">Because the most significant bit of the last byte in this array is on, the value of the byte array would be interpreted by the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor as -1,000,000.</span></span> <span data-ttu-id="467ec-161">Per creare un'istanza di un <xref:System.Numerics.BigInteger> il cui valore è positivo, una matrice di byte i cui elementi sono 0xC0 0xBD 0xF0 0xFF 0x00 deve essere passato al costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-161">To instantiate a <xref:System.Numerics.BigInteger> whose value is positive, a byte array whose elements are 0xC0 0xBD 0xF0 0xFF 0x00 must be passed to the constructor.</span></span> <span data-ttu-id="467ec-162">Questa condizione è illustrata nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-162">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#3)]  
  
 <span data-ttu-id="467ec-163">Le matrici di byte create il <xref:System.Numerics.BigInteger.ToByteArray%2A> metodo da valori positivi includono questo byte di valore zero aggiuntivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-163">Byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method from positive values include this extra zero-value byte.</span></span> <span data-ttu-id="467ec-164">Pertanto, il <xref:System.Numerics.BigInteger> struttura può completano il round trip dei valori assegnandoli a e quindi ripristinarli da, matrici di byte, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-164">Therefore, the <xref:System.Numerics.BigInteger> structure can successfully round-trip values by assigning them to, and then restoring them from, byte arrays, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#4)]  
  
 <span data-ttu-id="467ec-165">Tuttavia, è necessario aggiungere questo byte aggiuntivi di valore pari a zero per le matrici di byte che vengono creati dinamicamente dallo sviluppatore o restituite dai metodi che convertono interi senza segno in matrici di byte (ad esempio <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, e <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="467ec-165">However, you may need to add this additional zero-value byte to byte arrays that are created dynamically by the developer or that are returned by methods that convert unsigned integers to byte arrays (such as <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, and <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="467ec-166">Durante l'analisi di una stringa esadecimale, il <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> e <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> metodi presuppongono che, se è impostato il bit più significativo del primo byte della stringa, o se la prima cifra esadecimale della stringa rappresenta i quattro bit più bassi di un valore byte, il valore è rappresentato tramite la rappresentazione in complemento a due.</span><span class="sxs-lookup"><span data-stu-id="467ec-166">When parsing a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> and <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods assume that if the most significant bit of the first byte in the string is set, or if the first hexadecimal digit of the string represents the lower four bits of a byte value, the value is represented by using two's complement representation.</span></span> <span data-ttu-id="467ec-167">Ad esempio, "FF01" sia "F01" rappresentano il valore decimale -255.</span><span class="sxs-lookup"><span data-stu-id="467ec-167">For example, both "FF01" and "F01" represent the decimal value -255.</span></span> <span data-ttu-id="467ec-168">Per differenziare positivi da valori negativi, i valori positivi devono includere uno zero iniziale.</span><span class="sxs-lookup"><span data-stu-id="467ec-168">To differentiate positive from negative values, positive values should include a leading zero.</span></span> <span data-ttu-id="467ec-169">Gli overload attinenti del <xref:System.Numerics.BigInteger.ToString%2A> metodo, quando vengono passati la stringa di formato "X", aggiungere uno zero iniziale per la stringa esadecimale restituita per i valori positivi.</span><span class="sxs-lookup"><span data-stu-id="467ec-169">The relevant overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, when they are passed the "X" format string, add a leading zero to the returned hexadecimal string for positive values.</span></span> <span data-ttu-id="467ec-170">Questo rende possibile per il round trip <xref:System.Numerics.BigInteger> valori utilizzando il <xref:System.Numerics.BigInteger.ToString%2A> e <xref:System.Numerics.BigInteger.Parse%2A> metodi, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-170">This makes it possible to round-trip <xref:System.Numerics.BigInteger> values by using the <xref:System.Numerics.BigInteger.ToString%2A> and <xref:System.Numerics.BigInteger.Parse%2A> methods, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#5)]  
  
 <span data-ttu-id="467ec-171">Tuttavia, le stringhe esadecimali create chiamando il `ToString` metodi di altri tipi integrali o gli overload del <xref:System.Convert.ToString%2A> metodo che includono un `toBase` parametro non viene indicato il segno del valore o il tipo di dati di origine da cui è stata derivata la stringa esadecimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-171">However, the hexadecimal strings created by calling the `ToString` methods of the other integral types or the overloads of the <xref:System.Convert.ToString%2A> method that include a `toBase` parameter do not indicate the sign of the value or the source data type from which the hexadecimal string was derived.</span></span> <span data-ttu-id="467ec-172">Creazione di un'istanza completata una <xref:System.Numerics.BigInteger> valore da una stringa di questo tipo richiede una logica aggiuntiva.</span><span class="sxs-lookup"><span data-stu-id="467ec-172">Successfully instantiating a <xref:System.Numerics.BigInteger> value from such a string requires some additional logic.</span></span> <span data-ttu-id="467ec-173">Nell'esempio seguente viene illustrata una possibile implementazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-173">The following example provides one possible implementation.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-174">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-174">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-175">Matrice di valori byte in ordine little-endian.</span><span class="sxs-lookup"><span data-stu-id="467ec-175">An array of byte values in little-endian order.</span></span></param>
        <summary><span data-ttu-id="467ec-176">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando i valori di una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="467ec-176">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using the values in a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-177">I singoli byte il `value` la matrice deve essere in ordine little-endian, dal byte di ordine più basso di ordine più elevato.</span><span class="sxs-lookup"><span data-stu-id="467ec-177">The individual bytes in the `value` array should be in little-endian order, from lowest-order byte to highest-order byte.</span></span> <span data-ttu-id="467ec-178">Ad esempio, il valore numerico 1.000.000.000.000 è rappresentato come illustrato nella tabella seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-178">For example, the numeric value 1,000,000,000,000 is represented as shown in the following table:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="467ec-179">Stringa esadecimale</span><span class="sxs-lookup"><span data-stu-id="467ec-179">Hexadecimal string</span></span>|<span data-ttu-id="467ec-180">E8D4A51000</span><span class="sxs-lookup"><span data-stu-id="467ec-180">E8D4A51000</span></span>|  
|<span data-ttu-id="467ec-181">Matrice di byte (indice minimo prima)</span><span class="sxs-lookup"><span data-stu-id="467ec-181">Byte array (lowest index first)</span></span>|<span data-ttu-id="467ec-182">00 10 A5 D4 E8 00</span><span class="sxs-lookup"><span data-stu-id="467ec-182">00 10 A5 D4 E8 00</span></span>|  
  
 <span data-ttu-id="467ec-183">La maggior parte dei metodi che convertono i valori numerici in matrici di byte, ad esempio <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> e <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, restituiscono matrici di byte in ordine little-endian.</span><span class="sxs-lookup"><span data-stu-id="467ec-183">Most methods that convert numeric values to byte arrays, such as <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> and <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, return byte arrays in little-endian order.</span></span>  
  
 <span data-ttu-id="467ec-184">Il costruttore si aspetta valori positivi nella matrice di byte, usare la rappresentazione di segno e grandezza e i valori negativi per la rappresentazione in complemento a due.</span><span class="sxs-lookup"><span data-stu-id="467ec-184">The constructor expects positive values in the byte array to use sign-and-magnitude representation, and negative values to use two's complement representation.</span></span> <span data-ttu-id="467ec-185">In altre parole, se l'ordine più elevato di bit del byte più significativo in `value` è impostata, il valore risultante <xref:System.Numerics.BigInteger> valore è negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-185">In other words, if the highest-order bit of the highest-order byte in `value` is set, the resulting <xref:System.Numerics.BigInteger> value is negative.</span></span> <span data-ttu-id="467ec-186">A seconda dell'origine della matrice di byte, ciò potrebbe causare un valore positivo venga interpretato come un valore negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-186">Depending on the source of the byte array, this may cause a positive value to be misinterpreted as a negative value.</span></span> <span data-ttu-id="467ec-187">Le matrici di byte in genere vengono generate nei modi seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-187">Byte arrays are typically generated in the following ways:</span></span>  
  
-   <span data-ttu-id="467ec-188">Chiamando il <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-188">By calling the <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="467ec-189">Poiché questo metodo restituisce una matrice di byte con il bit più significativo del byte più significativo nel set di matrice a zero per i valori positivi, non c'è alcuna possibilità di interpretare un valore positivo come negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-189">Because this method returns a byte array with the highest-order bit of the highest-order byte in the array set to zero for positive values, there is no chance of misinterpreting a positive value as negative.</span></span> <span data-ttu-id="467ec-190">Non modificato di matrici di byte create il <xref:System.Numerics.BigInteger.ToByteArray%2A> sempre completano il round trip quando vengono passati al metodo di <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-190">Unmodified byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method always successfully round-trip when they are passed to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
-   <span data-ttu-id="467ec-191">Chiamando il <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> metodo e passando un valore integer come parametro.</span><span class="sxs-lookup"><span data-stu-id="467ec-191">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it a signed integer as a parameter.</span></span> <span data-ttu-id="467ec-192">Poiché interi con segno gestiscono la rappresentazione di segno e grandezza sia la rappresentazione in complemento a due, non è possibile di interpretare un valore positivo come negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-192">Because signed integers handle both sign-and-magnitude representation and two's complement representation, there is no chance of misinterpreting a positive value as negative.</span></span>  
  
-   <span data-ttu-id="467ec-193">Chiamando il <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> metodo e passando un unsigned integer come parametro.</span><span class="sxs-lookup"><span data-stu-id="467ec-193">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it an unsigned integer as a parameter.</span></span> <span data-ttu-id="467ec-194">Poiché interi senza segno vengono rappresentati solo dalla grandezza, i valori positivi possono essere erroneamente interpretati come valori negativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-194">Because unsigned integers are represented by their magnitude only, positive values can be misinterpreted as negative values.</span></span> <span data-ttu-id="467ec-195">Per evitare questo problema, è possibile aggiungere un valore zero byte alla fine della matrice.</span><span class="sxs-lookup"><span data-stu-id="467ec-195">To prevent this misinterpretation, you can add a zero-byte value to the end of the array.</span></span> <span data-ttu-id="467ec-196">L'esempio nella sezione successiva viene illustrato questo concetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-196">The example in the next section provides an illustration.</span></span>  
  
-   <span data-ttu-id="467ec-197">Tramite la creazione di una matrice di byte sia staticamente o dinamicamente senza necessariamente chiamare uno dei metodi precedenti, o modificando una matrice di byte esistente.</span><span class="sxs-lookup"><span data-stu-id="467ec-197">By creating a byte array either dynamically or statically without necessarily calling any of the previous methods, or by modifying an existing byte array.</span></span> <span data-ttu-id="467ec-198">Per impedire che i valori positivi vengano erroneamente interpretati come valori negativi, è possibile aggiungere un valore zero byte alla fine della matrice.</span><span class="sxs-lookup"><span data-stu-id="467ec-198">To prevent positive values from being misinterpreted as negative values, you can add a zero-byte value to the end of the array.</span></span>  
  
 <span data-ttu-id="467ec-199">Se `value` è un oggetto vuoto <xref:System.Byte> matrice, il nuovo <xref:System.Numerics.BigInteger> oggetto viene inizializzato su un valore di <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-199">If `value` is an empty <xref:System.Byte> array, the new <xref:System.Numerics.BigInteger> object is initialized to a value of <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="467ec-200">Se `value` è `null`, il costruttore genera un <xref:System.ArgumentNullException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-200">If `value` is `null`, the constructor throws an <xref:System.ArgumentNullException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-201">Nell'esempio seguente viene creata un'istanza di un <xref:System.Numerics.BigInteger> oggetto da una matrice di byte a 5 elementi il cui valore è {5, 4, 3, 2, 1}.</span><span class="sxs-lookup"><span data-stu-id="467ec-201">The following example instantiates a <xref:System.Numerics.BigInteger> object from a 5-element byte array whose value is {5, 4, 3, 2, 1}.</span></span> <span data-ttu-id="467ec-202">Viene quindi visualizzato il <xref:System.Numerics.BigInteger> valore, rappresentati come numeri decimali sia esadecimali, nella console.</span><span class="sxs-lookup"><span data-stu-id="467ec-202">It then displays the <xref:System.Numerics.BigInteger> value, represented as both decimal and hexadecimal numbers, to the console.</span></span> <span data-ttu-id="467ec-203">Un confronto della matrice di input con l'output di testo consente di cancellare i motivi per cui questo overload di <xref:System.Numerics.BigInteger> classe costruttore crea un <xref:System.Numerics.BigInteger> oggetto il cui valore è 4328719365 (o 0x102030405).</span><span class="sxs-lookup"><span data-stu-id="467ec-203">A comparison of the input array with the text output makes it clear why this overload of the <xref:System.Numerics.BigInteger> class constructor creates a <xref:System.Numerics.BigInteger> object whose value is 4328719365 (or 0x102030405).</span></span> <span data-ttu-id="467ec-204">Il primo elemento della matrice di byte, il cui valore è 5, definisce il valore del byte di ordine più basso di <xref:System.Numerics.BigInteger> oggetto, ovvero 0x05.</span><span class="sxs-lookup"><span data-stu-id="467ec-204">The first element of the byte array, whose value is 5, defines the value of the lowest-order byte of the <xref:System.Numerics.BigInteger> object, which is 0x05.</span></span> <span data-ttu-id="467ec-205">Il secondo elemento della matrice di byte, il cui valore è 4, definisce il valore del secondo byte del <xref:System.Numerics.BigInteger> oggetto, ovvero 0x04 e così via.</span><span class="sxs-lookup"><span data-stu-id="467ec-205">The second element of the byte array, whose value is 4, defines the value of the second byte of the <xref:System.Numerics.BigInteger> object, which is 0x04, and so on.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#1)]  
  
 <span data-ttu-id="467ec-206">Nell'esempio seguente viene creata un'istanza di un numero positivo e negativo <xref:System.Numerics.BigInteger> valore, vengono passati per la <xref:System.Numerics.BigInteger.ToByteArray%2A> (metodo) e quindi Ripristina originale <xref:System.Numerics.BigInteger> valori dalla matrice di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="467ec-206">The following example instantiates a positive and a negative <xref:System.Numerics.BigInteger> value, passes them to the <xref:System.Numerics.BigInteger.ToByteArray%2A> method, and then restores the original <xref:System.Numerics.BigInteger> values from the resulting byte array.</span></span> <span data-ttu-id="467ec-207">Si noti che i due valori sono rappresentati da matrici di byte identiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-207">Note that the two values are represented by identical byte arrays.</span></span> <span data-ttu-id="467ec-208">L'unica differenza tra di essi è in bit più significativo dell'ultimo elemento nella matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="467ec-208">The only difference between them is in the most significant bit of the last element in the byte array.</span></span> <span data-ttu-id="467ec-209">Questo bit viene impostato (il valore del byte è 0xFF), se la matrice viene creata da un valore negativo <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-209">This bit is set (the value of the byte is 0xFF) if the array is created from a negative <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="467ec-210">Il bit non è impostato (il valore del byte è zero), se la matrice viene creata da un numero positivo <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-210">The bit is not set (the value of the byte is zero), if the array is created from a positive <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#2)]  
  
 <span data-ttu-id="467ec-211">Nell'esempio seguente viene illustrato come assicurarsi che un valore positivo non è in modo non corretto creata un'istanza come un valore negativo aggiungendo il cui valore è uguale a zero alla fine della matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="467ec-211">The following example illustrates how to make sure that a positive value is not incorrectly instantiated as a negative value by adding a byte whose value is zero to the end of the array.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="467ec-212"><paramref name="value" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToByteArray" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::Decimal value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-213">Numero decimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-213">A decimal number.</span></span></param>
        <summary><span data-ttu-id="467ec-214">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-214">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-215">Il risultato della chiamata di questo costruttore è identico all'assegnazione in modo esplicito un <xref:System.Decimal> valore un <xref:System.Numerics.BigInteger> variabile.</span><span class="sxs-lookup"><span data-stu-id="467ec-215">The result of calling this constructor is identical to explicitly assigning a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger> variable.</span></span>  
  
 <span data-ttu-id="467ec-216">La chiamata di questo costruttore può provocare la perdita di dati. eventuale parte frazionaria `value` viene troncato quando si crea un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-216">Calling this constructor can cause data loss; any fractional part of `value` is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-217">Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> costruttore per creare un'istanza di un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-217">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="467ec-218">Definisce una matrice di <xref:System.Decimal> valori e quindi passa ogni valore per il <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-218">It defines an array of <xref:System.Decimal> values, and then passes each value to the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor.</span></span> <span data-ttu-id="467ec-219">Si noti che il <xref:System.Decimal> valore viene troncato anziché arrotondata quando viene assegnato al <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-219">Note that the <xref:System.Decimal> value is truncated instead of rounded when it is assigned to the <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(double value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-220">Valore a virgola mobile e precisione doppia.</span><span class="sxs-lookup"><span data-stu-id="467ec-220">A double-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="467ec-221">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore a virgola mobile con precisione doppia.</span><span class="sxs-lookup"><span data-stu-id="467ec-221">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a double-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-222">Eventuale parte frazionaria di `value` parametro viene troncato quando si crea un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-222">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="467ec-223">A causa della mancanza di precisione del <xref:System.Double> tipo di dati, la chiamata di questo costruttore può causare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-223">Because of the lack of precision of the <xref:System.Double> data type, calling this constructor can cause data loss.</span></span>  
  
 <span data-ttu-id="467ec-224">Il <xref:System.Numerics.BigInteger> valore risultante dalla chiamata di questo costruttore è identico al valore di risultato dall'assegnazione in modo esplicito un <xref:System.Double> valore un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="467ec-224">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Double> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-225">Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> costruttore per creare un'istanza di un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-225">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="467ec-226">Illustra anche la perdita di precisione che può verificarsi quando si utilizza il <xref:System.Double> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-226">It also illustrates the loss of precision that may occur when you use the <xref:System.Double> data type.</span></span> <span data-ttu-id="467ec-227">Oggetto <xref:System.Double> viene assegnato un valore di grandi dimensioni, che viene quindi assegnato a un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-227">A <xref:System.Double> is assigned a large value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="467ec-228">Come illustrato nell'output, questa assegnazione comporta una perdita di precisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-228">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="467ec-229">Entrambi i valori vengono quindi incrementati di uno.</span><span class="sxs-lookup"><span data-stu-id="467ec-229">Both values are then incremented by one.</span></span> <span data-ttu-id="467ec-230">L'output mostra che il <xref:System.Numerics.BigInteger> oggetto riflette il valore modificato, mentre il <xref:System.Double> non oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-230">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Double> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#5)]
 [!code-vb[System.Numerics.BigInteger.ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-231">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-231">The value of <paramref name="value" /> is <see cref="F:System.Double.NaN" />.</span></span>  
  
 <span data-ttu-id="467ec-232">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-232">-or-</span></span>  
  
 <span data-ttu-id="467ec-233">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-233">The value of <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span></span>  
  
 <span data-ttu-id="467ec-234">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-234">-or-</span></span>  
  
 <span data-ttu-id="467ec-235">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-235">The value of <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(int value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-236">Intero con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-236">A 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="467ec-237">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un Signed Integer a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-237">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 32-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-238">Non vi è alcuna perdita di precisione quando si crea un <xref:System.Numerics.BigInteger> oggetto utilizzando questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-238">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="467ec-239">Il <xref:System.Numerics.BigInteger> valore risultante dalla chiamata di questo costruttore è identico al valore risultante dall'assegnazione di un <xref:System.Int32> valore un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="467ec-239">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
 <span data-ttu-id="467ec-240">Il <xref:System.Numerics.BigInteger> struttura non include costruttori con un parametro di tipo <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, o <xref:System.UInt16>.</span><span class="sxs-lookup"><span data-stu-id="467ec-240">The <xref:System.Numerics.BigInteger> structure does not include constructors with a parameter of type <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, or <xref:System.UInt16>.</span></span> <span data-ttu-id="467ec-241">Tuttavia, il <xref:System.Int32> tipo supporta la conversione implicita di valori integer con e senza segno a 8 bit e a 16 bit a interi con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-241">However, the <xref:System.Int32> type supports the implicit conversion of 8-bit and 16-bit signed and unsigned integers to signed 32-bit integers.</span></span> <span data-ttu-id="467ec-242">Di conseguenza, questo costruttore viene chiamato se `value` è uno di questi quattro tipi integrali.</span><span class="sxs-lookup"><span data-stu-id="467ec-242">As a result, this constructor is called if `value` is any one of these four integral types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-243">L'esempio seguente chiama il <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> costruttore per creare un'istanza <xref:System.Numerics.BigInteger> valori da una matrice di interi a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-243">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 32-bit integers.</span></span> <span data-ttu-id="467ec-244">Usa inoltre la conversione implicita per assegnare ogni valore intero a 32 bit a un <xref:System.Numerics.BigInteger> variabile.</span><span class="sxs-lookup"><span data-stu-id="467ec-244">It also uses implicit conversion to assign each 32-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="467ec-245">Consente quindi di confrontare due valori per stabilire che il valore risultante <xref:System.Numerics.BigInteger> valori sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-245">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.ctors#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(long value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-246">Intero con segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-246">A 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="467ec-247">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> usando un valore intero con segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-247">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 64-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-248">Non vi è alcuna perdita di precisione quando si crea un <xref:System.Numerics.BigInteger> oggetto utilizzando questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-248">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="467ec-249">Il <xref:System.Numerics.BigInteger> valore risultante dalla chiamata di questo costruttore è identico al valore risultante dall'assegnazione di un <xref:System.Int64> valore un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="467ec-249">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-250">L'esempio seguente chiama il <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> costruttore per creare un'istanza <xref:System.Numerics.BigInteger> valori da una matrice di interi a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-250">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 64-bit integers.</span></span> <span data-ttu-id="467ec-251">Utilizza inoltre la conversione implicita da assegnare a ogni valore integer a 64 bit a un <xref:System.Numerics.BigInteger> variabile.</span><span class="sxs-lookup"><span data-stu-id="467ec-251">It also uses implicit conversion to assign each 64-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="467ec-252">Consente quindi di confrontare due valori per stabilire che il valore risultante <xref:System.Numerics.BigInteger> valori sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-252">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#7)]
 [!code-vb[System.Numerics.BigInteger.ctors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(float value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-253">Valore a virgola mobile e precisione singola.</span><span class="sxs-lookup"><span data-stu-id="467ec-253">A single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="467ec-254">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore a virgola mobile con precisione singola.</span><span class="sxs-lookup"><span data-stu-id="467ec-254">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a single-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-255">Eventuale parte frazionaria di `value` parametro viene troncato quando si crea un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-255">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="467ec-256">A causa della mancanza di precisione del <xref:System.Single> tipo di dati, la chiamata di questo costruttore può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-256">Because of the lack of precision of the <xref:System.Single> data type, calling this constructor can result in data loss.</span></span>  
  
 <span data-ttu-id="467ec-257">Il <xref:System.Numerics.BigInteger> valore risultante dalla chiamata di questo costruttore è identico al valore di risultato dall'assegnazione in modo esplicito un <xref:System.Single> valore un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="467ec-257">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Single> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-258">Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> costruttore per creare un'istanza di un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-258">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="467ec-259">Illustra anche la perdita di precisione che può verificarsi quando si utilizza il <xref:System.Single> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-259">It also illustrates the loss of precision that may occur when you use the <xref:System.Single> data type.</span></span> <span data-ttu-id="467ec-260">Oggetto <xref:System.Single> viene assegnato un valore negativo elevato, che viene quindi assegnato a un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-260">A <xref:System.Single> is assigned a large negative value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="467ec-261">Come illustrato nell'output, questa assegnazione comporta una perdita di precisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-261">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="467ec-262">Entrambi i valori vengono quindi incrementati di uno.</span><span class="sxs-lookup"><span data-stu-id="467ec-262">Both values are then incremented by one.</span></span> <span data-ttu-id="467ec-263">L'output mostra che il <xref:System.Numerics.BigInteger> oggetto riflette il valore modificato, mentre il <xref:System.Single> non oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-263">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Single> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#8)]
 [!code-vb[System.Numerics.BigInteger.ctors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-264">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-264">The value of <paramref name="value" /> is <see cref="F:System.Single.NaN" />.</span></span>  
  
 <span data-ttu-id="467ec-265">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-265">-or-</span></span>  
  
 <span data-ttu-id="467ec-266">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Single.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-266">The value of <paramref name="value" /> is <see cref="F:System.Single.NegativeInfinity" />.</span></span>  
  
 <span data-ttu-id="467ec-267">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-267">-or-</span></span>  
  
 <span data-ttu-id="467ec-268">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-268">The value of <paramref name="value" /> is <see cref="F:System.Single.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt32 value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-269">Valore intero senza segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-269">An unsigned 32-bit integer value.</span></span></param>
        <summary><span data-ttu-id="467ec-270">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> utilizzando un valore Unsigned Integer a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-270">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using an unsigned 32-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-271">Non vi è alcuna perdita di precisione quando si crea un <xref:System.Numerics.BigInteger> utilizzando questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-271">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="467ec-272">Il <xref:System.Numerics.BigInteger> valore risultante dalla chiamata di questo costruttore è identico al valore risultante dall'assegnazione di un <xref:System.UInt32> valore un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="467ec-272">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-273">L'esempio seguente usa il <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> costruttore e un'istruzione di assegnazione per inizializzare <xref:System.Numerics.BigInteger> valori da una matrice di interi senza segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-273">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> constructor and an assignment statement to initialize <xref:System.Numerics.BigInteger> values from an array of unsigned 32-bit integers.</span></span> <span data-ttu-id="467ec-274">Consente quindi di confrontare due valori di dimostrare che i due metodi di inizializzazione di un <xref:System.Numerics.BigInteger> valore produce risultati identici.</span><span class="sxs-lookup"><span data-stu-id="467ec-274">It then compares the two values to demonstrate that the two methods of initializing a <xref:System.Numerics.BigInteger> value produce identical results.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#9)]
 [!code-vb[System.Numerics.BigInteger.ctors#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt64 value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-275">Intero senza segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-275">An unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="467ec-276">Inizializza una nuova istanza della struttura <see cref="T:System.Numerics.BigInteger" /> con un valore Unsigned Integer a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-276">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure with an unsigned 64-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-277">Non vi è alcuna perdita di precisione quando si crea un <xref:System.Numerics.BigInteger> utilizzando questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-277">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="467ec-278">Il <xref:System.Numerics.BigInteger> valore risultante dalla chiamata di questo costruttore è identico al valore risultante dall'assegnazione di un <xref:System.UInt64> valore un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="467ec-278">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-279">L'esempio seguente usa il <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> costruttore per creare un'istanza di un <xref:System.Numerics.BigInteger> il cui valore è uguale all'oggetto <xref:System.UInt64.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="467ec-279">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object whose value is equal to <xref:System.UInt64.MaxValue>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#10)]
 [!code-vb[System.Numerics.BigInteger.ctors#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ReadOnlySpan&lt;byte&gt; value, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ReadOnlySpan(Of Byte), Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Abs (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Abs(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Abs(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-280">Numero.</span><span class="sxs-lookup"><span data-stu-id="467ec-280">A number.</span></span></param>
        <summary><span data-ttu-id="467ec-281">Ottiene il valore assoluto di un oggetto <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-281">Gets the absolute value of a <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="467ec-282">Valore assoluto di <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-282">The absolute value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-283">Il valore assoluto di un numero è il numero senza segno, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-283">The absolute value of a number is that number without its sign, as shown in the following table.</span></span>  
  
|<span data-ttu-id="467ec-284">Parametro `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-284">`value` parameter</span></span>|<span data-ttu-id="467ec-285">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="467ec-285">Return value</span></span>|  
|-----------------------|------------------|  
|<span data-ttu-id="467ec-286">`value` >= 0</span><span class="sxs-lookup"><span data-stu-id="467ec-286">`value` >= 0</span></span>|`value`|  
|<span data-ttu-id="467ec-287">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="467ec-287">`value` < 0</span></span>|<span data-ttu-id="467ec-288">`value` \* -1</span><span class="sxs-lookup"><span data-stu-id="467ec-288">`value` \* -1</span></span>|  
  
 <span data-ttu-id="467ec-289">Il <xref:System.Numerics.BigInteger.Abs%2A> è equivalente al metodo di <xref:System.Math.Abs%2A?displayProperty=nameWithType> metodo per i tipi numerici primitivi.</span><span class="sxs-lookup"><span data-stu-id="467ec-289">The <xref:System.Numerics.BigInteger.Abs%2A> method is equivalent to the <xref:System.Math.Abs%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-290">L'esempio seguente usa il <xref:System.Numerics.BigInteger.Abs%2A> metodo per convertire un <xref:System.Numerics.BigInteger> valore dalla rappresentazione in complemento a due di segno e grandezza prima di serializzarlo in un file.</span><span class="sxs-lookup"><span data-stu-id="467ec-290">The following example uses the <xref:System.Numerics.BigInteger.Abs%2A> method to convert a <xref:System.Numerics.BigInteger> value from two's complement representation to sign-and-magnitude representation before serializing it to a file.</span></span> <span data-ttu-id="467ec-291">I dati nel file viene quindi deserializzati e assegnati a un nuovo <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-291">Data in the file is then deserialized and assigned to a new <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Abs(System.SByte)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Add (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Add(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Add(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-292">Primo valore da sommare.</span><span class="sxs-lookup"><span data-stu-id="467ec-292">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-293">Secondo valore da sommare.</span><span class="sxs-lookup"><span data-stu-id="467ec-293">The second value to add.</span></span></param>
        <summary><span data-ttu-id="467ec-294">Somma due valori <see cref="T:System.Numerics.BigInteger" /> e restituisce il risultato.</span><span class="sxs-lookup"><span data-stu-id="467ec-294">Adds two <see cref="T:System.Numerics.BigInteger" /> values and returns the result.</span></span></summary>
        <returns><span data-ttu-id="467ec-295">Somma di <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-295">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-296">I linguaggi che non supportano l'overload degli operatori o gli operatori personalizzati possono utilizzare il <xref:System.Numerics.BigInteger.Add%2A> metodo per eseguire addizioni utilizzando <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-296">Languages that do not support operator overloading or custom operators can use the <xref:System.Numerics.BigInteger.Add%2A> method to perform addition using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="467ec-297">Il <xref:System.Numerics.BigInteger.Add%2A> metodo è un sostituto utile per l'operatore di addizione quando si crea un <xref:System.Numerics.BigInteger> variabile assegnandole una somma risultante dall'aggiunta, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-297">The <xref:System.Numerics.BigInteger.Add%2A> method is a useful substitute for the addition operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a sum that results from addition, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (left As BigInteger, right As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-298">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-298">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-299">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-299">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-300">Confronta due valori <see cref="T:System.Numerics.BigInteger" /> e restituisce un Integer che indica se il primo valore è minore, uguale o maggiore rispetto al secondo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-300">Compares two <see cref="T:System.Numerics.BigInteger" /> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</span></span></summary>
        <returns><span data-ttu-id="467ec-301">Intero con segno che indica i valori relativi di <paramref name="left" /> e <paramref name="right" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-301">A signed integer that indicates the relative values of <paramref name="left" /> and <paramref name="right" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="467ec-302"><list type="table"><listheader><term> Valore</span><span class="sxs-lookup"><span data-stu-id="467ec-302"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="467ec-303"></term><description> Condizione</span><span class="sxs-lookup"><span data-stu-id="467ec-303"></term><description> Condition</span></span>  
  
 <span data-ttu-id="467ec-304"></description></listheader><item><term> Minore di zero</span><span class="sxs-lookup"><span data-stu-id="467ec-304"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="467ec-305"></term><description><paramref name="left" /> è minore di <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-305"></term><description><paramref name="left" /> is less than <paramref name="right" />.</span></span>  
  
 <span data-ttu-id="467ec-306"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="467ec-306"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="467ec-307"></term><description><paramref name="left" /> è uguale a <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-307"></term><description><paramref name="left" /> equals <paramref name="right" />.</span></span>  
  
 <span data-ttu-id="467ec-308"></description></item><item><term> Maggiore di zero</span><span class="sxs-lookup"><span data-stu-id="467ec-308"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="467ec-309"></term><description><paramref name="left" /> è maggiore di <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-309"></term><description><paramref name="left" /> is greater than <paramref name="right" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-310">Sebbene il <xref:System.Numerics.BigInteger> tipo non dispone di alcun intervallo fisso, i confronti di <xref:System.Numerics.BigInteger> valori non sono caratterizzati dalla mancanza di precisione che caratterizza il confronto di numeri a virgola mobile.</span><span class="sxs-lookup"><span data-stu-id="467ec-310">Although the <xref:System.Numerics.BigInteger> type has no fixed range, comparisons of <xref:System.Numerics.BigInteger> values are not characterized by the lack of precision that characterizes the comparison of floating-point numbers.</span></span> <span data-ttu-id="467ec-311">Nell'esempio seguente vengono confrontate due <xref:System.Numerics.BigInteger> valori che differiscono in base a uno e ognuno hanno 1.896 cifre.</span><span class="sxs-lookup"><span data-stu-id="467ec-311">The following example compares two <xref:System.Numerics.BigInteger> values that differ by one and that each have 1,896 digits.</span></span> <span data-ttu-id="467ec-312">Il <xref:System.Numerics.BigInteger.Compare%2A> metodo correttamente segnala che i due valori non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-312">The <xref:System.Numerics.BigInteger.Compare%2A> method correctly reports that the two values are not equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.CompareTo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-313">Confronta il valore di questa istanza con un altro valore e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore dell'altro valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-313">Compares the value of this instance with another value and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the other value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(long other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="467ec-314">Intero con segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-314">The signed 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-315">Confronta questa istanza con un intero con segno a 64 bit e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore del valore dell'intero con segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-315">Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="467ec-316">Signed Integer che indica la relazione dell'istanza con <paramref name="other" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-316">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="467ec-317"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="467ec-317"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="467ec-318"></term><description> Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-318"></term><description> Description</span></span>  
  
 <span data-ttu-id="467ec-319"></description></listheader><item><term> Minore di zero</span><span class="sxs-lookup"><span data-stu-id="467ec-319"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="467ec-320"></term><description> L'istanza corrente è minore di <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-320"></term><description> The current instance is less than <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="467ec-321"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="467ec-321"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="467ec-322"></term><description> L'istanza corrente è uguale a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-322"></term><description> The current instance equals <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="467ec-323"></description></item><item><term> Maggiore di zero</span><span class="sxs-lookup"><span data-stu-id="467ec-323"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="467ec-324"></term><description> L'istanza corrente è maggiore di <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-324"></term><description> The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-325">Se `other` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando il <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="467ec-325">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-326">Nell'esempio seguente viene illustrato il risultato della chiamata di <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> metodo con i valori integrali.</span><span class="sxs-lookup"><span data-stu-id="467ec-326">The following example illustrates the result of calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method with integral values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#3)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Numerics::BigInteger other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="467ec-327">Oggetto da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-327">The object to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-328">Confronta questa istanza con un secondo <see cref="T:System.Numerics.BigInteger" /> e restituisce un Integer che indica se il valore di questa istanza è minore, uguale o maggiore rispetto al valore dell'oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-328">Compares this instance to a second <see cref="T:System.Numerics.BigInteger" /> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="467ec-329">Signed Integer che indica la relazione dell'istanza con <paramref name="other" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-329">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="467ec-330"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="467ec-330"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="467ec-331"></term><description> Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-331"></term><description> Description</span></span>  
  
 <span data-ttu-id="467ec-332"></description></listheader><item><term> Minore di zero</span><span class="sxs-lookup"><span data-stu-id="467ec-332"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="467ec-333"></term><description> L'istanza corrente è minore di <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-333"></term><description> The current instance is less than <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="467ec-334"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="467ec-334"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="467ec-335"></term><description> L'istanza corrente è uguale a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-335"></term><description> The current instance equals <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="467ec-336"></description></item><item><term> Maggiore di zero</span><span class="sxs-lookup"><span data-stu-id="467ec-336"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="467ec-337"></term><description> L'istanza corrente è maggiore di <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-337"></term><description> The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-338">Questo overload del metodo di <xref:System.Numerics.BigInteger.CompareTo%2A> metodo implementa il <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-338">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="467ec-339">Utilizzato dagli oggetti di raccolte generiche per ordinare gli elementi nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="467ec-339">It is used by generic collection objects to order the items in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-340">Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> metodo per ordinare un elenco di `StarInfo` oggetti.</span><span class="sxs-lookup"><span data-stu-id="467ec-340">The following example illustrates the use of the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> method to order a list of `StarInfo` objects.</span></span> <span data-ttu-id="467ec-341">Ogni `StarInfo` oggetto fornisce informazioni sul nome di una stella e della distanza dal terra in miglia.</span><span class="sxs-lookup"><span data-stu-id="467ec-341">Each `StarInfo` object provides information about a star's name and its distance from the Earth in miles.</span></span> <span data-ttu-id="467ec-342">`StarInfo` implementa il <xref:System.IComparable%601> interfaccia, che consente `StarInfo` oggetti in base a classi di raccolte generiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-342">`StarInfo` implements the <xref:System.IComparable%601> interface, which enables `StarInfo` objects to be sorted by generic collection classes.</span></span> <span data-ttu-id="467ec-343">Il relativo <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> implementazione esegue semplicemente il wrapping di una chiamata a <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span><span class="sxs-lookup"><span data-stu-id="467ec-343">Its <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> implementation just wraps a call to <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#1)]  
  
 <span data-ttu-id="467ec-344">Il codice seguente crea quindi un'istanza quattro `StarInfo` oggetti e li archivia in un oggetto generico <xref:System.Collections.Generic.List%601> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-344">The following code then instantiates four `StarInfo` objects and stores them in a generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="467ec-345">Dopo il <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> metodo viene chiamato, `StarInfo` gli oggetti vengono visualizzati in base alla distanza dalla terra.</span><span class="sxs-lookup"><span data-stu-id="467ec-345">After the <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> method is called, `StarInfo` objects are displayed in order of their distance from the Earth.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="467ec-346">Oggetto da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-346">The object to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-347">Confronta questa istanza con un oggetto specificato e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore rispetto al valore dell'oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-347">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="467ec-348">Signed Integer che indica la relazione dell'istanza corrente con il parametro <paramref name="obj" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-348">A signed integer that indicates the relationship of the current instance to the <paramref name="obj" /> parameter, as shown in the following table.</span></span>  
  
 <span data-ttu-id="467ec-349"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="467ec-349"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="467ec-350"></term><description> Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-350"></term><description> Description</span></span>  
  
 <span data-ttu-id="467ec-351"></description></listheader><item><term> Minore di zero</span><span class="sxs-lookup"><span data-stu-id="467ec-351"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="467ec-352"></term><description> L'istanza corrente è minore di <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-352"></term><description> The current instance is less than <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="467ec-353"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="467ec-353"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="467ec-354"></term><description> L'istanza corrente è uguale a <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-354"></term><description> The current instance equals <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="467ec-355"></description></item><item><term> Maggiore di zero</span><span class="sxs-lookup"><span data-stu-id="467ec-355"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="467ec-356"></term><description> L'istanza corrente è maggiore di <paramref name="obj" /> o il parametro <paramref name="obj" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-356"></term><description> The current instance is greater than <paramref name="obj" />, or the <paramref name="obj" /> parameter is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-357">Questo overload del metodo di <xref:System.Numerics.BigInteger.CompareTo%2A> metodo implementa il <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-357">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="467ec-358">Utilizzato dagli oggetti di raccolta non generica per ordinare gli elementi nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="467ec-358">It is used by non-generic collection objects to order the items in the collection.</span></span>  
  
 <span data-ttu-id="467ec-359">Il `obj` parametro deve essere uno dei seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-359">The `obj` parameter must be one of the following:</span></span>  
  
-   <span data-ttu-id="467ec-360">Oggetto il cui tipo in fase di esecuzione è <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="467ec-360">An object whose run-time type is <xref:System.Numerics.BigInteger>.</span></span>  
  
-   <span data-ttu-id="467ec-361">Un <xref:System.Object> variabile il cui valore è `null`.</span><span class="sxs-lookup"><span data-stu-id="467ec-361">An <xref:System.Object> variable whose value is `null`.</span></span> <span data-ttu-id="467ec-362">Se il valore di `obj` parametro `null`, il metodo restituisce 1, che indica che l'istanza corrente è maggiore di `obj`.</span><span class="sxs-lookup"><span data-stu-id="467ec-362">If the value of the `obj` parameter is `null`, the method returns 1, which indicates that that the current instance is greater than `obj`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-363">L'esempio seguente chiama il <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> metodo per confrontare un <xref:System.Numerics.BigInteger> valore con ogni elemento in una matrice di oggetti</span><span class="sxs-lookup"><span data-stu-id="467ec-363">The following example calls the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method to compare a <xref:System.Numerics.BigInteger> value with each element in an object array</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="467ec-364"><paramref name="obj" /> non è un oggetto <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-364"><paramref name="obj" /> is not a <see cref="T:System.Numerics.BigInteger" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::UInt64 other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="467ec-365">Intero senza segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-365">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-366">Confronta questa istanza con un intero senza segno a 64 bit e restituisce un intero che indica se il valore di questa istanza è minore, uguale o maggiore del valore dell'intero senza segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-366">Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="467ec-367">Signed Integer che indica il valore relativo dell'istanza e <paramref name="other" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-367">A signed integer that indicates the relative value of this instance and <paramref name="other" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="467ec-368"><list type="table"><listheader><term> Valore restituito</span><span class="sxs-lookup"><span data-stu-id="467ec-368"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="467ec-369"></term><description> Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-369"></term><description> Description</span></span>  
  
 <span data-ttu-id="467ec-370"></description></listheader><item><term> Minore di zero</span><span class="sxs-lookup"><span data-stu-id="467ec-370"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="467ec-371"></term><description> L'istanza corrente è minore di <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-371"></term><description> The current instance is less than <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="467ec-372"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="467ec-372"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="467ec-373"></term><description> L'istanza corrente è uguale a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-373"></term><description> The current instance equals <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="467ec-374"></description></item><item><term> Maggiore di zero</span><span class="sxs-lookup"><span data-stu-id="467ec-374"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="467ec-375"></term><description> L'istanza corrente è maggiore di <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-375"></term><description> The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Divide (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Divide(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Divide(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="467ec-376">Valore da dividere.</span><span class="sxs-lookup"><span data-stu-id="467ec-376">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="467ec-377">Valore per cui dividere.</span><span class="sxs-lookup"><span data-stu-id="467ec-377">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="467ec-378">Divide un valore <see cref="T:System.Numerics.BigInteger" /> per un altro e restituisce il risultato.</span><span class="sxs-lookup"><span data-stu-id="467ec-378">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="467ec-379">Quoziente della divisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-379">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-380">Il <xref:System.Numerics.BigInteger.Divide%2A> metodo esegue la divisione di interi, viene eliminato l'eventuale resto risultante dalla divisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-380">The <xref:System.Numerics.BigInteger.Divide%2A> method performs integer division; any remainder that results from the division is discarded.</span></span> <span data-ttu-id="467ec-381">Per eseguire la divisione di interi mantenendo il resto, chiamare il <xref:System.Numerics.BigInteger.DivRem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-381">To perform integer division while preserving the remainder, call the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span> <span data-ttu-id="467ec-382">Per recuperare solo il resto, chiamare il <xref:System.Numerics.BigInteger.Remainder%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-382">To retrieve only the remainder, call the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="467ec-383">Il <xref:System.Numerics.BigInteger.Divide%2A> metodo può essere utilizzato dai linguaggi che non supportano l'overload degli operatori.</span><span class="sxs-lookup"><span data-stu-id="467ec-383">The <xref:System.Numerics.BigInteger.Divide%2A> method can be used by languages that do not support operator overloading.</span></span> <span data-ttu-id="467ec-384">Il comportamento è identico alla divisione utilizzando l'operatore di divisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-384">Its behavior is identical to division using the division operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-385">L'esempio seguente crea una matrice di <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-385">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-386">Ogni elemento viene quindi utilizzato come quoziente in un'operazione di divisione che utilizza il <xref:System.Numerics.BigInteger.Divide%2A> (metodo), l'operatore di divisione (/) e <xref:System.Numerics.BigInteger.DivRem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-386">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="467ec-387"><paramref name="divisor" /> è 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="467ec-387"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger DivRem (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor, out System.Numerics.BigInteger remainder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger DivRem(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor, [out] valuetype System.Numerics.BigInteger&amp; remainder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (dividend As BigInteger, divisor As BigInteger, ByRef remainder As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger DivRem(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor, [Runtime::InteropServices::Out] System::Numerics::BigInteger % remainder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
        <Parameter Name="remainder" Type="System.Numerics.BigInteger&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="467ec-388">Valore da dividere.</span><span class="sxs-lookup"><span data-stu-id="467ec-388">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="467ec-389">Valore per cui dividere.</span><span class="sxs-lookup"><span data-stu-id="467ec-389">The value to divide by.</span></span></param>
        <param name="remainder"><span data-ttu-id="467ec-390">Quando termina, questo metodo contiene un valore <see cref="T:System.Numerics.BigInteger" /> che rappresenta il resto dalla divisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-390">When this method returns, contains a <see cref="T:System.Numerics.BigInteger" /> value that represents the remainder from the division.</span></span> <span data-ttu-id="467ec-391">Questo parametro viene passato non inizializzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-391">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="467ec-392">Divide un valore <see cref="T:System.Numerics.BigInteger" /> per un altro, restituisce il risultato e restituisce il resto in un parametro di output.</span><span class="sxs-lookup"><span data-stu-id="467ec-392">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another, returns the result, and returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="467ec-393">Quoziente della divisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-393">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-394">Questo metodo mantiene il quoziente e resto risultante dalla divisione di interi.</span><span class="sxs-lookup"><span data-stu-id="467ec-394">This method preserves both the quotient and the remainder that results from integer division.</span></span> <span data-ttu-id="467ec-395">Se non si è interessati al resto, utilizzare il <xref:System.Numerics.BigInteger.Divide%2A> metodo o l'operatore di divisione; se si è solo interessati nella parte restante, utilizzare il <xref:System.Numerics.BigInteger.Remainder%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-395">If you are not interested in the remainder, use the <xref:System.Numerics.BigInteger.Divide%2A> method or the division operator; if you are only interested in the remainder, use the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="467ec-396">Il segno dell'oggetto restituito `remainder` valore è uguale al segno del `dividend` parametro.</span><span class="sxs-lookup"><span data-stu-id="467ec-396">The sign of the returned `remainder` value is the same as the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="467ec-397">Il comportamento del <xref:System.Numerics.BigInteger.DivRem%2A> è identico a quello del metodo di <xref:System.Math.DivRem%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-397">The behavior of the <xref:System.Numerics.BigInteger.DivRem%2A> method is identical to that of the <xref:System.Math.DivRem%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-398">L'esempio seguente crea una matrice di <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-398">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-399">Ogni elemento viene quindi utilizzato come quoziente in un'operazione di divisione che utilizza il <xref:System.Numerics.BigInteger.Divide%2A> (metodo), l'operatore di divisione (/) e <xref:System.Numerics.BigInteger.DivRem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-399">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="467ec-400"><paramref name="divisor" /> è 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="467ec-400"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-401">Restituisce un valore che indica se due valori numerici sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-401">Returns a value that indicates whether two numeric values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(long other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="467ec-402">Valore intero con segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-402">The signed 64-bit integer value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-403">Restituisce un valore che indica se l'istanza corrente e un intero con segno a 64 bit hanno lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-403">Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-404"><see langword="true" /> se il Signed Integer a 64 bit e l'istanza corrente hanno lo stesso valore; in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-404"><see langword="true" /> if the signed 64-bit integer and the current instance have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-405">Se `other` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene chiamato il metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-405">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the method is called.</span></span>  
  
 <span data-ttu-id="467ec-406">Per determinare la relazione tra i due oggetti anziché solo il test di uguaglianza, chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-406">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-407">Nell'esempio seguente viene creata un'istanza di un <xref:System.Numerics.BigInteger> oggetto da ogni tipo integrale eccetto <xref:System.UInt64>.</span><span class="sxs-lookup"><span data-stu-id="467ec-407">The following example instantiates a <xref:System.Numerics.BigInteger> object from each integral type except <xref:System.UInt64>.</span></span> <span data-ttu-id="467ec-408">Chiama quindi il <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> metodo per confrontare la <xref:System.Numerics.BigInteger> valore con il valore integer originale che è stato passato il <xref:System.Numerics.BigInteger> costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-408">It then calls the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> method to compare the <xref:System.Numerics.BigInteger> value with the original integer value that was passed to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="467ec-409">Come illustrato nell'output, i valori sono uguali in ogni caso.</span><span class="sxs-lookup"><span data-stu-id="467ec-409">As the output shows, the values are equal in each case.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals.cpp#1)]
 [!code-csharp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::BigInteger other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="467ec-410">Oggetto da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-410">The object to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-411">Restituisce un valore che indica se l'istanza corrente e un oggetto <see cref="T:System.Numerics.BigInteger" /> specificato hanno lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-411">Returns a value that indicates whether the current instance and a specified <see cref="T:System.Numerics.BigInteger" /> object have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-412"><see langword="true" /> se questo oggetto <see cref="T:System.Numerics.BigInteger" /> e <paramref name="other" /> hanno lo stesso valore; <see langword="false" /> in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="467ec-412"><see langword="true" /> if this <see cref="T:System.Numerics.BigInteger" /> object and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-413">Questo metodo implementa il <xref:System.IEquatable%601> interfaccia ed esegue leggermente migliori rispetto <xref:System.Numerics.BigInteger.Equals%28System.Object%29> perché non è necessario convertire il `other` parametro a un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-413">This method implements the <xref:System.IEquatable%601> interface and performs slightly better than <xref:System.Numerics.BigInteger.Equals%28System.Object%29> because it does not have to convert the `other` parameter to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="467ec-414">Per determinare la relazione tra i due <xref:System.Numerics.BigInteger> oggetti anziché solo il test di uguaglianza, chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-414">To determine the relationship between the two <xref:System.Numerics.BigInteger> objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-415">Nell'esempio seguente viene confrontata la distanza approssimativa di diverse stelle dalla terra con la distanza di Epsilon Indi dalla Terra per determinare se sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-415">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="467ec-416">Nell'esempio viene utilizzato ogni overload del <xref:System.Numerics.BigInteger.Equals%2A> metodo per verificare l'uguaglianza.</span><span class="sxs-lookup"><span data-stu-id="467ec-416">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="467ec-417">Oggetto da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-417">The object to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-418">Restituisce un valore che indica se l'istanza corrente e un oggetto specificato hanno lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-418">Returns a value that indicates whether the current instance and a specified object have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-419"><see langword="true" /> se l'argomento di <paramref name="obj" /> è un oggetto <see cref="T:System.Numerics.BigInteger" /> e se il valore è uguale a quello dell'istanza <see cref="T:System.Numerics.BigInteger" /> corrente; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-419"><see langword="true" /> if the <paramref name="obj" /> argument is a <see cref="T:System.Numerics.BigInteger" /> object, and its value is equal to the value of the current <see cref="T:System.Numerics.BigInteger" /> instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-420">Se il `obj` argomento non è un <xref:System.Numerics.BigInteger> valore, il metodo restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="467ec-420">If the `obj` argument is not a <xref:System.Numerics.BigInteger> value, the method returns `false`.</span></span> <span data-ttu-id="467ec-421">Il metodo restituisce `true` solo se `obj` è un <xref:System.Numerics.BigInteger> istanza il cui valore è uguale all'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="467ec-421">The method returns `true` only if `obj` is a <xref:System.Numerics.BigInteger> instance whose value is equal to the current instance.</span></span>  
  
 <span data-ttu-id="467ec-422">Per determinare la relazione tra i due oggetti anziché solo il test di uguaglianza, chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-422">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-423">L'esempio seguente definisce parallelo <xref:System.Object> e <xref:System.Numerics.BigInteger> matrici.</span><span class="sxs-lookup"><span data-stu-id="467ec-423">The following example defines parallel <xref:System.Object> and <xref:System.Numerics.BigInteger> arrays.</span></span> <span data-ttu-id="467ec-424">Ogni elemento di una matrice ha lo stesso valore impostato per l'elemento corrispondente della seconda matrice.</span><span class="sxs-lookup"><span data-stu-id="467ec-424">Each element of one array has the same value as the corresponding element of the second array.</span></span> <span data-ttu-id="467ec-425">Come illustrato nell'esempio, l'istanza di output di <xref:System.Numerics.BigInteger> matrice viene considerata uguale all'istanza nel <xref:System.Object> matrice solo se quest'ultimo è un <xref:System.Numerics.BigInteger> e i relativi valori sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-425">As the output from the example shows, the instance in the <xref:System.Numerics.BigInteger> array is considered to be equal to the instance in the <xref:System.Object> array only if the latter is a <xref:System.Numerics.BigInteger> and their values are equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/Equals_Obj1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/Equals_Obj1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::UInt64 other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="467ec-426">Intero senza segno a 64 bit da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-426">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-427">Restituisce un valore che indica se l'istanza corrente e un intero senza segno a 64 bit hanno lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-427">Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-428"><see langword="true" /> se l'Unsigned Integer a 64 bit e l'istanza corrente hanno lo stesso valore; <see langword="false" /> in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="467ec-428"><see langword="true" /> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-429">Per determinare la relazione tra i due oggetti anziché solo il test di uguaglianza, chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-429">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-430">Nell'esempio seguente viene confrontata la distanza approssimativa di diverse stelle dalla terra con la distanza di Epsilon Indi dalla Terra per determinare se sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-430">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="467ec-431">Nell'esempio viene utilizzato ogni overload del <xref:System.Numerics.BigInteger.Equals%2A> metodo per verificare l'uguaglianza.</span><span class="sxs-lookup"><span data-stu-id="467ec-431">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (bool isUnsigned = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(bool isUnsigned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (Optional isUnsigned As Boolean = false) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isUnsigned">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="467ec-432">Restituisce il codice hash per l'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="467ec-432">Returns the hash code for the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="467ec-433">Codice hash di un intero con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-433">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreatestCommonDivisor">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger GreatestCommonDivisor (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger GreatestCommonDivisor(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreatestCommonDivisor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger GreatestCommonDivisor(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-434">Primo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-434">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-435">Secondo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-435">The second value.</span></span></param>
        <summary><span data-ttu-id="467ec-436">Trova il massimo comune divisore di due valori <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-436">Finds the greatest common divisor of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="467ec-437">Massimo comune divisore di <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-437">The greatest common divisor of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-438">Il massimo comun divisore è il numero più grande in cui i due <xref:System.Numerics.BigInteger> valori possono essere divisi senza restituire un resto.</span><span class="sxs-lookup"><span data-stu-id="467ec-438">The greatest common divisor is the largest number into which the two <xref:System.Numerics.BigInteger> values can be divided without returning a remainder.</span></span>  
  
 <span data-ttu-id="467ec-439">Se il `left` e `right` i parametri sono numeri diversi da zero, il metodo restituisce sempre almeno un valore pari a 1 perché tutti i numeri possono essere divisi per 1.</span><span class="sxs-lookup"><span data-stu-id="467ec-439">If the `left` and `right` parameters are non-zero numbers, the method always returns at least a value of 1 because all numbers can be divided by 1.</span></span> <span data-ttu-id="467ec-440">Se uno dei parametri è zero, il metodo restituisce il valore assoluto del parametro diverso da zero.</span><span class="sxs-lookup"><span data-stu-id="467ec-440">If either parameter is zero, the method returns the absolute value of the non-zero parameter.</span></span> <span data-ttu-id="467ec-441">Se entrambi i valori zero, il metodo restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="467ec-441">If both values are zero, the method returns zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="467ec-442">Calcolare il massimo comune divisore di valori molto grandi di `left` e `right` può essere un'operazione richiede molto tempo.</span><span class="sxs-lookup"><span data-stu-id="467ec-442">Computing the greatest common divisor of very large values of `left` and `right` can be a very time-consuming operation.</span></span>  
  
 <span data-ttu-id="467ec-443">Il valore restituito dal <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> metodo è sempre positivo indipendentemente dal segno del `left` e `right` parametri.</span><span class="sxs-lookup"><span data-stu-id="467ec-443">The value returned by the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method is always positive regardless of the sign of the `left` and `right` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-444">Nell'esempio seguente viene illustrata una chiamata per il <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> metodo e la gestione delle eccezioni necessaria per fornire informazioni utili su un <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-444">The following example illustrates a call to the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method and the exception handling necessary to provide useful information about an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="467ec-445">Il risultato indica che il massimo comune divisore di questi due numeri è 1.</span><span class="sxs-lookup"><span data-stu-id="467ec-445">The result indicates that the greatest common divisor of these two numbers is 1.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#10)]
 [!code-vb[System.Numeric.BigInteger.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEven">
      <MemberSignature Language="C#" Value="public bool IsEven { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEven" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsEven" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEven As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEven { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467ec-446">Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è un numero pari.</span><span class="sxs-lookup"><span data-stu-id="467ec-446">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is an even number.</span></span></summary>
        <value>
          <span data-ttu-id="467ec-447"><see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è un numero pari; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-447"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is an even number; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-448">Questa proprietà è una comoda funzionalità che indica se un <xref:System.Numerics.BigInteger> valore è divisibile per due.</span><span class="sxs-lookup"><span data-stu-id="467ec-448">This property is a convenience feature that indicates whether a <xref:System.Numerics.BigInteger> value is evenly divisible by two.</span></span> <span data-ttu-id="467ec-449">È equivalente all'espressione seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-449">It is equivalent to the following expression:</span></span>  
  
```csharp   
value % 2 == 0;  
```  
  
```vb  
value Mod 2 = 0  
```  
  
 <span data-ttu-id="467ec-450">Se il valore dell'oggetto corrente <xref:System.Numerics.BigInteger> oggetto <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, la proprietà restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="467ec-450">If the value of the current <xref:System.Numerics.BigInteger> object is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, the property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOne">
      <MemberSignature Language="C#" Value="public bool IsOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsOne" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOne As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOne { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467ec-451">Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è <see cref="P:System.Numerics.BigInteger.One" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-451">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />.</span></span></summary>
        <value>
          <span data-ttu-id="467ec-452"><see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è <see cref="P:System.Numerics.BigInteger.One" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-452"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-453">Questa proprietà offre un miglioramento significativo delle prestazioni degli altri confronti con uno, ad esempio `thisBigInteger.Equals(BigInteger.One)`.</span><span class="sxs-lookup"><span data-stu-id="467ec-453">This property offers significantly better performance than other comparisons with one, such as `thisBigInteger.Equals(BigInteger.One)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
      </Docs>
    </Member>
    <Member MemberName="IsPowerOfTwo">
      <MemberSignature Language="C#" Value="public bool IsPowerOfTwo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerOfTwo" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerOfTwo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerOfTwo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467ec-454">Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è una potenza di due.</span><span class="sxs-lookup"><span data-stu-id="467ec-454">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is a power of two.</span></span></summary>
        <value>
          <span data-ttu-id="467ec-455"><see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è una potenza di due; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-455"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is a power of two; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-456">Questa proprietà determina se un <xref:System.Numerics.BigInteger> valore è un singolo bit diverso da zero impostato.</span><span class="sxs-lookup"><span data-stu-id="467ec-456">This property determines whether a <xref:System.Numerics.BigInteger> value has a single non-zero bit set.</span></span> <span data-ttu-id="467ec-457">Questo significa che restituisce `true` se il valore dell'oggetto corrente <xref:System.Numerics.BigInteger> oggetto è 1 (ovvero 2<sup>0</sup>) o qualsiasi maggiore potenza di due.</span><span class="sxs-lookup"><span data-stu-id="467ec-457">This means that it returns `true` if the value of the current <xref:System.Numerics.BigInteger> object is 1 (that is, 2<sup>0</sup>) or any greater power of two.</span></span> <span data-ttu-id="467ec-458">Restituisce `false` se il valore dell'oggetto corrente <xref:System.Numerics.BigInteger> oggetto è 0.</span><span class="sxs-lookup"><span data-stu-id="467ec-458">It returns `false` if the value of the current <xref:System.Numerics.BigInteger> object is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsZero" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsZero { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467ec-459">Indica se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente è <see cref="P:System.Numerics.BigInteger.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-459">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />.</span></span></summary>
        <value>
          <span data-ttu-id="467ec-460"><see langword="true" /> se il valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> è <see cref="P:System.Numerics.BigInteger.Zero" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-460"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-461">Questa proprietà offre prestazioni decisamente migliori rispetto a `BigInteger.Equals(BigInteger.Zero)`.</span><span class="sxs-lookup"><span data-stu-id="467ec-461">This property offers significantly better performance than `BigInteger.Equals(BigInteger.Zero)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.Zero" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-462">Restituisce il logaritmo del numero specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-462">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-463">Numero di cui è necessario trovare il logaritmo.</span><span class="sxs-lookup"><span data-stu-id="467ec-463">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="467ec-464">Restituisce il logaritmo naturale (in base <see langword="e" />) di un numero specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-464">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="467ec-465">Logaritmo naturale (di base <see langword="e" />) di <paramref name="value" />, come mostrato nella tabella della sezione Osservazioni.</span><span class="sxs-lookup"><span data-stu-id="467ec-465">The natural (base <see langword="e" />) logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-466">Il `value` parametro è specificato come un numero in base 10.</span><span class="sxs-lookup"><span data-stu-id="467ec-466">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="467ec-467">Restituisce il valore di questo metodo dipende dal segno di `value`, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-467">The precise return value of this method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="467ec-468">Eseguire l'accesso di `value` parametro</span><span class="sxs-lookup"><span data-stu-id="467ec-468">Sign of `value` parameter</span></span>|<span data-ttu-id="467ec-469">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="467ec-469">Return value</span></span>|  
|-------------------------------|------------------|  
|<span data-ttu-id="467ec-470">Positivo</span><span class="sxs-lookup"><span data-stu-id="467ec-470">Positive</span></span>|<span data-ttu-id="467ec-471">Il logaritmo naturale di `value`; ovvero, ln `value`, o di log e`value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-471">The natural logarithm of `value`; that is, ln `value`, or log e`value`.</span></span>|  
|<span data-ttu-id="467ec-472">Zero</span><span class="sxs-lookup"><span data-stu-id="467ec-472">Zero</span></span>|<span data-ttu-id="467ec-473"><xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="467ec-473"><xref:System.Double.NegativeInfinity>.</span></span>|  
|<span data-ttu-id="467ec-474">Negativo</span><span class="sxs-lookup"><span data-stu-id="467ec-474">Negative</span></span>|<span data-ttu-id="467ec-475"><xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="467ec-475"><xref:System.Double.NaN>.</span></span>|  
  
 <span data-ttu-id="467ec-476">Per calcolare il logaritmo in base 10 di un <xref:System.Numerics.BigInteger> valore, chiamare il <xref:System.Numerics.BigInteger.Log10%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-476">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="467ec-477">Per calcolare il logaritmo di un numero in un'altra base, chiamare il <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-477">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> method.</span></span>  
  
 <span data-ttu-id="467ec-478">È possibile trovare la radice quadrata di un numero chiamando il <xref:System.Numerics.BigInteger.Log%2A> metodo lungo con il <xref:System.Math.Exp%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-478">You can find the square root of a number by calling the <xref:System.Numerics.BigInteger.Log%2A> method along with the <xref:System.Math.Exp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="467ec-479">Si noti che il risultato è <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> se il risultato è maggiore di <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-479">Note that the result is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> if the result is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="467ec-480">L'esempio seguente calcola la radice quadrata di ogni elemento in una matrice di <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-480">The following example calculates the square root of each element in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Log#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.biginteger.log/cs/log1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Log#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.biginteger.log/vb/log1.vb#1)]
  
 <span data-ttu-id="467ec-481">Questo metodo corrisponde al <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> metodo per i tipi numerici primitivi.</span><span class="sxs-lookup"><span data-stu-id="467ec-481">This method corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467ec-482">Il logaritmo naturale di <paramref name="value" /> non è compreso nell'intervallo del tipo di dati <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-482">The natural log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value, double baseValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value, float64 baseValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger, baseValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value, double baseValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-483">Numero di cui trovare il logaritmo.</span><span class="sxs-lookup"><span data-stu-id="467ec-483">A number whose logarithm is to be found.</span></span></param>
        <param name="baseValue"><span data-ttu-id="467ec-484">Base del logaritmo.</span><span class="sxs-lookup"><span data-stu-id="467ec-484">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="467ec-485">Restituisce il logaritmo del numero specificato in una base specificata.</span><span class="sxs-lookup"><span data-stu-id="467ec-485">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="467ec-486">Logaritmo di base <paramref name="baseValue" /> di <paramref name="value" />, come mostrato nella tabella della sezione Osservazioni.</span><span class="sxs-lookup"><span data-stu-id="467ec-486">The base <paramref name="baseValue" /> logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-487">Il `value` e `baseValue` parametri vengono specificati come numeri di base 10.</span><span class="sxs-lookup"><span data-stu-id="467ec-487">The `value` and `baseValue` parameters are specified as base 10 numbers.</span></span>  
  
 <span data-ttu-id="467ec-488">Restituisce il valore del metodo dipende dal segno di `value` e l'accesso e al valore di `baseValue`, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-488">The precise return value of the method depends on the sign of `value` and on the sign and value of `baseValue`, as the following table shows.</span></span>  
  
|<span data-ttu-id="467ec-489">Parametro `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-489">`value` parameter</span></span>|<span data-ttu-id="467ec-490">Parametro `baseValue`.</span><span class="sxs-lookup"><span data-stu-id="467ec-490">`baseValue` parameter</span></span>|<span data-ttu-id="467ec-491">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="467ec-491">Return value</span></span>|  
|-----------------------|---------------------------|------------------|  
|<span data-ttu-id="467ec-492">`value` > 0</span><span class="sxs-lookup"><span data-stu-id="467ec-492">`value` > 0</span></span>|<span data-ttu-id="467ec-493">(0 < `baseValue` < 1) - oppure -(`baseValue` > 1)</span><span class="sxs-lookup"><span data-stu-id="467ec-493">(0 < `baseValue` < 1) -or-(`baseValue` > 1)</span></span>|<span data-ttu-id="467ec-494">logbaseValue(`value`)</span><span class="sxs-lookup"><span data-stu-id="467ec-494">logbaseValue(`value`)</span></span>|  
|<span data-ttu-id="467ec-495">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="467ec-495">`value` < 0</span></span>|<span data-ttu-id="467ec-496">(qualsiasi valore)</span><span class="sxs-lookup"><span data-stu-id="467ec-496">(any value)</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="467ec-497">(qualsiasi valore)</span><span class="sxs-lookup"><span data-stu-id="467ec-497">(any value)</span></span>|<span data-ttu-id="467ec-498">`baseValue` < 0</span><span class="sxs-lookup"><span data-stu-id="467ec-498">`baseValue` < 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="467ec-499">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="467ec-499">`value` != 1</span></span>|<span data-ttu-id="467ec-500">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="467ec-500">`baseValue` = 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="467ec-501">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="467ec-501">`value` != 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="467ec-502">(qualsiasi valore)</span><span class="sxs-lookup"><span data-stu-id="467ec-502">(any value)</span></span>|`baseValue` = <xref:System.Double.NaN?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="467ec-503">(qualsiasi valore)</span><span class="sxs-lookup"><span data-stu-id="467ec-503">(any value)</span></span>|<span data-ttu-id="467ec-504">`baseValue` = 1</span><span class="sxs-lookup"><span data-stu-id="467ec-504">`baseValue` = 1</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="467ec-505">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="467ec-505">`value` = 0</span></span>|<span data-ttu-id="467ec-506">0 < `baseValue` < 1</span><span class="sxs-lookup"><span data-stu-id="467ec-506">0 < `baseValue` < 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="467ec-507">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="467ec-507">`value` = 0</span></span>|<span data-ttu-id="467ec-508">`baseValue` > 1</span><span class="sxs-lookup"><span data-stu-id="467ec-508">`baseValue` > 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="467ec-509">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="467ec-509">`value` = 1</span></span>|<span data-ttu-id="467ec-510">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="467ec-510">`baseValue` = 0</span></span>|<span data-ttu-id="467ec-511">0</span><span class="sxs-lookup"><span data-stu-id="467ec-511">0</span></span>|  
|<span data-ttu-id="467ec-512">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="467ec-512">`value` = 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<span data-ttu-id="467ec-513">0</span><span class="sxs-lookup"><span data-stu-id="467ec-513">0</span></span>|  
  
 <span data-ttu-id="467ec-514">Per calcolare il logaritmo in base 10 di un <xref:System.Numerics.BigInteger> valore, chiamare il <xref:System.Numerics.BigInteger.Log10%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-514">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="467ec-515">Per calcolare il logaritmo naturale di un numero, chiamare il <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-515">To calculate the natural logarithm of a number, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> method.</span></span>  
  
 <span data-ttu-id="467ec-516">Questo metodo corrisponde al <xref:System.Math.Log%2A?displayProperty=nameWithType> metodo per i tipi numerici primitivi.</span><span class="sxs-lookup"><span data-stu-id="467ec-516">This method corresponds to the <xref:System.Math.Log%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467ec-517">Il logaritmo di <paramref name="value" /> non è compreso nell'intervallo del tipo di dati <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-517">The log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-518">Numero di cui trovare il logaritmo.</span><span class="sxs-lookup"><span data-stu-id="467ec-518">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="467ec-519">Restituisce il logaritmo in base 10 del numero specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-519">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="467ec-520">Logaritmo in base 10 di <paramref name="value" />, come mostrato nella tabella della sezione Osservazioni.</span><span class="sxs-lookup"><span data-stu-id="467ec-520">The base 10 logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-521">Il `value` parametro è specificato come un numero in base 10.</span><span class="sxs-lookup"><span data-stu-id="467ec-521">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="467ec-522">Restituisce il valore del metodo dipende dal segno di `value`, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-522">The precise return value of the method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="467ec-523">Segno di parametro value</span><span class="sxs-lookup"><span data-stu-id="467ec-523">Sign of value parameter</span></span>|<span data-ttu-id="467ec-524">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="467ec-524">Return value</span></span>|  
|-----------------------------|------------------|  
|<span data-ttu-id="467ec-525">Positivo</span><span class="sxs-lookup"><span data-stu-id="467ec-525">Positive</span></span>|<span data-ttu-id="467ec-526">La base 10 di log `value`; vale a dire log10`value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-526">The base 10 log of `value`; that is, log10`value`.</span></span>|  
|<span data-ttu-id="467ec-527">Zero</span><span class="sxs-lookup"><span data-stu-id="467ec-527">Zero</span></span>|<span data-ttu-id="467ec-528"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-528"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="467ec-529">Negativo</span><span class="sxs-lookup"><span data-stu-id="467ec-529">Negative</span></span>|<span data-ttu-id="467ec-530"><xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-530"><xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>|  
  
 <span data-ttu-id="467ec-531">Per calcolare il logaritmo naturale di un <xref:System.Numerics.BigInteger> valore, chiamare il <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-531">To calculate the natural logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="467ec-532">Per calcolare il logaritmo di un numero in un'altra base, chiamare il <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-532">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="467ec-533">Questo metodo corrisponde al <xref:System.Math.Log10%2A?displayProperty=nameWithType> metodo per i tipi numerici primitivi.</span><span class="sxs-lookup"><span data-stu-id="467ec-533">This method corresponds to the <xref:System.Math.Log10%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467ec-534">Il logaritmo a base 10 di <paramref name="value" /> non è compreso nell'intervallo del tipo di dati <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-534">The base 10 log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Max (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Max(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Max(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-535">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-535">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-536">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-536">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-537">Restituisce il maggiore di due valori <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-537">Returns the larger of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="467ec-538">Parametro <paramref name="left" /> o <paramref name="right" />, qualunque sia il maggiore.</span><span class="sxs-lookup"><span data-stu-id="467ec-538">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-539">Questo metodo corrisponde al <xref:System.Math.Max%2A?displayProperty=nameWithType> metodo per i tipi numerici primitivi.</span><span class="sxs-lookup"><span data-stu-id="467ec-539">This method corresponds to the <xref:System.Math.Max%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-540">L'esempio seguente usa il <xref:System.Numerics.BigInteger.Max%2A> metodo per selezionare il numero più grande in una matrice di <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-540">The following example uses the <xref:System.Numerics.BigInteger.Max%2A> method to select the largest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/cs/Max1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/vb/Max1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Min (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Min(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Min(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-541">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-541">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-542">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-542">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-543">Restituisce il minore di due valori <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-543">Returns the smaller of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="467ec-544">Parametro <paramref name="left" /> o <paramref name="right" />, qualunque sia il minore.</span><span class="sxs-lookup"><span data-stu-id="467ec-544">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-545">Questo metodo corrisponde al <xref:System.Math.Min%2A?displayProperty=nameWithType> metodo per i tipi numerici primitivi.</span><span class="sxs-lookup"><span data-stu-id="467ec-545">This method corresponds to the <xref:System.Math.Min%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-546">L'esempio seguente usa il <xref:System.Numerics.BigInteger.Min%2A> metodo per selezionare il numero più piccolo in una matrice di <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-546">The following example uses the <xref:System.Numerics.BigInteger.Min%2A> method to select the smallest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/cs/Min1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/vb/Min1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger MinusOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger MinusOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinusOne As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger MinusOne { System::Numerics::BigInteger get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467ec-547">Ottiene un valore che rappresenta il numero negativo uno (-1).</span><span class="sxs-lookup"><span data-stu-id="467ec-547">Gets a value that represents the number negative one (-1).</span></span></summary>
        <value><span data-ttu-id="467ec-548">Intero il cui valore è il numero negativo uno (-1).</span><span class="sxs-lookup"><span data-stu-id="467ec-548">An integer whose value is negative one (-1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-549">Il <xref:System.Numerics.BigInteger.MinusOne%2A> proprietà viene utilizzata per confrontare un <xref:System.Numerics.BigInteger> valore-1 o -1 per assegnare un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-549">The <xref:System.Numerics.BigInteger.MinusOne%2A> property is used to compare a <xref:System.Numerics.BigInteger> value to -1 or to assign -1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
      </Docs>
    </Member>
    <Member MemberName="ModPow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger ModPow (System.Numerics.BigInteger value, System.Numerics.BigInteger exponent, System.Numerics.BigInteger modulus);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger ModPow(valuetype System.Numerics.BigInteger value, valuetype System.Numerics.BigInteger exponent, valuetype System.Numerics.BigInteger modulus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModPow (value As BigInteger, exponent As BigInteger, modulus As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger ModPow(System::Numerics::BigInteger value, System::Numerics::BigInteger exponent, System::Numerics::BigInteger modulus);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Numerics.BigInteger" />
        <Parameter Name="modulus" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-550">Numero da elevare alla potenza di <c>exponent</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-550">The number to raise to the <c>exponent</c> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="467ec-551">Esponente per il quale elevare <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-551">The exponent to raise <c>value</c> by.</span></span></param>
        <param name="modulus"><span data-ttu-id="467ec-552">Numero per il quale eseguire la divisione di <c>value</c> elevato alla potenza di <c>exponent</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-552">The number by which to divide <c>value</c> raised to the <c>exponent</c> power.</span></span></param>
        <summary><span data-ttu-id="467ec-553">Esegue la divisione con modulo per un numero elevato alla potenza di un altro numero.</span><span class="sxs-lookup"><span data-stu-id="467ec-553">Performs modulus division on a number raised to the power of another number.</span></span></summary>
        <returns><span data-ttu-id="467ec-554">Resto risultante dalla divisione di <paramref name="value" /><sup>exponent</sup> per <paramref name="modulus" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-554">The remainder after dividing <paramref name="value" /><sup>exponent</sup> by <paramref name="modulus" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-555">Il <xref:System.Numerics.BigInteger.ModPow%2A> metodo valuta l'espressione seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-555">The <xref:System.Numerics.BigInteger.ModPow%2A> method evaluates the following expression:</span></span>  
  
 <span data-ttu-id="467ec-556">(baseValue ^ esponente) Modulo Mod</span><span class="sxs-lookup"><span data-stu-id="467ec-556">(baseValue ^ exponent) Mod modulus</span></span>  
  
 <span data-ttu-id="467ec-557">Per eseguire l'elevamento a potenza su <xref:System.Numerics.BigInteger> valori senza divisione del modulo, utilizzare il <xref:System.Numerics.BigInteger.Pow%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-557">To perform exponentiation on <xref:System.Numerics.BigInteger> values without modulus division, use the <xref:System.Numerics.BigInteger.Pow%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-558">Nell'esempio seguente viene illustrato questo concetto di chiamata di <xref:System.Numerics.BigInteger.ModPow%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-558">The following example provides a simple illustration of calling the <xref:System.Numerics.BigInteger.ModPow%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/cs/ModPow1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/vb/ModPow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="467ec-559"><paramref name="modulus" /> è zero.</span><span class="sxs-lookup"><span data-stu-id="467ec-559"><paramref name="modulus" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="467ec-560"><paramref name="exponent" /> è negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-560"><paramref name="exponent" /> is negative.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Multiply (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Multiply(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-561">Primo numero da moltiplicare.</span><span class="sxs-lookup"><span data-stu-id="467ec-561">The first number to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-562">Secondo numero da moltiplicare.</span><span class="sxs-lookup"><span data-stu-id="467ec-562">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="467ec-563">Restituisce il prodotto di due valori <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-563">Returns the product of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="467ec-564">Prodotto dei parametri <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-564">The product of the <paramref name="left" /> and <paramref name="right" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-565">Il <xref:System.Numerics.BigInteger.Multiply%2A> metodo viene implementato per lingue che non supportano l'overload degli operatori.</span><span class="sxs-lookup"><span data-stu-id="467ec-565">The <xref:System.Numerics.BigInteger.Multiply%2A> method is implemented for languages that do not support operator overloading.</span></span> <span data-ttu-id="467ec-566">Il comportamento è identico alla moltiplicazione utilizzando l'operatore di moltiplicazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-566">Its behavior is identical to multiplication using the multiplication operator.</span></span> <span data-ttu-id="467ec-567">Inoltre, il <xref:System.Numerics.BigInteger.Multiply%2A> metodo è un sostituto utile per l'operatore di moltiplicazione quando si crea un <xref:System.Numerics.BigInteger> variabile mediante l'assegnazione di un prodotto risultante dalla moltiplicazione, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-567">In addition, the <xref:System.Numerics.BigInteger.Multiply%2A> method is a useful substitute for the multiplication operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a product that results from multiplication, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#1)]  
  
 <span data-ttu-id="467ec-568">Se necessario, questo metodo esegue automaticamente la conversione implicita di altri tipi integrali a <xref:System.Numerics.BigInteger> oggetti.</span><span class="sxs-lookup"><span data-stu-id="467ec-568">If necessary, this method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="467ec-569">Come illustrato nell'esempio nella sezione successiva, in cui il <xref:System.Numerics.BigInteger.Multiply%2A> metodo vengono passati due <xref:System.Int64> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-569">This is illustrated in the example in the next section, where the <xref:System.Numerics.BigInteger.Multiply%2A> method is passed two <xref:System.Int64> values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-570">Nell'esempio seguente tenta di eseguire la moltiplicazione con due valori long integer.</span><span class="sxs-lookup"><span data-stu-id="467ec-570">The following example tries to perform multiplication with two long integers.</span></span> <span data-ttu-id="467ec-571">Poiché il risultato supera l'intervallo di un valore long integer, un <xref:System.OverflowException> viene generata e <xref:System.Numerics.BigInteger.Multiply%2A> metodo viene chiamato per gestire la moltiplicazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-571">Because the result exceeds the range of a long integer, an <xref:System.OverflowException> is thrown, and the <xref:System.Numerics.BigInteger.Multiply%2A> method is called to handle the multiplication.</span></span> <span data-ttu-id="467ec-572">Si noti che in c# è necessario che si utilizzi il `checked` (parola chiave) (come in questo esempio) o `/checked+` opzione del compilatore per assicurarsi che venga generata un'eccezione in una condizione di overflow numerico.</span><span class="sxs-lookup"><span data-stu-id="467ec-572">Note that C# requires that you use either the `checked` keyword (as in this example) or the `/checked+` compiler option to make sure an exception is thrown on a numeric overflow.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#7)]
 [!code-vb[System.Numeric.BigInteger.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Negate (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Negate(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Negate(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-573">Valore da negare.</span><span class="sxs-lookup"><span data-stu-id="467ec-573">The value to negate.</span></span></param>
        <summary><span data-ttu-id="467ec-574">Nega un valore <see cref="T:System.Numerics.BigInteger" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-574">Negates a specified <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-575">Risultato del parametro <paramref name="value" /> moltiplicato per il valore uno negativo (-1).</span><span class="sxs-lookup"><span data-stu-id="467ec-575">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-576">Negazione ottiene l'inverso additivo di un numero.</span><span class="sxs-lookup"><span data-stu-id="467ec-576">Negation obtains the additive inverse of a number.</span></span> <span data-ttu-id="467ec-577">L'inverso additivo di un numero è un numero che produce un valore pari a zero quando viene aggiunto al numero originale.</span><span class="sxs-lookup"><span data-stu-id="467ec-577">The additive inverse of a number is a number that produces a value of zero when it is added to the original number.</span></span>  
  
 <span data-ttu-id="467ec-578">Il <xref:System.Numerics.BigInteger.Negate%2A> metodo viene implementato per lingue che non supportano gli operatori personalizzati.</span><span class="sxs-lookup"><span data-stu-id="467ec-578">The <xref:System.Numerics.BigInteger.Negate%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="467ec-579">Il comportamento è identico alla negazione utilizzando l'operatore di negazione unario.</span><span class="sxs-lookup"><span data-stu-id="467ec-579">Its behavior is identical to negation using the unary negation operator.</span></span> <span data-ttu-id="467ec-580">Inoltre, il <xref:System.Numerics.BigInteger.Negate%2A> metodo è un sostituto utile per l'operatore di negazione quando si crea un <xref:System.Numerics.BigInteger> variabile, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-580">In addition, the <xref:System.Numerics.BigInteger.Negate%2A> method is a useful substitute for the negation operator when instantiating a <xref:System.Numerics.BigInteger> variable, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="467ec-581">L'esempio seguente illustra i tre modi per negare il valore di un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-581">The following example illustrates three ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger One { System::Numerics::BigInteger get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467ec-582">Ottiene un valore che rappresenta il numero uno (1).</span><span class="sxs-lookup"><span data-stu-id="467ec-582">Gets a value that represents the number one (1).</span></span></summary>
        <value><span data-ttu-id="467ec-583">Oggetto il cui valore è il numero uno (1).</span><span class="sxs-lookup"><span data-stu-id="467ec-583">An object whose value is one (1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-584">Il <xref:System.Numerics.BigInteger.One%2A> proprietà viene in genere utilizzata per confrontare un <xref:System.Numerics.BigInteger> il valore su 1 o 1 per assegnare un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-584">The <xref:System.Numerics.BigInteger.One%2A> property is usually used to compare a <xref:System.Numerics.BigInteger> value to 1 or to assign 1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
        <altmember cref="P:System.Numerics.BigInteger.MinusOne" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Addition(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-585">Primo valore da sommare.</span><span class="sxs-lookup"><span data-stu-id="467ec-585">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-586">Secondo valore da sommare.</span><span class="sxs-lookup"><span data-stu-id="467ec-586">The second value to add.</span></span></param>
        <summary><span data-ttu-id="467ec-587">Somma i valori di due oggetti <see cref="T:System.Numerics.BigInteger" /> specificati.</span><span class="sxs-lookup"><span data-stu-id="467ec-587">Adds the values of two specified <see cref="T:System.Numerics.BigInteger" /> objects.</span></span></summary>
        <returns><span data-ttu-id="467ec-588">Somma di <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-588">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-589">Il <xref:System.Numerics.BigInteger.op_Addition%2A> metodo definisce l'operazione di addizione per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-589">The <xref:System.Numerics.BigInteger.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-590">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-590">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#12)]
 [!code-vb[System.Numeric.BigInteger.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#12)]  
  
 <span data-ttu-id="467ec-591">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Add%2A> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-591">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Add%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &amp; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseAnd(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &amp;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-592">Primo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-592">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-593">Secondo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-593">The second value.</span></span></param>
        <summary><span data-ttu-id="467ec-594">Esegue un'operazione <see langword="And" /> bit per bit su due valori <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-594">Performs a bitwise <see langword="And" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="467ec-595">Risultato dell'operazione <see langword="And" /> bit per bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-595">The result of the bitwise <see langword="And" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-596">Il <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> metodo definisce bit per bit `And` operazione per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-596">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-597">Bit per bit `And` operazione imposta un bit di risultato solo se i bit corrispondenti `left` e `right` impostati anche, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-597">The bitwise `And` operation sets a result bit only if the corresponding bits in `left` and `right` are also set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="467ec-598">Bit in `left`</span><span class="sxs-lookup"><span data-stu-id="467ec-598">Bit in `left`</span></span>|<span data-ttu-id="467ec-599">Bit in `right`</span><span class="sxs-lookup"><span data-stu-id="467ec-599">Bit in `right`</span></span>|<span data-ttu-id="467ec-600">Bit nel risultato</span><span class="sxs-lookup"><span data-stu-id="467ec-600">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="467ec-601">0</span><span class="sxs-lookup"><span data-stu-id="467ec-601">0</span></span>|<span data-ttu-id="467ec-602">0</span><span class="sxs-lookup"><span data-stu-id="467ec-602">0</span></span>|<span data-ttu-id="467ec-603">0</span><span class="sxs-lookup"><span data-stu-id="467ec-603">0</span></span>|  
|<span data-ttu-id="467ec-604">1</span><span class="sxs-lookup"><span data-stu-id="467ec-604">1</span></span>|<span data-ttu-id="467ec-605">0</span><span class="sxs-lookup"><span data-stu-id="467ec-605">0</span></span>|<span data-ttu-id="467ec-606">0</span><span class="sxs-lookup"><span data-stu-id="467ec-606">0</span></span>|  
|<span data-ttu-id="467ec-607">1</span><span class="sxs-lookup"><span data-stu-id="467ec-607">1</span></span>|<span data-ttu-id="467ec-608">1</span><span class="sxs-lookup"><span data-stu-id="467ec-608">1</span></span>|<span data-ttu-id="467ec-609">1</span><span class="sxs-lookup"><span data-stu-id="467ec-609">1</span></span>|  
|<span data-ttu-id="467ec-610">0</span><span class="sxs-lookup"><span data-stu-id="467ec-610">0</span></span>|<span data-ttu-id="467ec-611">1</span><span class="sxs-lookup"><span data-stu-id="467ec-611">1</span></span>|<span data-ttu-id="467ec-612">0</span><span class="sxs-lookup"><span data-stu-id="467ec-612">0</span></span>|  
  
 <span data-ttu-id="467ec-613">Il <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> metodo consente al codice simile al seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-613">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#1)]  
  
 <span data-ttu-id="467ec-614">Il <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> bit per bit esegue `And` operazione su due <xref:System.Numerics.BigInteger> valori come se fossero entrambi nella rappresentazione in complemento a due con l'estensione del segno virtuale.</span><span class="sxs-lookup"><span data-stu-id="467ec-614">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method performs the bitwise `And` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator | (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator |(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-615">Primo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-615">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-616">Secondo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-616">The second value.</span></span></param>
        <summary><span data-ttu-id="467ec-617">Esegue un'operazione <see langword="Or" /> bit per bit su due valori <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-617">Performs a bitwise <see langword="Or" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="467ec-618">Risultato dell'operazione <see langword="Or" /> bit per bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-618">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-619">Il <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> metodo definisce bit per bit `Or` operazione per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-619">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-620">Bit per bit `Or` operazione imposta un bit di risultato solo se uno o entrambi i bit corrispondenti in `left` e `right` sono impostate, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-620">The bitwise `Or` operation sets a result bit only if either or both of the corresponding bits in `left` and `right` are set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="467ec-621">Bit in `left`</span><span class="sxs-lookup"><span data-stu-id="467ec-621">Bit in `left`</span></span>|<span data-ttu-id="467ec-622">Bit in `right`</span><span class="sxs-lookup"><span data-stu-id="467ec-622">Bit in `right`</span></span>|<span data-ttu-id="467ec-623">Bit nel risultato</span><span class="sxs-lookup"><span data-stu-id="467ec-623">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="467ec-624">0</span><span class="sxs-lookup"><span data-stu-id="467ec-624">0</span></span>|<span data-ttu-id="467ec-625">0</span><span class="sxs-lookup"><span data-stu-id="467ec-625">0</span></span>|<span data-ttu-id="467ec-626">0</span><span class="sxs-lookup"><span data-stu-id="467ec-626">0</span></span>|  
|<span data-ttu-id="467ec-627">1</span><span class="sxs-lookup"><span data-stu-id="467ec-627">1</span></span>|<span data-ttu-id="467ec-628">0</span><span class="sxs-lookup"><span data-stu-id="467ec-628">0</span></span>|<span data-ttu-id="467ec-629">1</span><span class="sxs-lookup"><span data-stu-id="467ec-629">1</span></span>|  
|<span data-ttu-id="467ec-630">1</span><span class="sxs-lookup"><span data-stu-id="467ec-630">1</span></span>|<span data-ttu-id="467ec-631">1</span><span class="sxs-lookup"><span data-stu-id="467ec-631">1</span></span>|<span data-ttu-id="467ec-632">1</span><span class="sxs-lookup"><span data-stu-id="467ec-632">1</span></span>|  
|<span data-ttu-id="467ec-633">0</span><span class="sxs-lookup"><span data-stu-id="467ec-633">0</span></span>|<span data-ttu-id="467ec-634">1</span><span class="sxs-lookup"><span data-stu-id="467ec-634">1</span></span>|<span data-ttu-id="467ec-635">1</span><span class="sxs-lookup"><span data-stu-id="467ec-635">1</span></span>|  
  
 <span data-ttu-id="467ec-636">Il <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> metodo consente al codice simile al seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-636">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#2)]  
  
 <span data-ttu-id="467ec-637">Il <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> bit per bit esegue `Or` operazione su due <xref:System.Numerics.BigInteger> valori come se fossero entrambi nella rappresentazione in complemento a due con l'estensione del segno virtuale.</span><span class="sxs-lookup"><span data-stu-id="467ec-637">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method performs the bitwise `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator -- (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Decrement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator --(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-638">Valore da decrementare.</span><span class="sxs-lookup"><span data-stu-id="467ec-638">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="467ec-639">Decrementa un valore <see cref="T:System.Numerics.BigInteger" /> di 1.</span><span class="sxs-lookup"><span data-stu-id="467ec-639">Decrements a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="467ec-640">Valore del parametro <paramref name="value" /> decrementato di 1.</span><span class="sxs-lookup"><span data-stu-id="467ec-640">The value of the <paramref name="value" /> parameter decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-641">Il <xref:System.Numerics.BigInteger.op_Decrement%2A> metodo definisce l'operazione di decremento per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-641">The <xref:System.Numerics.BigInteger.op_Decrement%2A> method defines the decrement operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-642">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-642">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#17)]  
  
 <span data-ttu-id="467ec-643">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Subtract%2A> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-643">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A> method instead.</span></span> <span data-ttu-id="467ec-644">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="467ec-644">For example:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#3)]  
  
 <span data-ttu-id="467ec-645">Perché <xref:System.Numerics.BigInteger> oggetti non sono modificabili, il <xref:System.Numerics.BigInteger.op_Decrement%2A> operatore crea un nuovo <xref:System.Numerics.BigInteger> oggetto il cui valore è inferiore a quello di <xref:System.Numerics.BigInteger> oggetto rappresentato dal `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-645">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Decrement%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one less than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="467ec-646">Ciò significa che le chiamate ripetute a <xref:System.Numerics.BigInteger.op_Decrement%2A> potrebbero essere costose.</span><span class="sxs-lookup"><span data-stu-id="467ec-646">This means that repeated calls to <xref:System.Numerics.BigInteger.op_Decrement%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="467ec-647">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-647">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator / (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Division(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator /(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="467ec-648">Valore da dividere.</span><span class="sxs-lookup"><span data-stu-id="467ec-648">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="467ec-649">Valore per cui dividere.</span><span class="sxs-lookup"><span data-stu-id="467ec-649">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="467ec-650">Divide un valore <see cref="T:System.Numerics.BigInteger" /> specificato per un altro valore <see cref="T:System.Numerics.BigInteger" /> specificato tramite una divisione intera.</span><span class="sxs-lookup"><span data-stu-id="467ec-650">Divides a specified <see cref="T:System.Numerics.BigInteger" /> value by another specified <see cref="T:System.Numerics.BigInteger" /> value by using integer division.</span></span></summary>
        <returns><span data-ttu-id="467ec-651">Risultato integrale della divisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-651">The integral result of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-652">Il <xref:System.Numerics.BigInteger.op_Division%2A> metodo definisce l'operazione di divisione per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-652">The <xref:System.Numerics.BigInteger.op_Division%2A> method defines the division operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-653">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-653">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#13)]
 [!code-vb[System.Numeric.BigInteger.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#13)]  
  
 <span data-ttu-id="467ec-654">Le lingue che non supportano gli operatori personalizzati e l'overload degli operatori è possono chiamare il <xref:System.Numerics.BigInteger.Divide%2A> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-654">Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.BigInteger.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="467ec-655">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="467ec-655">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="467ec-656">L'esempio seguente crea una matrice di <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-656">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-657">Ogni elemento viene quindi utilizzato come quoziente in un'operazione di divisione che utilizza il <xref:System.Numerics.BigInteger.Divide%2A> (metodo), l'operatore di divisione (/) e <xref:System.Numerics.BigInteger.DivRem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-657">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="467ec-658"><paramref name="divisor" /> è 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="467ec-658"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Equality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-659">Restituisce un valore che indica se due valori sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-659">Returns a value that indicates whether two values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(long left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-660">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-660">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-661">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-661">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-662">Restituisce un valore che indica se un valore Signed Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-662">Returns a value that indicates whether a signed long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-663"><see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-663"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-664">Il <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> metodo definisce l'operazione di confronto di uguaglianza per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-664">The <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-665">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-665">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#4)]  
  
 <span data-ttu-id="467ec-666">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> metodo dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="467ec-666">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="467ec-667">Se `left` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-667">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-668">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-668">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-669">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-669">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-670">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-670">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-671">Restituisce un valore che indica se un valore Signed Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-671">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a signed long integer value are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-672"><see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-672"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-673">Il <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> metodo definisce l'operazione di confronto di uguaglianza per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-673">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-674">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-674">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#5)]  
  
 <span data-ttu-id="467ec-675">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> metodo dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="467ec-675">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="467ec-676">Se `right` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-676">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-677">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-677">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-678">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-678">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-679">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-679">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-680">Restituisce un valore che indica se i valori di due oggetti <see cref="T:System.Numerics.BigInteger" /> sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-680">Returns a value that indicates whether the values of two <see cref="T:System.Numerics.BigInteger" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-681"><see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-681"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-682">Il <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> metodo definisce il funzionamento dell'operatore di uguaglianza per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-682">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method defines the operation of the equality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-683">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-683">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#19)]
 [!code-vb[System.Numeric.BigInteger.Class#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#19)]  
  
 <span data-ttu-id="467ec-684">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> metodo dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="467ec-684">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="467ec-685">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-685">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.Equals" />
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-686">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-686">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-687">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-687">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-688">Restituisce un valore che indica se un valore Unsigned Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-688">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and an unsigned long integer value are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-689"><see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-689"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-690">Il <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> metodo definisce l'operazione di confronto di uguaglianza per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-690">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-691">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-691">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#6)]  
  
 <span data-ttu-id="467ec-692">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> metodo dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="467ec-692">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-693">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-693">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-694">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-694">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-695">Restituisce un valore che indica se un valore Unsigned Long Integer e un valore <see cref="T:System.Numerics.BigInteger" /> sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-695">Returns a value that indicates whether an unsigned long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-696"><see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> presentano lo stesso valore; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-696"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-697">Il <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> metodo definisce l'operazione di confronto di uguaglianza per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-697">The <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-698">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-698">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#7)]
 [!code-vb[System.Numerics.BigInteger.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#7)]  
  
 <span data-ttu-id="467ec-699">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> metodo dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="467ec-699">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ^ (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_ExclusiveOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ^(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-700">Primo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-700">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-701">Secondo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-701">The second value.</span></span></param>
        <summary><span data-ttu-id="467ec-702">Esegue un'operazione <see langword="Or" /> (<see langword="XOr" />) bit per bit esclusiva su due valori <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-702">Performs a bitwise exclusive <see langword="Or" /> (<see langword="XOr" />) operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="467ec-703">Risultato dell'operazione <see langword="Or" /> bit per bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-703">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-704">Il risultato di un bit per bit esclusivo `Or` operazione `true` se i valori dei due bit sono diversi; in caso contrario, è `false`.</span><span class="sxs-lookup"><span data-stu-id="467ec-704">The result of a bitwise exclusive `Or` operation is `true` if the values of the two bits are different; otherwise, it is `false`.</span></span> <span data-ttu-id="467ec-705">Nella tabella seguente viene illustrato il blocco esclusivo `Or` operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-705">The following table illustrates the exclusive `Or` operation.</span></span>  
  
|<span data-ttu-id="467ec-706">Bit x `left`</span><span class="sxs-lookup"><span data-stu-id="467ec-706">Bit x in `left`</span></span>|<span data-ttu-id="467ec-707">Bit x `right`</span><span class="sxs-lookup"><span data-stu-id="467ec-707">Bit x in `right`</span></span>|<span data-ttu-id="467ec-708">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="467ec-708">Return value</span></span>|  
|---------------------|----------------------|------------------|  
|<span data-ttu-id="467ec-709">0</span><span class="sxs-lookup"><span data-stu-id="467ec-709">0</span></span>|<span data-ttu-id="467ec-710">0</span><span class="sxs-lookup"><span data-stu-id="467ec-710">0</span></span>|<span data-ttu-id="467ec-711">0</span><span class="sxs-lookup"><span data-stu-id="467ec-711">0</span></span>|  
|<span data-ttu-id="467ec-712">0</span><span class="sxs-lookup"><span data-stu-id="467ec-712">0</span></span>|<span data-ttu-id="467ec-713">1</span><span class="sxs-lookup"><span data-stu-id="467ec-713">1</span></span>|<span data-ttu-id="467ec-714">1</span><span class="sxs-lookup"><span data-stu-id="467ec-714">1</span></span>|  
|<span data-ttu-id="467ec-715">1</span><span class="sxs-lookup"><span data-stu-id="467ec-715">1</span></span>|<span data-ttu-id="467ec-716">0</span><span class="sxs-lookup"><span data-stu-id="467ec-716">0</span></span>|<span data-ttu-id="467ec-717">1</span><span class="sxs-lookup"><span data-stu-id="467ec-717">1</span></span>|  
|<span data-ttu-id="467ec-718">1</span><span class="sxs-lookup"><span data-stu-id="467ec-718">1</span></span>|<span data-ttu-id="467ec-719">1</span><span class="sxs-lookup"><span data-stu-id="467ec-719">1</span></span>|<span data-ttu-id="467ec-720">0</span><span class="sxs-lookup"><span data-stu-id="467ec-720">0</span></span>|  
  
 <span data-ttu-id="467ec-721">Il <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> metodo consente al codice simile al seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-721">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#8)]
 [!code-vb[System.Numerics.BigInteger.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#8)]  
  
 <span data-ttu-id="467ec-722">Il <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> esclusivo bit per bit esegue `Or` operazione su due <xref:System.Numerics.BigInteger> valori come se fossero entrambi nella rappresentazione in complemento a due con l'estensione del segno virtuale.</span><span class="sxs-lookup"><span data-stu-id="467ec-722">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method performs the bitwise exclusive `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-723">Definisce una conversione esplicita tra un oggetto <see cref="T:System.Numerics.BigInteger" /> e un altro tipo.</span><span class="sxs-lookup"><span data-stu-id="467ec-723">Defines an explicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-724">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-724">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-725">Definisce una conversione esplicita di un oggetto <see cref="T:System.Decimal" /> in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-725">Defines an explicit conversion of a <see cref="T:System.Decimal" /> object to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-726">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-726">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-727">Eventuale parte frazionaria di `value` parametro viene troncato prima della conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-727">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="467ec-728">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-728">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-729">Poiché la conversione da <xref:System.Decimal> a <xref:System.Numerics.BigInteger> può coinvolgere il troncamento di una parte frazionaria di `value`, i compilatori di linguaggio non eseguono questa conversione automaticamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-729">Because the conversion from <xref:System.Decimal> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="467ec-730">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-730">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-731">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-731">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="467ec-732">Per le lingue che non supportano gli operatori personalizzati, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-732">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="467ec-733">Nell'esempio seguente converte i singoli elementi in una matrice di <xref:System.Decimal> valori <xref:System.Numerics.BigInteger> oggetti e quindi Visualizza il risultato di ogni conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-733">The following example converts the individual elements in an array of <xref:System.Decimal> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="467ec-734">Si noti che qualsiasi frazionari fa parte di un <xref:System.Decimal> valore viene troncato durante la conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-734">Note that any fractional part of a <xref:System.Decimal> value is truncated during the conversion.</span></span>   

 [!code-csharp[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#1)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-735">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-735">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-736">Definisce una conversione esplicita di un valore <see cref="T:System.Double" /> in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-736">Defines an explicit conversion of a <see cref="T:System.Double" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-737">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-737">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-738">Eventuale parte frazionaria di `value` parametro viene troncato prima della conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-738">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="467ec-739">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-739">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-740">Poiché la conversione da <xref:System.Double> a <xref:System.Numerics.BigInteger> può coinvolgere il troncamento di una parte frazionaria di `value`, i compilatori di linguaggio non eseguono questa conversione automaticamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-740">Because the conversion from <xref:System.Double> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="467ec-741">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-741">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-742">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-742">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="467ec-743">Per le lingue che non supportano gli operatori personalizzati, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-743">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="467ec-744">Nell'esempio seguente converte i singoli elementi in una matrice di <xref:System.Double> valori <xref:System.Numerics.BigInteger> oggetti e quindi Visualizza il risultato di ogni conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-744">The following example converts the individual elements in an array of <xref:System.Double> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="467ec-745">Si noti che qualsiasi frazionari fa parte di un <xref:System.Double> valore viene troncato durante la conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-745">Note that any fractional part of a <xref:System.Double> value is truncated during the conversion.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#2)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-746">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-746">The value of <paramref name="value" /> is <see cref="F:System.Double.NaN" />.</span></span>  
  
 <span data-ttu-id="467ec-747">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-747">-or-</span></span>  
  
 <span data-ttu-id="467ec-748">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-748">The value of <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span></span>
  
 <span data-ttu-id="467ec-749">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-749">-or-</span></span>  
  
 <span data-ttu-id="467ec-750">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-750">The value of <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-751">Valore da convertire in un <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-751">The value to convert to a <see cref="T:System.Byte" />.</span></span></param>
        <summary><span data-ttu-id="467ec-752">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore byte senza segno.</span><span class="sxs-lookup"><span data-stu-id="467ec-752">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned byte value.</span></span></summary>
        <returns><span data-ttu-id="467ec-753">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-753">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-754">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-754">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-755">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-755">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="467ec-756">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CByte` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-756">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CByte` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-757">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-757">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="467ec-758">Poiché questa operazione definisce una conversione di narrowing, può generare un <xref:System.OverflowException> in fase di esecuzione se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Byte> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-758">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span> <span data-ttu-id="467ec-759">Senza perdita di precisione nella finestra di <xref:System.Byte> valore se la conversione ha esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-759">There is no loss of precision in the resulting <xref:System.Byte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="467ec-760">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.Byte> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-760">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Byte> values.</span></span> <span data-ttu-id="467ec-761">Gestisce inoltre un <xref:System.OverflowException> che viene generata perché il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Byte> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-761">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-762">Il valore di <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-762">The value of <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />.</span></span>  
  
 <span data-ttu-id="467ec-763">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-763">-or-</span></span>  
  
 <span data-ttu-id="467ec-764">Il valore di <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-764">The value of <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-765">Valore da convertire in un <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-765">The value to convert to a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="467ec-766">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-766">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-767">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-767">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-768">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-768">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-769">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-769">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="467ec-770">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CDec` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-770">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDec` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="467ec-771">Poiché questa operazione definisce una conversione di narrowing, può generare un <xref:System.OverflowException> in fase di esecuzione se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Decimal> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-771">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span> 

## Examples
 <span data-ttu-id="467ec-772">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.Decimal> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-772">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Decimal> values.</span></span> <span data-ttu-id="467ec-773">Gestisce inoltre un <xref:System.OverflowException> che viene generata perché il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Decimal> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-773">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-774">Il valore di <paramref name="value" /> è minore di <see cref="F:System.Decimal.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-774">The value of <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
 <span data-ttu-id="467ec-775">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-775">-or-</span></span>  
  
 <span data-ttu-id="467ec-776">Il valore di <paramref name="value" /> è maggiore di <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-776">The value of <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-777">Valore da convertire in un <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-777">The value to convert to a <see cref="T:System.Double" />.</span></span></param>
        <summary><span data-ttu-id="467ec-778">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-778">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Double" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-779">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-779">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-780">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-780">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-781">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-781">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="467ec-782">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CDbl` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-782">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDbl` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="467ec-783">Poiché il <xref:System.Numerics.BigInteger> valore può essere compreso nell'intervallo del <xref:System.Double> del tipo di dati, questa operazione è una conversione di narrowing.</span><span class="sxs-lookup"><span data-stu-id="467ec-783">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Double> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="467ec-784">Se la conversione non riesce, non viene generato un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-784">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="467ec-785">In alternativa, se il <xref:System.Numerics.BigInteger> valore è minore di <xref:System.Double.MinValue?displayProperty=nameWithType>, risultante <xref:System.Double> valore <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-785">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Double.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="467ec-786">Se il <xref:System.Numerics.BigInteger> valore è maggiore di <xref:System.Double.MaxValue?displayProperty=nameWithType>, il valore risultante <xref:System.Double> valore <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-786">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span>
 
 <span data-ttu-id="467ec-787">La conversione di un <xref:System.Numerics.BigInteger> per un <xref:System.Double> può comportare una perdita di precisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-787">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Double> may involve a loss of precision.</span></span> <span data-ttu-id="467ec-788">In alcuni casi, la perdita di precisione può causare l'operazione di cast o conversione abbia esito positivo anche se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Double> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-788">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Double> data type.</span></span> <span data-ttu-id="467ec-789">Nell'esempio seguente viene illustrato questo concetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-789">The following example provides an illustration.</span></span> <span data-ttu-id="467ec-790">Assegna il valore massimo di un <xref:System.Double> a due <xref:System.Numerics.BigInteger> variabili, incrementa una <xref:System.Numerics.BigInteger> variabile 9.999 e291 e verifica l'uguaglianza di due variabili.</span><span class="sxs-lookup"><span data-stu-id="467ec-790">It assigns the maximum value of a <xref:System.Double> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="467ec-791">Come previsto, la chiamata al <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> metodo mostra che non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-791">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="467ec-792">Tuttavia, la conversione del più ampio <xref:System.Numerics.BigInteger> valore su un <xref:System.Double> ha esito positivo, anche se il <xref:System.Numerics.BigInteger> valore ora supera <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-792">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Double> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#4)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#4)]   



## Examples
 <span data-ttu-id="467ec-793">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-793">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Double> values.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-794">Valore da convertire in un intero con segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-794">The value to convert to a 16-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="467ec-795">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore Signed Integer a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-795">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 16-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="467ec-796">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-796">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-797">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-797">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-798">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-798">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="467ec-799">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CShort` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-799">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CShort` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-800">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-800">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="467ec-801">Poiché questa operazione definisce una conversione di narrowing, può generare un <xref:System.OverflowException> in fase di esecuzione se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Int16> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-801">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span> <span data-ttu-id="467ec-802">Senza perdita di precisione nella finestra di <xref:System.Int16> valore se la conversione ha esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-802">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="467ec-803">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.Int16> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-803">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int16> values.</span></span> <span data-ttu-id="467ec-804">Gestisce inoltre un <xref:System.OverflowException> che viene generata perché il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Int16> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-804">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-805">Il valore di <paramref name="value" /> è minore di <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-805">The value of <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" />.</span></span>  
  
 <span data-ttu-id="467ec-806">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-806">-or-</span></span>  
  
 <span data-ttu-id="467ec-807">Il valore di <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-807">The value of <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-808">Valore da convertire in un intero con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-808">The value to convert to a 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="467ec-809">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-809">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 32-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="467ec-810">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-810">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-811">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-811">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-812">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-812">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="467ec-813">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CInt` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-813">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CInt` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-814">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-814">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="467ec-815">Poiché questa operazione definisce una conversione di narrowing, può generare un <xref:System.OverflowException> in fase di esecuzione se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Int32> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-815">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="467ec-816">Senza perdita di precisione nella finestra di <xref:System.Int16> valore se la conversione ha esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-816">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="467ec-817">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.Int32> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-817">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int32> values.</span></span> <span data-ttu-id="467ec-818">Gestisce inoltre un <xref:System.OverflowException> che viene generata perché il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Int32> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-818">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#5)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-819">Il valore di <paramref name="value" /> è minore di <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-819">The value of <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" />.</span></span>  
  
 <span data-ttu-id="467ec-820">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-820">-or-</span></span>  
  
 <span data-ttu-id="467ec-821">Il valore di <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-821">The value of <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-822">Valore da convertire in un intero con segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-822">The value to convert to a 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="467ec-823">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero con segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-823">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="467ec-824">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-824">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-825">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-825">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-826">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-826">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="467ec-827">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CLng` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-827">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CLng` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-828">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-828">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="467ec-829">Poiché questa operazione definisce una conversione di narrowing, può generare un <xref:System.OverflowException> in fase di esecuzione se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Int64> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-829">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span> 

## Examples
 <span data-ttu-id="467ec-830">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.Int64> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-830">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int64> values.</span></span> <span data-ttu-id="467ec-831">Gestisce inoltre un <xref:System.OverflowException> che viene generata perché il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Int64> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-831">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#6)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-832">Il valore di <paramref name="value" /> è minore di <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-832">The value of <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" />.</span></span>  
  
 <span data-ttu-id="467ec-833">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-833">-or-</span></span>  
  
 <span data-ttu-id="467ec-834">Il valore di <paramref name="value" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-834">The value of <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-835">Valore da convertire in un valore con segno a 8 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-835">The value to convert to a signed 8-bit value.</span></span></param>
        <summary><span data-ttu-id="467ec-836">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore a 8 bit con segno.</span><span class="sxs-lookup"><span data-stu-id="467ec-836">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a signed 8-bit value.</span></span>  
  
 <span data-ttu-id="467ec-837">Questa API non è conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="467ec-837">This API is not CLS-compliant.</span></span> <span data-ttu-id="467ec-838">L'alternativa conforme è <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-838">The compliant alternative is <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="467ec-839">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-839">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-840">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-840">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-841">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-841">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="467ec-842">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CSByte` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-842">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSByte` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-843">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-843">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="467ec-844">Poiché questa operazione definisce una conversione di narrowing, può generare un <xref:System.OverflowException> in fase di esecuzione se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.SByte> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-844">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span> <span data-ttu-id="467ec-845">Senza perdita di precisione nella finestra di <xref:System.SByte> valore se la conversione ha esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-845">There is no loss of precision in the resulting <xref:System.SByte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="467ec-846">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.SByte> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-846">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.SByte> values.</span></span> <span data-ttu-id="467ec-847">Gestisce inoltre un <xref:System.OverflowException> che viene generata perché il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.SByte> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-847">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#7)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-848">Il valore di <paramref name="value" /> è minore di <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-848">The value of <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" />.</span></span>  
  
 <span data-ttu-id="467ec-849">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-849">-or-</span></span>  
  
 <span data-ttu-id="467ec-850">Il valore di <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-850">The value of <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-851">Valore da convertire in un valore a virgola mobile e precisione singola.</span><span class="sxs-lookup"><span data-stu-id="467ec-851">The value to convert to a single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="467ec-852">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore in virgola mobile a precisione singola.</span><span class="sxs-lookup"><span data-stu-id="467ec-852">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a single-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="467ec-853">Oggetto che contiene la rappresentazione più vicina possibile del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-853">An object that contains the closest possible representation of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-854">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-854">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-855">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati o la perdita di precisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-855">Language compilers do not perform this conversion automatically because it can involve data loss or a loss of precision.</span></span> <span data-ttu-id="467ec-856">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CSng` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-856">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSng` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-857">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-857">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="467ec-858">Poiché il <xref:System.Numerics.BigInteger> valore può essere compreso nell'intervallo del <xref:System.Single> del tipo di dati, questa operazione è una conversione di narrowing.</span><span class="sxs-lookup"><span data-stu-id="467ec-858">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Single> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="467ec-859">Se la conversione non riesce, non viene generato un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-859">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="467ec-860">In alternativa, se il <xref:System.Numerics.BigInteger> valore è minore di <xref:System.Single.MinValue?displayProperty=nameWithType>, risultante <xref:System.Single> valore <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-860">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Single.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="467ec-861">Se il <xref:System.Numerics.BigInteger> valore è maggiore di <xref:System.Single.MaxValue?displayProperty=nameWithType>, il valore risultante <xref:System.Single> valore <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-861">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Single.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="467ec-862">La conversione di un <xref:System.Numerics.BigInteger> per un <xref:System.Single> può comportare una perdita di precisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-862">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Single> may involve a loss of precision.</span></span> <span data-ttu-id="467ec-863">In alcuni casi, la perdita di precisione può causare l'operazione di cast o conversione abbia esito positivo anche se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.Single> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-863">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Single> data type.</span></span> <span data-ttu-id="467ec-864">Nell'esempio seguente viene illustrato questo concetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-864">The following example provides an illustration.</span></span> <span data-ttu-id="467ec-865">Assegna il valore massimo di un <xref:System.Single> a due <xref:System.Numerics.BigInteger> variabili, incrementa una <xref:System.Numerics.BigInteger> variabile 9.999 e291 e verifica l'uguaglianza di due variabili.</span><span class="sxs-lookup"><span data-stu-id="467ec-865">It assigns the maximum value of a <xref:System.Single> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="467ec-866">Come previsto, la chiamata al <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> metodo mostra che non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-866">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="467ec-867">Tuttavia, la conversione del più ampio <xref:System.Numerics.BigInteger> valore su un <xref:System.Single> ha esito positivo, anche se il <xref:System.Numerics.BigInteger> valore ora supera <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-867">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Single> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#5)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#5)]   



## Examples
 <span data-ttu-id="467ec-868">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.Single> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-868">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Single> values.</span></span>   
     
 [!code-csharp[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#8)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-869">Valore da convertire in un intero senza segno a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-869">The value to convert to an unsigned 16-bit integer.</span></span></param>
        <summary><span data-ttu-id="467ec-870">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore Unsigned Integer a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-870">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 16-bit integer value.</span></span>  
  
 <span data-ttu-id="467ec-871">Questa API non è conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="467ec-871">This API is not CLS-compliant.</span></span> <span data-ttu-id="467ec-872">L'alternativa conforme è <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-872">The compliant alternative is <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="467ec-873">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-873">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-874">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-874">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-875">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-875">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="467ec-876">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CUShort` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-876">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUShort` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-877">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-877">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="467ec-878">Poiché questa operazione definisce una conversione di narrowing, può generare un <xref:System.OverflowException> in fase di esecuzione se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.UInt16> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-878">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span> <span data-ttu-id="467ec-879">Senza perdita di precisione nella finestra di <xref:System.UInt16> valore se la conversione ha esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-879">There is no loss of precision in the resulting <xref:System.UInt16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="467ec-880">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.UInt16> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-880">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt16> values.</span></span> <span data-ttu-id="467ec-881">Gestisce inoltre un <xref:System.OverflowException> che viene generata perché il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.UInt16> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-881">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#9)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#9)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-882">Il valore di <paramref name="value" /> è minore di <see cref="F:System.UInt16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-882">The value of <paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" />.</span></span>  
  
 <span data-ttu-id="467ec-883">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-883">-or-</span></span>  
  
 <span data-ttu-id="467ec-884">Il valore di <paramref name="value" /> è maggiore di <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-884">The value of <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-885">Valore da convertire in un intero senza segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-885">The value to convert to an unsigned 32-bit integer.</span></span></param>
        <summary><span data-ttu-id="467ec-886">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero senza segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-886">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 32-bit integer value.</span></span>  
  
 <span data-ttu-id="467ec-887">Questa API non è conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="467ec-887">This API is not CLS-compliant.</span></span> <span data-ttu-id="467ec-888">L'alternativa conforme è <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-888">The compliant alternative is <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="467ec-889">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-889">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-890">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-890">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-891">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-891">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="467ec-892">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CUInt` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-892">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUInt` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-893">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-893">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="467ec-894">Poiché questa operazione definisce una conversione di narrowing, può generare un <xref:System.OverflowException> in fase di esecuzione se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.UInt32> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-894">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span> <span data-ttu-id="467ec-895">Senza perdita di precisione nella finestra di <xref:System.UInt32> valore se la conversione ha esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-895">There is no loss of precision in the resulting <xref:System.UInt32> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="467ec-896">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.UInt32> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-896">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt32> values.</span></span> <span data-ttu-id="467ec-897">Gestisce inoltre un <xref:System.OverflowException> che viene generata perché il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.UInt32> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-897">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#10)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#10)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-898">Il valore di <paramref name="value" /> è minore di <see cref="F:System.UInt32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-898">The value of <paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" />.</span></span>  
  
 <span data-ttu-id="467ec-899">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-899">-or-</span></span>  
  
 <span data-ttu-id="467ec-900">Il valore di <paramref name="value" /> è maggiore di <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-900">The value of <paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-901">Valore da convertire in un intero senza segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-901">The value to convert to an unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="467ec-902">Definisce una conversione esplicita di un oggetto <see cref="T:System.Numerics.BigInteger" /> in un valore intero senza segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-902">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 64-bit integer value.</span></span>  
  
 <span data-ttu-id="467ec-903">Questa API non è conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="467ec-903">This API is not CLS-compliant.</span></span> <span data-ttu-id="467ec-904">L'alternativa conforme è <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-904">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="467ec-905">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-905">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-906">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-906">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-907">I compilatori di linguaggio non eseguono questa conversione automaticamente perché può comportare la perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-907">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="467ec-908">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` o `CULng` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-908">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CULng` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-909">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-909">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="467ec-910">Poiché questa operazione definisce una conversione di narrowing, può generare un <xref:System.OverflowException> in fase di esecuzione se il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.UInt64> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-910">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span> <span data-ttu-id="467ec-911">Senza perdita di precisione nella finestra di <xref:System.UInt64> valore se la conversione ha esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-911">There is no loss of precision in the resulting <xref:System.UInt64> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="467ec-912">Nell'esempio seguente viene illustrata la conversione di <xref:System.Numerics.BigInteger> a <xref:System.UInt64> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-912">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt64> values.</span></span> <span data-ttu-id="467ec-913">Gestisce inoltre un <xref:System.OverflowException> che viene generata perché il <xref:System.Numerics.BigInteger> valore è compreso nell'intervallo del <xref:System.UInt64> tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="467ec-913">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#11)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#11)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-914">Il valore di <paramref name="value" /> è minore di <see cref="F:System.UInt64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-914">The value of <paramref name="value" /> is less than <see cref="F:System.UInt64.MinValue" />.</span></span>  
  
 <span data-ttu-id="467ec-915">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-915">-or-</span></span>  
  
 <span data-ttu-id="467ec-916">Il valore di <paramref name="value" /> è maggiore di <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-916">The value of <paramref name="value" /> is greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-917">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-917">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-918">Definisce una conversione esplicita di un valore <see cref="T:System.Single" /> in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-918">Defines an explicit conversion of a <see cref="T:System.Single" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-919">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-919">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-920">Eventuale parte frazionaria di `value` parametro viene troncato prima della conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-920">Any fractional part of the `value` parameter is truncated before conversion.</span></span>
 
 <span data-ttu-id="467ec-921">Gli overload di <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un <xref:System.Numerics.BigInteger> oggetto può essere convertito.</span><span class="sxs-lookup"><span data-stu-id="467ec-921">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="467ec-922">Poiché la conversione da <xref:System.Single> a <xref:System.Numerics.BigInteger> può coinvolgere il troncamento di una parte frazionaria di `value`, i compilatori di linguaggio non eseguono questa conversione automaticamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-922">Because the conversion from <xref:System.Single> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="467ec-923">Ma eseguono la conversione solo se un operatore di cast (in c#) o una funzione di conversione (ad esempio `CType` in Visual Basic) viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-923">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="467ec-924">In caso contrario, visualizzano un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-924">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="467ec-925">Per le lingue che non supportano gli operatori personalizzati, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-925">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="467ec-926">Nell'esempio seguente converte i singoli elementi in una matrice di <xref:System.Single> valori <xref:System.Numerics.BigInteger> oggetti e quindi Visualizza il risultato di ogni conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-926">The following example converts the individual elements in an array of <xref:System.Single> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="467ec-927">Si noti che qualsiasi frazionari fa parte di un <xref:System.Single> valore viene troncato durante la conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-927">Note that any fractional part of a <xref:System.Single> value is truncated during the conversion.</span></span>
 
 [!code-csharp[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#3)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="467ec-928">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-928">The value of <paramref name="value" /> is <see cref="F:System.Single.NaN" />.</span></span>  
  
 <span data-ttu-id="467ec-929">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-929">-or-</span></span>  
  
 <span data-ttu-id="467ec-930">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-930">The value of <paramref name="value" /> is <see cref="F:System.Single.PositiveInfinity" />.</span></span>
  
 <span data-ttu-id="467ec-931">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-931">-or-</span></span>  
  
 <span data-ttu-id="467ec-932">Il valore della proprietà <paramref name="value" /> è <see cref="F:System.Single.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-932">The value of <paramref name="value" /> is <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-933">Restituisce un valore che indica se un valore specificato è maggiore di un altro valore specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-933">Returns a value that indicates whether a specified value is greater than another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(long left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-934">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-934">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-935">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-935">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-936">Restituisce un valore che indica se un Signed Integer a 64 bit è maggiore di un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-936">Returns a value that indicates whether a 64-bit signed integer is greater than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-937"><see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-937"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-938">Il <xref:System.Numerics.BigInteger.op_GreaterThan%2A> metodo definisce il funzionamento dell'operatore per maggiore <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-938">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-939">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-939">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#9)]
 [!code-vb[System.Numerics.BigInteger.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#9)]  
  
 <span data-ttu-id="467ec-940">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> metodo dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="467ec-940">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span> <span data-ttu-id="467ec-941">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-941">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#10)]  
  
 <span data-ttu-id="467ec-942">Se `left` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-942">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-943">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-943">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-944">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-944">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-945">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-945">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-946">Restituisce un valore che indica se un <see cref="T:System.Numerics.BigInteger" /> è maggiore di un valore Signed Integer a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-946">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> is greater than a 64-bit signed integer value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-947"><see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-947"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-948">Il <xref:System.Numerics.BigInteger.op_GreaterThan%2A> metodo definisce il funzionamento dell'operatore per maggiore <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-948">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-949">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-949">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#11)]
 [!code-vb[System.Numerics.BigInteger.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#11)]  
  
 <span data-ttu-id="467ec-950">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-950">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-951">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-951">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#12)]  
  
 <span data-ttu-id="467ec-952">Se `right` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-952">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-953">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-953">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-954">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-954">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-955">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-955">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-956">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore di un altro valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-956">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-957"><see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-957"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-958">Il <xref:System.Numerics.BigInteger.op_GreaterThan%2A> metodo definisce il funzionamento dell'operatore per maggiore <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-958">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-959">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-959">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#20)]
 [!code-vb[System.Numeric.BigInteger.Class#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#20)]  
  
 <span data-ttu-id="467ec-960">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-960">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-961">È inoltre possibile chiamare il <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-961">They can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#21)]  
  
 <span data-ttu-id="467ec-962">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-962">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-963">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-963">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-964">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-964">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-965">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore di un Unsigned Integer a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-965">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-966"><see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-966"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-967">Il <xref:System.Numerics.BigInteger.op_GreaterThan%2A> metodo definisce il funzionamento dell'operatore per maggiore <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-967">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-968">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-968">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#13)]
 [!code-vb[System.Numerics.BigInteger.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#13)]  
  
 <span data-ttu-id="467ec-969">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-969">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-970">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-970">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-971">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-971">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-972">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-972">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-973">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore di un Unsigned Integer a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-973">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-974"><see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-974"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-975">Il <xref:System.Numerics.BigInteger.op_GreaterThan%2A> metodo definisce il funzionamento dell'operatore per maggiore <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-975">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-976">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-976">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#15)]
 [!code-vb[System.Numerics.BigInteger.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#15)]  
  
 <span data-ttu-id="467ec-977">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-977">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-978">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-978">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-979">Restituisce un valore che indica se un valore specificato è maggiore o uguale a un altro valore specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-979">Returns a value that indicates whether a specified value is greater than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(long left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-980">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-980">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-981">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-981">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-982">Restituisce un valore che indica se un Signed Integer a 64 bit è maggiore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-982">Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-983"><see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-983"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-984">Il <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> metodo definisce il funzionamento di maggiore di o uguale all'operatore per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-984">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-985">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-985">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#17)]
 [!code-vb[System.Numerics.BigInteger.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#17)]  
  
 <span data-ttu-id="467ec-986">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-986">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-987">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-987">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#18)]  
  
 <span data-ttu-id="467ec-988">Se `left` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-988">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-989">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-989">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-990">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-990">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-991">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-991">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-992">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore o uguale a un valore Signed Integer a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-992">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit signed integer value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-993"><see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-993"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-994">Il <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> metodo definisce il funzionamento di maggiore di o uguale all'operatore per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-994">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-995">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-995">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#19)]
 [!code-vb[System.Numerics.BigInteger.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#19)]  
  
 <span data-ttu-id="467ec-996">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-996">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-997">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-997">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#20)]  
  
 <span data-ttu-id="467ec-998">Se `right` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-998">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-999">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-999">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1000">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1000">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1001">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1001">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1002">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore o uguale a un altro valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1002">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1003"><see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1003"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1004">Il <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> metodo definisce il funzionamento di maggiore di o uguale all'operatore per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1004">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1005">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1005">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#22)]
 [!code-vb[System.Numeric.BigInteger.Class#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#22)]  
  
 <span data-ttu-id="467ec-1006">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1006">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1007">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1007">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#23)]  
  
 <span data-ttu-id="467ec-1008">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1008">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1009">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1009">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1010">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1010">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1011">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è maggiore o uguale a un valore Unsigned Integer a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-1011">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit unsigned integer value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1012"><see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1012"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1013">Il <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> metodo definisce il funzionamento di maggiore di o uguale all'operatore per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1013">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1014">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1014">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#21)]
 [!code-vb[System.Numerics.BigInteger.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#21)]  
  
 <span data-ttu-id="467ec-1015">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1015">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1016">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1016">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#22)]  
  
 <span data-ttu-id="467ec-1017">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1017">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1018">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1018">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1019">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1019">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1020">Restituisce un valore che indica se un Unsigned Integer a 64 bit è maggiore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1020">Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1021"><see langword="true" /> se <paramref name="left" /> è maggiore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1021"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1022">Il <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> metodo definisce il funzionamento di maggiore di o uguale all'operatore per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1022">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1023">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1023">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#23)]
 [!code-vb[System.Numerics.BigInteger.Operators#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#23)]  
  
 <span data-ttu-id="467ec-1024">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1024">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1025">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1025">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#24)]  
  
 <span data-ttu-id="467ec-1026">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1026">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-1027">Definisce una conversione implicita tra un oggetto <see cref="T:System.Numerics.BigInteger" /> e un altro tipo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1027">Defines an implicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1028">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1028">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-1029">Definisce una conversione implicita di un byte senza segno in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1029">Defines an implicit conversion of an unsigned byte to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-1030">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1030">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1031">Eventuale parte frazionaria di `value` parametro viene troncato prima della conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1031">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="467ec-1032">Per le lingue che non supportano operatori impliciti, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1032">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="467ec-1033">Gli overload di <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un compilatore può convertire automaticamente un <xref:System.Numerics.BigInteger> valore senza un operatore di cast esplicito (in c#) o una chiamata a una funzione di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="467ec-1033">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="467ec-1034">Essi sono di ampliamento che comporta la perdita di dati e non generano un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1034">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="467ec-1035">Questo overload consente al compilatore di gestire le conversioni da un <xref:System.Byte> valore un <xref:System.Numerics.BigInteger> valore, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1035">This overload lets the compiler handle conversions from a <xref:System.Byte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1036">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1036">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-1037">Definisce una conversione implicita di un Signed Integer a 16 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1037">Defines an implicit conversion of a signed 16-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-1038">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1038">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1039">Per le lingue che non supportano operatori impliciti, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1039">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="467ec-1040">Gli overload di <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un compilatore può convertire automaticamente un <xref:System.Numerics.BigInteger> valore senza un operatore di cast esplicito (in c#) o una chiamata a una funzione di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="467ec-1040">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="467ec-1041">Essi sono di ampliamento che comporta la perdita di dati e non generano un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1041">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="467ec-1042">Questo overload consente al compilatore di gestire le conversioni da un <xref:System.Int16> valore un <xref:System.Numerics.BigInteger> valore, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1042">This overload lets the compiler handle conversions from a <xref:System.Int16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#2)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#2)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1043">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1043">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-1044">Definisce una conversione implicita di un intero con segno a 32 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1044">Defines an implicit conversion of a signed 32-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-1045">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1045">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1046">Per le lingue che non supportano operatori impliciti, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1046">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="467ec-1047">Gli overload di <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un compilatore può convertire automaticamente un <xref:System.Numerics.BigInteger> valore senza un operatore di cast esplicito (in c#) o una chiamata a una funzione di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="467ec-1047">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="467ec-1048">Essi sono di ampliamento che comporta la perdita di dati e non generano un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1048">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="467ec-1049">Questo overload consente al compilatore di gestire le conversioni da un <xref:System.Int32> valore un <xref:System.Numerics.BigInteger> valore, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1049">This overload lets the compiler handle conversions from a <xref:System.Int32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1050">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1050">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-1051">Definisce una conversione implicita di un intero con segno a 64 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1051">Defines an implicit conversion of a signed 64-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-1052">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1052">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1053">Per le lingue che non supportano operatori impliciti, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1053">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span></span>   
 
 <span data-ttu-id="467ec-1054">Gli overload di <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un compilatore può convertire automaticamente un <xref:System.Numerics.BigInteger> valore senza un operatore di cast esplicito (in c#) o una chiamata a una funzione di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="467ec-1054">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="467ec-1055">Essi sono di ampliamento che comporta la perdita di dati e non generano un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1055">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="467ec-1056">Questo overload consente al compilatore di gestire le conversioni da un <xref:System.Int64> valore un <xref:System.Numerics.BigInteger> valore, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1056">This overload lets the compiler handle conversions from a <xref:System.Int64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#4)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1057">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1057">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-1058">Definisce una conversione implicita di un Signed Integer a 8 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1058">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
 <span data-ttu-id="467ec-1059">Questa API non è conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="467ec-1059">This API is not CLS-compliant.</span></span> <span data-ttu-id="467ec-1060">L'alternativa conforme è <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1060">The compliant alternative is <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="467ec-1061">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1061">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1062">Per le lingue che non supportano operatori impliciti, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1062">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="467ec-1063">Gli overload di <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un compilatore può convertire automaticamente un <xref:System.Numerics.BigInteger> valore senza un operatore di cast esplicito (in c#) o una chiamata a una funzione di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="467ec-1063">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="467ec-1064">Essi sono di ampliamento che comporta la perdita di dati e non generano un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1064">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="467ec-1065">Questo overload consente al compilatore di gestire le conversioni da un <xref:System.SByte> valore un <xref:System.Numerics.BigInteger> valore, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1065">This overload lets the compiler handle conversions from a <xref:System.SByte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#5)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1066">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1066">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-1067">Definisce una conversione implicita di un Unsigned Integer a 16 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1067">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
 <span data-ttu-id="467ec-1068">Questa API non è conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="467ec-1068">This API is not CLS-compliant.</span></span> <span data-ttu-id="467ec-1069">L'alternativa conforme è <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1069">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="467ec-1070">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1070">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1071">Per le lingue che non supportano operatori impliciti, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1071">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="467ec-1072">Gli overload di <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un compilatore può convertire automaticamente un <xref:System.Numerics.BigInteger> valore senza un operatore di cast esplicito (in c#) o una chiamata a una funzione di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="467ec-1072">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="467ec-1073">Essi sono di ampliamento che comporta la perdita di dati e non generano un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1073">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="467ec-1074">Questo overload consente al compilatore di gestire le conversioni da un <xref:System.UInt16> valore un <xref:System.Numerics.BigInteger> valore, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1074">This overload lets the compiler handle conversions from a <xref:System.UInt16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#6)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1075">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1075">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-1076">Definisce una conversione implicita di un intero senza segno a 32 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1076">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
 <span data-ttu-id="467ec-1077">Questa API non è conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="467ec-1077">This API is not CLS-compliant.</span></span> <span data-ttu-id="467ec-1078">L'alternativa conforme è <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1078">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="467ec-1079">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1079">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1080">Per le lingue che non supportano operatori impliciti, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1080">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="467ec-1081">Gli overload di <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un compilatore può convertire automaticamente un <xref:System.Numerics.BigInteger> valore senza un operatore di cast esplicito (in c#) o una chiamata a una funzione di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="467ec-1081">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="467ec-1082">Essi sono di ampliamento che comporta la perdita di dati e non generano un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1082">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="467ec-1083">Questo overload consente al compilatore di gestire le conversioni da un <xref:System.UInt32> valore un <xref:System.Numerics.BigInteger> valore, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1083">This overload lets the compiler handle conversions from a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#7)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1084">Valore da convertire in un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1084">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="467ec-1085">Definisce una conversione implicita di un intero senza segno a 64 bit in un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1085">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
 <span data-ttu-id="467ec-1086">Questa API non è conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="467ec-1086">This API is not CLS-compliant.</span></span> <span data-ttu-id="467ec-1087">L'alternativa conforme è <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1087">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="467ec-1088">Oggetto contenente il valore del parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1088">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1089">Per le lingue che non supportano operatori impliciti, il metodo alternativo è <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1089">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="467ec-1090">Gli overload di <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> il metodo per definire i tipi a cui o da cui un compilatore può convertire automaticamente un <xref:System.Numerics.BigInteger> valore senza un operatore di cast esplicito (in c#) o una chiamata a una funzione di conversione (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="467ec-1090">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="467ec-1091">Essi sono di ampliamento che comporta la perdita di dati e non generano un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1091">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="467ec-1092">Questo overload consente al compilatore di gestire le conversioni da un <xref:System.UInt64> valore un <xref:System.Numerics.BigInteger> valore, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1092">This overload lets the compiler handle conversions from a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#8)]   

 ]]></format>
        </remarks>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ++ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Increment(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ++(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1093">Valore da incrementare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1093">The value to increment.</span></span></param>
        <summary><span data-ttu-id="467ec-1094">Incrementa un valore <see cref="T:System.Numerics.BigInteger" /> di 1.</span><span class="sxs-lookup"><span data-stu-id="467ec-1094">Increments a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="467ec-1095">Valore del parametro <paramref name="value" /> incrementato di 1.</span><span class="sxs-lookup"><span data-stu-id="467ec-1095">The value of the <paramref name="value" /> parameter incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1096">Il <xref:System.Numerics.BigInteger.op_Increment%2A> metodo definisce l'operazione di incremento per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1096">The <xref:System.Numerics.BigInteger.op_Increment%2A> method defines the increment operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1097">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1097">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#24)]  
  
 <span data-ttu-id="467ec-1098">Alcuni linguaggi (ad esempio Visual Basic) che non dispongono di un operatore di incremento o che non supportano l'overload degli operatori possono chiamare il <xref:System.Numerics.BigInteger.op_Increment%2A> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1098">Some languages (such as Visual Basic) that lack an increment operator or do not support operator overloading can call the <xref:System.Numerics.BigInteger.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#25)]  
  
 <span data-ttu-id="467ec-1099">Poiché <xref:System.Numerics.BigInteger> oggetti non sono modificabili, il <xref:System.Numerics.BigInteger.op_Increment%2A> crea un nuovo operatore <xref:System.Numerics.BigInteger> oggetto il cui valore è uno rispetto al <xref:System.Numerics.BigInteger> oggetto rappresentato dal `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1099">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Increment%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one more than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="467ec-1100">Pertanto, le chiamate ripetute a <xref:System.Numerics.BigInteger.op_Increment%2A> potrebbero essere costose.</span><span class="sxs-lookup"><span data-stu-id="467ec-1100">Therefore, repeated calls to <xref:System.Numerics.BigInteger.op_Increment%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="467ec-1101">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1101">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Inequality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-1102">Restituisce un valore che indica se due valori numerici non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1102">Returns a value that indicates whether two numeric values are not equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(long left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1103">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1103">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1104">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1104">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1105">Restituisce un valore che indica se un Signed Integer a 64 bit e un valore <see cref="T:System.Numerics.BigInteger" /> non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1105">Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1106"><see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1106"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1107">Il <xref:System.Numerics.BigInteger.op_Inequality%2A> metodo definisce il funzionamento dell'operatore di disuguaglianza per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1107">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1108">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1108">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#25)]
 [!code-vb[System.Numerics.BigInteger.Operators#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#25)]  
  
 <span data-ttu-id="467ec-1109">Linguaggi che non supportano gli operatori personalizzati possono verificare la disuguaglianza utilizzando una delle tecniche seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1109">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="467ec-1110">La chiamata di <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> istanza metodo, che indica la relazione tra un <xref:System.Numerics.BigInteger> e un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="467ec-1110">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="467ec-1111">La chiamata di <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> dell'istanza di metodo e di inversione del relativo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1111">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method and reversing its value.</span></span>  
  
 <span data-ttu-id="467ec-1112">Se `left` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1112">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1113">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1113">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1114">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1114">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1115">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> e un Signed Integer a 64 bit non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1115">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit signed integer are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1116"><see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1116"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1117">Il <xref:System.Numerics.BigInteger.op_Inequality%2A> metodo definisce il funzionamento dell'operatore di disuguaglianza per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1117">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1118">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1118">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#26)]
 [!code-vb[System.Numerics.BigInteger.Operators#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#26)]  
  
 <span data-ttu-id="467ec-1119">Linguaggi che non supportano gli operatori personalizzati possono verificare la disuguaglianza utilizzando una delle tecniche seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1119">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="467ec-1120">La chiamata di <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> metodo, che indica la relazione tra un <xref:System.Numerics.BigInteger> e un valore long integer.</span><span class="sxs-lookup"><span data-stu-id="467ec-1120">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="467ec-1121">La chiamata di <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> (metodo) e l'inversione del relativo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1121">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="467ec-1122">Se `right` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1122">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-1123">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1123">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1124">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1124">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1125">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1125">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1126">Restituisce un valore che indica se due oggetti <see cref="T:System.Numerics.BigInteger" /> hanno valori diversi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1126">Returns a value that indicates whether two <see cref="T:System.Numerics.BigInteger" /> objects have different values.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1127"><see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1127"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1128">Il <xref:System.Numerics.BigInteger.op_Inequality%2A> metodo definisce il funzionamento dell'operatore di disuguaglianza per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1128">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1129">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1129">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#26)]
 [!code-vb[System.Numeric.BigInteger.Class#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#26)]  
  
 <span data-ttu-id="467ec-1130">Linguaggi che non supportano gli operatori personalizzati possono verificare la disuguaglianza utilizzando una delle tecniche seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1130">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="467ec-1131">La chiamata di <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> metodo, che indica la relazione tra due <xref:System.Numerics.BigInteger> oggetti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1131">Calling the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method, which indicates the relationship between two <xref:System.Numerics.BigInteger> objects.</span></span>  
  
-   <span data-ttu-id="467ec-1132">La chiamata di <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> (metodo) e l'inversione del relativo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1132">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="467ec-1133">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1133">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1134">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1134">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1135">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1135">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1136">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> e un Unsigned Integer a 64 bit non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1136">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit unsigned integer are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1137"><see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1137"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1138">Il <xref:System.Numerics.BigInteger.op_Inequality%2A> metodo definisce il funzionamento dell'operatore di disuguaglianza per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1138">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1139">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1139">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#27)]
 [!code-vb[System.Numerics.BigInteger.Operators#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#27)]  
  
 <span data-ttu-id="467ec-1140">Linguaggi che non supportano gli operatori personalizzati possono verificare la disuguaglianza utilizzando una delle tecniche seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1140">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="467ec-1141">La chiamata di <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo, che indica la relazione tra un <xref:System.Numerics.BigInteger> e un valore long integer senza segno.</span><span class="sxs-lookup"><span data-stu-id="467ec-1141">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="467ec-1142">La chiamata di <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> (metodo) e l'inversione del relativo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1142">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1143">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1143">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1144">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1144">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1145">Restituisce un valore che indica se un Unsigned Integer a 64 bit e un valore <see cref="T:System.Numerics.BigInteger" /> non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1145">Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1146"><see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1146"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1147">Il <xref:System.Numerics.BigInteger.op_Inequality%2A> metodo definisce il funzionamento dell'operatore di disuguaglianza per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1147">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1148">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1148">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#28)]
 [!code-vb[System.Numerics.BigInteger.Operators#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#28)]  
  
 <span data-ttu-id="467ec-1149">Linguaggi che non supportano gli operatori personalizzati possono verificare la disuguaglianza utilizzando una delle tecniche seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1149">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="467ec-1150">La chiamata di <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo, che indica la relazione tra un <xref:System.Numerics.BigInteger> e un valore long integer senza segno.</span><span class="sxs-lookup"><span data-stu-id="467ec-1150">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="467ec-1151">La chiamata di <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> (metodo) e l'inversione del relativo valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1151">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_LeftShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &lt;&lt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_LeftShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;&lt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &lt;&lt;(System::Numerics::BigInteger value, int shift);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1152">Valore di cui spostare i bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-1152">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="467ec-1153">Numero di bit in base al quale spostare <c>value</c> a sinistra.</span><span class="sxs-lookup"><span data-stu-id="467ec-1153">The number of bits to shift <c>value</c> to the left.</span></span></param>
        <summary><span data-ttu-id="467ec-1154">Sposta un valore <see cref="T:System.Numerics.BigInteger" /> di un numero specificato di bit verso sinistra.</span><span class="sxs-lookup"><span data-stu-id="467ec-1154">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the left.</span></span></summary>
        <returns><span data-ttu-id="467ec-1155">Valore spostato a sinistra del numero specificato di bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-1155">A value that has been shifted to the left by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1156">Il <xref:System.Numerics.BigInteger.op_LeftShift%2A> metodo definisce il funzionamento dell'operatore di spostamento a sinistra bit per bit per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1156">The <xref:System.Numerics.BigInteger.op_LeftShift%2A> method defines the operation of the bitwise left-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1157">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1157">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#29)]
 [!code-vb[System.Numerics.BigInteger.Operators#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#29)]  
  
> [!NOTE]
>  <span data-ttu-id="467ec-1158">A differenza dell'operazione di spostamento a sinistra bit per bit con le primitive di integer, il <xref:System.Numerics.BigInteger.op_LeftShift%2A> metodo mantiene il segno dell'originale <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1158">Unlike the bitwise left-shift operation with integer primitives, the <xref:System.Numerics.BigInteger.op_LeftShift%2A> method preserves the sign of the original <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="467ec-1159">Lingue che non supportano gli operatori personalizzati possono eseguire un'operazione di spostamento a sinistra bit per bit moltiplicando `value` da `BigInteger.Pow(2, shift)`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1159">Languages that do not support custom operators can perform a bitwise left-shift operation by multiplying `value` by `BigInteger.Pow(2, shift)`.</span></span> <span data-ttu-id="467ec-1160">L'esempio seguente mostra che i risultati sono identici per i risultati dell'utilizzo di questo operatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1160">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#30)]
 [!code-vb[System.Numerics.BigInteger.Operators#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-1161">Restituisce un valore che indica se un valore specificato è minore di un secondo valore specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1161">Returns a value that indicates whether a specified value is less than a second specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(long left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1162">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1162">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1163">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1163">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1164">Restituisce un valore che indica se un Signed Integer a 64 bit è minore di un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1164">Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1165"><see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1165"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1166">Il <xref:System.Numerics.BigInteger.op_LessThan%2A> metodo definisce il funzionamento dell'operatore per minore <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1166">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1167">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1167">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#31)]
 [!code-vb[System.Numerics.BigInteger.Operators#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#31)]  
  
 <span data-ttu-id="467ec-1168">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1168">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1169">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1169">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#32)]  
  
 <span data-ttu-id="467ec-1170">Se `left` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1170">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-1171">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1171">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1172">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1172">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1173">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1173">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1174">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore di un Signed Integer a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-1174">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit signed integer.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1175"><see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1175"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1176">Il <xref:System.Numerics.BigInteger.op_LessThan%2A> metodo definisce il funzionamento dell'operatore per minore <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1176">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1177">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1177">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#33)]
 [!code-vb[System.Numerics.BigInteger.Operators#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#33)]  
  
 <span data-ttu-id="467ec-1178">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1178">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1179">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1179">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#34)]  
  
 <span data-ttu-id="467ec-1180">Se `right` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1180">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-1181">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1181">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1182">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1182">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1183">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1183">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1184">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore di un altro valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1184">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1185"><see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1185"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1186">Il <xref:System.Numerics.BigInteger.op_LessThan%2A> metodo definisce il funzionamento dell'operatore per minore <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1186">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1187">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1187">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#27)]
 [!code-vb[System.Numeric.BigInteger.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#27)]  
  
 <span data-ttu-id="467ec-1188">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1188">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1189">Alcuni linguaggi possono chiamare anche il <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1189">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#28)]  
  
 <span data-ttu-id="467ec-1190">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1190">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1191">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1191">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1192">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1192">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1193">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore di un Unsigned Integer a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-1193">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit unsigned integer.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1194"><see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1194"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1195">Il <xref:System.Numerics.BigInteger.op_LessThan%2A> metodo definisce il funzionamento dell'operatore per minore <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1195">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1196">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1196">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#35)]
 [!code-vb[System.Numerics.BigInteger.Operators#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#35)]  
  
 <span data-ttu-id="467ec-1197">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1197">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1198">È inoltre possibile chiamare il <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1198">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#36)]  
  
 <span data-ttu-id="467ec-1199">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1199">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1200">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1200">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1201">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1201">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1202">Restituisce un valore che indica se un Unsigned Integer a 64 bit è minore di un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1202">Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1203"><see langword="true" /> se <paramref name="left" /> è minore di <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1203"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1204">Il <xref:System.Numerics.BigInteger.op_LessThan%2A> metodo definisce il funzionamento dell'operatore per minore <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1204">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1205">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1205">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#37)]
 [!code-vb[System.Numerics.BigInteger.Operators#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#37)]  
  
 <span data-ttu-id="467ec-1206">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1206">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1207">È inoltre possibile chiamare il <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1207">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#38)]  
  
 <span data-ttu-id="467ec-1208">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1208">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-1209">Restituisce un valore che indica se un valore specificato è minore o uguale a un altro valore specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1209">Returns a value that indicates whether a specified value is less than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(long left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1210">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1210">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1211">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1211">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1212">Restituisce un valore che indica se un Signed Integer a 64 bit è minore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1212">Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1213"><see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1213"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1214">Il <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> metodo definisce il funzionamento dell'operatore minore di o uguale a per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1214">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1215">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1215">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#39)]
 [!code-vb[System.Numerics.BigInteger.Operators#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#39)]  
  
 <span data-ttu-id="467ec-1216">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1216">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1217">È inoltre possibile chiamare il <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1217">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#40)]  
  
 <span data-ttu-id="467ec-1218">Se `left` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1218">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-1219">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1219">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1220">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1220">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1221">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1221">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1222">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore o uguale a un Signed Integer a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-1222">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit signed integer.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1223"><see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1223"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1224">Il <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> metodo definisce il funzionamento dell'operatore minore di o uguale a per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1224">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1225">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1225">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#41)]
 [!code-vb[System.Numerics.BigInteger.Operators#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#41)]  
  
 <span data-ttu-id="467ec-1226">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1226">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1227">È inoltre possibile chiamare il <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1227">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#42)]  
  
 <span data-ttu-id="467ec-1228">Se `right` è un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valore, viene implicitamente convertito in un <xref:System.Int64> valore quando viene eseguita l'operazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1228">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="467ec-1229">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1229">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1230">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1230">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1231">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1231">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1232">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore o uguale a un altro valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1232">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1233"><see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1233"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1234">Il <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> metodo definisce il funzionamento dell'operatore minore di o uguale a per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1234">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1235">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1235">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#29)]
 [!code-vb[System.Numeric.BigInteger.Class#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#29)]  
  
 <span data-ttu-id="467ec-1236">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Compare%2A> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1236">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A> method instead.</span></span> <span data-ttu-id="467ec-1237">È inoltre possibile chiamare il <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1237">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#30)]  
  
 <span data-ttu-id="467ec-1238">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1238">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1239">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1239">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1240">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1240">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1241">Restituisce un valore che indica se un valore <see cref="T:System.Numerics.BigInteger" /> è minore o uguale a un Unsigned Integer a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-1241">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit unsigned integer.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1242"><see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1242"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1243">Il <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> metodo definisce il funzionamento dell'operatore minore di o uguale a per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1243">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1244">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1244">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#43)]
 [!code-vb[System.Numerics.BigInteger.Operators#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#43)]  
  
 <span data-ttu-id="467ec-1245">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1245">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1246">È inoltre possibile chiamare il <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1246">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#44)]  
  
 <span data-ttu-id="467ec-1247">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1247">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1248">Primo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1248">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1249">Secondo valore da confrontare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1249">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="467ec-1250">Restituisce un valore che indica se un Unsigned Integer a 64 bit è minore o uguale a un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1250">Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1251"><see langword="true" /> se <paramref name="left" /> è minore o uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1251"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1252">Il <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> metodo definisce il funzionamento dell'operatore minore di o uguale a per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1252">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1253">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1253">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#45)]
 [!code-vb[System.Numerics.BigInteger.Operators#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#45)]  
  
 <span data-ttu-id="467ec-1254">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1254">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="467ec-1255">È inoltre possibile chiamare il <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> metodo direttamente, come nell'esempio seguente viene illustrato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1255">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#46)]  
  
 <span data-ttu-id="467ec-1256">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1256">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator % (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Modulus(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator %(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="467ec-1257">Valore da dividere.</span><span class="sxs-lookup"><span data-stu-id="467ec-1257">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="467ec-1258">Valore per cui dividere.</span><span class="sxs-lookup"><span data-stu-id="467ec-1258">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="467ec-1259">Restituisce il resto risultante dalla divisione di due valori <see cref="T:System.Numerics.BigInteger" /> specificati.</span><span class="sxs-lookup"><span data-stu-id="467ec-1259">Returns the remainder that results from division with two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="467ec-1260">Resto risultante dalla divisione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1260">The remainder that results from the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1261">Il <xref:System.Numerics.BigInteger.op_Modulus%2A> metodo definisce il funzionamento dell'operatore modulo per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1261">The <xref:System.Numerics.BigInteger.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1262">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1262">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#31)]
 [!code-vb[System.Numeric.BigInteger.Class#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#31)]  
  
 <span data-ttu-id="467ec-1263">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1263">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="467ec-1264">Il segno del valore restituito dall'operazione modulo dipende dal segno di `dividend`: se `dividend` è positivo, l'operazione modulo restituisce un risultato positivo; in caso negativo, l'operazione modulo restituisce un risultato negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1264">The sign of the value returned by the modulus operation depends on the sign of `dividend`: If `dividend` is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</span></span> <span data-ttu-id="467ec-1265">Il comportamento dell'operazione modulo con <xref:System.Numerics.BigInteger> valori è identico all'operazione di modulo con altri tipi integrali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1265">The behavior of the modulus operation with <xref:System.Numerics.BigInteger> values is identical to the modulus operation with other integral types.</span></span>  
  
 <span data-ttu-id="467ec-1266">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1266">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="467ec-1267"><paramref name="divisor" /> è 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="467ec-1267"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator * (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator *(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1268">Primo valore da moltiplicare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1268">The first value to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1269">Secondo valore da moltiplicare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1269">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="467ec-1270">Moltiplica due valori <see cref="T:System.Numerics.BigInteger" /> specificati.</span><span class="sxs-lookup"><span data-stu-id="467ec-1270">Multiplies two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="467ec-1271">Prodotto di <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1271">The product of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1272">Il <xref:System.Numerics.BigInteger.op_Multiply%2A> metodo definisce il funzionamento dell'operatore di moltiplicazione per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1272">The <xref:System.Numerics.BigInteger.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1273">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1273">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#11)]
 [!code-vb[System.Numeric.BigInteger.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#11)]  
  
 <span data-ttu-id="467ec-1274">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1274">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ~ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_OnesComplement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ~(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1275">Valore intero.</span><span class="sxs-lookup"><span data-stu-id="467ec-1275">An integer value.</span></span></param>
        <summary><span data-ttu-id="467ec-1276">Restituisce il complemento a uno bit per bit di un valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1276">Returns the bitwise one's complement of a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-1277">Complemento a uno bit per bit dell'oggetto <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1277">The bitwise one's complement of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1278">Il <xref:System.Numerics.BigInteger.op_OnesComplement%2A> metodo definisce il funzionamento di bit per bit dell'operatore di complemento uno per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1278">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method defines the operation of the bitwise one's complement operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1279">Bit per bit inverte operatore di complemento a uno ogni bit in un valore numerico.</span><span class="sxs-lookup"><span data-stu-id="467ec-1279">The bitwise one's complement operator reverses each bit in a numeric value.</span></span> <span data-ttu-id="467ec-1280">Vale a dire bit `value` che sono 0 vengono impostati su 1 nel risultato e bit 1 sono impostati su 0 nel risultato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1280">That is, bits in `value` that are 0 are set to 1 in the result, and bits that are 1 are set to 0 in the result.</span></span> <span data-ttu-id="467ec-1281">Il <xref:System.Numerics.BigInteger.op_OnesComplement%2A> metodo consente al codice simile al seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1281">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/cs/OnesComplement1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/OnesComplement1.vb#1)]  
  
 <span data-ttu-id="467ec-1282">Linguaggi che non supportano gli operatori personalizzati potrebbero essere in grado di chiamare il <xref:System.Numerics.BigInteger.op_OnesComplement%2A> metodo direttamente per eseguire un bit per bit di una operazione di complemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1282">Languages that do not support custom operators may be able to call the <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method directly to perform a bitwise one's complement operation.</span></span> <span data-ttu-id="467ec-1283">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="467ec-1283">For example:</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.OnesComplement#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/onescomplement2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_RightShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &gt;&gt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_RightShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;&gt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &gt;&gt;(System::Numerics::BigInteger value, int shift);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1284">Valore di cui spostare i bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-1284">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="467ec-1285">Numero di bit in base al quale spostare <c>value</c> a destra.</span><span class="sxs-lookup"><span data-stu-id="467ec-1285">The number of bits to shift <c>value</c> to the right.</span></span></param>
        <summary><span data-ttu-id="467ec-1286">Sposta un valore <see cref="T:System.Numerics.BigInteger" /> di un numero specificato di bit verso destra.</span><span class="sxs-lookup"><span data-stu-id="467ec-1286">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the right.</span></span></summary>
        <returns><span data-ttu-id="467ec-1287">Valore spostato a destra del numero specificato di bit.</span><span class="sxs-lookup"><span data-stu-id="467ec-1287">A value that has been shifted to the right by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1288">Il <xref:System.Numerics.BigInteger.op_RightShift%2A> metodo definisce il funzionamento dell'operatore di spostamento a destra bit per bit per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1288">The <xref:System.Numerics.BigInteger.op_RightShift%2A> method defines the operation of the bitwise right-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1289">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1289">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#47)]
 [!code-vb[System.Numerics.BigInteger.Operators#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#47)]  
  
 <span data-ttu-id="467ec-1290">Linguaggi che non supportano gli operatori personalizzati possono eseguire un'operazione di spostamento a destra bit per bit dividendo `value` da `BigInteger.Pow(2, shift)` e sottraendo 1 volte `shift` per i valori negativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1290">Languages that do not support custom operators can perform a bitwise right-shift operation by dividing `value` by `BigInteger.Pow(2, shift)` and subtracting 1 times `shift` for negative values.</span></span> <span data-ttu-id="467ec-1291">L'esempio seguente mostra che i risultati sono identici per i risultati dell'utilizzo di questo operatore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1291">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#48)]
 [!code-vb[System.Numerics.BigInteger.Operators#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#48)]  
  
 <span data-ttu-id="467ec-1292">Se `shift` è maggiore o uguale al numero di bit in un numero positivo <xref:System.Numerics.BigInteger> valore, il risultato dell'operazione di spostamento a destra è <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1292">If `shift` is greater than or equal to the number of bits in a positive <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="467ec-1293">Se `shift` è maggiore del numero di bit in un valore negativo <xref:System.Numerics.BigInteger> valore, il risultato dell'operazione di spostamento a destra è <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1293">If `shift` is greater than the number of bits in a negative <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Subtraction(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1294">Valore da cui sottrarre (minuendo).</span><span class="sxs-lookup"><span data-stu-id="467ec-1294">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1295">Valore da sottrarre (sottraendo).</span><span class="sxs-lookup"><span data-stu-id="467ec-1295">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="467ec-1296">Sottrae un valore <see cref="T:System.Numerics.BigInteger" /> da un altro valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1296">Subtracts a <see cref="T:System.Numerics.BigInteger" /> value from another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="467ec-1297">Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1297">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1298">Il <xref:System.Numerics.BigInteger.op_Subtraction%2A> metodo definisce il funzionamento dell'operatore di sottrazione per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1298">The <xref:System.Numerics.BigInteger.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1299">Consente il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1299">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#14)]
 [!code-vb[System.Numeric.BigInteger.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#14)]  
  
 <span data-ttu-id="467ec-1300">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1300">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="467ec-1301">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1301">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryNegation(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1302">Valore da negare.</span><span class="sxs-lookup"><span data-stu-id="467ec-1302">The value to negate.</span></span></param>
        <summary><span data-ttu-id="467ec-1303">Nega un valore BigInteger specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1303">Negates a specified BigInteger value.</span></span></summary>
        <returns><span data-ttu-id="467ec-1304">Risultato del parametro <paramref name="value" /> moltiplicato per il valore uno negativo (-1).</span><span class="sxs-lookup"><span data-stu-id="467ec-1304">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1305">Il <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> metodo definisce il funzionamento dell'operatore di negazione unario (o l'operatore inverso additivo) per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1305">The <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1306">L'operazione produce un valore che restituisce 0 (zero) quando viene aggiunto al numero originale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1306">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="467ec-1307">I linguaggi che non supportano gli operatori personalizzati possono chiamare il <xref:System.Numerics.BigInteger.Negate%2A> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="467ec-1307">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="467ec-1308">Il metodo equivalente per l'operatore è <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="467ec-1308">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="467ec-1309">L'esempio seguente illustra i tre modi diversi per negare il valore di un <xref:System.Numerics.BigInteger> oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-1309">The following example illustrates three different ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryPlus(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1310">Valore intero.</span><span class="sxs-lookup"><span data-stu-id="467ec-1310">An integer value.</span></span></param>
        <summary><span data-ttu-id="467ec-1311">Restituisce il valore dell'operando <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1311">Returns the value of the <see cref="T:System.Numerics.BigInteger" /> operand.</span></span> <span data-ttu-id="467ec-1312">Il segno dell'operando resta invariato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1312">(The sign of the operand is unchanged.)</span></span></summary>
        <returns><span data-ttu-id="467ec-1313">Valore dell'operando <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1313">The value of the <paramref name="value" /> operand.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1314">Il <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> metodo definisce il funzionamento dell'operatore unario positivo per <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1314">The <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Numerics.BigInteger> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-1315">Converte la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1315">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1316">Stringa che contiene il numero da convertire.</span><span class="sxs-lookup"><span data-stu-id="467ec-1316">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="467ec-1317">Converte la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1317">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="467ec-1318">Valore equivalente al numero specificato nel parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1318">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1319">Il `value` parametro deve essere la rappresentazione di stringa di un numero nel formato seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1319">The `value` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="467ec-1320">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="467ec-1320">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="467ec-1321">Gli elementi tra parentesi quadre ([e]) sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1321">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="467ec-1322">Nella tabella seguente viene descritto ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1322">The following table describes each element.</span></span>  
  
|<span data-ttu-id="467ec-1323">Elemento</span><span class="sxs-lookup"><span data-stu-id="467ec-1323">Element</span></span>|<span data-ttu-id="467ec-1324">Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-1324">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="467ec-1325">*ws*</span><span class="sxs-lookup"><span data-stu-id="467ec-1325">*ws*</span></span>|<span data-ttu-id="467ec-1326">Spazio vuoto facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1326">Optional white space.</span></span>|  
|<span data-ttu-id="467ec-1327">*sign*</span><span class="sxs-lookup"><span data-stu-id="467ec-1327">*sign*</span></span>|<span data-ttu-id="467ec-1328">Un segno facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1328">An optional sign.</span></span> <span data-ttu-id="467ec-1329">Caratteri segno validi sono determinati dalle <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> e <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> delle impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1329">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="467ec-1330">*digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1330">*digits*</span></span>|<span data-ttu-id="467ec-1331">Una sequenza di cifre comprese tra 0 e 9.</span><span class="sxs-lookup"><span data-stu-id="467ec-1331">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="467ec-1332">Gli zeri iniziali vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="467ec-1332">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="467ec-1333">La stringa specificata per il `value` parametro viene interpretato utilizzando il <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> stile.</span><span class="sxs-lookup"><span data-stu-id="467ec-1333">The string specified by the `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="467ec-1334">Non può contenere separatori di gruppo o un separatore decimale e non può avere una parte decimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1334">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="467ec-1335">Il `value` parametro viene analizzato tramite le informazioni di formattazione in un <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> oggetto inizializzato per la lingua corrente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1335">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="467ec-1336">Per ulteriori informazioni, vedere <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1336">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="467ec-1337">Per analizzare una stringa utilizzando le informazioni di formattazione delle impostazioni cultura specifiche, utilizzare il <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1337">To parse a string by using the formatting information of a specific culture, use the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="467ec-1338">Se si utilizza il <xref:System.Numerics.BigInteger.Parse%2A> metodo per il round trip la rappresentazione di stringa di un <xref:System.Numerics.BigInteger> valore ottenuto come risultato di <xref:System.Numerics.BigInteger.ToString%2A> (metodo), è consigliabile utilizzare il <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> metodo con l'identificatore di formato "R" per generare la rappresentazione di stringa del <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1338">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="467ec-1339">In caso contrario, la rappresentazione di stringa del <xref:System.Numerics.BigInteger> mantiene solo il 50 cifre più significative del valore originale e i dati vadano perse quando si utilizza il <xref:System.Numerics.BigInteger.Parse%2A> metodo per il ripristino di <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1339">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1340">L'esempio seguente usa il <xref:System.Numerics.BigInteger.Parse%28System.String%29> metodo per creare un'istanza di due <xref:System.Numerics.BigInteger> oggetti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1340">The following example uses the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="467ec-1341">Moltiplica ogni oggetto da un altro numero e quindi chiama il <xref:System.Numerics.BigInteger.Compare%2A> metodo per determinare la relazione tra i due valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1341">It multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="467ec-1342"><paramref name="value" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1342"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="467ec-1343"><paramref name="value" /> non è nel formato corretto.</span><span class="sxs-lookup"><span data-stu-id="467ec-1343"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1344">Stringa che contiene un numero da convertire.</span><span class="sxs-lookup"><span data-stu-id="467ec-1344">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="467ec-1345">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1345">A bitwise combination of the enumeration values that specify the permitted format of <c>value</c>.</span></span></param>
        <summary><span data-ttu-id="467ec-1346">Converte la rappresentazione di stringa di un numero in uno stile specificato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1346">Converts the string representation of a number in a specified style to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="467ec-1347">Valore equivalente al numero specificato nel parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1347">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1348">Il `style` parametro definisce gli elementi di stile (ad esempio gli spazi vuoti, il simbolo di segno positivo o negativo, il simbolo di separatore di gruppo o il simbolo di separatore decimale) consentite nella `value` parametro per l'operazione di analisi abbia esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1348">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="467ec-1349">`styles` deve essere una combinazione di flag di bit del <xref:System.Globalization.NumberStyles> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1349">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="467ec-1350">Il `style` parametro rende il metodo di overload utili quando `value` contiene la rappresentazione di stringa di un valore esadecimale, quando il sistema di numero (decimale o esadecimale) rappresentato da `value` è noto solo in fase di esecuzione, o quando si non consentire gli spazi vuoti o un simbolo di segno `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1350">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="467ec-1351">A seconda del valore di `style`, `value` parametro può includere gli elementi seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1351">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="467ec-1352">[*ws*] [*$*] [*sign*] [*cifre*,]*cifre*[.* frazionarie*] [E [*sign*]*cifre_esponenziali*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="467ec-1352">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="467ec-1353">Se `style` include <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, `value` parametro può contenere i seguenti elementi:</span><span class="sxs-lookup"><span data-stu-id="467ec-1353">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="467ec-1354">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="467ec-1354">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="467ec-1355">Gli elementi tra parentesi quadre ([e]) sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1355">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="467ec-1356">Nella tabella seguente viene descritto ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1356">The following table describes each element.</span></span>  
  
|<span data-ttu-id="467ec-1357">Elemento</span><span class="sxs-lookup"><span data-stu-id="467ec-1357">Element</span></span>|<span data-ttu-id="467ec-1358">Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-1358">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="467ec-1359">*ws*</span><span class="sxs-lookup"><span data-stu-id="467ec-1359">*ws*</span></span>|<span data-ttu-id="467ec-1360">Spazio vuoto facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1360">Optional white space.</span></span> <span data-ttu-id="467ec-1361">Gli spazi vuoti possono essere visualizzati all'inizio di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag e può apparire alla fine di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1361">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="467ec-1362">Un simbolo di valuta delle impostazioni cultura specifiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1362">A culture-specific currency symbol.</span></span> <span data-ttu-id="467ec-1363">La posizione nella stringa è definita per il <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> e <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> delle impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1363">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="467ec-1364">Simbolo di valuta le impostazioni cultura correnti può apparire `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1364">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1365">*sign*</span><span class="sxs-lookup"><span data-stu-id="467ec-1365">*sign*</span></span>|<span data-ttu-id="467ec-1366">Un segno facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1366">An optional sign.</span></span> <span data-ttu-id="467ec-1367">Il segno può essere visualizzati all'inizio di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag e può apparire alla fine di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1367">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="467ec-1368">Le parentesi possono essere utilizzate `value` per indicare un valore negativo se `style` include il <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1368">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1369">*digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1369">*digits*</span></span><br /><br /> <span data-ttu-id="467ec-1370">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1370">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="467ec-1371">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1371">*exponential_digits*</span></span>|<span data-ttu-id="467ec-1372">Una sequenza di cifre da 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="467ec-1372">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="467ec-1373">Per *frazionarie*, solo la cifra 0 è valida.</span><span class="sxs-lookup"><span data-stu-id="467ec-1373">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="467ec-1374">*,*</span><span class="sxs-lookup"><span data-stu-id="467ec-1374">*,*</span></span>|<span data-ttu-id="467ec-1375">Un simbolo di separatore di gruppo di impostazioni cultura specifiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1375">A culture-specific group separator symbol.</span></span> <span data-ttu-id="467ec-1376">Separatore di gruppi di impostazioni cultura correnti può apparire `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1376">The current culture's group separator can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1377">*.*</span><span class="sxs-lookup"><span data-stu-id="467ec-1377">*.*</span></span>|<span data-ttu-id="467ec-1378">Simbolo di separatore decimale delle impostazioni cultura specifiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1378">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="467ec-1379">Simbolo di separatore decimale della lingua corrente può essere visualizzati `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1379">The current culture's decimal point symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="467ec-1380">Solo la cifra 0 può essere visualizzato come una cifra frazionaria per l'operazione di analisi abbia esito positivo; Se *frazionarie* include qualsiasi cifra, un <xref:System.FormatException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1380">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="467ec-1381">E</span><span class="sxs-lookup"><span data-stu-id="467ec-1381">E</span></span>|<span data-ttu-id="467ec-1382">Il "e" o il carattere "E", che indica che il valore è rappresentato nella notazione esponenziale (scientifica).</span><span class="sxs-lookup"><span data-stu-id="467ec-1382">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="467ec-1383">Il `value` parametro può rappresentare un numero in notazione esponenziale se `style` include il <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1383">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1384">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1384">*hexdigits*</span></span>|<span data-ttu-id="467ec-1385">Una sequenza di cifre esadecimali da 0 a f, o da 0 a F.</span><span class="sxs-lookup"><span data-stu-id="467ec-1385">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="467ec-1386">Una stringa che contiene solo cifre (che corrisponde alla <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> stile) viene sempre analizzata correttamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1386">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="467ec-1387">La maggior parte degli altri <xref:System.Globalization.NumberStyles> membri controllano gli elementi che possono essere presenti, ma non deve essere presente, nella stringa di input.</span><span class="sxs-lookup"><span data-stu-id="467ec-1387">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="467ec-1388">Nella tabella seguente indica come singoli <xref:System.Globalization.NumberStyles> membri interessano gli elementi che possono essere presenti in `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1388">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="467ec-1389">Valore di `NumberStyles`</span><span class="sxs-lookup"><span data-stu-id="467ec-1389">`NumberStyles` value</span></span>|<span data-ttu-id="467ec-1390">Elementi consentiti in `value` oltre alle cifre</span><span class="sxs-lookup"><span data-stu-id="467ec-1390">Elements permitted in `value` in addition to digits</span></span>|  
|--------------------------|---------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="467ec-1391">Il *cifre* solo l'elemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1391">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="467ec-1392">Il separatore decimale (.) e *cifre frazionarie* elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1392">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="467ec-1393">Il "e" o il carattere "E", che indica la notazione esponenziale, insieme a *cifre_esponenziali*.</span><span class="sxs-lookup"><span data-stu-id="467ec-1393">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="467ec-1394">Il *ws* elemento all'inizio di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1394">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="467ec-1395">Il *ws* elemento alla fine di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1395">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="467ec-1396">Il *sign* elemento all'inizio di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1396">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="467ec-1397">Il *sign* elemento alla fine di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1397">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="467ec-1398">Il *sign* elemento sotto forma di parentesi che racchiudono il valore numerico.</span><span class="sxs-lookup"><span data-stu-id="467ec-1398">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="467ec-1399">Elemento separatore (,) del gruppo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1399">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="467ec-1400">Elemento valuta ($).</span><span class="sxs-lookup"><span data-stu-id="467ec-1400">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="467ec-1401">Tutti gli elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1401">All elements.</span></span> <span data-ttu-id="467ec-1402">Tuttavia, `value` non può rappresentare un numero esadecimale o un numero in notazione esponenziale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1402">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="467ec-1403">Il *ws* elemento all'inizio o alla fine di `value`, *sign* all'inizio di `value`e il separatore decimale (*.*) simbolo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1403">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="467ec-1404">Il `value` parametro inoltre possibile utilizzare la notazione esponenziale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1404">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="467ec-1405">Il `ws`, `sign`, separatore di gruppi (*,*), punto decimale e (*.*) elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1405">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="467ec-1406">Tutti gli elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1406">All elements.</span></span> <span data-ttu-id="467ec-1407">Tuttavia, `value` può rappresentare un numero esadecimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1407">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="467ec-1408">Se si utilizza il <xref:System.Numerics.BigInteger.Parse%2A> metodo per il round trip la rappresentazione di stringa di un <xref:System.Numerics.BigInteger> valore ottenuto come risultato di <xref:System.Numerics.BigInteger.ToString%2A> (metodo), è consigliabile utilizzare il <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> metodo con l'identificatore di formato "R" per generare la rappresentazione di stringa del <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1408">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="467ec-1409">In caso contrario, la rappresentazione di stringa del <xref:System.Numerics.BigInteger> mantiene solo il 50 cifre più significative del valore originale e i dati vadano perse quando si utilizza il <xref:System.Numerics.BigInteger.Parse%2A> metodo per il ripristino di <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1409">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="467ec-1410">A differenza di altri <xref:System.Globalization.NumberStyles> valori, che consentono di, ma non richiedono la presenza di particolari elementi di stile in `value`, <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> valore dello stile significa che i singoli caratteri numerici in `value` vengono sempre interpretate come caratteri esadecimali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1410">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="467ec-1411">I caratteri esadecimali validi sono 0-9, A-F e -f.</span><span class="sxs-lookup"><span data-stu-id="467ec-1411">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="467ec-1412">Gli unici altri flag che possono essere combinati con il `style` parametro sono <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> e <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1412">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="467ec-1413">(Il <xref:System.Globalization.NumberStyles> enumerazione include uno stile di numero composto, <xref:System.Globalization.NumberStyles.HexNumber>, che include entrambi i flag di spazi vuoti.)</span><span class="sxs-lookup"><span data-stu-id="467ec-1413">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="467ec-1414">Se `value` è la rappresentazione di stringa di un numero esadecimale, non può essere preceduto da qualsiasi effetto (ad esempio `0x` o `&h`) che lo distingue come numero esadecimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1414">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="467ec-1415">In questo modo la conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1415">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="467ec-1416">Se `value` è una stringa esadecimale, il <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> metodo interpreta `value` come un numero negativo archiviato tramite la rappresentazione in complemento a due se le prime due cifre esadecimali sono maggiori o uguali a `0x80`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1416">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="467ec-1417">In altre parole, il metodo interpreta il bit più significativo del primo byte in `value` come bit di segno.</span><span class="sxs-lookup"><span data-stu-id="467ec-1417">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="467ec-1418">Per assicurarsi che una stringa esadecimale viene correttamente interpretata come un numero positivo, la prima cifra `value` deve avere un valore pari a zero.</span><span class="sxs-lookup"><span data-stu-id="467ec-1418">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="467ec-1419">Ad esempio, il metodo interpreta `0x80` come un valore negativo, ma interpreta `0x080` o `0x0080` come un valore positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1419">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="467ec-1420">Nell'esempio seguente viene illustrata la differenza tra stringhe esadecimali che rappresentano valori positivi e negativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1420">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="467ec-1421">Il `value` parametro viene analizzato tramite le informazioni di formattazione in un <xref:System.Globalization.NumberFormatInfo> oggetto inizializzato per la lingua corrente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1421">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="467ec-1422">Per specificare le impostazioni cultura le cui informazioni di formattazione viene utilizzati per l'operazione di analisi, chiamare il <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="467ec-1422">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1423">Nell'esempio seguente vengono illustrate chiamate per il <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> metodo con diversi valori possibili per il `style` parametro.</span><span class="sxs-lookup"><span data-stu-id="467ec-1423">The following example illustrates calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method with several possible values for the `style` parameter.</span></span> <span data-ttu-id="467ec-1424">Viene illustrato come interpretare una stringa come valore esadecimale e come impedire spazi e simboli.</span><span class="sxs-lookup"><span data-stu-id="467ec-1424">It illustrates how to interpret a string as a hexadecimal value, and how to disallow spaces and sign symbols.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#5)]
 [!code-vb[System.Numeric.BigInteger.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="467ec-1425"><paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1425"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="467ec-1426">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-1426">-or-</span></span>  
  
 <span data-ttu-id="467ec-1427"><paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1427"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="467ec-1428"><paramref name="value" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1428"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="467ec-1429"><paramref name="value" /> non è conforme al criterio di input specificato da <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1429"><paramref name="value" /> does not comply with the input pattern specified by <see cref="T:System.Globalization.NumberStyles" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1430">Stringa che contiene un numero da convertire.</span><span class="sxs-lookup"><span data-stu-id="467ec-1430">A string that contains a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="467ec-1431">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1431">An object that provides culture-specific formatting information about <c>value</c>.</span></span></param>
        <summary><span data-ttu-id="467ec-1432">Converte la rappresentazione di stringa di un numero in un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1432">Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="467ec-1433">Valore equivalente al numero specificato nel parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1433">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1434">Il `value` parametro deve essere la rappresentazione di stringa di un numero nel formato seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1434">The `value` parameter should be the string representation of a number in the following form:</span></span>  
  
 <span data-ttu-id="467ec-1435">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="467ec-1435">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="467ec-1436">Gli elementi tra parentesi quadre ([e]) sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1436">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="467ec-1437">Nella tabella seguente viene descritto ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1437">The following table describes each element.</span></span>  
  
|<span data-ttu-id="467ec-1438">Elemento</span><span class="sxs-lookup"><span data-stu-id="467ec-1438">Element</span></span>|<span data-ttu-id="467ec-1439">Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-1439">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="467ec-1440">*ws*</span><span class="sxs-lookup"><span data-stu-id="467ec-1440">*ws*</span></span>|<span data-ttu-id="467ec-1441">Spazio vuoto facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1441">Optional white space.</span></span>|  
|<span data-ttu-id="467ec-1442">*sign*</span><span class="sxs-lookup"><span data-stu-id="467ec-1442">*sign*</span></span>|<span data-ttu-id="467ec-1443">Un segno facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1443">An optional sign.</span></span> <span data-ttu-id="467ec-1444">Caratteri segno validi sono determinati dal <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> e <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> le proprietà del <xref:System.Globalization.NumberFormatInfo> oggetto restituito dal `provider` dell'oggetto <xref:System.IFormatProvider.GetFormat%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1444">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the `provider` object's <xref:System.IFormatProvider.GetFormat%2A> method.</span></span>|  
|<span data-ttu-id="467ec-1445">*digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1445">*digits*</span></span>|<span data-ttu-id="467ec-1446">Una sequenza di cifre comprese tra 0 e 9.</span><span class="sxs-lookup"><span data-stu-id="467ec-1446">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="467ec-1447">Gli zeri iniziali vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="467ec-1447">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="467ec-1448">La stringa specificata per il `value` parametro viene interpretato utilizzando il <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> stile.</span><span class="sxs-lookup"><span data-stu-id="467ec-1448">The string specified by the `value` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="467ec-1449">Non può contenere separatori di gruppo o un separatore decimale e non può avere una parte decimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1449">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="467ec-1450">Se si utilizza il <xref:System.Numerics.BigInteger.Parse%2A> metodo per il round trip la rappresentazione di stringa di un <xref:System.Numerics.BigInteger> valore ottenuto come risultato di <xref:System.Numerics.BigInteger.ToString%2A> (metodo), è consigliabile utilizzare il <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> metodo con l'identificatore di formato "R" per generare la rappresentazione di stringa del <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1450">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="467ec-1451">In caso contrario, la rappresentazione di stringa del <xref:System.Numerics.BigInteger> mantiene solo il 50 cifre più significative del valore originale e i dati vadano perse quando si utilizza il <xref:System.Numerics.BigInteger.Parse%2A> metodo per il ripristino di <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1451">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="467ec-1452">Il `provider` parametro è un <xref:System.IFormatProvider> implementazione cui <xref:System.IFormatProvider.GetFormat%2A> metodo restituisce un <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="467ec-1452">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="467ec-1453">Quando il <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> metodo viene richiamato, viene chiamato il `provider` del parametro <xref:System.IFormatProvider.GetFormat%2A> (metodo) e lo passa a un <xref:System.Type> oggetto che rappresenta il <xref:System.Globalization.NumberFormatInfo> tipo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1453">When the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="467ec-1454">Il <xref:System.IFormatProvider.GetFormat%2A> metodo quindi restituisce il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni relative al formato del `value` parametro.</span><span class="sxs-lookup"><span data-stu-id="467ec-1454">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `value` parameter.</span></span> <span data-ttu-id="467ec-1455">Esistono tre modi per utilizzare il `provider` parametro per fornire informazioni di formattazione personalizzate per l'operazione di analisi:</span><span class="sxs-lookup"><span data-stu-id="467ec-1455">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="467ec-1456">È possibile passare un <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1456">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="467ec-1457">Il relativo <xref:System.Globalization.CultureInfo.GetFormat%2A> metodo restituisce il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni sulla formattazione numeriche per le impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="467ec-1457">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="467ec-1458">È possibile passare l'effettivo <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni sulla formattazione numeriche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1458">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="467ec-1459">(L'implementazione di <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> appena restituisce se stesso.)</span><span class="sxs-lookup"><span data-stu-id="467ec-1459">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="467ec-1460">È possibile passare un oggetto personalizzato che implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1460">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="467ec-1461">Il relativo <xref:System.IFormatProvider.GetFormat%2A> metodo crea e restituisce il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1461">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="467ec-1462">Se `provider` è `null`, la formattazione di `value` viene interpretato in base il <xref:System.Globalization.NumberFormatInfo> oggetto delle impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1462">If `provider` is `null`, the formatting of `value` is interpreted based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1463">Gli esempi seguenti illustrano due modalità per definire la tilde (~) come un segno negativo per la formattazione <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1463">The following examples show two ways to define the tilde (~) as a negative sign for formatting <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="467ec-1464">Si noti che per visualizzare il <xref:System.Numerics.BigInteger> valori nello stesso formato delle stringhe originali, il codice deve chiamare il <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> (metodo) e passare il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1464">Note that to display the <xref:System.Numerics.BigInteger> values in the same format as the original strings, your code must call the <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method and pass it the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="467ec-1465">Nel primo esempio viene definita una classe che implementa <xref:System.IFormatProvider> e utilizza il <xref:System.IFormatProvider.GetFormat%2A> per restituire il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1465">The first example defines a class that implements <xref:System.IFormatProvider> and uses the <xref:System.IFormatProvider.GetFormat%2A> method to return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#2)]  
  
 <span data-ttu-id="467ec-1466">Oggetto <xref:System.Numerics.BigInteger> oggetto può quindi essere creata un'istanza con il codice seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1466">A <xref:System.Numerics.BigInteger> object can then be instantiated with the following code:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#3)]
 [!code-vb[System.Numeric.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#3)]  
  
 <span data-ttu-id="467ec-1467">Nel secondo esempio è più semplice.</span><span class="sxs-lookup"><span data-stu-id="467ec-1467">The second example is more straightforward.</span></span> <span data-ttu-id="467ec-1468">Passa la <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione per il `provider` parametro.</span><span class="sxs-lookup"><span data-stu-id="467ec-1468">It passes the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information to the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#4)]
 [!code-vb[System.Numeric.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="467ec-1469"><paramref name="value" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1469"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="467ec-1470"><paramref name="value" /> non è nel formato corretto.</span><span class="sxs-lookup"><span data-stu-id="467ec-1470"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As BigInteger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1471">Stringa che contiene un numero da convertire.</span><span class="sxs-lookup"><span data-stu-id="467ec-1471">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="467ec-1472">Combinazione bit per bit dei valori di enumerazione che specifica il formato consentito di <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1472">A bitwise combination of the enumeration values that specify the permitted format of <c>value</c>.</span></span></param>
        <param name="provider"><span data-ttu-id="467ec-1473">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura relative a <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1473">An object that provides culture-specific formatting information about <c>value</c>.</span></span></param>
        <summary><span data-ttu-id="467ec-1474">Converte la rappresentazione di stringa di un numero in uno stile specificato e un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1474">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="467ec-1475">Valore equivalente al numero specificato nel parametro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1475">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1476">Il `style` parametro definisce gli elementi di stile (ad esempio gli spazi vuoti, il simbolo di segno positivo o negativo, il simbolo di separatore di gruppo o il simbolo di separatore decimale) consentite nella `value` parametro per l'operazione di analisi abbia esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1476">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="467ec-1477">`styles` deve essere una combinazione di flag di bit del <xref:System.Globalization.NumberStyles> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1477">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="467ec-1478">Il `style` parametro rende il metodo di overload utili quando `value` contiene la rappresentazione di stringa di un valore esadecimale, quando il sistema di numero (decimale o esadecimale) rappresentato da `value` è noto solo in fase di esecuzione, o quando si non consentire gli spazi vuoti o un simbolo di segno `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1478">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="467ec-1479">A seconda del valore di `style`, `value` parametro può includere gli elementi seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1479">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="467ec-1480">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="467ec-1480">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="467ec-1481">Se `style` include <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, `value` parametro può includere gli elementi seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1481">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="467ec-1482">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="467ec-1482">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="467ec-1483">Gli elementi tra parentesi quadre ([e]) sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1483">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="467ec-1484">Nella tabella seguente viene descritto ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1484">The following table describes each element.</span></span>  
  
|<span data-ttu-id="467ec-1485">Elemento</span><span class="sxs-lookup"><span data-stu-id="467ec-1485">Element</span></span>|<span data-ttu-id="467ec-1486">Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-1486">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="467ec-1487">*ws*</span><span class="sxs-lookup"><span data-stu-id="467ec-1487">*ws*</span></span>|<span data-ttu-id="467ec-1488">Spazio vuoto facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1488">Optional white space.</span></span> <span data-ttu-id="467ec-1489">Gli spazi vuoti possono essere visualizzati all'inizio di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag e può apparire alla fine di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1489">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="467ec-1490">Un simbolo di valuta delle impostazioni cultura specifiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1490">A culture-specific currency symbol.</span></span> <span data-ttu-id="467ec-1491">La posizione nella stringa è definita per il <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> e <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> delle impostazioni cultura indicato dal `provider` parametro.</span><span class="sxs-lookup"><span data-stu-id="467ec-1491">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the culture indicated by the `provider` parameter.</span></span> <span data-ttu-id="467ec-1492">Simbolo di valuta le impostazioni cultura correnti può apparire `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1492">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1493">*sign*</span><span class="sxs-lookup"><span data-stu-id="467ec-1493">*sign*</span></span>|<span data-ttu-id="467ec-1494">Un segno facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1494">An optional sign.</span></span> <span data-ttu-id="467ec-1495">Il segno può essere visualizzati all'inizio di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag e può apparire alla fine di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1495">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="467ec-1496">Le parentesi possono essere utilizzate `value` per indicare un valore negativo se `style` include il <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1496">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1497">*digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1497">*digits*</span></span><br /><br /> <span data-ttu-id="467ec-1498">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1498">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="467ec-1499">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1499">*exponential_digits*</span></span>|<span data-ttu-id="467ec-1500">Una sequenza di cifre da 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="467ec-1500">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="467ec-1501">Per *frazionarie*, solo la cifra 0 è valida.</span><span class="sxs-lookup"><span data-stu-id="467ec-1501">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="467ec-1502">*,*</span><span class="sxs-lookup"><span data-stu-id="467ec-1502">*,*</span></span>|<span data-ttu-id="467ec-1503">Un simbolo di separatore di gruppo di impostazioni cultura specifiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1503">A culture-specific group separator symbol.</span></span> <span data-ttu-id="467ec-1504">Il simbolo di separatore di gruppo di impostazioni cultura specificate da `provider` possono essere visualizzati in `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1504">The group separator symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1505">*.*</span><span class="sxs-lookup"><span data-stu-id="467ec-1505">*.*</span></span>|<span data-ttu-id="467ec-1506">Simbolo di separatore decimale delle impostazioni cultura specifiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1506">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="467ec-1507">Il simbolo di separatore decimale delle impostazioni cultura designato da `provider` possono essere visualizzati in `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1507">The decimal point symbol of the culture designated by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="467ec-1508">Solo la cifra 0 può essere visualizzato come una cifra frazionaria per l'operazione di analisi abbia esito positivo; Se *frazionarie* include qualsiasi cifra, un <xref:System.FormatException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1508">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="467ec-1509">E</span><span class="sxs-lookup"><span data-stu-id="467ec-1509">E</span></span>|<span data-ttu-id="467ec-1510">Il "e" o il carattere "E", che indica che il valore è rappresentato nella notazione esponenziale (scientifica).</span><span class="sxs-lookup"><span data-stu-id="467ec-1510">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="467ec-1511">Il `value` parametro può rappresentare un numero in notazione esponenziale se `style` include il <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1511">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1512">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1512">*hexdigits*</span></span>|<span data-ttu-id="467ec-1513">Una sequenza di cifre esadecimali da 0 a f, o da 0 a F.</span><span class="sxs-lookup"><span data-stu-id="467ec-1513">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="467ec-1514">Una stringa che contiene solo cifre (che corrisponde alla <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> stile) viene sempre analizzata correttamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1514">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="467ec-1515">La maggior parte degli altri <xref:System.Globalization.NumberStyles> membri controllano gli elementi che possono essere presenti, ma non deve essere presente, nella stringa di input.</span><span class="sxs-lookup"><span data-stu-id="467ec-1515">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="467ec-1516">Nella tabella seguente indica come singoli <xref:System.Globalization.NumberStyles> membri interessano gli elementi che possono essere presenti in `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1516">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="467ec-1517">Valore NumberStyles</span><span class="sxs-lookup"><span data-stu-id="467ec-1517">NumberStyles value</span></span>|<span data-ttu-id="467ec-1518">Elementi consentiti nel valore oltre alle cifre</span><span class="sxs-lookup"><span data-stu-id="467ec-1518">Elements permitted in value in addition to digits</span></span>|  
|------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="467ec-1519">Il *cifre* solo l'elemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1519">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="467ec-1520">Il separatore decimale (.) e *cifre frazionarie* elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1520">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="467ec-1521">Il "e" o il carattere "E", che indica la notazione esponenziale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1521">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="467ec-1522">insieme a *cifre_esponenziali*.</span><span class="sxs-lookup"><span data-stu-id="467ec-1522">along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="467ec-1523">Il *ws* elemento all'inizio di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1523">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="467ec-1524">Il *ws* elemento alla fine di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1524">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="467ec-1525">Il *sign* elemento all'inizio di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1525">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="467ec-1526">Il *sign* elemento alla fine di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1526">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="467ec-1527">Il *sign* elemento sotto forma di parentesi che racchiudono il valore numerico.</span><span class="sxs-lookup"><span data-stu-id="467ec-1527">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="467ec-1528">Elemento separatore (,) del gruppo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1528">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="467ec-1529">Elemento valuta ($).</span><span class="sxs-lookup"><span data-stu-id="467ec-1529">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="467ec-1530">Tutti gli elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1530">All elements.</span></span> <span data-ttu-id="467ec-1531">Tuttavia, `value` non può rappresentare un numero esadecimale o un numero in notazione esponenziale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1531">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="467ec-1532">Il *ws* elemento all'inizio o alla fine di `value`, *sign* all'inizio di `value`e il simbolo di separatore decimale (.).</span><span class="sxs-lookup"><span data-stu-id="467ec-1532">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="467ec-1533">Il `value` parametro inoltre possibile utilizzare la notazione esponenziale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1533">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="467ec-1534">Il `ws`, `sign`, il separatore di gruppi (,) e gli elementi il separatore decimale (.).</span><span class="sxs-lookup"><span data-stu-id="467ec-1534">The `ws`, `sign`, group separator (,), and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="467ec-1535">Tutti gli elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1535">All elements.</span></span> <span data-ttu-id="467ec-1536">Tuttavia, `value` può rappresentare un numero esadecimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1536">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="467ec-1537">Se si utilizza il <xref:System.Numerics.BigInteger.Parse%2A> metodo per il round trip la rappresentazione di stringa di un <xref:System.Numerics.BigInteger> valore ottenuto come risultato di <xref:System.Numerics.BigInteger.ToString%2A> (metodo), è consigliabile utilizzare il <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> metodo con l'identificatore di formato "R" per generare la rappresentazione di stringa del <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1537">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="467ec-1538">In caso contrario, la rappresentazione di stringa del <xref:System.Numerics.BigInteger> mantiene solo il 50 cifre più significative del valore originale e i dati vadano perse quando si utilizza il <xref:System.Numerics.BigInteger.Parse%2A> metodo per il ripristino di <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1538">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="467ec-1539">A differenza di altri <xref:System.Globalization.NumberStyles> valori, che consentono di ma non richiedono la presenza di particolari elementi di stile in `value`, <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> valore dello stile significa che i singoli caratteri numerici in `value` vengono sempre interpretate come caratteri esadecimali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1539">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for but do not require the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="467ec-1540">I caratteri esadecimali validi sono 0-9, A-F e -f.</span><span class="sxs-lookup"><span data-stu-id="467ec-1540">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="467ec-1541">Gli unici altri flag che possono essere combinati con il `style` parametro sono <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> e <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1541">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="467ec-1542">(Il <xref:System.Globalization.NumberStyles> enumerazione include uno stile di numero composto, <xref:System.Globalization.NumberStyles.HexNumber>, che include entrambi i flag di spazi vuoti.)</span><span class="sxs-lookup"><span data-stu-id="467ec-1542">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="467ec-1543">Se `value` è la rappresentazione di stringa di un numero esadecimale, non può essere preceduto da qualsiasi effetto (ad esempio `0x` o `&h`) che lo distingue come numero esadecimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1543">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="467ec-1544">In questo modo la conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1544">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="467ec-1545">Se `value` è una stringa esadecimale, il <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> metodo interpreta `value` come un numero negativo archiviato tramite la rappresentazione in complemento a due se le prime due cifre esadecimali sono maggiori o uguali a `0x80`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1545">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="467ec-1546">In altre parole, il metodo interpreta il bit più significativo del primo byte in `value` come bit di segno.</span><span class="sxs-lookup"><span data-stu-id="467ec-1546">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="467ec-1547">Per assicurarsi che una stringa esadecimale viene correttamente interpretata come un numero positivo, la prima cifra `value` deve avere un valore pari a zero.</span><span class="sxs-lookup"><span data-stu-id="467ec-1547">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="467ec-1548">Ad esempio, il metodo interpreta `0x80` come un valore negativo, ma interpreta `0x080` o `0x0080` come un valore positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1548">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="467ec-1549">Nell'esempio seguente viene illustrata la differenza tra stringhe esadecimali che rappresentano valori positivi e negativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1549">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="467ec-1550">Il `provider` parametro è un <xref:System.IFormatProvider> implementazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1550">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="467ec-1551">Il relativo <xref:System.IFormatProvider.GetFormat%2A> metodo restituisce un <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1551">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="467ec-1552">In genere, `provider` può essere una qualsiasi delle operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1552">Typically, `provider` can be any one of the following:</span></span>  
  
-   <span data-ttu-id="467ec-1553">Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura che fornisce informazioni sulla formattazione numeriche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1553">A <xref:System.Globalization.CultureInfo> object that represents the culture that provides numeric formatting information.</span></span> <span data-ttu-id="467ec-1554">Il relativo <xref:System.Globalization.CultureInfo.GetFormat%2A> metodo restituisce il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni sulla formattazione numeriche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1554">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span>  
  
-   <span data-ttu-id="467ec-1555">Oggetto <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1555">A <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="467ec-1556">(L'implementazione di <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> appena restituisce se stesso.)</span><span class="sxs-lookup"><span data-stu-id="467ec-1556">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="467ec-1557">Un oggetto personalizzato che implementa <xref:System.IFormatProvider> e utilizza il <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> per creare un'istanza e restituire il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1557">A custom object that implements <xref:System.IFormatProvider> and uses the <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> method to instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="467ec-1558">Se `provider` è `null`, <xref:System.Globalization.NumberFormatInfo> per le impostazioni cultura correnti dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-1558">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1559">Nell'esempio seguente effettua più chiamate per il <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> metodo utilizzando varie combinazioni di valori per il `style` e `provider` parametri.</span><span class="sxs-lookup"><span data-stu-id="467ec-1559">The following example makes several calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#2)]  
  
 <span data-ttu-id="467ec-1560">Un numero di singole chiamate per il <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> metodo passare un'istanza delle operazioni seguenti `BigIntegerFormatProvider` (classe), che definisce una tilde (~) come il segno negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1560">A number of the individual calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="467ec-1561"><paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1561"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="467ec-1562">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-1562">-or-</span></span>  
  
 <span data-ttu-id="467ec-1563"><paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1563"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="467ec-1564"><paramref name="value" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1564"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="467ec-1565"><paramref name="value" /> non è conforme al criterio di input specificato da <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1565"><paramref name="value" /> does not comply with the input pattern specified by <paramref name="style" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Pow (System.Numerics.BigInteger value, int exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Pow(valuetype System.Numerics.BigInteger value, int32 exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (value As BigInteger, exponent As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Pow(System::Numerics::BigInteger value, int exponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1566">Numero da elevare alla potenza di <c>exponent</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1566">The number to raise to the <c>exponent</c> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="467ec-1567">Esponente per il quale elevare <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1567">The exponent to raise <c>value</c> by.</span></span></param>
        <summary><span data-ttu-id="467ec-1568">Eleva alla potenza di un valore specificato il valore <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1568">Raises a <see cref="T:System.Numerics.BigInteger" /> value to the power of a specified value.</span></span></summary>
        <returns><span data-ttu-id="467ec-1569">Risultato di <paramref name="value" /> elevato alla potenza di <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1569">The result of raising <paramref name="value" /> to the <paramref name="exponent" /> power.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1570">Il <xref:System.Numerics.BigInteger.Pow%2A> metodo restituisce 1 se il valore del parametro esponente è 0 o se i valori della proprietà di `value` e `exponent` i parametri sono pari a 0.</span><span class="sxs-lookup"><span data-stu-id="467ec-1570">The <xref:System.Numerics.BigInteger.Pow%2A> method returns 1 if the value of the exponent parameter is 0, or if the values of both the `value` and `exponent` parameters are 0.</span></span> <span data-ttu-id="467ec-1571">Se `exponent` è 1, il <xref:System.Numerics.BigInteger.Pow%2A> restituisce `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1571">If `exponent` is 1, the <xref:System.Numerics.BigInteger.Pow%2A> method returns `value`.</span></span> <span data-ttu-id="467ec-1572">Se `value` è negativo, il metodo restituisce un risultato negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1572">If `value` is negative, the method returns a negative result.</span></span>  
  
 <span data-ttu-id="467ec-1573">Questo metodo corrisponde al <xref:System.Math.Pow%2A?displayProperty=nameWithType> metodo per i tipi numerici primitivi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1573">This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1574">Nell'esempio seguente viene illustrato l'utilizzo di elevamento a potenza un <xref:System.Numerics.BigInteger> valore e un esponente il cui valore è compreso tra 0 e 10.</span><span class="sxs-lookup"><span data-stu-id="467ec-1574">The following example illustrates exponentiation using a <xref:System.Numerics.BigInteger> value and an exponent whose value ranges from 0 to 10.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#32)]
 [!code-vb[System.Numeric.BigInteger.Class#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="467ec-1575">Il valore del parametro <paramref name="exponent" /> è negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1575">The value of the <paramref name="exponent" /> parameter is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Remainder (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Remainder(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Remainder(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="467ec-1576">Valore da dividere.</span><span class="sxs-lookup"><span data-stu-id="467ec-1576">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="467ec-1577">Valore per cui dividere.</span><span class="sxs-lookup"><span data-stu-id="467ec-1577">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="467ec-1578">Esegue una divisione intera su due valori <see cref="T:System.Numerics.BigInteger" /> e restituisce il resto.</span><span class="sxs-lookup"><span data-stu-id="467ec-1578">Performs integer division on two <see cref="T:System.Numerics.BigInteger" /> values and returns the remainder.</span></span></summary>
        <returns><span data-ttu-id="467ec-1579">Resto risultante dalla divisione di <paramref name="dividend" /> per <paramref name="divisor" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1579">The remainder after dividing <paramref name="dividend" /> by <paramref name="divisor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1580">Il segno del resto è il segno del `dividend` parametro.</span><span class="sxs-lookup"><span data-stu-id="467ec-1580">The sign of the remainder is the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="467ec-1581">Il <xref:System.Numerics.BigInteger.Remainder%2A> metodo viene implementato per lingue che non supportano gli operatori personalizzati.</span><span class="sxs-lookup"><span data-stu-id="467ec-1581">The <xref:System.Numerics.BigInteger.Remainder%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="467ec-1582">Il comportamento è identico alla divisione utilizzando l'operatore modulo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1582">Its behavior is identical to division using the modulus operator.</span></span>  
  
 <span data-ttu-id="467ec-1583">Se necessario, il metodo esegue automaticamente la conversione implicita di altri tipi integrali a <xref:System.Numerics.BigInteger> oggetti prima di eseguire l'operazione di modulo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1583">If necessary, the method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects before it performs the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1584">Nell'esempio seguente viene confrontato il resto di <xref:System.Numerics.BigInteger.DivRem%2A> metodo con il resto restituito dal <xref:System.Numerics.BigInteger.Remainder%2A> metodo per stabilire che i due metodi calcolano resti identici.</span><span class="sxs-lookup"><span data-stu-id="467ec-1584">The following example compares the remainder from the <xref:System.Numerics.BigInteger.DivRem%2A> method with the remainder returned by the <xref:System.Numerics.BigInteger.Remainder%2A> method to establish that the two methods calculate identical remainders.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/cs/Remainder1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/vb/Remainder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="467ec-1585"><paramref name="divisor" /> è 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="467ec-1585"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public int Sign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Sign" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Sign" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sign As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Sign { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467ec-1586">Ottiene un numero che indica il segno (negativo, positivo o zero) dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1586">Gets a number that indicates the sign (negative, positive, or zero) of the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <value><span data-ttu-id="467ec-1587">Numero che indica il segno dell'oggetto <see cref="T:System.Numerics.BigInteger" />, come illustrato nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1587">A number that indicates the sign of the <see cref="T:System.Numerics.BigInteger" /> object, as shown in the following table.</span></span>  
  
 <span data-ttu-id="467ec-1588"><list type="table"><listheader><term> Numero</span><span class="sxs-lookup"><span data-stu-id="467ec-1588"><list type="table"><listheader><term> Number</span></span>  
  
 <span data-ttu-id="467ec-1589"></term><description> Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-1589"></term><description> Description</span></span>  
  
 <span data-ttu-id="467ec-1590"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="467ec-1590"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="467ec-1591"></term><description> Il valore di questo oggetto è negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1591"></term><description> The value of this object is negative.</span></span>  
  
 <span data-ttu-id="467ec-1592"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="467ec-1592"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="467ec-1593"></term><description> Il valore di questo oggetto è 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="467ec-1593"></term><description> The value of this object is 0 (zero).</span></span>  
  
 <span data-ttu-id="467ec-1594"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="467ec-1594"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="467ec-1595"></term><description> Il valore di questo oggetto è positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1595"></term><description> The value of this object is positive.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1596">Il <xref:System.Numerics.BigInteger.Sign%2A> è equivalente alla proprietà di <xref:System.Math.Sign%2A?displayProperty=nameWithType> metodo per i tipi numerici primitivi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1596">The <xref:System.Numerics.BigInteger.Sign%2A> property is equivalent to the <xref:System.Math.Sign%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Subtract (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Subtract(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Subtract(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="467ec-1597">Valore da cui sottrarre (minuendo).</span><span class="sxs-lookup"><span data-stu-id="467ec-1597">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="467ec-1598">Valore da sottrarre (sottraendo).</span><span class="sxs-lookup"><span data-stu-id="467ec-1598">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="467ec-1599">Sottrae un valore <see cref="T:System.Numerics.BigInteger" /> da un altro e restituisce il risultato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1599">Subtracts one <see cref="T:System.Numerics.BigInteger" /> value from another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="467ec-1600">Risultato della sottrazione di <paramref name="right" /> da <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1600">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1601">I linguaggi che non supportano gli operatori personalizzati possono utilizzare il <xref:System.Numerics.BigInteger.Subtract%2A> metodo per eseguire sottrazioni utilizzando <xref:System.Numerics.BigInteger> valori.</span><span class="sxs-lookup"><span data-stu-id="467ec-1601">Languages that do not support custom operators can use the <xref:System.Numerics.BigInteger.Subtract%2A> method to perform subtraction using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="467ec-1602">Il <xref:System.Numerics.BigInteger.Subtract%2A> metodo è un sostituto utile per l'operatore di sottrazione quando si crea un <xref:System.Numerics.BigInteger> variabile mediante l'assegnazione di differenza risultante dalla sottrazione, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1602">The <xref:System.Numerics.BigInteger.Subtract%2A> method is a useful substitute for the subtraction operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it the difference that results from subtraction, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ToByteArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="467ec-1603">Converte un valore <see cref="T:System.Numerics.BigInteger" /> in una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="467ec-1603">Converts a <see cref="T:System.Numerics.BigInteger" /> value to a byte array.</span></span></summary>
        <returns><span data-ttu-id="467ec-1604">Valore dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente convertito in una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="467ec-1604">The value of the current <see cref="T:System.Numerics.BigInteger" /> object converted to an array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1605">I singoli byte nella matrice restituita da questo metodo vengono visualizzati in ordine little-endian.</span><span class="sxs-lookup"><span data-stu-id="467ec-1605">The individual bytes in the array returned by this method appear in little-endian order.</span></span> <span data-ttu-id="467ec-1606">Ovvero, i byte di ordine inferiore del valore precedono i byte di ordine superiore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1606">That is, the lower-order bytes of the value precede the higher-order bytes.</span></span> <span data-ttu-id="467ec-1607">Il primo byte della matrice riflette i primi otto bit del <xref:System.Numerics.BigInteger> valore, il secondo byte riflette otto bit successivo e così via.</span><span class="sxs-lookup"><span data-stu-id="467ec-1607">The first byte of the array reflects the first eight bits of the <xref:System.Numerics.BigInteger> value, the second byte reflects the next eight bits, and so on.</span></span> <span data-ttu-id="467ec-1608">Ad esempio, il valore 1024, o 0x0400, viene archiviata come la seguente matrice a due byte.</span><span class="sxs-lookup"><span data-stu-id="467ec-1608">For example, the value 1024, or 0x0400, is stored as the following array of two bytes:</span></span>  
  
|<span data-ttu-id="467ec-1609">Elemento</span><span class="sxs-lookup"><span data-stu-id="467ec-1609">Element</span></span>|<span data-ttu-id="467ec-1610">Valore byte</span><span class="sxs-lookup"><span data-stu-id="467ec-1610">Byte value</span></span>|  
|-------------|----------------|  
|<span data-ttu-id="467ec-1611">0</span><span class="sxs-lookup"><span data-stu-id="467ec-1611">0</span></span>|<span data-ttu-id="467ec-1612">0x00</span><span class="sxs-lookup"><span data-stu-id="467ec-1612">0x00</span></span>|  
|<span data-ttu-id="467ec-1613">1</span><span class="sxs-lookup"><span data-stu-id="467ec-1613">1</span></span>|<span data-ttu-id="467ec-1614">0x04</span><span class="sxs-lookup"><span data-stu-id="467ec-1614">0x04</span></span>|  
  
 <span data-ttu-id="467ec-1615">I valori negativi vengono scritti nella matrice in una rappresentazione in complemento a due nel possibile formato più compatto.</span><span class="sxs-lookup"><span data-stu-id="467ec-1615">Negative values are written to the array using two's complement representation in the most compact form possible.</span></span> <span data-ttu-id="467ec-1616">Ad esempio, -1 è rappresentato come un singolo byte il cui valore è `0xFF` anziché come una matrice con più elementi, ad esempio `0xFF`, `0xFF` o `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1616">For example, -1 is represented as a single byte whose value is `0xFF` instead of as an array with multiple elements, such as `0xFF`, `0xFF` or `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span></span>  
  
 <span data-ttu-id="467ec-1617">Poiché in complemento a due rappresentazione sempre interpreta il bit più significativo dell'ultimo byte nella matrice (il byte nella posizione <xref:System.Array.Length%2A?displayProperty=nameWithType> `- 1`) come bit di segno, il metodo restituisce una matrice di byte con un elemento aggiuntivo, il cui valore è uguale a zero per rimuovere l'ambiguità dei valori positivi che potrebbero altrimenti essere interpretati come impostare i bit di segno.</span><span class="sxs-lookup"><span data-stu-id="467ec-1617">Because two's complement representation always interprets the highest-order bit of the last byte in the array (the byte at position <xref:System.Array.Length%2A?displayProperty=nameWithType>`- 1`) as the sign bit, the method returns a byte array with an extra element whose value is zero to disambiguate positive values that could otherwise be interpreted as having their sign bits set.</span></span> <span data-ttu-id="467ec-1618">Ad esempio, il valore 120 o `0x78` è rappresentato come una matrice a byte singolo: `0x78`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1618">For example, the value 120 or `0x78` is represented as a single-byte array: `0x78`.</span></span> <span data-ttu-id="467ec-1619">Tuttavia, 128, o `0x80`, viene rappresentata come una matrice di byte di due: `0x80`, `0x00`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1619">However, 128, or `0x80`, is represented as a two-byte array: `0x80`, `0x00`.</span></span>  
  
 <span data-ttu-id="467ec-1620">È possibile round trip un <xref:System.Numerics.BigInteger> valore da archiviare i dati in una matrice di byte e quindi eseguire il ripristino utilizzando il <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1620">You can round-trip a <xref:System.Numerics.BigInteger> value by storing it to a byte array and then restoring it using the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="467ec-1621">Se il codice modifica il valore di singoli byte nella matrice restituita da questo metodo prima di ripristinare il valore, è necessario assicurarsi che non modificare inavvertitamente il bit di segno.</span><span class="sxs-lookup"><span data-stu-id="467ec-1621">If your code modifies the value of individual bytes in the array returned by this method before it restores the value, you must make sure that you do not unintentionally change the sign bit.</span></span> <span data-ttu-id="467ec-1622">Ad esempio, se le modifiche aumenta un valore positivo, in modo che l'ordine più elevato di bit nell'ultimo elemento della matrice di byte diventa impostato, che è possibile aggiungere un nuovo il cui valore è uguale a zero alla fine della matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="467ec-1622">For example, if your modifications increase a positive value so that the highest-order bit in the last element of the byte array becomes set, you can add a new byte whose value is zero to the end of the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1623">Nell'esempio seguente viene illustrato come alcune <xref:System.Numerics.BigInteger> i valori sono rappresentati in matrici di byte.</span><span class="sxs-lookup"><span data-stu-id="467ec-1623">The following example illustrates how some <xref:System.Numerics.BigInteger> values are represented in byte arrays.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/cs/ToByteArray1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/vb/ToByteArray1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray (bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray(bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray (Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Byte()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-1624">Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1624">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="467ec-1625">Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1625">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="467ec-1626">Rappresentazione di stringa del valore <see cref="T:System.Numerics.BigInteger" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1626">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1627">Il <xref:System.Numerics.BigInteger.ToString> formati del metodo un <xref:System.Numerics.BigInteger> valore del "R", o round trip, formato delle impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1627">The <xref:System.Numerics.BigInteger.ToString> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format of the current culture.</span></span> <span data-ttu-id="467ec-1628">Se si desidera specificare un formato diverso o delle impostazioni cultura, utilizzare gli altri overload di <xref:System.Numerics.BigInteger.ToString%2A> (metodo), come indicato di seguito:</span><span class="sxs-lookup"><span data-stu-id="467ec-1628">If you want to specify a different format or culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="467ec-1629">Per utilizzare il formato</span><span class="sxs-lookup"><span data-stu-id="467ec-1629">To use format</span></span>|<span data-ttu-id="467ec-1630">Per impostazioni cultura</span><span class="sxs-lookup"><span data-stu-id="467ec-1630">For culture</span></span>|<span data-ttu-id="467ec-1631">Utilizzare l'overload</span><span class="sxs-lookup"><span data-stu-id="467ec-1631">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="467ec-1632">Formato round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="467ec-1632">Round-trip ("R") format</span></span>|<span data-ttu-id="467ec-1633">Impostazioni cultura specifiche</span><span class="sxs-lookup"><span data-stu-id="467ec-1633">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%2A>|  
|<span data-ttu-id="467ec-1634">Un formato specifico</span><span class="sxs-lookup"><span data-stu-id="467ec-1634">A specific format</span></span>|<span data-ttu-id="467ec-1635">Impostazioni cultura predefinite del (corrente)</span><span class="sxs-lookup"><span data-stu-id="467ec-1635">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="467ec-1636">Un formato specifico</span><span class="sxs-lookup"><span data-stu-id="467ec-1636">A specific format</span></span>|<span data-ttu-id="467ec-1637">Impostazioni cultura specifiche</span><span class="sxs-lookup"><span data-stu-id="467ec-1637">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="467ec-1638">Rappresentazione di stringa del <xref:System.Numerics.BigInteger> valore include un segno negativo se il valore è negativo e una sequenza di cifre comprese tra 0 e 9 senza zeri iniziali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1638">The string representation of the <xref:System.Numerics.BigInteger> value includes a negative sign if its value is negative, and a sequence of digits ranging from 0 to 9 without leading zeros.</span></span> <span data-ttu-id="467ec-1639">Il segno negativo è definito dal <xref:System.Globalization.NumberFormatInfo> oggetto per le impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1639">The negative sign is defined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1640">L'esempio seguente mostra un <xref:System.Numerics.BigInteger> valore utilizzando il valore predefinito <xref:System.Numerics.BigInteger.ToString> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1640">The following example displays a <xref:System.Numerics.BigInteger> value by using the default <xref:System.Numerics.BigInteger.ToString> method.</span></span> <span data-ttu-id="467ec-1641">Visualizza anche le rappresentazioni di stringa del <xref:System.Numerics.BigInteger> valore risultante dall'utilizzo di alcuni identificatori di formato standard.</span><span class="sxs-lookup"><span data-stu-id="467ec-1641">It also displays the string representations of the <xref:System.Numerics.BigInteger> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="467ec-1642">Negli esempi vengono visualizzati utilizzando le convenzioni di formattazione delle impostazioni cultura en-US.</span><span class="sxs-lookup"><span data-stu-id="467ec-1642">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="467ec-1643">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="467ec-1643">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="467ec-1644">Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente usando le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span><span class="sxs-lookup"><span data-stu-id="467ec-1644">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="467ec-1645">Rappresentazione di stringa del valore <see cref="T:System.Numerics.BigInteger" /> corrente nel formato specificato dal parametro <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1645">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="provider" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1646">Il <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> formati del metodo un <xref:System.Numerics.BigInteger> valore in "R" o round trip, formattare utilizzando il <xref:System.Globalization.NumberFormatInfo> oggetto delle impostazioni cultura specificata.</span><span class="sxs-lookup"><span data-stu-id="467ec-1646">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="467ec-1647">Se si desidera specificare le impostazioni cultura correnti o un formato diverso, utilizzare gli altri overload di <xref:System.Numerics.BigInteger.ToString%2A> (metodo), come indicato di seguito:</span><span class="sxs-lookup"><span data-stu-id="467ec-1647">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="467ec-1648">Per utilizzare il formato</span><span class="sxs-lookup"><span data-stu-id="467ec-1648">To use format</span></span>|<span data-ttu-id="467ec-1649">Per impostazioni cultura</span><span class="sxs-lookup"><span data-stu-id="467ec-1649">For culture</span></span>|<span data-ttu-id="467ec-1650">Utilizzare l'overload</span><span class="sxs-lookup"><span data-stu-id="467ec-1650">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="467ec-1651">Formato round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="467ec-1651">Round-trip ("R") format</span></span>|<span data-ttu-id="467ec-1652">Impostazioni cultura predefinite del (corrente)</span><span class="sxs-lookup"><span data-stu-id="467ec-1652">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="467ec-1653">Un formato specifico</span><span class="sxs-lookup"><span data-stu-id="467ec-1653">A specific format</span></span>|<span data-ttu-id="467ec-1654">Impostazioni cultura predefinite del (corrente)</span><span class="sxs-lookup"><span data-stu-id="467ec-1654">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="467ec-1655">Un formato specifico</span><span class="sxs-lookup"><span data-stu-id="467ec-1655">A specific format</span></span>|<span data-ttu-id="467ec-1656">Impostazioni cultura specifiche</span><span class="sxs-lookup"><span data-stu-id="467ec-1656">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="467ec-1657">Il `provider` parametro è un <xref:System.IFormatProvider> implementazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1657">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="467ec-1658">Il relativo <xref:System.IFormatProvider.GetFormat%2A> metodo restituisce un <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1658">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="467ec-1659">Se `provider` è `null`, <xref:System.Numerics.BigInteger> valore viene formattato utilizzando il <xref:System.Globalization.NumberFormatInfo> oggetto delle impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1659">If `provider` is `null`, the <xref:System.Numerics.BigInteger> value is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="467ec-1660">L'unica proprietà del <xref:System.Globalization.NumberFormatInfo> oggetto che controlla la rappresentazione di stringa del <xref:System.Numerics.BigInteger> valore utilizzando l'identificatore di formato generale è <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, che definisce il carattere che rappresenta il segno negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1660">The only property of the <xref:System.Globalization.NumberFormatInfo> object that controls the string representation of the <xref:System.Numerics.BigInteger> value using the general format specifier is <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, which defines the character that represents the negative sign.</span></span>  
  
 <span data-ttu-id="467ec-1661">Il `provider` parametro può essere uno dei seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1661">The `provider` parameter can be one of the following:</span></span>  
  
-   <span data-ttu-id="467ec-1662">Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1662">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="467ec-1663">Il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1663">The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="467ec-1664">Un oggetto personalizzato che implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1664">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="467ec-1665">Il relativo <xref:System.IFormatProvider.GetFormat%2A> metodo restituisce il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1665">Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1666">Nell'esempio seguente viene creata un'istanza di un oggetto personalizzato <xref:System.Globalization.NumberFormatInfo> oggetto che definisce la tilde (~) come un segno negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1666">The following example instantiates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span> <span data-ttu-id="467ec-1667">Il <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> metodo utilizza quindi l'oggetto personalizzato <xref:System.Globalization.NumberFormatInfo> oggetto per visualizzare un valore negativo <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1667">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method then uses the custom <xref:System.Globalization.NumberFormatInfo> object to display a negative <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/cs/System.Numeric.BigInteger.ToString.cs#1)]
 [!code-vb[System.Numeric.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/vb/System.Numeric.BigInteger.ToString.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="467ec-1668">Stringa di formato numerico standard o personalizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1668">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="467ec-1669">Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente, usando il formato specificato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1669">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="467ec-1670">Rappresentazione di stringa del valore <see cref="T:System.Numerics.BigInteger" /> corrente nel formato specificato dal parametro <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1670">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="format" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1671">Il <xref:System.Numerics.BigInteger.ToString%28System.String%29> formati del metodo un <xref:System.Numerics.BigInteger> valore in un formato specificato utilizzando un <xref:System.Globalization.NumberFormatInfo> oggetto che rappresenta le convenzioni delle impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1671">The <xref:System.Numerics.BigInteger.ToString%28System.String%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="467ec-1672">Se si desidera utilizzare il "R" o i round trip, formattare o specificare una lingua diversa, utilizzare gli altri overload di <xref:System.Numerics.BigInteger.ToString%2A> (metodo), come indicato di seguito:</span><span class="sxs-lookup"><span data-stu-id="467ec-1672">If you want to use the "R", or round-trip, format or specify a different culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="467ec-1673">Per utilizzare il formato</span><span class="sxs-lookup"><span data-stu-id="467ec-1673">To use format</span></span>|<span data-ttu-id="467ec-1674">Per impostazioni cultura</span><span class="sxs-lookup"><span data-stu-id="467ec-1674">For culture</span></span>|<span data-ttu-id="467ec-1675">Utilizzare l'overload</span><span class="sxs-lookup"><span data-stu-id="467ec-1675">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="467ec-1676">Formato round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="467ec-1676">Round-trip ("R") format</span></span>|<span data-ttu-id="467ec-1677">Impostazioni cultura predefinite del (corrente)</span><span class="sxs-lookup"><span data-stu-id="467ec-1677">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="467ec-1678">Formato round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="467ec-1678">Round-trip ("R") format</span></span>|<span data-ttu-id="467ec-1679">Impostazioni cultura specifiche</span><span class="sxs-lookup"><span data-stu-id="467ec-1679">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="467ec-1680">Un formato specifico</span><span class="sxs-lookup"><span data-stu-id="467ec-1680">A specific format</span></span>|<span data-ttu-id="467ec-1681">Impostazioni cultura specifiche</span><span class="sxs-lookup"><span data-stu-id="467ec-1681">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="467ec-1682">Il `format` parametro può essere qualsiasi [stringa numerica standard](~/docs/standard/base-types/standard-numeric-format-strings.md), o qualsiasi combinazione di [stringhe di formato numerico personalizzato](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="467ec-1682">The `format` parameter can be any valid [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="467ec-1683">Se `format` è uguale a <xref:System.String.Empty?displayProperty=nameWithType> o `null`, il valore restituito dell'oggetto corrente <xref:System.Numerics.BigInteger> oggetto viene formattato con l'identificatore di formato round trip ("R").</span><span class="sxs-lookup"><span data-stu-id="467ec-1683">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="467ec-1684">Se `format` è qualsiasi altro valore, il metodo genera un <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1684">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="467ec-1685">.NET Framework fornisce supporto di formattazione completo, come descritto in maggior dettaglio negli argomenti di formattazione seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1685">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="467ec-1686">Per ulteriori informazioni sugli identificatori di formato numerico, vedere [stringhe di formato numerico Standard](~/docs/standard/base-types/standard-numeric-format-strings.md) e [stringhe di formato numerico personalizzato](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="467ec-1686">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="467ec-1687">Per ulteriori informazioni sul supporto per la formattazione in .NET Framework, vedere [formattazione dei tipi di](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="467ec-1687">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="467ec-1688">Il formato della stringa restituita è determinato dal <xref:System.Globalization.NumberFormatInfo> oggetto per le impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1688">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="467ec-1689">A seconda di `format` parametro, questo oggetto controlla i simboli, ad esempio il segno negativo, il separatore di gruppo e il simbolo di separatore decimale nella stringa di output.</span><span class="sxs-lookup"><span data-stu-id="467ec-1689">Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</span></span> <span data-ttu-id="467ec-1690">Per fornire informazioni di formattazione per le impostazioni cultura diverse da quelle correnti, chiamare il <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="467ec-1690">To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1691">Nell'esempio seguente viene inizializzato un <xref:System.Numerics.BigInteger> valore e viene visualizzato tramite ogni stringa di formato standard e alcune stringhe di formato personalizzata.</span><span class="sxs-lookup"><span data-stu-id="467ec-1691">The following example initializes a <xref:System.Numerics.BigInteger> value and displays it by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="467ec-1692"><paramref name="format" /> non è una stringa di formato valida.</span><span class="sxs-lookup"><span data-stu-id="467ec-1692"><paramref name="format" /> is not a valid format string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="467ec-1693">Stringa di formato numerico standard o personalizzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1693">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="467ec-1694">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="467ec-1694">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="467ec-1695">Converte il valore numerico dell'oggetto <see cref="T:System.Numerics.BigInteger" /> corrente nella rappresentazione di stringa equivalente usando il formato specificato e le informazioni di formattazione specifiche delle impostazioni cultura indicate.</span><span class="sxs-lookup"><span data-stu-id="467ec-1695">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="467ec-1696">Rappresentazione di stringa del valore corrente di <see cref="T:System.Numerics.BigInteger" />, come specificato dai parametri <paramref name="format" /> e <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1696">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1697">Il <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> formati del metodo un <xref:System.Numerics.BigInteger> valore in un formato specificato utilizzando il <xref:System.Globalization.NumberFormatInfo> oggetto delle impostazioni cultura specificata.</span><span class="sxs-lookup"><span data-stu-id="467ec-1697">The <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="467ec-1698">Se si desidera utilizzare il formato di round trip o impostazioni cultura predefinite, utilizzare gli altri overload di <xref:System.Numerics.BigInteger.ToString%2A> (metodo), come indicato di seguito:</span><span class="sxs-lookup"><span data-stu-id="467ec-1698">If you want to use the round-trip format or default culture settings, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="467ec-1699">Per utilizzare il formato</span><span class="sxs-lookup"><span data-stu-id="467ec-1699">To use format</span></span>|<span data-ttu-id="467ec-1700">Per impostazioni cultura</span><span class="sxs-lookup"><span data-stu-id="467ec-1700">For culture</span></span>|<span data-ttu-id="467ec-1701">Utilizzare l'overload</span><span class="sxs-lookup"><span data-stu-id="467ec-1701">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="467ec-1702">Formato round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="467ec-1702">Round-trip ("R") format</span></span>|<span data-ttu-id="467ec-1703">Impostazioni cultura predefinite del (corrente)</span><span class="sxs-lookup"><span data-stu-id="467ec-1703">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="467ec-1704">Formato round-trip ("R")</span><span class="sxs-lookup"><span data-stu-id="467ec-1704">Round-trip ("R") format</span></span>|<span data-ttu-id="467ec-1705">Impostazioni cultura specifiche</span><span class="sxs-lookup"><span data-stu-id="467ec-1705">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="467ec-1706">Un formato specifico</span><span class="sxs-lookup"><span data-stu-id="467ec-1706">A specific format</span></span>|<span data-ttu-id="467ec-1707">Impostazioni cultura predefinite del (corrente)</span><span class="sxs-lookup"><span data-stu-id="467ec-1707">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
  
 <span data-ttu-id="467ec-1708">Il `format` parametro può essere qualsiasi [stringa numerica standard](~/docs/standard/base-types/standard-numeric-format-strings.md), o qualsiasi combinazione di [stringhe di formato numerico personalizzato](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="467ec-1708">The `format` parameter can be any valid  [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="467ec-1709">Se `format` è uguale a <xref:System.String.Empty?displayProperty=nameWithType> o `null`, il valore restituito dell'oggetto corrente <xref:System.Numerics.BigInteger> oggetto viene formattato con l'identificatore di formato round trip ("R").</span><span class="sxs-lookup"><span data-stu-id="467ec-1709">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="467ec-1710">Se `format` è qualsiasi altro valore, il metodo genera un <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1710">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="467ec-1711">.NET Framework fornisce supporto di formattazione completo, come descritto in maggior dettaglio negli argomenti di formattazione seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1711">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="467ec-1712">Per ulteriori informazioni sugli identificatori di formato numerico, vedere [stringhe di formato numerico Standard](~/docs/standard/base-types/standard-numeric-format-strings.md) e [stringhe di formato numerico personalizzato](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="467ec-1712">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="467ec-1713">Per ulteriori informazioni sul supporto per la formattazione in .NET Framework, vedere [formattazione dei tipi di](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="467ec-1713">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="467ec-1714">Il `provider` parametro è un <xref:System.IFormatProvider> implementazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1714">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="467ec-1715">Il relativo <xref:System.IFormatProvider.GetFormat%2A> metodo restituisce un <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni specifiche delle impostazioni cultura sul formato della stringa restituita da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1715">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="467ec-1716">Quando il <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> metodo viene richiamato, viene chiamato il `provider` del parametro <xref:System.IFormatProvider.GetFormat%2A> (metodo) e lo passa a un <xref:System.Type> oggetto che rappresenta il <xref:System.Globalization.NumberFormatInfo> tipo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1716">When the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="467ec-1717">Il <xref:System.IFormatProvider.GetFormat%2A> metodo quindi restituisce il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni per la formattazione di `value` parametro, ad esempio il simbolo di segno negativo, il simbolo di separatore di gruppo o il simbolo di separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1717">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the `value` parameter, such as the negative sign symbol, the group separator symbol, or the decimal point symbol.</span></span> <span data-ttu-id="467ec-1718">Esistono tre modi per utilizzare il `provider` parametro per fornire informazioni di formattazione per il <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> metodo:</span><span class="sxs-lookup"><span data-stu-id="467ec-1718">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="467ec-1719">È possibile passare un <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1719">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="467ec-1720">Il relativo <xref:System.Globalization.CultureInfo.GetFormat%2A> metodo restituisce il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni sulla formattazione numeriche per le impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="467ec-1720">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="467ec-1721">È possibile passare l'effettivo <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni sulla formattazione numeriche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1721">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="467ec-1722">(L'implementazione di <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> appena restituisce se stesso.)</span><span class="sxs-lookup"><span data-stu-id="467ec-1722">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="467ec-1723">È possibile passare un oggetto personalizzato che implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1723">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="467ec-1724">Il relativo <xref:System.IFormatProvider.GetFormat%2A> metodo crea e restituisce il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1724">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="467ec-1725">Se `provider` è `null`, la formattazione della stringa restituita è basata sul <xref:System.Globalization.NumberFormatInfo> oggetto delle impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1725">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1726">Nell'esempio seguente viene inizializzato un <xref:System.Numerics.BigInteger> valore e lo visualizza nella console mediante una stringa di formato standard e un <xref:System.Globalization.NumberFormatInfo> oggetto che definisce la tilde (~) come un segno negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1726">The following example initializes a <xref:System.Numerics.BigInteger> value, and displays it to the console using a standard format string and a <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="467ec-1727"><paramref name="format" /> non è una stringa di formato valida.</span><span class="sxs-lookup"><span data-stu-id="467ec-1727"><paramref name="format" /> is not a valid format string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467ec-1728">Prova a convertire la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1728">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Numerics.BigInteger&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Numerics.BigInteger&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1729">Rappresentazione di stringa di un numero.</span><span class="sxs-lookup"><span data-stu-id="467ec-1729">The string representation of a number.</span></span></param>
        <param name="result"><span data-ttu-id="467ec-1730">Quando termina, questo metodo contiene l'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente al numero contenuto in <c>value</c> o zero (0) se la conversione non riesce.</span><span class="sxs-lookup"><span data-stu-id="467ec-1730">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <c>value</c>, or zero (0) if the conversion fails.</span></span> <span data-ttu-id="467ec-1731">La conversione non riesce se il parametro <c>value</c> è <see langword="null" /> o se non è nel formato corretto.</span><span class="sxs-lookup"><span data-stu-id="467ec-1731">The conversion fails if the <c>value</c> parameter is <see langword="null" /> or is not of the correct format.</span></span> <span data-ttu-id="467ec-1732">Questo parametro viene passato non inizializzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1732">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="467ec-1733">Prova a convertire la rappresentazione di stringa di un numero nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1733">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1734"><see langword="true" /> se <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1734"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1735">Il <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> metodo è simile di <xref:System.Numerics.BigInteger.Parse%28System.String%29> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce.</span><span class="sxs-lookup"><span data-stu-id="467ec-1735">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="467ec-1736">Questo metodo elimina la necessità di utilizzare la gestione delle eccezioni per verificare la presenza di un <xref:System.FormatException> se `value` non è valido e non può essere analizzato correttamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1736">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="467ec-1737">Il `value` parametro deve essere la rappresentazione di stringa di un numero decimale nel formato seguente:</span><span class="sxs-lookup"><span data-stu-id="467ec-1737">The `value` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="467ec-1738">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="467ec-1738">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="467ec-1739">Gli elementi tra parentesi quadre ([e]) sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1739">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="467ec-1740">Nella tabella seguente viene descritto ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1740">The following table describes each element.</span></span>  
  
|<span data-ttu-id="467ec-1741">Elemento</span><span class="sxs-lookup"><span data-stu-id="467ec-1741">Element</span></span>|<span data-ttu-id="467ec-1742">Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-1742">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="467ec-1743">*ws*</span><span class="sxs-lookup"><span data-stu-id="467ec-1743">*ws*</span></span>|<span data-ttu-id="467ec-1744">Spazio vuoto facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1744">Optional white space.</span></span>|  
|<span data-ttu-id="467ec-1745">*sign*</span><span class="sxs-lookup"><span data-stu-id="467ec-1745">*sign*</span></span>|<span data-ttu-id="467ec-1746">Un segno facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1746">An optional sign.</span></span> <span data-ttu-id="467ec-1747">Caratteri segno validi sono determinati dalle <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> e <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> delle impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1747">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="467ec-1748">*digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1748">*digits*</span></span>|<span data-ttu-id="467ec-1749">Una sequenza di cifre decimali comprese tra 0 e 9.</span><span class="sxs-lookup"><span data-stu-id="467ec-1749">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="467ec-1750">La stringa specificata per il `value` parametro non può contenere separatori di gruppo o un separatore decimale e non può avere una parte decimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1750">The string specified by the `value` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="467ec-1751">Il `value` parametro viene interpretato utilizzando il <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> stile.</span><span class="sxs-lookup"><span data-stu-id="467ec-1751">The `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="467ec-1752">Oltre a cifre decimali, sono consentiti solo spazi iniziali e finali con un segno iniziale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1752">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="467ec-1753">Per definire in modo esplicito gli elementi di stile con le informazioni di formattazione specifiche delle impostazioni cultura che possono essere presenti in `value`, chiamare il <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1753">To explicitly define the style elements with the culture-specific formatting information that can be present in `value`, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method.</span></span>  
  
 <span data-ttu-id="467ec-1754">Il `value` parametro viene analizzato tramite le informazioni di formattazione in un <xref:System.Globalization.NumberFormatInfo> oggetto per le impostazioni cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1754">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="467ec-1755">Per ulteriori informazioni, vedere <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1755">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="467ec-1756">Questo overload interpreta tutte le cifre di `value` parametro come cifre decimali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1756">This overload interprets all digits in the `value` parameter as decimal digits.</span></span> <span data-ttu-id="467ec-1757">Per analizzare la rappresentazione di stringa di un numero esadecimale, chiamare il <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> invece l'overload.</span><span class="sxs-lookup"><span data-stu-id="467ec-1757">To parse the string representation of a hexadecimal number, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1758">L'esempio seguente usa il <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> metodo per creare un'istanza di due <xref:System.Numerics.BigInteger> oggetti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1758">The following example uses the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="467ec-1759">Se le conversioni esito negativo, moltiplica ogni oggetto da un altro numero e quindi chiama il <xref:System.Numerics.BigInteger.Compare%2A> metodo per determinare la relazione tra i due oggetti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1759">If the conversions succeed, it multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two objects.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/cs/System.Numeric.BigInteger.TryParse.cs#1)]
 [!code-vb[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/vb/System.Numeric.BigInteger.TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="467ec-1760"><paramref name="value" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1760"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="467ec-1761">Rappresentazione di stringa di un numero.</span><span class="sxs-lookup"><span data-stu-id="467ec-1761">The string representation of a number.</span></span> <span data-ttu-id="467ec-1762">La stringa viene interpretata usando lo stile specificato da <c>style</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1762">The string is interpreted using the style specified by <c>style</c>.</span></span></param>
        <param name="style"><span data-ttu-id="467ec-1763">Combinazione bit per bit dei valori di enumerazione che indica gli elementi di stile che possono essere presenti in <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1763">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>value</c>.</span></span> <span data-ttu-id="467ec-1764">Un valore tipico da specificare è <see cref="F:System.Globalization.NumberStyles.Integer" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1764">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="467ec-1765">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura su <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1765">An object that supplies culture-specific formatting information about <c>value</c>.</span></span></param>
        <param name="result"><span data-ttu-id="467ec-1766">Quando termina, questo metodo contiene l'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente al numero contenuto in <c>value</c> o <see cref="P:System.Numerics.BigInteger.Zero" /> in caso di conversione non riuscita.</span><span class="sxs-lookup"><span data-stu-id="467ec-1766">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <c>value</c>, or <see cref="P:System.Numerics.BigInteger.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="467ec-1767">La conversione non riesce se il parametro <c>value</c> è <see langword="null" /> o se non è in un formato conforme a <c>style</c>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1767">The conversion fails if the <c>value</c> parameter is <see langword="null" /> or is not in a format that is compliant with <c>style</c>.</span></span> <span data-ttu-id="467ec-1768">Questo parametro viene passato non inizializzato.</span><span class="sxs-lookup"><span data-stu-id="467ec-1768">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="467ec-1769">Prova a convertire la rappresentazione di stringa di un numero in uno stile specificato e un formato specifico delle impostazioni cultura indicato nell'oggetto <see cref="T:System.Numerics.BigInteger" /> equivalente e restituisce un valore che indica se la conversione è stata eseguita correttamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1769">Tries to convert the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="467ec-1770"><see langword="true" /> se il parametro <paramref name="value" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1770"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1771">Il <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> metodo è simile di <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> metodo, ad eccezione del fatto che non genera un'eccezione se la conversione non riesce.</span><span class="sxs-lookup"><span data-stu-id="467ec-1771">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="467ec-1772">Questo metodo elimina la necessità di utilizzare la gestione delle eccezioni per verificare la presenza di un <xref:System.FormatException> se `value` non è valido e non può essere analizzato correttamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1772">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="467ec-1773">Il `style` parametro definisce gli elementi di stile (ad esempio spazio vuoto o un segno positivo o negativo) che sono consentiti nel `value` parametro per l'operazione di analisi abbia esito positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1773">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="467ec-1774">Deve essere una combinazione di flag di bit del <xref:System.Globalization.NumberStyles> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1774">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="467ec-1775">A seconda del valore di `style`, `value` parametro può includere gli elementi seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1775">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="467ec-1776">[*ws*] [*$*] [*sign*] [*cifre*,]*cifre*[.* frazionarie*] [E [*sign*]*cifre_esponenziali*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="467ec-1776">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="467ec-1777">Se il `style` parametro include <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, `value` parametro può includere gli elementi seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1777">If the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="467ec-1778">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="467ec-1778">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="467ec-1779">Gli elementi tra parentesi quadre ([e]) sono facoltativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1779">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="467ec-1780">Nella tabella seguente viene descritto ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1780">The following table describes each element.</span></span>  
  
|<span data-ttu-id="467ec-1781">Elemento</span><span class="sxs-lookup"><span data-stu-id="467ec-1781">Element</span></span>|<span data-ttu-id="467ec-1782">Descrizione</span><span class="sxs-lookup"><span data-stu-id="467ec-1782">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="467ec-1783">*ws*</span><span class="sxs-lookup"><span data-stu-id="467ec-1783">*ws*</span></span>|<span data-ttu-id="467ec-1784">Spazio vuoto facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1784">Optional white space.</span></span> <span data-ttu-id="467ec-1785">Gli spazi vuoti possono essere visualizzati all'inizio di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag o alla fine di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1785">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="467ec-1786">Un simbolo di valuta delle impostazioni cultura specifiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1786">A culture-specific currency symbol.</span></span> <span data-ttu-id="467ec-1787">La posizione nella stringa è definita dal <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> proprietà del <xref:System.Globalization.NumberFormatInfo> oggetto restituito dal <xref:System.IFormatProvider.GetFormat%2A> metodo il `provider` parametro.</span><span class="sxs-lookup"><span data-stu-id="467ec-1787">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="467ec-1788">Il simbolo di valuta può essere visualizzati `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1788">The currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1789">*sign*</span><span class="sxs-lookup"><span data-stu-id="467ec-1789">*sign*</span></span>|<span data-ttu-id="467ec-1790">Un segno facoltativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1790">An optional sign.</span></span> <span data-ttu-id="467ec-1791">Il segno può essere visualizzati all'inizio di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag e può apparire alla fine di `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1791">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="467ec-1792">Le parentesi possono essere utilizzate `value` per indicare un valore negativo se `style` include il <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1792">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1793">*digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1793">*digits*</span></span>|<span data-ttu-id="467ec-1794">Una sequenza di cifre da 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="467ec-1794">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="467ec-1795">*,*</span><span class="sxs-lookup"><span data-stu-id="467ec-1795">*,*</span></span>|<span data-ttu-id="467ec-1796">Separatore di gruppi di impostazioni cultura specifiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1796">A culture-specific group separator.</span></span> <span data-ttu-id="467ec-1797">Il separatore di gruppi di impostazioni cultura specificate da `provider` possono essere visualizzati in `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1797">The group separator of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1798">*.*</span><span class="sxs-lookup"><span data-stu-id="467ec-1798">*.*</span></span>|<span data-ttu-id="467ec-1799">Simbolo di separatore decimale delle impostazioni cultura specifiche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1799">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="467ec-1800">Il simbolo di separatore decimale delle impostazioni cultura specificate da `provider` possono essere visualizzati in `value` se `style` include il <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1800">The decimal point symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1801">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1801">*fractional_digits*</span></span>|<span data-ttu-id="467ec-1802">Una o più occorrenze della cifra 0.</span><span class="sxs-lookup"><span data-stu-id="467ec-1802">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="467ec-1803">Cifre frazionarie possono essere visualizzati `value` solo se `style` include il <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1803">Fractional digits can appear in `value` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1804">E</span><span class="sxs-lookup"><span data-stu-id="467ec-1804">E</span></span>|<span data-ttu-id="467ec-1805">Il "e" o il carattere "E", che indica che il valore è rappresentato nella notazione esponenziale (scientifica).</span><span class="sxs-lookup"><span data-stu-id="467ec-1805">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="467ec-1806">Il `value` parametro può rappresentare un numero in notazione esponenziale se `style` include il <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1806">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1807">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1807">*exponential_digits*</span></span>|<span data-ttu-id="467ec-1808">Una sequenza di cifre da 0 a 9.</span><span class="sxs-lookup"><span data-stu-id="467ec-1808">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="467ec-1809">Il `value` parametro può rappresentare un numero in notazione esponenziale se `style` include il <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="467ec-1809">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="467ec-1810">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="467ec-1810">*hexdigits*</span></span>|<span data-ttu-id="467ec-1811">Una sequenza di cifre esadecimali da 0 a f, o da 0 a F.</span><span class="sxs-lookup"><span data-stu-id="467ec-1811">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="467ec-1812">Una stringa con solo cifre decimali (che corrisponde alla <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) viene sempre analizzata correttamente.</span><span class="sxs-lookup"><span data-stu-id="467ec-1812">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="467ec-1813">La maggior parte degli altri <xref:System.Globalization.NumberStyles> membri controllano gli elementi che possono essere presenti, ma non deve essere presente, in questa stringa di input.</span><span class="sxs-lookup"><span data-stu-id="467ec-1813">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="467ec-1814">Nella tabella seguente indica come singoli <xref:System.Globalization.NumberStyles> membri interessano gli elementi che possono essere presenti in `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1814">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="467ec-1815">Non compositi `NumberStyles` valori</span><span class="sxs-lookup"><span data-stu-id="467ec-1815">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="467ec-1816">Elementi consentiti nel valore oltre alle cifre</span><span class="sxs-lookup"><span data-stu-id="467ec-1816">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="467ec-1817">Cifre decimali.</span><span class="sxs-lookup"><span data-stu-id="467ec-1817">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="467ec-1818">Il separatore decimale (*.*) e *frazionarie* elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1818">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="467ec-1819">Tuttavia, *frazionarie* deve essere costituito solo da uno o più cifre 0 o il metodo restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1819">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="467ec-1820">Il "e" o il carattere "E", che indica la notazione esponenziale, insieme a *cifre_esponenziali*.</span><span class="sxs-lookup"><span data-stu-id="467ec-1820">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="467ec-1821">Se `value` rappresenta un numero in notazione esponenziale, non può avere un componente frazionario diverso da zero.</span><span class="sxs-lookup"><span data-stu-id="467ec-1821">If `value` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="467ec-1822">Il *ws* elemento all'inizio di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1822">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="467ec-1823">Il *ws* elemento alla fine di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1823">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="467ec-1824">Il *sign* elemento prima *cifre*.</span><span class="sxs-lookup"><span data-stu-id="467ec-1824">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="467ec-1825">Il *sign* elemento dopo *cifre*.</span><span class="sxs-lookup"><span data-stu-id="467ec-1825">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="467ec-1826">Il *sign* elemento sotto forma di parentesi che racchiudono il valore numerico.</span><span class="sxs-lookup"><span data-stu-id="467ec-1826">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="467ec-1827">Il separatore di gruppi (*,*) elemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1827">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="467ec-1828">La valuta (*$*) elemento.</span><span class="sxs-lookup"><span data-stu-id="467ec-1828">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="467ec-1829">Tutti gli elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1829">All elements.</span></span> <span data-ttu-id="467ec-1830">Tuttavia, `value` non può rappresentare un numero esadecimale o un numero in notazione esponenziale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1830">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="467ec-1831">Il *ws* elemento all'inizio o alla fine di `value`, *sign* all'inizio di `value`e il separatore decimale (*.*) simbolo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1831">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="467ec-1832">Il `value` parametro inoltre possibile utilizzare la notazione esponenziale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1832">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="467ec-1833">Il *ws*, *sign*, separatore di gruppi (*,*), punto decimale e (*.*) elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1833">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="467ec-1834">Tutti gli elementi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1834">All elements.</span></span> <span data-ttu-id="467ec-1835">Tuttavia, `value` può rappresentare un numero esadecimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1835">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="467ec-1836">Se si utilizza il <xref:System.Numerics.BigInteger.TryParse%2A> metodo per il round trip la rappresentazione di stringa di un <xref:System.Numerics.BigInteger> valore ottenuto come risultato di <xref:System.Numerics.BigInteger.ToString%2A> (metodo), è consigliabile utilizzare il <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> metodo con l'identificatore di formato "R" per generare la rappresentazione di stringa del <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1836">If you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="467ec-1837">In caso contrario, la rappresentazione di stringa del <xref:System.Numerics.BigInteger> mantiene solo il 50 cifre più significative del valore originale e i dati vadano perse quando si utilizza il <xref:System.Numerics.BigInteger.TryParse%2A> metodo per il ripristino di <xref:System.Numerics.BigInteger> valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1837">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="467ec-1838">Se il <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag viene utilizzato, `value` deve essere un valore esadecimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1838">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `value` must be a hexadecimal value.</span></span> <span data-ttu-id="467ec-1839">Gli unici altri flag che possono essere presenti in `style` sono <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> e <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1839">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="467ec-1840">(Il <xref:System.Globalization.NumberStyles> enumerazione dispone di uno stile composto, <xref:System.Globalization.NumberStyles.HexNumber>, che include entrambi i flag di spazi vuoti.)</span><span class="sxs-lookup"><span data-stu-id="467ec-1840">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="467ec-1841">Se `value` è la rappresentazione di stringa di un numero esadecimale, non può essere preceduto da qualsiasi effetto (ad esempio `0x` o `&h`) che lo distingue come numero esadecimale.</span><span class="sxs-lookup"><span data-stu-id="467ec-1841">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="467ec-1842">In questo modo la conversione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1842">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="467ec-1843">Se `value` è una stringa esadecimale, il <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> metodo interpreta `value` come un numero negativo archiviato tramite la rappresentazione in complemento a due se le prime due cifre esadecimali sono maggiori o uguali a `0x80`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1843">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="467ec-1844">In altre parole, il metodo interpreta il bit più significativo del primo byte in `value` come bit di segno.</span><span class="sxs-lookup"><span data-stu-id="467ec-1844">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="467ec-1845">Per assicurarsi che una stringa esadecimale viene correttamente interpretata come un numero positivo, la prima cifra `value` deve avere un valore pari a zero.</span><span class="sxs-lookup"><span data-stu-id="467ec-1845">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="467ec-1846">Ad esempio, il metodo interpreta `0x80` come un valore negativo, ma interpreta `0x080` o `0x0080` come un valore positivo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1846">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="467ec-1847">Nell'esempio seguente viene illustrata la differenza tra stringhe esadecimali che rappresentano valori positivi e negativi.</span><span class="sxs-lookup"><span data-stu-id="467ec-1847">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParseHex1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParseHex1.vb#1)]  
  
 <span data-ttu-id="467ec-1848">Il `provider` parametro è un <xref:System.IFormatProvider> implementazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1848">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="467ec-1849">Il relativo <xref:System.IFormatProvider.GetFormat%2A> metodo restituisce un <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni specifiche delle impostazioni cultura relative al formato di `value`.</span><span class="sxs-lookup"><span data-stu-id="467ec-1849">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="467ec-1850">Il `provider` parametro può essere uno dei seguenti:</span><span class="sxs-lookup"><span data-stu-id="467ec-1850">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="467ec-1851">Oggetto <xref:System.Globalization.CultureInfo> oggetto che rappresenta le impostazioni cultura che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1851">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="467ec-1852">Il relativo <xref:System.Globalization.CultureInfo.GetFormat%2A> metodo restituisce il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni sulla formattazione numeriche per le impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="467ec-1852">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="467ec-1853">Oggetto <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni sulla formattazione numeriche.</span><span class="sxs-lookup"><span data-stu-id="467ec-1853">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="467ec-1854">(L'implementazione di <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> appena restituisce se stesso.)</span><span class="sxs-lookup"><span data-stu-id="467ec-1854">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="467ec-1855">Un oggetto personalizzato che implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="467ec-1855">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="467ec-1856">Il relativo <xref:System.IFormatProvider.GetFormat%2A> metodo crea e restituisce il <xref:System.Globalization.NumberFormatInfo> oggetto che fornisce informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="467ec-1856">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="467ec-1857">Se `provider` è `null`, <xref:System.Globalization.NumberFormatInfo> per le impostazioni cultura correnti dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="467ec-1857">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467ec-1858">Nell'esempio seguente effettua alcune chiamate al <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> metodo utilizzando varie combinazioni di valori per il `style` e `provider` parametri.</span><span class="sxs-lookup"><span data-stu-id="467ec-1858">The following example makes some calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#2)]  
  
 <span data-ttu-id="467ec-1859">Un numero di singole chiamate per il <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> metodo passare un'istanza delle operazioni seguenti `BigIntegerFormatProvider` (classe), che definisce una tilde (~) come il segno negativo.</span><span class="sxs-lookup"><span data-stu-id="467ec-1859">A number of the individual calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="467ec-1860"><paramref name="style" /> non è un valore di <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="467ec-1860"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="467ec-1861">oppure</span><span class="sxs-lookup"><span data-stu-id="467ec-1861">-or-</span></span>  
  
 <span data-ttu-id="467ec-1862"><paramref name="style" /> include il contrassegno <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> insieme a un altro valore.</span><span class="sxs-lookup"><span data-stu-id="467ec-1862"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public bool TryWriteBytes (Span&lt;byte&gt; destination, out int bytesWritten, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryWriteBytes (destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger Zero { System::Numerics::BigInteger get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467ec-1863">Ottiene un valore che rappresenta il numero 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="467ec-1863">Gets a value that represents the number 0 (zero).</span></span></summary>
        <value><span data-ttu-id="467ec-1864">Intero il cui valore è 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="467ec-1864">An integer whose value is 0 (zero).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467ec-1865">Il <xref:System.Numerics.BigInteger> oggetto restituito da questa proprietà fornisce un'origine utile di un valore zero per le assegnazioni e i confronti.</span><span class="sxs-lookup"><span data-stu-id="467ec-1865">The <xref:System.Numerics.BigInteger> object returned by this property provides a convenient source of a zero value for use in assignments and comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsZero" />
      </Docs>
    </Member>
  </Members>
</Type>