<Type Name="ProjectProperty" FullName="Microsoft.Build.Evaluation.ProjectProperty">
  <TypeSignature Language="C#" Value="public abstract class ProjectProperty : IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectProperty extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectProperty&#xA;Implements IEquatable(Of ProjectProperty)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectProperty abstract : IEquatable&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{UnevaluatedValue}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3e8a9-101">Rappresenta una proprietà in fase di progettazione valutata.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-101">Represents an evaluated design-time property.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProperty.EvaluatedValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e8a9-102">Ottiene il valore della proprietà valutata.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-102">Gets the evaluated property value.</span></span></summary>
        <value><span data-ttu-id="3e8a9-103">Restituisce il valore della proprietà valutata che non è mai Null.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-103">Returns the evaluated property value, which is never null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8a9-104">Non può essere impostata direttamente. solo il valore può essere impostato.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-104">Cannot be set directly; only the unevaluated value can be set.</span></span> <span data-ttu-id="3e8a9-105">Il valore valutato non contiene le sequenze di escape alcun carattere.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-105">The evaluated value contains no character escape sequences.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnvironmentProperty">
      <MemberSignature Language="C#" Value="public abstract bool IsEnvironmentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnvironmentProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEnvironmentProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEnvironmentProperty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e8a9-106">Determina se la proprietà ha avuto origine dalle variabili di ambiente.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-106">Determines whether the property originated from the environment variables.</span></span></summary>
        <value><span data-ttu-id="3e8a9-107">True se la proprietà ha avuto origine da una variabile di ambiente. In caso contrario, false.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-107">True if the property originated from an environment variable; false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGlobalProperty">
      <MemberSignature Language="C#" Value="public abstract bool IsGlobalProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGlobalProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsGlobalProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsGlobalProperty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e8a9-108">Determina se la proprietà è una proprietà globale.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-108">Determines whether the property is a global property.</span></span></summary>
        <value><span data-ttu-id="3e8a9-109">True se la proprietà è una proprietà globale. In caso contrario, false.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-109">True if the property is a global property; false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public abstract bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsImported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e8a9-110">Determina se la proprietà ha origine da un file importato.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-110">Determines whether the property originates from an imported file.</span></span></summary>
        <value><span data-ttu-id="3e8a9-111">Restituisce true se la proprietà ha origine da un file importato e non da una variabile riservata, globale o di ambiente.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-111">Returns true if the property originates from an imported file and not from an environment variable, a global property, or a reserved property.</span></span> <span data-ttu-id="3e8a9-112">Altrimenti restituisce false.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-112">Returns false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReservedProperty">
      <MemberSignature Language="C#" Value="public abstract bool IsReservedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReservedProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReservedProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReservedProperty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e8a9-113">Determina se la proprietà è una proprietà riservata, ad esempio 'MSBuildProjectFile'.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-113">Determines whether the property is a reserved property, for example 'MSBuildProjectFile'.</span></span></summary>
        <value><span data-ttu-id="3e8a9-114">Restituisce true se la proprietà è una proprietà riservata. In caso contrario, false.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-114">Returns true if the property is a reserved property; false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProperty.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e8a9-115">Ottiene il nome della proprietà.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-115">Gets the name of the property.</span></span></summary>
        <value><span data-ttu-id="3e8a9-116">Restituisce il nome della proprietà.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-116">Returns the name of the property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Build.Evaluation.ProjectProperty Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectProperty Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Predecessor As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Build::Evaluation::ProjectProperty ^ Predecessor { Microsoft::Build::Evaluation::ProjectProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e8a9-117">Ottiene l'ultima proprietà sottoposta a override da questa proprietà durante la valutazione.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-117">Gets the last property that was overridden by this property during evaluation.</span></span></summary>
        <value><span data-ttu-id="3e8a9-118">Restituisce l'ultima proprietà il cui valore è stato sottoposto a override da questa proprietà durante la valutazione.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-118">Returns the last property whose value was overridden by this property during evaluation.</span></span> <span data-ttu-id="3e8a9-119">Restituisce Null se l'override della proprietà non è stato eseguito.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-119">Returns null if the property has not been overridden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8a9-120">Questo metodo cerca tutte le proprietà con lo stesso nome che si trovano sul file di progetto logico e le cui condizioni restituiscono true.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-120">This method searches for all properties with the same name that lie above in the logical project file, and whose conditions evaluate to true.</span></span>  
  
 <span data-ttu-id="3e8a9-121">Se il progetto non è stato rivalutato dopo l'ultima modifica, questo valore può essere corretto.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-121">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e8a9-122">Ottiene il progetto che contiene questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-122">Gets the project that contains this property.</span></span></summary>
        <value><span data-ttu-id="3e8a9-123">Restituisce il progetto che contiene questa proprietà che non è mai Null.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-123">Returns the project that contains this property, which is never null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectProperty&gt;.Equals (Microsoft.Build.Evaluation.ProjectProperty other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;.Equals(class Microsoft.Build.Evaluation.ProjectProperty other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectProperty&gt;#Equals(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectProperty) As Boolean Implements IEquatable(Of ProjectProperty).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;.Equals(Microsoft::Build::Evaluation::ProjectProperty ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="3e8a9-124">Proprietà del progetto con cui effettuare il confronto.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-124">The project property to be compared to</span></span></param>
        <summary><span data-ttu-id="3e8a9-125">Verifica l'uguaglianza tra questa proprietà del progetto e quella specificata.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-125">Compares this project property with the given project property for equality.</span></span></summary>
        <returns><span data-ttu-id="3e8a9-126">Restituisce true se la proprietà del progetto è uguale. In caso contrario, false.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-126">Returns true if the project properties are equal; false otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public abstract string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e8a9-127">Ottiene o imposta il valore della proprietà non valutata.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-127">Gets or sets the unevaluated property value.</span></span></summary>
        <value><span data-ttu-id="3e8a9-128">Restituisce il valore della proprietà non valutata.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-128">Returns the unevaluated property value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8a9-129">Il metodo di impostazione aggiornato sia il valore non valutato e il valore valutato, ma non influisce sugli altri nel progetto finché la rivalutazione.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-129">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="3e8a9-130">Il progetto viene contrassegnato come modificato.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-130">The containing project is marked as modified.</span></span> <span data-ttu-id="3e8a9-131">Vengono considerati valori non valutati per contenere le sequenze di caratteri escape in base alle esigenze.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-131">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Build.Construction.ProjectPropertyElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectPropertyElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Xml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Xml As ProjectPropertyElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Build::Construction::ProjectPropertyElement ^ Xml { Microsoft::Build::Construction::ProjectPropertyElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectPropertyElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e8a9-132">Ottiene l'elemento proprietà associato.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-132">Gets the associated property element.</span></span> <span data-ttu-id="3e8a9-133">Supporto della proprietà XML.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-133">Backing XML property.</span></span> <span data-ttu-id="3e8a9-134">Null solo se è una proprietà predefinita, di ambiente o globale.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-134">Null only if this is a global, environment, or built-in property.</span></span></summary>
        <value><span data-ttu-id="3e8a9-135">Restituisce l'elemento proprietà associato.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-135">Returns the associated property element.</span></span> <span data-ttu-id="3e8a9-136">Restituisce Null se è una proprietà riservata o globale oppure ha origine da una variabile di ambiente.</span><span class="sxs-lookup"><span data-stu-id="3e8a9-136">Return null if this is a global or reserved property, or originates from an environment variable.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>