<Type Name="ProjectMetadata" FullName="Microsoft.Build.Evaluation.ProjectMetadata">
  <TypeSignature Language="C#" Value="public class ProjectMetadata : IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectMetadata extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectMetadata&#xA;Implements IEquatable(Of ProjectMetadata)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectMetadata : IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="266e1-101">Rappresenta i metadati in fase di progettazione valutati.</span><span class="sxs-lookup"><span data-stu-id="266e1-101">Represents evaluated design-time metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="266e1-102">Mai usato per rappresentare metadati incorporati, come % (nome file).</span><span class="sxs-lookup"><span data-stu-id="266e1-102">Never used to represent built-in metadata, like %(Filename).</span></span> <span data-ttu-id="266e1-103">I metadati sono sempre associato a codice sorgente del progetto.</span><span class="sxs-lookup"><span data-stu-id="266e1-103">The metadata is always associated with project source code.</span></span>  
  
 <span data-ttu-id="266e1-104">I metadati sono contenuti facendo un <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> o <xref:Microsoft.Build.Evaluation.ProjectItem>.</span><span class="sxs-lookup"><span data-stu-id="266e1-104">The metadata is contained by either by a <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> or a <xref:Microsoft.Build.Evaluation.ProjectItem>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="266e1-105">Posizione dell'attributo Condition, se disponibile.</span><span class="sxs-lookup"><span data-stu-id="266e1-105">Location of the Condition attribute.</span></span></summary>
        <value><span data-ttu-id="266e1-106">Restituisce la posizione dell'attributo Condition.</span><span class="sxs-lookup"><span data-stu-id="266e1-106">Returns Condition attribute location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="266e1-107">Ottiene il valore dei metadati valutati.</span><span class="sxs-lookup"><span data-stu-id="266e1-107">Gets the evaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="266e1-108">Restituisce il valore dei metadati valutati che non è mai Null.</span><span class="sxs-lookup"><span data-stu-id="266e1-108">Returns the evaluated metadata value, which is never null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="266e1-109">Impossibile impostare direttamente: solo il valore può essere impostato.</span><span class="sxs-lookup"><span data-stu-id="266e1-109">Cannot be set directly: only the unevaluated value can be set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="266e1-110">Determina se i metadati hanno avuto origine da un file importato.</span><span class="sxs-lookup"><span data-stu-id="266e1-110">Determines if the metadata originated from an imported file.</span></span></summary>
        <value><span data-ttu-id="266e1-111">Restituisce true se i metadati hanno avuto origine da un file importato. In caso contrario, false.</span><span class="sxs-lookup"><span data-stu-id="266e1-111">Returns true if the metadata originated from an imported file; false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="266e1-112">Ottiene il tipo dell'elemento o della definizione di elemento che lo contiene.</span><span class="sxs-lookup"><span data-stu-id="266e1-112">Gets the item type of the containing item definition or item.</span></span></summary>
        <value><span data-ttu-id="266e1-113">Restituisce il tipo dell'elemento o della definizione di elemento che lo contiene.</span><span class="sxs-lookup"><span data-stu-id="266e1-113">Returns the item type of the containing item definition or item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ Location { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="266e1-114">Posizione dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="266e1-114">Location of the element.</span></span></summary>
        <value><span data-ttu-id="266e1-115">Restituisce la posizione dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="266e1-115">Returns the element location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="266e1-116">Ottiene il nome dei metadati.</span><span class="sxs-lookup"><span data-stu-id="266e1-116">Gets the name of the metadata.</span></span></summary>
        <value><span data-ttu-id="266e1-117">Restituisce il nome dei metadati.</span><span class="sxs-lookup"><span data-stu-id="266e1-117">Returns the name of the metadata.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectMetadata Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predecessor As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectMetadata ^ Predecessor { Microsoft::Build::Evaluation::ProjectMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="266e1-118">Ottiene gli ultimi metadati (da un elemento o una definizione di elemento) sottoposti a override da questi metadati durante la valutazione.</span><span class="sxs-lookup"><span data-stu-id="266e1-118">Gets the last metadata (from an item definition or item) that was overridden by this metadata during evaluation.</span></span></summary>
        <value><span data-ttu-id="266e1-119">Restituisce gli ultimi metadati (da un elemento o una definizione di elemento) il cui valore è stato sottoposto a override da questi metadati durante la valutazione.</span><span class="sxs-lookup"><span data-stu-id="266e1-119">Returns the last metadata (from an item definition or item) whose value was overridden by this metadata during evaluation.</span></span> <span data-ttu-id="266e1-120">Restituisce Null se l'override dei metadati non è stato eseguito.</span><span class="sxs-lookup"><span data-stu-id="266e1-120">Returns null if the metadata has not been overridden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="266e1-121">Questo metodo cerca tutti i metadati con lo stesso nome che si trovano sul file di progetto logico e che sono contenuti da definizioni di elementi dello stesso tipo di elemento e le cui condizioni restituiscono true.</span><span class="sxs-lookup"><span data-stu-id="266e1-121">This method searches for all metadata with the same name that lie above in the logical project file, and which are contained by item definitions of the same item type, and whose conditions evaluate to true.</span></span> <span data-ttu-id="266e1-122">Se i metadati sono contenuti da un elemento, questo metodo cerca tutti i metadati precedenti con lo stesso nome e l'elemento la cui condizione viene valutata true.</span><span class="sxs-lookup"><span data-stu-id="266e1-122">If the metadata is contained by an item, this method searches for any previous metadata with the same name and item whose condition evaluated to true.</span></span> <span data-ttu-id="266e1-123">Definizioni degli elementi vengono cercati prima degli elementi.</span><span class="sxs-lookup"><span data-stu-id="266e1-123">Item definitions are searched before items.</span></span>  
  
 <span data-ttu-id="266e1-124">Se il progetto non è stato rivalutato dopo l'ultima modifica, questo valore può essere corretto.</span><span class="sxs-lookup"><span data-stu-id="266e1-124">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="266e1-125">Ottiene il progetto che contiene questi metadati.</span><span class="sxs-lookup"><span data-stu-id="266e1-125">Gets the project that contains this metadata.</span></span></summary>
        <value><span data-ttu-id="266e1-126">Restituisce il progetto che contiene questi metadati che non sono mai Null.</span><span class="sxs-lookup"><span data-stu-id="266e1-126">Returns the project that contains this metadata, which is never null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectMetadata&gt;.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(class Microsoft.Build.Evaluation.ProjectMetadata other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectMetadata&gt;#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectMetadata) As Boolean Implements IEquatable(Of ProjectMetadata).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(Microsoft::Build::Evaluation::ProjectMetadata ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="266e1-127">Metadati del progetto con cui effettuare il confronto.</span><span class="sxs-lookup"><span data-stu-id="266e1-127">The project metadata to be compared to.</span></span></param>
        <summary><span data-ttu-id="266e1-128">Verifica l'uguaglianza tra questi metadati del progetto e quelli specificati.</span><span class="sxs-lookup"><span data-stu-id="266e1-128">Compares this project metadata with the given project metadata for equality.</span></span></summary>
        <returns><span data-ttu-id="266e1-129">Restituisce true se i metadati del progetto sono uguali. In caso contrario, false.</span><span class="sxs-lookup"><span data-stu-id="266e1-129">Returns true if the project metadata are equal; false otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="266e1-130">Ottiene o imposta il valore dei metadati non valutati.</span><span class="sxs-lookup"><span data-stu-id="266e1-130">Gets or sets the unevaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="266e1-131">Restituisce il valore dei metadati non valutati.</span><span class="sxs-lookup"><span data-stu-id="266e1-131">Returns the unevaluated metadata value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="266e1-132">Il metodo di impostazione aggiornato sia il valore non valutato e il valore valutato, ma non influisce sugli altri nel progetto finché la rivalutazione.</span><span class="sxs-lookup"><span data-stu-id="266e1-132">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="266e1-133">Ad esempio: se una porzione di metadati denominata "m" viene modificata nell'elemento di tipo "i", non si applica "j" restituito da "@(j ->"% (m)")" fino a quando la rivalutazione.</span><span class="sxs-lookup"><span data-stu-id="266e1-133">For example, --if a piece of metadata named "m" is modified on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="266e1-134">-Se il valore non valutato di "m" è impostato su un valore che viene modificato dalla valutazione, ad esempio "$(p)", il valore valutato verrà impostato per "$(p)" fino alla rivalutazione.</span><span class="sxs-lookup"><span data-stu-id="266e1-134">--if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="266e1-135">L'impostazione dei metadati tramite una <xref:Microsoft.Build.Evaluation.ProjectItem> potrebbe essere associato <xref:Microsoft.Build.Construction.ProjectItemElement> essere suddiviso, se l'elemento ha origine da un'espressione di elemento elenco, con caratteri jolly o punto e virgola.</span><span class="sxs-lookup"><span data-stu-id="266e1-135">Setting metadata through a <xref:Microsoft.Build.Evaluation.ProjectItem> may cause the associated <xref:Microsoft.Build.Construction.ProjectItemElement> to be split, if the item element originated from an item list, wildcard, or semicolon expression.</span></span> <span data-ttu-id="266e1-136">perché implica l'intenzione di influiscono solo su quel particolare elemento.</span><span class="sxs-lookup"><span data-stu-id="266e1-136">because it implies an intention to only affect that particular item.</span></span>  
  
 <span data-ttu-id="266e1-137">L'impostazione dei metadati tramite ProjectMetadata non provoca alcuna divisione, perché implica l'intenzione di influiscono su tutti gli elementi utilizzando l'oggetto sottostante <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span><span class="sxs-lookup"><span data-stu-id="266e1-137">Setting metadata through ProjectMetadata does not cause any splitting, because it implies an intention to affect all items using the underlying <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span></span>  
  
 <span data-ttu-id="266e1-138">Il progetto viene contrassegnato come modificato.</span><span class="sxs-lookup"><span data-stu-id="266e1-138">The containing project is marked as modified.</span></span> <span data-ttu-id="266e1-139">Vengono considerati valori non valutati per contenere le sequenze di caratteri escape in base alle esigenze.</span><span class="sxs-lookup"><span data-stu-id="266e1-139">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 <span data-ttu-id="266e1-140">Questo metodo non può lasciare il progetto in uno stato coerente self.</span><span class="sxs-lookup"><span data-stu-id="266e1-140">This method may not leave the project in a self consistent state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectMetadataElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectMetadataElement ^ Xml { Microsoft::Build::Construction::ProjectMetadataElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="266e1-141">Ottiene l'elemento di metadati del progetto associato.</span><span class="sxs-lookup"><span data-stu-id="266e1-141">Gets the associated project metadata element.</span></span></summary>
        <value><span data-ttu-id="266e1-142">Restituisce l'elemento di metadati del progetto associato che non può mai essere Null.</span><span class="sxs-lookup"><span data-stu-id="266e1-142">Returns the associated project metadata element, which can never be null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>