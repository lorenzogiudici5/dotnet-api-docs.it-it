<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28f281335d1cf6d129f4ee34dc6a6b02086f11a4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36669339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3758c-101">Rappresenta un progetto con semantica in fase di progettazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3758c-101">Represents a project with design time semantics.</span>
      </span>
      <span data-ttu-id="3758c-102">Questa classe può caricare file di progetto, modificare elementi e proprietà e compilare progetti.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3758c-102">This class can load project files, edit items and properties and build projects.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-103">Costruisce un progetto vuoto utilizzando le proprietà globali dell'insieme di progetti globale e la versione degli strumenti predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-103">Constructs an empty project using the global project collection global properties and default tools version.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3758c-104">Costruisce un progetto vuoto utilizzando le proprietà globali dell'insieme di progetti globale e la versione degli strumenti predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-104">Constructs an empty project using the global project collection global properties and default tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-105">Questo progetto viene aggiunto alla raccolta di progetti globale quando viene fornito il percorso completo al file di progetto di origine, in genere dal salvataggio del progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-105">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="3758c-106">ProjectRootElement da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-106">ProjectRootElement to use for evaluation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-107">Costruisce un progetto vuoto e lo valuta utilizzando la radice del progetto specificato, le proprietà globali dell'insieme di progetti globale e la versione degli strumenti predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-107">Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-108">Questo progetto viene aggiunto alla raccolta di progetti globale se il progetto o la radice del progetto viene assegnata il percorso completo al file di progetto di origine.</span><span class="sxs-lookup"><span data-stu-id="3758c-108">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="3758c-109">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-109">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-110">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-110">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectCollection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection">
          <span data-ttu-id="3758c-111">Insieme di progetti in cui viene aggiunto il nuovo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-111">The project collection that the new project is added to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-112">Costruisce un progetto vuoto utilizzando le proprietà globali dell'insieme di progetti specificato e la versione degli strumenti predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-112">Constructs an empty project using the given project collection global properties and default tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-113">Questo progetto viene aggiunto alla raccolta di progetti specificata quando viene fornito il percorso completo al file di progetto di origine, in genere dal salvataggio del progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-113">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="3758c-114">File di progetto di origine da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-114">The source project file to be evaluated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-115">Costruisce un progetto e lo valuta rispetto al file di progetto di origine specificato, con le proprietà globali dell'insieme di progetti globale e la versione degli strumenti predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-115">Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-116">Il progetto viene aggiunto alla raccolta di progetti globale.</span><span class="sxs-lookup"><span data-stu-id="3758c-116">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="3758c-117">Genera un'eccezione InvalidOperationException se esiste già un progetto nella raccolta di progetti che restituisce questo file di progetto di origine.</span><span class="sxs-lookup"><span data-stu-id="3758c-117">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="3758c-118">Può generare eccezioni correlate ai / o.</span><span class="sxs-lookup"><span data-stu-id="3758c-118">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
          <span data-ttu-id="3758c-119">Se la valutazione ha esito negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-119">If the evaluation fails.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <span data-ttu-id="3758c-120">Lettore XML da cui leggere il codice sorgente del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-120">Xml reader to read project source code from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-121">Costruisce un progetto e valuta il codice sorgente dal lettore XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-121">Constructs a project and evaluates the source code from the given XML reader.</span>
          </span>
          <span data-ttu-id="3758c-122">Il codice sorgente viene valutato con le proprietà globali dell'insieme di progetti globale e la versione degli strumenti predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-122">The source code is evaluated with the global project collection global properties and default tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-123">Questo progetto viene aggiunto alla raccolta di progetti globale quando viene fornito il percorso completo al file di progetto di origine, in genere dal salvataggio del progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-123">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="3758c-124">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-124">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-125">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-125">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="3758c-126">Radice del progetto da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-126">The project root to use for evaluation.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-127">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-127">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-128">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-128">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-129">versione degli strumenti con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-129">Tools version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-130">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-130">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-131">Costruisce un progetto vuoto e lo valuta utilizzando la radice del progetto specificata, le proprietà globali e la versione degli strumenti specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-131">Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-132">Questo progetto viene aggiunto alla raccolta di progetti globale se il progetto o la radice del progetto viene assegnata il percorso completo al file di progetto di origine.</span><span class="sxs-lookup"><span data-stu-id="3758c-132">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="3758c-133">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-133">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-134">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-134">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties">
          <span data-ttu-id="3758c-135">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-135">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-136">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-136">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-137">versione degli strumenti utilizzata per valutare il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-137">The tools version used to evaluate the project.</span>
          </span>
          <span data-ttu-id="3758c-138">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-138">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="3758c-139">Insieme di progetti in cui viene aggiunto il nuovo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-139">The project collection the new project will be added to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-140">Costruisce un progetto vuoto, da valutare con l'insieme di progetti specificato, le proprietà globali e la versione degli strumenti specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-140">Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-141">Il progetto viene aggiunto alla raccolta di progetti specificata quando viene fornito il percorso completo al file di progetto di origine, in genere dal salvataggio del progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-141">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="3758c-142">Percorso del file di progetto di origine da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-142">The path to the source project file to be evaluated.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-143">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-143">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-144">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-144">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-145">versione degli strumenti con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-145">Tools version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-146">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-146">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-147">Costruisce un progetto e lo valuta rispetto al file di progetto di origine specificato e con le proprietà globali e la versione degli strumenti specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-147">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-148">Il progetto viene aggiunto alla raccolta di progetti globale.</span><span class="sxs-lookup"><span data-stu-id="3758c-148">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="3758c-149">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-149">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-150">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="3758c-151">Può generare eccezioni correlate ai / o.</span><span class="sxs-lookup"><span data-stu-id="3758c-151">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <span data-ttu-id="3758c-152">Lettore XML da cui leggere il codice sorgente del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-152">Xml reader to read project source code from.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-153">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-153">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-154">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-154">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-155">versione degli strumenti con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-155">Tools version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-156">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-156">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-157">Costruisce un progetto e valuta il codice sorgente dal lettore XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-157">Constructs a project and evaluates the source code from the given XML reader.</span>
          </span>
          <span data-ttu-id="3758c-158">Il codice sorgente viene valutato con le proprietà globali e la versione degli strumenti specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-158">The source code is evaluated with the given global properties and given tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-159">Questo progetto viene aggiunto alla raccolta di progetti globale quando viene fornito il percorso completo al file di progetto di origine, in genere dal salvataggio del progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-159">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="3758c-160">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-160">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-161">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-161">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="3758c-162">Radice del progetto da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-162">The project root to use for evaluation.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-163">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-163">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-164">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-164">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-165">versione degli strumenti con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-165">Tools version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-166">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-166">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="3758c-167">Insieme di progetti a cui viene aggiunto il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-167">The project collection the project is added to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-168">Costruisce un progetto e lo valuta utilizzando la radice del progetto, le proprietà globali e la versione degli strumenti specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-168">Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-169">Questo progetto viene aggiunto alla raccolta di progetti specificata quando il progetto o la radice del progetto è dato il percorso completo al file di progetto di origine.</span><span class="sxs-lookup"><span data-stu-id="3758c-169">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="3758c-170">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-170">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-171">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-171">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="3758c-172">Percorso del file di progetto di origine da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-172">The path to the source project file to be evaluated.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-173">Proprietà globali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-173">The global properties.</span>
          </span>
          <span data-ttu-id="3758c-174">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-174">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-175">Versione degli strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-175">The tools version.</span>
          </span>
          <span data-ttu-id="3758c-176">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-176">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="3758c-177">Insieme di progetti a cui viene aggiunto il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-177">The project collection the project is added to.</span>
          </span>
          <span data-ttu-id="3758c-178">Non può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-178">May not be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-179">Costruisce un progetto e lo valuta rispetto al file di progetto di origine specificato e con le proprietà globali e la versione degli strumenti specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-179">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-180">Il progetto viene aggiunto alla raccolta di progetti specificata.</span><span class="sxs-lookup"><span data-stu-id="3758c-180">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="3758c-181">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-181">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-182">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-182">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="3758c-183">Può generare eccezioni correlate ai / o.</span><span class="sxs-lookup"><span data-stu-id="3758c-183">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <span data-ttu-id="3758c-184">Lettore XML da cui leggere il codice sorgente del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-184">Xml reader to read project source code from.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-185">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-185">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-186">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-186">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-187">versione degli strumenti con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-187">Tools version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-188">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-188">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="3758c-189">Insieme di progetti a cui viene aggiunto il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-189">The project collection the project is added to.</span>
          </span>
          <span data-ttu-id="3758c-190">Non può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-190">May not be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-191">Costruisce un progetto e valuta il codice sorgente dal lettore XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-191">Constructs a project and evaluates the source code from the given XML reader.</span>
          </span>
          <span data-ttu-id="3758c-192">Il codice sorgente viene valutato con le proprietà globali e la versione degli strumenti specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-192">The source code is evaluated with the given global properties and given tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-193">Questo progetto viene aggiunto alla raccolta di progetti specificata quando il progetto o la radice del progetto è dato il percorso completo al file di progetto di origine.</span><span class="sxs-lookup"><span data-stu-id="3758c-193">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="3758c-194">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-194">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-195">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-195">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="3758c-196">Radice del progetto da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-196">The project root to use for evaluation.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-197">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-197">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-198">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-198">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-199">versione degli strumenti con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-199">Tools version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-200">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-200">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="3758c-201">Insieme di progetti a cui viene aggiunto il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-201">The project collection the project is added to.</span>
          </span>
          <span data-ttu-id="3758c-202">Non può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-202">May not be null.</span>
          </span>
        </param>
        <param name="loadSettings">
          <span data-ttu-id="3758c-203">Impostazioni di caricamento da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-203">The load settings to use for evaluation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-204">Costruisce un progetto e lo valuta utilizzando la radice del progetto, le proprietà globali, la versione degli strumenti e le impostazioni di caricamento specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-204">Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-205">Questo progetto viene aggiunto alla raccolta di progetti specificata quando il progetto o la radice del progetto è dato il percorso completo al file di progetto di origine.</span><span class="sxs-lookup"><span data-stu-id="3758c-205">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="3758c-206">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-206">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-207">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-207">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="3758c-208">Percorso del file di progetto di origine da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-208">The path to the source project file to be evaluated.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-209">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-209">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-210">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-210">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-211">Versione degli strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-211">The tools version.</span>
          </span>
          <span data-ttu-id="3758c-212">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-212">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="3758c-213">Insieme di progetti a cui viene aggiunto il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-213">The project collection the project is added to.</span>
          </span>
          <span data-ttu-id="3758c-214">Non può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-214">May not be null.</span>
          </span>
        </param>
        <param name="loadSettings">
          <span data-ttu-id="3758c-215">Impostazioni di caricamento da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-215">The load settings to use for evaluation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-216">Costruisce un progetto e lo valuta rispetto al file di progetto di origine specificato e con le proprietà globali, la versione degli strumenti e le impostazioni di caricamento specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-216">Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-217">Il progetto viene aggiunto alla raccolta di progetti specificata.</span><span class="sxs-lookup"><span data-stu-id="3758c-217">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="3758c-218">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-218">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-219">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="3758c-220">Può generare eccezioni correlate ai / o.</span><span class="sxs-lookup"><span data-stu-id="3758c-220">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <span data-ttu-id="3758c-221">Lettore XML da cui leggere il codice sorgente del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-221">Xml reader from which to read project source code.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-222">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-222">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-223">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-223">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-224">versione degli strumenti con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-224">Tools version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-225">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-225">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="3758c-226">Insieme di progetti a cui viene aggiunto il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-226">The project collection the project is added to.</span>
          </span>
          <span data-ttu-id="3758c-227">Non può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-227">May not be null.</span>
          </span>
        </param>
        <param name="loadSettings">
          <span data-ttu-id="3758c-228">Impostazioni di caricamento da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-228">The load settings to use for evaluation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-229">Costruisce un progetto e valuta il codice sorgente dal lettore XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-229">Constructs a project and evaluates the source code from the given XML reader.</span>
          </span>
          <span data-ttu-id="3758c-230">Il codice sorgente viene valutato con le proprietà globali e la versione degli strumenti specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-230">The source code is evaluated with the given global properties and given tools version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-231">Questo progetto viene aggiunto alla raccolta di progetti specificata quando il progetto o la radice del progetto è dato il percorso completo al file di progetto di origine.</span><span class="sxs-lookup"><span data-stu-id="3758c-231">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="3758c-232">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-232">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-233">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-233">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="3758c-234">Radice del progetto da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-234">The project root to use for evaluation.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-235">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-235">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-236">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-236">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-237">versione degli strumenti con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-237">Tools version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-238">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-238">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="3758c-239">Versione del set di strumenti Sub con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-239">Sub toolset version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-240">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-240">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="3758c-241">Insieme di progetti a cui viene aggiunto il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-241">The project collection the project is added to.</span>
          </span>
          <span data-ttu-id="3758c-242">Non può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-242">May not be null.</span>
          </span>
        </param>
        <param name="loadSettings">
          <span data-ttu-id="3758c-243">Impostazioni di caricamento da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-243">The load settings to use for evaluation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-244">Costruisce un progetto e lo valuta utilizzando la radice del progetto specificata e le proprietà globali, le versioni degli strumenti e dei subset di strumenti, la raccolta progetti e le impostazioni di caricamento specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-244">Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-245">Questo progetto viene aggiunto alla raccolta di progetti specificata quando il progetto o la radice del progetto è dato il percorso completo al file di progetto di origine.</span><span class="sxs-lookup"><span data-stu-id="3758c-245">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="3758c-246">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-246">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-247">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-247">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="3758c-248">Percorso del file di progetto di origine da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-248">The path to the source project file to be evaluated.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-249">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-249">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-250">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-250">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-251">Versione degli strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-251">The tools version.</span>
          </span>
          <span data-ttu-id="3758c-252">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-252">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="3758c-253">La versione del subset di strumenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-253">The sub toolset version.</span>
          </span>
          <span data-ttu-id="3758c-254">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-254">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="3758c-255">Insieme di progetti a cui viene aggiunto il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-255">The project collection the project is added to.</span>
          </span>
          <span data-ttu-id="3758c-256">Non può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-256">May not be null.</span>
          </span>
        </param>
        <param name="loadSettings">
          <span data-ttu-id="3758c-257">Impostazioni di caricamento da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-257">The load settings to use for evaluation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-258">Costruisce un progetto e lo valuta rispetto al file di progetto di origine specificato e con le proprietà globali, le versioni degli strumenti e dei subset di strumenti, la raccolta progetti e le impostazioni di caricamento specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-258">Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-259">Il progetto viene aggiunto alla raccolta di progetti specificata.</span><span class="sxs-lookup"><span data-stu-id="3758c-259">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="3758c-260">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-260">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-261">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-261">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="3758c-262">Può generare eccezioni correlate ai / o.</span><span class="sxs-lookup"><span data-stu-id="3758c-262">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <span data-ttu-id="3758c-263">Lettore XML da cui leggere il codice sorgente del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-263">Xml reader to read project source code from.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="3758c-264">Proprietà globali con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-264">Global properties to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-265">Può essere Null, nel qual caso verranno usate le proprietà globali della raccolta di progetti contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-265">May be null in which case the containing project collection's global properties will be used.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="3758c-266">versione degli strumenti con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-266">Tools version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-267">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-267">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="3758c-268">Versione del set di strumenti Sub con cui eseguire la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-268">Sub Toolset version to evaluate with.</span>
          </span>
          <span data-ttu-id="3758c-269">Può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-269">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="3758c-270">Insieme di progetti a cui viene aggiunto il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-270">The project collection the project is added to.</span>
          </span>
          <span data-ttu-id="3758c-271">Non può essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-271">May not be null.</span>
          </span>
        </param>
        <param name="loadSettings">
          <span data-ttu-id="3758c-272">Impostazioni di caricamento da utilizzare per la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-272">The load settings to use for evaluation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-273">Costruisce un progetto e valuta il codice sorgente dal lettore XML specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-273">Constructs a project and evaluates the source code from the given XML reader.</span>
          </span>
          <span data-ttu-id="3758c-274">Il codice sorgente viene valutato con le proprietà globali, gli strumenti e le versioni dei subset di strumenti specificati, la raccolta di progetti e le impostazioni di caricamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-274">The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-275">Questo progetto viene aggiunto alla raccolta di progetti specificata quando il progetto o la radice del progetto è dato il percorso completo al file di progetto di origine.</span><span class="sxs-lookup"><span data-stu-id="3758c-275">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="3758c-276">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-276">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="3758c-277">Genera un'eccezione InvalidOperationException se esiste già un progetto equivalente caricato nell'insieme di progetti.</span><span class="sxs-lookup"><span data-stu-id="3758c-277">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-278">Aggiunge un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-278">Adds an item.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="3758c-279">Tipo dell'elemento aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-279">The item type of the added item.</span>
          </span>
        </param>
        <param name="unevaluatedInclude">
          <span data-ttu-id="3758c-280">Attributo Include dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-280">Include attribute of the item to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-281">Aggiunge un elemento senza metadati al progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-281">Adds an item with no metadata to the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-282">Restituisce l'elemento aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-282">Returns the added item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-283">Tutti i metadati possono essere aggiunti in seguito.</span><span class="sxs-lookup"><span data-stu-id="3758c-283">Any metadata can be added later.</span></span> <span data-ttu-id="3758c-284">Non modificare l'origine del progetto se un'espressione con caratteri jolly già include il nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="3758c-284">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="3758c-285">Valutazione viene eseguita su base best effort.</span><span class="sxs-lookup"><span data-stu-id="3758c-285">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="3758c-286">Gli elementi definiti nell'origine del progetto seguendo il nuovo elemento sono utilizzabile per la valutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-286">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="3758c-287">Viene valutato solo questo elemento.</span><span class="sxs-lookup"><span data-stu-id="3758c-287">Only this item is evaluated.</span></span> <span data-ttu-id="3758c-288">Altri elementi che potrebbero dipendere non sono interessati.</span><span class="sxs-lookup"><span data-stu-id="3758c-288">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="3758c-289">Tipo dell'elemento aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-289">The item type of the added item.</span>
          </span>
        </param>
        <param name="unevaluatedInclude">
          <span data-ttu-id="3758c-290">Attributo Include dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-290">Include attribute of the item to be added.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="3758c-291">Metadati dell'elemento aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-291">The metadata of the added item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-292">Aggiunge un elemento con i metadati specificati al progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-292">Adds an item with the given metadata to the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-293">Restituisce l'elemento aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-293">Returns the added item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-294">I metadati possono essere null, che non indica nessun metadato.</span><span class="sxs-lookup"><span data-stu-id="3758c-294">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="3758c-295">Valutazione viene eseguita su base best effort.</span><span class="sxs-lookup"><span data-stu-id="3758c-295">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="3758c-296">Gli elementi definiti nell'origine del progetto seguendo il nuovo elemento sono utilizzabile per la valutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-296">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="3758c-297">Viene valutato solo questo elemento.</span><span class="sxs-lookup"><span data-stu-id="3758c-297">Only this item is evaluated.</span></span> <span data-ttu-id="3758c-298">Altri elementi che potrebbero dipendere non sono interessati.</span><span class="sxs-lookup"><span data-stu-id="3758c-298">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-299">Aggiunge un elemento senza metadati al progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-299">Adds an item with no metadata to the project.</span>
          </span>
          <span data-ttu-id="3758c-300">Non viene verificato se esiste già una corrispondenza di un carattere jolly esistente con il nuovo elemento, a meno che non si tratti del primo elemento di un gruppo di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-300">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span>
          </span>
          <span data-ttu-id="3758c-301">Non vengono effettuate operazioni per individuare il nuovo elemento accanto a elementi simili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-301">Makes no effort to locate the new item near similar items.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="3758c-302">Tipo di elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-302">The item type to be added.</span>
          </span>
        </param>
        <param name="unevaluatedInclude">
          <span data-ttu-id="3758c-303">Attributo Include non valutato da aggiungere all'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-303">The unevaluated Include attribute to be added to the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-304">Aggiunge un elemento senza metadati al progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-304">Adds an item with no metadata to the project.</span>
          </span>
          <span data-ttu-id="3758c-305">Non viene verificato se esiste già una corrispondenza di un carattere jolly esistente con il nuovo elemento, a meno che non si tratti del primo elemento di un gruppo di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-305">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span>
          </span>
          <span data-ttu-id="3758c-306">Non vengono effettuate operazioni per individuare il nuovo elemento accanto a elementi simili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-306">Makes no effort to locate the new item near similar items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-307">Restituisce un elenco di elementi di progetto aggiunti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-307">Returns a list of the project items added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-308">Aggiunge l'elemento al primo gruppo di elementi che non dispone di una condizione e dispone di figli oppure il cui primo figlio è un elemento dello stesso tipo.</span><span class="sxs-lookup"><span data-stu-id="3758c-308">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="3758c-309">Valuta in base best effort:-espande con tutti gli elementi.</span><span class="sxs-lookup"><span data-stu-id="3758c-309">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="3758c-310">Gli elementi definiti in XML sotto il nuovo elemento possono essere utilizzati, anche se in una valutazione reale potrebbe non essere.</span><span class="sxs-lookup"><span data-stu-id="3758c-310">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="3758c-311">Viene valutato solo questo elemento.</span><span class="sxs-lookup"><span data-stu-id="3758c-311">Only this item is evaluated.</span></span> <span data-ttu-id="3758c-312">Altri elementi che potrebbero dipendere non sono interessati.</span><span class="sxs-lookup"><span data-stu-id="3758c-312">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="3758c-313">Si tratta di una comodità che viene riconosciuto, non lascia necessariamente il progetto in uno stato coerente perfettamente finché la rivalutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-313">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="3758c-314">Tipo di elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-314">The item type to be added.</span>
          </span>
        </param>
        <param name="unevaluatedInclude">
          <span data-ttu-id="3758c-315">Attributo Include non valutato da aggiungere all'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-315">The unevaluated Include attribute to be added to the item.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="3758c-316">Metadati da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-316">The metadata to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-317">Aggiunge un elemento con metadati al progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-317">Adds an item with metadata to the project.</span>
          </span>
          <span data-ttu-id="3758c-318">I metadati potrebbero essere Null, per segnalare l'assenza di metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-318">Metadata may be null, indicating no metadata.</span>
          </span>
          <span data-ttu-id="3758c-319">Non viene verificato se esiste già una corrispondenza di un carattere jolly esistente con il nuovo elemento, a meno che non si tratti del primo elemento di un gruppo di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-319">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span>
          </span>
          <span data-ttu-id="3758c-320">Non vengono effettuate operazioni per individuare il nuovo elemento accanto a elementi simili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-320">Makes no effort to locate the new item near similar items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-321">Restituisce un elenco di elementi di progetto aggiunti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-321">Returns a list of the project items added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-322">Aggiunge l'elemento al primo gruppo di elementi che non dispone di una condizione e dispone di figli oppure il cui primo figlio è un elemento dello stesso tipo.</span><span class="sxs-lookup"><span data-stu-id="3758c-322">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="3758c-323">Valuta in base best effort:-espande con tutti gli elementi.</span><span class="sxs-lookup"><span data-stu-id="3758c-323">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="3758c-324">Gli elementi definiti in XML sotto il nuovo elemento possono essere utilizzati, anche se in una valutazione reale potrebbe non essere.</span><span class="sxs-lookup"><span data-stu-id="3758c-324">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="3758c-325">Viene valutato solo questo elemento.</span><span class="sxs-lookup"><span data-stu-id="3758c-325">Only this item is evaluated.</span></span> <span data-ttu-id="3758c-326">Altri elementi che potrebbero dipendere non è interessata.</span><span class="sxs-lookup"><span data-stu-id="3758c-326">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="3758c-327">Si tratta di una comodità che viene riconosciuto, non lascia necessariamente il progetto in uno stato coerente perfettamente finché la rivalutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-327">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItemDefinitionMetadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-328">Ottiene tutti i metadati di definizione degli elementi rilevati durante la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-328">Gets all item definition metadata encountered during evaluation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-329">Restituisce tutti i metadati di definizione degli elementi rilevati durante la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-329">Returns all item definition metadata encountered during evaluation.</span>
          </span>
          <span data-ttu-id="3758c-330">Non include gli elementi le cui condizioni non sono state valutate true, né i metadati di definizione degli elementi aggiunti dopo l'ultima valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-330">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-331">Metadati dell'elemento sono di lettura durante il secondo passaggio di valutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-331">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="3758c-332">A differenza di metadati restituito dalla proprietà ItemDefinitions, questi metadati vengono ordinati e includono tutti i metadati successivamente sottoposto a override con lo stesso nome e tipo di elemento.</span><span class="sxs-lookup"><span data-stu-id="3758c-332">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItems : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-333">Ottiene un enumeratore su tutti gli elementi rilevati durante la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-333">Gets an enumerator over all items encountered during evaluation.</span>
          </span>
          <span data-ttu-id="3758c-334">Tali elementi vengono letti durante il terzo passaggio di valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-334">These are read during the third evaluation pass.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-335">Restituisce un enumeratore su tutti gli elementi rilevati durante la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-335">Returns an enumerator over all items encountered during evaluation.</span>
          </span>
          <span data-ttu-id="3758c-336">Tali elementi vengono letti durante il terzo passaggio di valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-336">These are read during the third evaluation pass.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-337">A differenza di tali elementi restituiti dalla proprietà Items, questi vengono ordinati rispetto a tutti gli altri elementi durante la valutazione, non solo ordinata rispetto a elementi dello stesso tipo di elemento.</span><span class="sxs-lookup"><span data-stu-id="3758c-337">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="3758c-338">In alcune applicazioni, è possibile utilizzare questa proprietà questo ordine è significativo reciproco completo e tali host.</span><span class="sxs-lookup"><span data-stu-id="3758c-338">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="3758c-339">L'enumerazione non include tutti gli elementi le cui condizioni non dà come risultato true, né sono inclusi gli elementi aggiunti dopo l'ultima valutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-339">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedProperties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-340">Ottiene tutte le proprietà rilevate durante la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-340">Gets all properties encountered during evaluation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-341">Restituisce tutte le proprietà rilevate durante la valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-341">Returns all properties encountered during evaluation.</span>
          </span>
          <span data-ttu-id="3758c-342">Non include le proprietà le cui condizioni non sono state valutate true, né le proprietà aggiunte dopo l'ultima valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-342">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-343">Queste proprietà vengono lette durante il primo passaggio di valutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-343">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="3758c-344">A differenza della proprietà restituita dalla proprietà proprietà, questi vengono ordinati e include tutte le proprietà successivamente sottoposto a override con lo stesso nome.</span><span class="sxs-lookup"><span data-stu-id="3758c-344">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-345">Compila il progetto, utilizzando le destinazioni predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-345">Builds this project, using the default targets.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="project.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3758c-346">Compila il progetto, utilizzando le destinazioni predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-346">Builds this project, using the default targets.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-347">Restituisce true se l'operazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-347">Returns true on success; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-348">Per impostare o ottenere elementi virtuali per scopi di compilazione, clonare in modo esplicito un'istanza del progetto e compilarlo.</span><span class="sxs-lookup"><span data-stu-id="3758c-348">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="3758c-349">Questo metodo non modifica l'oggetto di progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-349">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.Build : Microsoft.Build.Framework.ILogger -&gt; bool" Usage="project.Build logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger">
          <span data-ttu-id="3758c-350">Logger da utilizzare durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-350">The logger to be used during the build.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-351">Compila il progetto, utilizzando le destinazioni predefinite e il logger specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-351">Builds this project, using the default targets and the given logger.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-352">Restituisce true se l'operazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-352">Returns true on success; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-353">Per impostare o ottenere elementi virtuali per scopi di compilazione, clonare in modo esplicito un'istanza del progetto e compilarlo.</span><span class="sxs-lookup"><span data-stu-id="3758c-353">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="3758c-354">Questo metodo non modifica l'oggetto di progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-354">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers">
          <span data-ttu-id="3758c-355">Enumeratore su tutti i logger da utilizzare durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-355">An enumerator over all loggers to be used during the build.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-356">Compila il progetto, utilizzando le destinazioni predefinite e i logger specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-356">Builds this project, using the default targets and the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-357">Restituisce true se l'operazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-357">Returns true on success; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-358">Per impostare o ottenere elementi virtuali per scopi di compilazione, clonare in modo esplicito un'istanza del progetto e compilarlo.</span><span class="sxs-lookup"><span data-stu-id="3758c-358">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="3758c-359">Questo metodo non modifica l'oggetto di progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-359">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; bool" Usage="project.Build target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="3758c-360">Destinazione da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-360">The target to be built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-361">Compila il progetto, compilando la destinazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-361">Builds this project, building the given target.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-362">Restituisce true se l'operazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-362">Returns true on success; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-363">Per impostare o ottenere elementi virtuali per scopi di compilazione, clonare in modo esplicito un'istanza del progetto e compilarlo.</span><span class="sxs-lookup"><span data-stu-id="3758c-363">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="3758c-364">Questo metodo non modifica l'oggetto di progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-364">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] -&gt; bool" Usage="project.Build targets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="3758c-365">Matrice di destinazioni da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-365">An array of targets to be built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-366">Compila il progetto, compilando le destinazioni specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-366">Builds this project, building the given targets.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-367">Restituisce true se l'operazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-367">Returns true on success; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-368">Per impostare o ottenere elementi virtuali per scopi di compilazione, clonare in modo esplicito un'istanza del progetto e compilarlo.</span><span class="sxs-lookup"><span data-stu-id="3758c-368">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="3758c-369">Questo metodo non modifica l'oggetto di progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-369">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers">
          <span data-ttu-id="3758c-370">Logger da utilizzare durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-370">The loggers to be used during the build.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="3758c-371">Logger remoti da utilizzare durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-371">The remote loggers to be used during the build.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-372">Compila il progetto, utilizzando le destinazioni predefinite, i logger specificati e quelli remoti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-372">Builds this project, using the default targets and the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-373">Restituisce true se l'operazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-373">Returns true on success; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-374">Per impostare o ottenere elementi virtuali per scopi di compilazione, clonare in modo esplicito un'istanza del progetto e compilarlo.</span><span class="sxs-lookup"><span data-stu-id="3758c-374">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="3758c-375">Questo metodo non modifica l'oggetto di progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-375">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="3758c-376">Destinazione da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-376">The target to be built.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="3758c-377">Logger da utilizzare durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-377">The loggers to be used during the build.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-378">Compila il progetto, compilando la destinazione specificata e utilizzando i logger specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-378">Builds this project, building the given target and using the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-379">Restituisce true se l'operazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-379">Returns true on success; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-380">Per impostare o ottenere elementi virtuali per scopi di compilazione, clonare in modo esplicito un'istanza del progetto e compilarlo.</span><span class="sxs-lookup"><span data-stu-id="3758c-380">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="3758c-381">Questo metodo non modifica l'oggetto di progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-381">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="3758c-382">Destinazioni da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-382">The targets to be built.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="3758c-383">Logger da utilizzare durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-383">The loggers to be used during the build.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-384">Compila il progetto, compilando le destinazioni specificate e utilizzando i logger specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-384">Builds this project, building the given targets and using the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-385">Restituisce true se l'operazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-385">Returns true on success; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-386">Per impostare o ottenere elementi virtuali per scopi di compilazione, clonare in modo esplicito un'istanza del progetto e compilarlo.</span><span class="sxs-lookup"><span data-stu-id="3758c-386">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="3758c-387">Questo metodo non modifica l'oggetto di progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-387">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="3758c-388">Destinazione da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-388">The target to be built.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="3758c-389">Logger da utilizzare durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-389">The loggers to be used during the build.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="3758c-390">Logger remoti da utilizzare durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-390">The remote loggers to be used during the build.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-391">Compila il progetto, compilando la destinazione specificata e utilizzando i logger specificati e quelli remoti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-391">Builds this project, building the given target and using the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-392">Restituisce true se l'operazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-392">Returns true on success; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-393">Per impostare o ottenere elementi virtuali per scopi di compilazione, clonare in modo esplicito un'istanza del progetto e compilarlo.</span><span class="sxs-lookup"><span data-stu-id="3758c-393">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="3758c-394">Questo metodo non modifica l'oggetto di progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-394">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="3758c-395">Destinazioni da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-395">The targets to be built.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="3758c-396">Logger da utilizzare durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-396">The loggers to be used during the build.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="3758c-397">Logger remoti da utilizzare durante la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-397">The remote loggers to be used during the build.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-398">Compila il progetto, compilando le destinazioni specificate e utilizzando i logger specificati e quelli remoti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-398">Builds this project, building the given targets and using the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-399">Restituisce true se l'operazione ha esito positivo. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-399">Returns true on success; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-400">Per impostare o ottenere elementi virtuali per scopi di compilazione, clonare in modo esplicito un'istanza del progetto e compilarlo.</span><span class="sxs-lookup"><span data-stu-id="3758c-400">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="3758c-401">Questo metodo non modifica l'oggetto di progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-401">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionedProperties : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt;" Usage="Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-402">Ottiene un insieme di possibili valori per le proprietà utilizzate per valutare condizioni rilevate su proprietà, gruppi di proprietà, importazioni ed elementi when.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-402">Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-403">Restituisce un insieme di possibili valori per le proprietà utilizzate per valutare condizioni rilevate su proprietà, gruppi di proprietà, importazioni ed elementi when.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-403">Returns a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span>
          </span>
          <span data-ttu-id="3758c-404">L'insieme è in forma canonica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-404">The collection is in canonical form.</span>
          </span>
          <span data-ttu-id="3758c-405">Il nome della voce è il nome della proprietà da valutare e il valore è un elenco di possibili valori della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-405">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-406">Ad esempio, se le condizioni seguenti erano presenti nel proprietà in un progetto: Condition&#124;$(piattaforma)' = = ' Debug&#124;x 86' "Condition ' = = 'Versione'" nella tabella verrebbe popolata con {"Configurazione", {" Eseguire il debug","Versione"}} {"piattaforma", {"x86"}} questa raccolta è utilizzata da Visual Studio per determinare le configurazioni definite nel progetto</span><span class="sxs-lookup"><span data-stu-id="3758c-406">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-407">Crea un'istanza del progetto basata su questo progetto, ma completamente disconnessa dallo stesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-407">Creates a project instance based on this project, but completely disconnected from it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-408">Può essere utilizzato per compilare in modo indipendente.</span><span class="sxs-lookup"><span data-stu-id="3758c-408">Can be used to build independently.</span></span> <span data-ttu-id="3758c-409">Il progetto originale viene valutato prima di creare l'istanza, se necessario, in modo che il progetto originale viene contrassegnato come non modificato.</span><span class="sxs-lookup"><span data-stu-id="3758c-409">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3758c-410">Crea un'istanza del progetto basata su questo progetto, ma completamente disconnessa dallo stesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-410">Creates a project instance based on this project, but completely disconnected from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-411">Restituisce l'istanza del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-411">Returns the project instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-412">Può essere utilizzato per compilare in modo indipendente.</span><span class="sxs-lookup"><span data-stu-id="3758c-412">Can be used to build independently.</span></span> <span data-ttu-id="3758c-413">Il progetto originale viene valutato prima di creare l'istanza, se necessario, in modo che il progetto originale viene contrassegnato come non modificato.</span><span class="sxs-lookup"><span data-stu-id="3758c-413">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : Microsoft.Build.Execution.ProjectInstanceSettings -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="3758c-414">Determina se l'istanza creata di progetto non è modificabile e contiene una tabella di ricerca per migliorare le prestazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-414">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-415">Crea un'istanza del progetto basata su questo progetto, ma completamente disconnessa dallo stesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-415">Creates a project instance based on this project, but completely disconnected from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-416">Restituisce l'istanza del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-416">Returns the project instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-417">Può essere utilizzato per compilare in modo indipendente.</span><span class="sxs-lookup"><span data-stu-id="3758c-417">Can be used to build independently.</span></span> <span data-ttu-id="3758c-418">Il progetto originale viene valutato prima di creare l'istanza, se necessario, in modo che il progetto originale viene contrassegnato come non modificato.</span><span class="sxs-lookup"><span data-stu-id="3758c-418">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-419">Ottiene la directory radice per il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-419">Gets the root directory for this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-420">Restituisce la directory radice per il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-420">Returns the root directory for this project.</span>
          </span>
          <span data-ttu-id="3758c-421">La directory radice non è mai Null; i progetti in memoria utilizzano la directory corrente al momento del caricamento del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-421">The root directory is never null; in-memory projects use the current directory at the time of project load.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableMarkDirty : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-422">Ottiene o imposta un flag che determina se <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> è temporaneamente disabilitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-422">Gets or sets a flag the determines whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled.</span>
          </span>
          <span data-ttu-id="3758c-423">In questo modo è possibile, ad esempio, impostare una proprietà globale senza che il progetto venga contrassegnato di conseguenza come modificato per la rivalutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-423">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-424">Restituisce un flag che determina se <see langword="MarkDirty" /> è temporaneamente disabilitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-424">Returns a flag the determines whether <see langword="MarkDirty" /> is temporarily disabled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationCounter : int" Usage="Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-425">Ottiene un numero che viene incrementato ogni volta che il progetto viene rivalutato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-425">Gets a number that is incremented every time that project is re-evaluated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-426">Restituisce il valore incrementato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-426">Returns the incremented value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-427">Questo valore deve essere confrontato con i valori precedenti per verificare se il progetto è stato valutato nuovamente.</span><span class="sxs-lookup"><span data-stu-id="3758c-427">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="3758c-428">E non deve essere usato per determinare quante volte il progetto è stato nuovamente valutato perché possa essere incrementato da più di una nuova valutazione specificata.</span><span class="sxs-lookup"><span data-stu-id="3758c-428">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="member this.ExpandString : string -&gt; string" Usage="project.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue">
          <span data-ttu-id="3758c-429">Stringa da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-429">The string to be evaluated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-430">Valuta la stringa specificata espandendo elementi e proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-430">Evaluates the given string by expanding items and properties.</span>
          </span>
          <span data-ttu-id="3758c-431">La stringa viene valutata come se fosse stata trovata alla fine del file di progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-431">The string is evaluated as if it were found at the very end of the project file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-432">Restituisce la stringa valutata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-432">Returns the evaluated string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-433">Questo metodo può essere utilizzato quando best effort valutazione è sufficiente.</span><span class="sxs-lookup"><span data-stu-id="3758c-433">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string with get, set" Usage="Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-434">Ottiene o imposta il percorso completo del file di origine del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-434">Gets or sets the full path to the project source file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-435">Restituisce il percorso completo del file di origine del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-435">Returns the full path to the project source file.</span>
          </span>
          <span data-ttu-id="3758c-436">Restituisce una stringa vuota se il progetto non è stato caricato da disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-436">Returns an empty string if the project was not loaded from disk.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-437">Impostazione di questa proprietà su un progetto in una raccolta di progetti rinomina il progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-437">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-438">Ottiene il valore valutato e preceduto da carattere di escape dell'attributo Include degli elementi forniti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-438">Gets evaluated, escaped value of the Include attribute of the provided items.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItem -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3758c-439">Elemento che deve essere valutato e preceduto da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-439">The item to be evaluated and escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-440">Ottiene il valore valutato e preceduto da carattere di escape dell'attributo Include degli elementi forniti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-440">Gets evaluated, escaped value of the Include attribute of the provided items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-441">Restituisce il valore valutato e preceduto da carattere di escape dell'attributo Include degli elementi forniti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-441">Returns the evaluated, escaped value of the Include attribute of the provided items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3758c-442">Definizione di elemento che deve essere valutata e preceduta da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-442">The item definition to be evaluated and escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-443">Ottiene il valore valutato e preceduto da carattere di escape dell'attributo Include della definizione di elemento fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-443">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-444">Restituisce il valore dell'attributo Include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-444">Returns the value of the Include attribute.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="3758c-445">Tipo di elemento da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-445">The item type to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-446">Ottiene tutti gli elementi del tipo di elemento specificato presenti nel progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-446">Gets all the items in the project of the given item type.</span>
          </span>
          <span data-ttu-id="3758c-447">Se non ne viene trovato alcuno, restituisce un elenco vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-447">If there are none, returns an empty list.</span>
          </span>
          <span data-ttu-id="3758c-448">Utilizzare AddItem o RemoveItem per modificare gli elementi nel progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-448">Use AddItem or RemoveItem to modify items in this project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-449">Restituisce tutti gli elementi del tipo di elemento specificato presenti nel progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-449">Returns all the items in the project of the given item type.</span>
          </span>
          <span data-ttu-id="3758c-450">Restituisce un elenco vuoto se non sono presenti elementi con il nome di elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-450">Returns an empty list if there are no items with the given item name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-451">Utilizzare AddItem o RemoveItem per modificare gli elementi nel progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-451">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByEvaluatedInclude : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsByEvaluatedInclude evaluatedInclude" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude">
          <span data-ttu-id="3758c-452">Attributo Include valutato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-452">The evaluated Include attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-453">Ottiene tutti gli elementi con l'attributo Include valutato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-453">Gets all items that have the given evaluated Include attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-454">Restituisce tutti gli elementi con l'attributo Include valutato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-454">Returns all items that have the given evaluated Include attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-455">Ad esempio, questo metodo potrebbe restituire tutti gli elementi che presentano l'attributo di inclusione valutata "cpp".</span><span class="sxs-lookup"><span data-stu-id="3758c-455">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="3758c-456">In genere vengono restituiti zero o più elementi.</span><span class="sxs-lookup"><span data-stu-id="3758c-456">Typically zero or one items are returned.</span></span> <span data-ttu-id="3758c-457">Tuttavia, possono esserci più elementi con il percorso stesso e i diversi tipi di elementi, o anche con gli stessi tipi di elemento.</span><span class="sxs-lookup"><span data-stu-id="3758c-457">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItemsIgnoringCondition : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsIgnoringCondition itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="3758c-458">Tipo di elemento da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-458">The item type to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-459">Ottiene tutti gli elementi del tipo specificato presenti nel progetto, indipendentemente dal fatto che il relativo attributo Condition abbia o meno restituito true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-459">Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span>
          </span>
          <span data-ttu-id="3758c-460">Questo elenco è di sola lettura. Utilizzare AddItem o RemoveItem per modificare gli elementi nel progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-460">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-461">Restituisce tutti gli elementi del tipo specificato presenti nel progetto, indipendentemente dal fatto che il relativo attributo Condition abbia o meno restituito true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-461">Returns all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-462">Questo elenco è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="3758c-462">This is a read-only list.</span></span> <span data-ttu-id="3758c-463">Utilizzare AddItem o RemoveItem per modificare gli elementi nel progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-463">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberSignature Language="F#" Value="member this.GetLogicalProject : unit -&gt; seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="project.GetLogicalProject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3758c-464">Ottiene un enumeratore su tutti gli elementi nel progetto logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-464">Gets an enumerator over all the elements in the "logical project".</span>
          </span>
          <span data-ttu-id="3758c-465">Per progetto logico si intende il progetto non valutato ottenuto dall'unico file MSBuild che viene restituito dall'incorporamento del testo di tutte le importazioni del file manifesto del progetto MSBuild originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-465">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-466">Restituisce un enumeratore su tutti gli elementi nel progetto logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-466">Returns an enumerator over all the elements in the "logical project".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-467">Il progetto logico viene definito come il progetto non valutato ottenuto dal file di MSBuild singolo che rappresenta il risultato dell'inclusione inline il testo di tutte le importazioni del file manifesto del progetto MSBuild originale.</span><span class="sxs-lookup"><span data-stu-id="3758c-467">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-468">Ottiene il valore preceduto da carattere di escape del metadato con il nome fornito dell'elemento fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-468">Gets the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectMetadata -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum">
          <span data-ttu-id="3758c-469">Metadato che deve essere preceduto da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-469">The metadatum to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-470">Ottiene il valore preceduto da carattere di escape del metadato fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-470">Gets the escaped value of the provided metadatum.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-471">Ottiene il valore preceduto da carattere di escape del metadato fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-471">Gets the escaped value of the provided metadatum.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItem * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3758c-472">Elemento i cui metadati devono essere preceduti da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-472">The item whose metadata is to be escaped.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="3758c-473">Nome dei metadati che deve essere preceduto da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-473">The name of the metadata to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-474">Ottiene il valore preceduto da carattere di escape del metadato con il nome fornito dell'elemento fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-474">Gets the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-475">Ottiene il valore preceduto da carattere di escape del metadato con il nome fornito dell'elemento fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-475">Gets the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3758c-476">Definizione di elemento i cui metadati devono essere preceduti da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-476">The item definition whose metadata is to be escaped.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="3758c-477">Nome dei metadati che deve essere preceduto da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-477">The name of the metadata to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-478">Ottiene il valore preceduto da carattere di escape del metadato con il nome fornito della definizione di elemento fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-478">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-479">Restituisce il valore preceduto da carattere di escape del metadato con il nome fornito della definizione di elemento fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-479">Returns the escaped value of the metadatum with the provided name on the provided item definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3758c-480">Nome della proprietà da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-480">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-481">Ottiene qualsiasi proprietà nel progetto con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-481">Gets any property in the project that has the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-482">Restituisce qualsiasi proprietà nel progetto con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-482">Returns any property in the project that has the specified name.</span>
          </span>
          <span data-ttu-id="3758c-483">Restituisce Null se non esistono proprietà con tale nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-483">Returns null if no property of that name exists.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="project.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3758c-484">Nome della proprietà il cui valore viene recuperato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-484">The name of the property whose value is retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-485">Ottiene il valore della proprietà specificata nel progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-485">Gets the value of the given property in this project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-486">Restituisce il valore della proprietà specificata nel progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-486">Returns the value of the given property in this project.</span>
          </span>
          <span data-ttu-id="3758c-487">Restituisce una stringa vuota se non esistono proprietà con tale nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-487">Return an empty string if no property of that name exists.</span>
          </span>
          <span data-ttu-id="3758c-488">Le sequenze di escape vengono convertite prima della restituzione della stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-488">Escape sequences are converted before returning the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-489">Una proprietà con un valore di stringa vuota e nessuna proprietà affatto non distinguono tra da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="3758c-489">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span> <span data-ttu-id="3758c-490">Per determinare se una proprietà è impostata nel progetto, utilizzare GetProperty (Name).</span><span class="sxs-lookup"><span data-stu-id="3758c-490">To determine if a property is set at all in the project, use GetProperty(name).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Evaluation.ProjectProperty -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="3758c-491">Proprietà che deve essere preceduta da un carattere di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-491">The property to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-492">Ottiene il valore preceduto da carattere di escape della proprietà fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-492">Get the escaped value of the provided property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-493">Restituisce il valore preceduto da carattere di escape della proprietà fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-493">Returns the escaped value of the provided property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-494">Ottiene un dizionario delle proprietà globali utilizzate per la valutazione del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-494">Gets a dictionary of the global properties used for the evaluation of this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-495">Restituisce un dizionario delle proprietà globali utilizzate per la valutazione del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-495">Returns a dictionary of the global properties used for the evaluation of this project.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-496">Questo è il metodo di richiamo esposto pubblicamente, che si traduce in un IDictionary di messaggi non recapitabili di sola lettura\<string, string >.</span><span class="sxs-lookup"><span data-stu-id="3758c-496">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 <span data-ttu-id="3758c-497">Per stabilire facilmente quando è in corso danneggiate, impostazione e rimozione di proprietà globali viene eseguita con <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> e <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="3758c-497">In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Imports : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.Imports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-498">Ottiene un elenco di tutti i file che hanno contribuito alla valutazione del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-498">Gets a list of all the files that contributed to the evaluation of this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-499">Restituisce un elenco di tutti i file che hanno contribuito alla valutazione del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-499">Returns a list of all the files that contributed to the evaluation of this project.</span>
          </span>
          <span data-ttu-id="3758c-500">Il nome di ogni elemento è l'elemento Import che ha causato l'importazione del file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-500">The name of each item is the Import element that caused the file to be imported.</span>
          </span>
          <span data-ttu-id="3758c-501">Il valore di ogni elemento è la radice del progetto importato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-501">The value of each item is the project root of the imported project.</span>
          </span>
          <span data-ttu-id="3758c-502">Non sono inclusi gli elementi Import il cui attributo Condition è stato valutato false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-502">Import elements whose Condition attribute evaluated to false are not included.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-503">Radice del progetto di questo progetto non è inclusa.</span><span class="sxs-lookup"><span data-stu-id="3758c-503">The project root of this project is not included.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportsIncludingDuplicates : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-504">Ottiene un elenco di importazioni duplicate se un'importazione viene importata più volte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-504">Gets a list of duplicate imports if an import was imported multiple times.</span>
          </span>
          <span data-ttu-id="3758c-505">Tuttavia, solo la prima importazione viene utilizzata nella valutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-505">However, only the first import was used in evaluation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-506">Restituisce un elenco di importazioni duplicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-506">Returns a list of duplicate imports.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBuildEnabled : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-507">Ottiene o imposta una proprietà che determina se è possibile compilare le destinazioni e le attività di questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-507">Gets or sets a property that selects whether the targets and tasks of this project can be built.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-508">Restituisce true se è possibile compilare le destinazioni e le attività del progetto. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-508">Returns true if the targets and tasks of this project can be built; false otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-509">Può essere utilizzato per motivi di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="3758c-509">Can be used for security purposes.</span></span> <span data-ttu-id="3758c-510">Per impostazione predefinita, un nuovo progetto è la stessa impostazione IsBuildEnabled della raccolta di progetti padre che lo contiene.</span><span class="sxs-lookup"><span data-stu-id="3758c-510">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="3758c-511">Quando IsBuildEnabled è false, il metodo di compilazione per questo progetto non riesce.</span><span class="sxs-lookup"><span data-stu-id="3758c-511">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-512">Ottiene una proprietà che indica se il progetto è stato modificato e pertanto deve essere rivalutato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-512">Gets a property that indicates whether this project has been modified so that it must be reevaluated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-513">Restituisce una proprietà che indica se il progetto è stato modificato e pertanto deve essere rivalutato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-513">Returns a property that indicates whether this project has been modified so that it must be reevaluated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-514">Un progetto viene modificato e quando il codice sorgente progetto sottostante, incluse le modifiche di importazione dei file, è necessario rivalutare.</span><span class="sxs-lookup"><span data-stu-id="3758c-514">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="3758c-515">Un progetto viene modificato anche se lo strumento di progetto insieme di modifiche, è necessario rivalutare.</span><span class="sxs-lookup"><span data-stu-id="3758c-515">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Evaluation.ProjectItemDefinition&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-516">Ottiene un dizionario di definizioni di elementi del progetto, ordinate per tipo di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-516">Gets a dictionary of item definitions in this project, keyed by item type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-517">Restituisce un dizionario di definizioni di elementi del progetto, ordinate per tipo di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-517">Returns a dictionary of item definitions in this project, keyed by item type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-518">Ottiene un enumeratore su tutti gli elementi del progetto, ordinati in gruppi di tipi di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-518">Gets an enumerator over all items in this project, ordered within groups of item types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-519">Restituisce un enumeratore su tutti gli elementi del progetto, ordinati in gruppi di tipi di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-519">Returns an enumerator over all items in this project, ordered within groups of item types.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemsIgnoringCondition : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-520">Ottiene un enumeratore su tutti gli elementi del progetto, ordinati in gruppi di tipi di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-520">Gets an enumerator over all items in this project, ordered within groups of item types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-521">Restituisce un enumeratore su tutti gli elementi del progetto, ordinati in gruppi di tipi di elemento, inclusi gli elementi le cui condizioni sono state valutate false o contenuti in gruppi di elementi la cui condizione è stata valutata false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-521">Returns an enumerator over all items in this project., ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to false.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-522">Può essere utilizzato per visualizzare tutti gli elementi, anche se non fanno parte della compilazione della configurazione corrente.</span><span class="sxs-lookup"><span data-stu-id="3758c-522">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-523">Ottiene un enumeratore su tutti i tipi di elemento del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-523">Gets an enumerator over all item types in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-524">Restituisce un enumeratore su tutti i tipi di elemento del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-524">Returns an enumerator over all item types in this project.</span>
          </span>
          <span data-ttu-id="3758c-525">Si tratta di un insieme ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-525">This is an ordered collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberSignature Language="F#" Value="member this.MarkDirty : unit -&gt; unit" Usage="project.MarkDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3758c-526">Contrassegna questo progetto come modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-526">Marks this project as modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-527">È raramente necessario chiamare questo metodo in modo esplicito, perché tutte le modifiche che interessano un progetto automaticamente contrassegnarlo come modificata.</span><span class="sxs-lookup"><span data-stu-id="3758c-527">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="3758c-528">In alcuni casi, tuttavia, questo metodo deve essere chiamato.</span><span class="sxs-lookup"><span data-stu-id="3758c-528">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="3758c-529">Ad esempio, un progetto può presentare un elemento di importazione la cui condizione dipende da un file esistente in un disco.</span><span class="sxs-lookup"><span data-stu-id="3758c-529">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="3758c-530">Se tale file non esiste in fase di valutazione, e viene creato dopo la valutazione, quindi il progetto deve essere contrassegnato come modificata in modo esplicito.</span><span class="sxs-lookup"><span data-stu-id="3758c-530">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="3758c-531">Il <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> metodo utilizza questa proprietà per determinare se è necessaria una versione di valutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-531">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectCollection : Microsoft.Build.Evaluation.ProjectCollection" Usage="Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-532">Ottiene l'insieme di progetti che contiene questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-532">Gets the project collection which contains this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-533">Restituisce l'insieme di progetti che contiene questo progetto, che non è mai Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-533">Returns the project collection which contains this project, which is never null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-534">Il percorso del file di origine stesso, non di un contenuto specifico all'interno di questo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-534">The location of the originating file itself, not any specific content within it.</span>
          </span>
          <span data-ttu-id="3758c-535">Se al file non è stato assegnato un nome, questa è una posizione vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-535">If the file has not been given a name, this is an empty location.</span>
          </span>
          <span data-ttu-id="3758c-536">Si tratta di un caso legittimo per non disporre di posizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-536">This is a legitimate case of having no location.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-537">Restituisce la posizione del file di origine o una posizione vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-537">Returns the originating file location or an empty location.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-538">Ottiene un enumeratore su tutte le proprietà del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-538">Gets an enumerator over all properties in this project.</span>
          </span>
          <span data-ttu-id="3758c-539">Si tratta di un insieme non ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-539">This is an unordered collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-540">Restituisce un enumeratore su tutte le proprietà del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-540">Returns an enumerator over all properties in this project.</span>
          </span>
          <span data-ttu-id="3758c-541">Poiché le proprietà vengono valutate così come si presentano, questo insieme non è ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-541">Since properties are evaluated as they appear, this is an unordered collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberSignature Language="F#" Value="member this.ReevaluateIfNecessary : unit -&gt; unit" Usage="project.ReevaluateIfNecessary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3758c-542">Rivaluta il progetto per incorporare eventuali modifiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-542">Reevaluates the project to incorporate any changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-543">Il progetto viene rivalutato solo se è contrassegnata come modificata.</span><span class="sxs-lookup"><span data-stu-id="3758c-543">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="3758c-544">La rivalutazione incorpora tutte le modifiche apportate al codice sorgente del progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-544">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="3758c-545">Genera InvalidProjectFileException se la valutazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="3758c-545">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveGlobalProperty : string -&gt; bool" Usage="project.RemoveGlobalProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3758c-546">Nome della proprietà globale da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-546">The name of the global property to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-547">Rimuove una proprietà globale e contrassegna il progetto come modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-547">Removes a global property and marks the project as modified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-548">Restituisce true se il valore della proprietà globale è stato impostato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-548">Returns true if the value of the global property was set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Evaluation.ProjectItem -&gt; bool" Usage="project.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3758c-549">Elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-549">The item to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-550">Rimuove un elemento dal progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-550">Removes an item from the project.</span>
          </span>
          <span data-ttu-id="3758c-551">L'elemento da rimuovere deve essere presente nel progetto e non deve provenire da un file importato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-551">The item to be removed must be present in the project, and must not originate from an imported file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-552">Restituisce true se l'elemento è presente in questo progetto valutato. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-552">Returns true if the item is present in this evaluated project; otherwise false.</span>
          </span>
          <span data-ttu-id="3758c-553">Di norma, questo metodo restituisce true poiché se l'elemento richiesto non è presente il metodo genera un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-553">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span>
          </span>
          <span data-ttu-id="3758c-554">Se l'elemento è presente solo nell'insieme ItemsIgnoringCondition, tuttavia, il metodo restituisce false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-554">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-555">Se il gruppo di elementi che contiene l'elemento è vuoto, viene rimossa anche.</span><span class="sxs-lookup"><span data-stu-id="3758c-555">If the item group containing the item becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="3758c-556">Se l'elemento provenienza da un carattere jolly o espressioni delimitato da punto e virgola, l'espressione viene espanso in più elementi.</span><span class="sxs-lookup"><span data-stu-id="3758c-556">If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.</span></span>  
  
 <span data-ttu-id="3758c-557">Il progetto viene aggiornato, ma si verifica alcuna ulteriore valutazione finché la rivalutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-557">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="3758c-558">Ad esempio, se un elemento di tipo "i" viene rimosso, "j" restituito da "@(i)" non è stato modificato finché la rivalutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-558">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : seq&lt;Microsoft.Build.Evaluation.ProjectItem&gt; -&gt; unit" Usage="project.RemoveItems items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="3758c-559">Elementi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-559">The items to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-560">Rimuove tutti gli elementi specificati dal progetto, a meno che non provengano da un progetto importato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-560">Removes all the given items from the project, unless they originate from an imported project.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-561">Se un elemento provenienza da un progetto importato, viene semplicemente ignorato.</span><span class="sxs-lookup"><span data-stu-id="3758c-561">If an item originates from an imported project, it is simply skipped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : Microsoft.Build.Evaluation.ProjectProperty -&gt; bool" Usage="project.RemoveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="3758c-562">Proprietà da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-562">The property to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-563">Rimuove una proprietà dal progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-563">Removes an property from the project.</span>
          </span>
          <span data-ttu-id="3758c-564">La proprietà da rimuovere deve essere presente nel progetto e non deve provenire da un file importato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-564">The property to be removed must be present in the project, and must not originate from an imported file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-565">Restituisce true se la proprietà è presente in questo progetto valutato. In caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-565">Returns true if the property is present in this evaluated project; otherwise false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-566">Se il gruppo di proprietà che contiene la proprietà è vuoto, viene rimossa anche.</span><span class="sxs-lookup"><span data-stu-id="3758c-566">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="3758c-567">Il progetto viene aggiornato, ma si verifica alcuna ulteriore valutazione finché la rivalutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-567">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="3758c-568">Ad esempio, se viene rimosso "p", "q" viene valutato da "$(p)" non viene modificato finché la rivalutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-568">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-569">Salva il progetto nel file system, se è stato modificato, utilizzando la codifica dei caratteri predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-569">Saves the project to the file system, if modified, using the default character encoding.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="project.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3758c-570">Salva il progetto nel file system, se è stato modificato, utilizzando la codifica dei caratteri predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-570">Saves the project to the file system, if modified, using the default character encoding.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="project.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="3758c-571">Writer di testo in cui salvare il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-571">The text writer to save the project to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-572">Salva il progetto nel writer di testo specificato, indipendentemente dal fatto che sia stato modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-572">Saves the project to the provided text writer, whether or not the project has been modified.</span>
          </span>
          <span data-ttu-id="3758c-573">Utilizza la codifica dei caratteri del writer di testo e contrassegna il progetto come non modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-573">Uses the character encoding of the text writer and marks the project as unmodified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="project.Save path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3758c-574">Percorso del codice sorgente del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-574">The path to the project source code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-575">Salva il progetto nel file system, se è stato modificato o se è cambiato il percorso del codice sorgente del progetto, utilizzando la codifica dei caratteri predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-575">Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Text.Encoding -&gt; unit" Usage="project.Save encoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding">
          <span data-ttu-id="3758c-576">Codifica dei caratteri utilizzata per salvare il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-576">The character encoding used to save the project.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-577">Salva il progetto nel file system, se è stato modificato, utilizzando la codifica dei caratteri specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-577">Saves the project to the file system, if modified, using the given character encoding.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="project.Save (path, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3758c-578">Percorso del codice sorgente del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-578">The path to the project source code.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="3758c-579">Codifica dei caratteri utilizzata per salvare il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-579">The character encoding used to save the project.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-580">Salva il progetto nel file system, se è stato modificato o se è cambiato il percorso del codice sorgente del progetto, utilizzando la codifica dei caratteri specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-580">Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveLogicalProject : System.IO.TextWriter -&gt; unit" Usage="project.SaveLogicalProject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="3758c-581">Writer che salva il file di progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-581">The writer that saves the project file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-582">Salva un file di progetto logico o pre-elaborato, che include tutti i file importati come se costituissero un solo file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-582">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberSignature Language="F#" Value="member this.SetGlobalProperty : string * string -&gt; bool" Usage="project.SetGlobalProperty (name, escapedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3758c-583">Nome della proprietà globale da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-583">The name of the global property to set.</span>
          </span>
        </param>
        <param name="escapedValue">
          <span data-ttu-id="3758c-584">Nuovo valore della proprietà globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-584">The new value of the global property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-585">Imposta una proprietà globale dopo la valutazione del progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-585">Sets a global property after the project has been evaluated.</span>
          </span>
          <span data-ttu-id="3758c-586">Se il valore viene modificato, il progetto viene contrassegnato per richiedere la rivalutazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-586">If the value changes, the project is marked to require reevaluation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-587">Restituisce <see langword="true" /> se il valore viene modificato; in caso contrario, restituisce <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-587">Returns <see langword="true" /> if the value changes, otherwise returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.SetProperty (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3758c-588">Nome della proprietà da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-588">The name of the property to set.</span>
          </span>
        </param>
        <param name="unevaluatedValue">
          <span data-ttu-id="3758c-589">Nuovo valore non valutato della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-589">The new unevaluated value of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3758c-590">Imposta o aggiunge al progetto una proprietà con il nome e il valore specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-590">Sets or adds a property with the given name and value to the project.</span>
          </span>
          <span data-ttu-id="3758c-591">Sovrascrive il valore di una proprietà con lo stesso nome se non proviene da un file importato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-591">Overwrites the value of a property with the same name if it did not originate in an imported file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3758c-592">Restituisce la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-592">Returns the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-593">Se è presente alcuna proprietà con il nome specificato, aggiorna l'ultima proprietà esistente con il nome specificato che non dispone di condizione su se stesso o gruppo di proprietà, a meno che non è stato generato in un file importato.</span><span class="sxs-lookup"><span data-stu-id="3758c-593">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="3758c-594">In caso contrario, aggiunge una nuova proprietà nel primo gruppo di proprietà senza una condizione, creazione di un gruppo di proprietà, se necessario dopo l'ultimo gruppo di proprietà esistente, oppure all'inizio del progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-594">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="3758c-595">Valutazione viene eseguita su base best effort.</span><span class="sxs-lookup"><span data-stu-id="3758c-595">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="3758c-596">Le proprietà definite nell'origine del progetto seguendo la nuova proprietà possono essere utilizzate per la valutazione.</span><span class="sxs-lookup"><span data-stu-id="3758c-596">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="3758c-597">Solo questa proprietà viene valutata.</span><span class="sxs-lookup"><span data-stu-id="3758c-597">Only this property is evaluated.</span></span> <span data-ttu-id="3758c-598">Altre proprietà che potrebbero dipendere non sono interessate.</span><span class="sxs-lookup"><span data-stu-id="3758c-598">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipEvaluation : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-599">Ottiene o imposta un flag che determina se ReevaluateIfNecessary è temporaneamente disabilitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-599">Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled.</span>
          </span>
          <span data-ttu-id="3758c-600">È utile quando l'host prevede di eseguire un numero di letture e scritture nel progetto ed è preferibile sacrificare temporaneamente la correttezza per migliorare le prestazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-600">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-601">Restituisce un flag che determina se ReevaluateIfNecessary è temporaneamente disabilitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-601">Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubToolsetVersion : string" Usage="Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-602">Ottiene il valore dell'attributo SubToolsetVersion, se presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-602">Gets the value of the SubToolsetVersion attribute, if any.</span>
          </span>
          <span data-ttu-id="3758c-603">Questo valore è stato combinato con il valore dell'attributo ToolsVersion per determinare le proprietà del set di strumenti per questo progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-603">This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-604">Restituisce il valore dell'attributo SubToolsetVersion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-604">Returns the SubToolsetVersion attribute value.</span>
          </span>
          <span data-ttu-id="3758c-605">Restituisce una stringa vuota se l'attributo non è presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-605">Returns an empty string if the attribute is not present.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Evaluation.Project.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-606">Ottiene un dizionario di tutte le destinazioni del progetto, ordinate per nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-606">Gets a dictionary of all targets in this project, keyed by target name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-607">Restituisce un dizionario di tutte le destinazioni del progetto, ordinate per nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-607">Returns a dictionary of all targets in this project, keyed by target name.</span>
          </span>
          <span data-ttu-id="3758c-608">Le destinazioni sottoposte a override non sono incluse in questo insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-608">Overridden targets are not included in this collection.</span>
          </span>
          <span data-ttu-id="3758c-609">Il dizionario è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-609">This dictionary is read-only.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-610">Ottiene la versione degli strumenti con cui è stato valutato il progetto, se presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-610">Gets the tools version that this project was evaluated with, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-611">Ottiene la versione degli strumenti con cui è stato valutato il progetto, se presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-611">Gets the tools version that this project was evaluated with, if any.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-612">Impostato dal costruttore.</span><span class="sxs-lookup"><span data-stu-id="3758c-612">Set by the constructor.</span></span> <span data-ttu-id="3758c-613">Questo non è necessariamente lo stesso come la versione degli strumenti sul tag di progetto, se presente. è possibile che sia stata specificata esternamente, ad esempio con un'opzione /TV. nella riga di comando.</span><span class="sxs-lookup"><span data-stu-id="3758c-613">This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.</span></span> <span data-ttu-id="3758c-614">La versione degli strumenti effettivo sul tag di progetto può essere ottenuta dalla <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span><span class="sxs-lookup"><span data-stu-id="3758c-614">The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span></span> <span data-ttu-id="3758c-615">La versione degli strumenti non può essere modificata dopo aver creato il progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-615">The tools version cannot be changed once the project has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Evaluation.Project.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3758c-616">Ottiene il progetto radice associato al progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-616">Gets the root project associated with this project.</span>
          </span>
          <span data-ttu-id="3758c-617">Non può mai essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-617">Can never be null</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3758c-618">Restituisce il progetto radice associato al progetto, che non può mai essere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3758c-618">Returns the root project associated with this project, which can never be null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3758c-619">Non è possibile impostare questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="3758c-619">There is no way to set this property.</span></span> <span data-ttu-id="3758c-620">Se si dispone di una nuova radice del progetto, valutarlo in un nuovo progetto.</span><span class="sxs-lookup"><span data-stu-id="3758c-620">If you have a new project root, evaluate it into a new project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>