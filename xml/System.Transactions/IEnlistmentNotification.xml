<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="198166c1aedb28a599cf6b4fc6e4d895c9a53dae" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51891036" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Descrive un'interfaccia che un gestore di risorse deve implementare per fornire i callback di notifica commit a due fasi per la gestione delle transazioni in seguito all'integrazione per la partecipazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Affinché un gestore di risorse per far parte di una transazione, deve integrarsi nella transazione tramite la gestione transazioni. La classe <xref:System.Transactions.Transaction> definisce un set di metodi i cui nomi iniziano con `Enlist` che forniscono questa funzionalità. I diversi `Enlist` metodi corrispondano ai tipi diversi di integrazione che potrebbero avere un gestore delle risorse.  
  
 Questa classe descrive un'interfaccia che un gestore di risorse deve implementare per fornire i callback di notifica commit a due fasi per la gestione delle transazioni in seguito all'integrazione per la partecipazione. Per ogni implementazione gestore delle risorse del <xref:System.Transactions.IEnlistmentNotification> interfaccia, è necessario integrarla con il <xref:System.Transactions.Transaction.EnlistVolatile%2A> metodo o il <xref:System.Transactions.Transaction.EnlistDurable%2A> metodo del <xref:System.Transactions.Transaction> (classe), a seconda che la risorsa sia volatile o durevole. Per altre informazioni sull'integrazione e il protocollo 2PC, vedere [integrazione di risorse come partecipanti a una transazione](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) e [commit di una transazione in monofase e multifase](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) rispettivamente.  
  
 La gestione transazioni informa l'oggetto inserito nell'elenco fasi diverse del protocollo di Commit a due fasi con i metodi seguenti.  
  
|Metodo|Descrizione|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|Questo metodo di un oggetto inserito nell'elenco viene usato come callback dalla gestione transazioni durante la prima fase di una transazione, quando il gestore delle transazioni chiede ai partecipanti che possono eseguire il commit della transazione.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|Questo metodo di un oggetto inserito nell'elenco viene usato come callback dalla gestione transazioni durante la seconda fase di una transazione, se la transazione viene eseguito il commit.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Questo metodo di un oggetto inserito nell'elenco viene usato come callback dalla gestione transazioni durante la seconda fase di una transazione, se la transazione viene interrotta (che è, eseguire il rollback).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|Questo metodo di un oggetto inserito nell'elenco viene usato come callback dalla gestione transazioni durante la seconda fase di una transazione, se la transazione in dubbio.|  
  
> [!NOTE]
>  È necessario essere consapevoli che le notifiche potrebbero non essere inviate in sequenza o in un ordine particolare.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione di questa interfaccia, nonché l'integrazione dell'oggetto come partecipante a una transazione che utilizza il <xref:System.Transactions.Transaction.EnlistVolatile%2A> (metodo).  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
    <related type="Article" href="https://msdn.microsoft.com/library/786a12c2-d530-49f4-9c59-5c973e15a11d">Integrazione di risorse come partecipanti a una transazione</related>
    <related type="Article" href="https://msdn.microsoft.com/library/694ea153-e4db-41ae-96ac-9ac66dcb69a9">Commit di una transazione in monofase e multifase</related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Oggetto <see cref="T:System.Transactions.Enlistment" /> utilizzato per inviare una risposta alla gestione transazioni.</param>
        <summary>Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del commit di una transazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La gestione transazioni chiama questo metodo di un oggetto inserito nell'elenco durante la seconda fase di commit quando si indica a tutti i partecipanti al commit della transazione.  
  
 Resource manager deve eseguire tutte le operazioni necessarie per completare la transazione e quindi informare il termine chiamando il <xref:System.Transactions.Enlistment.Done%2A> metodo su di `enlistment` parametro.  
  
 Se il gestore di risorse è stata integrata in modo permanente, ma non risponde chiamando <xref:System.Transactions.Enlistment.Done%2A> metodo, il gestore delle transazioni è che il gestore di risorse sia stato ricevuto la <xref:System.Transactions.IEnlistmentNotification.Commit%2A> chiamare. Di conseguenza, il gestore delle transazioni resta in attesa di una risposta e mantiene le informazioni rilevanti per questa transazione.  Se <xref:System.Transactions.Enlistment.Done%2A> viene mai chiamato, questa informazione viene mantenuta in modo indefinito in memoria o in una risorsa a livello di sistema. Di conseguenza le risorse non sono in grado di essere recuperato. Nel caso di una transazione distribuita, potrebbe verificarsi il riempimento del log MSDTC interrompe il processo MSDTC. Nel caso di una transazione gestita da <xref:System.Transactions>, ciò comporta un aumento graduale e continui il consumo di memoria del processo di resource manager. Pertanto, è indispensabile chiamare il <xref:System.Transactions.Enlistment.Done%2A> metodo dopo il gestore di risorse viene eseguito con la fase di preparazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Oggetto <see cref="T:System.Transactions.Enlistment" /> utilizzato per inviare una risposta alla gestione transazioni.</param>
        <summary>Notifica a un oggetto inserito nell'elenco che lo stato di una transazione è in dubbio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato per le risorse volatili, quando il gestore delle transazioni è richiamato un'operazione di commit monofase per una sola risorsa durevole e quindi una connessione alla risorsa durevole è stata interrotta prima di ottenere il risultato della transazione. A questo punto, il risultato della transazione non è possibile determinare in modo sicuro.  
  
 Come <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> viene considerato uno stato finale di una transazione, non è necessario chiamare <xref:System.Transactions.IEnlistmentNotification.Commit%2A> oppure <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> dopo la chiamata <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.  
  
> [!NOTE]
>  L'implementazione di questo metodo per le risorse volatili deve eseguire qualsiasi operazione di ripristino o il contenimento riconosce sui dati interessati.  Deve anche chiamare il <xref:System.Transactions.Enlistment.Done%2A> metodo su sul `enlistment` parametro dopo aver terminato il proprio lavoro.  
  
 Se il gestore di risorse è stata integrata in modo permanente, ma non risponde chiamando <xref:System.Transactions.Enlistment.Done%2A> metodo, il gestore delle transazioni è che il gestore di risorse sia stato ricevuto la <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> chiamare. Di conseguenza, il gestore delle transazioni resta in attesa di una risposta e mantiene le informazioni rilevanti per questa transazione.  Se <xref:System.Transactions.Enlistment.Done%2A> viene mai chiamato, questa informazione viene mantenuta in modo indefinito in memoria o in una risorsa a livello di sistema. Di conseguenza le risorse non sono in grado di essere recuperato. Nel caso di una transazione distribuita, potrebbe verificarsi il riempimento del log MSDTC interrompe il processo MSDTC. Nel caso di una transazione gestita da <xref:System.Transactions>, ciò comporta un aumento graduale e continui il consumo di memoria del processo di resource manager. Pertanto, è indispensabile chiamare il <xref:System.Transactions.Enlistment.Done%2A> metodo dopo il gestore di risorse viene eseguito con la fase di preparazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">Oggetto <see cref="T:System.Transactions.PreparingEnlistment" /> utilizzato per inviare una risposta al gestore delle transazioni.</param>
        <summary>Notifica a un oggetto inserito nell'elenco che è in corso la preparazione di una transazione per il commit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La gestione transazioni chiama questo metodo di una risorsa integrata durante la fase 1 di un impegno significativo, quando si chiede ai partecipanti che possono eseguire il commit della transazione.  
  
 Quando si implementa un gestore di risorse durevoli, è consigliabile registrare la preparazione di record durante questa fase. Il record deve contenere tutte le informazioni necessarie per eseguire il ripristino. Ciò include la <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> proprietà, che viene passato al gestore delle transazioni nel <xref:System.Transactions.TransactionManager.Reenlist%2A> metodo durante il ripristino. Per altre informazioni sul ripristino, vedere [Performing Recovery](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 Il gestore di risorse deve completare tutte le operazioni che devono essere completate prima di chiamare il <xref:System.Transactions.PreparingEnlistment.Prepared%2A> metodo di `preparingEnlistment` parametro per indicare la scelta del commit. È necessario assicurarsi che questa operazione viene eseguita prima di ricevere qualsiasi notifica della fase 2, ad esempio eseguire il commit, rollback o dubbio. Infatti, fase 2 le notifiche possono presentarsi inline nello stesso thread che ha chiamato la <xref:System.Transactions.PreparingEnlistment.Prepared%2A> metodo nella fase 1. Ne consegue che, dopo la chiamata al metodo  <xref:System.Transactions.PreparingEnlistment.Prepared%2A>, non occorre eseguire alcuna operazione (ad esempio il rilascio dei blocchi) che si prevede sia stata completata prima di ricevere le notifiche della fase 2.  
  
 È anche possibile chiamare il metodo di `preparingEnlistment` parametro per indicare la scelta del rollback.  
  
 Se si desidera che l'oggetto per osservare semplicemente e reagire allo stato di avanzamento della transazione, senza che fanno parte di esso, l'implementazione di questo metodo deve chiamare il <xref:System.Transactions.Enlistment.Done%2A> metodo di `preparingEnlistment` parametro dopo aver terminato il proprio lavoro. In questo modo, il gestore di risorse non riceverà alcuna notifica della fase 2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Oggetto <see cref="T:System.Transactions.Enlistment" /> utilizzato per inviare una risposta al gestore delle transazioni.</param>
        <summary>Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del rollback (interruzione) di una transazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La gestione transazioni chiama questo metodo di un oggetto inserito nell'elenco quando la transazione è in fase di rollback (interruzione) a causa dell'impossibilità di uno o più partecipanti alla transazione commit della transazione.  
  
 Resource manager deve eseguire tutte le operazioni necessarie per completare la transazione e quindi informare il termine chiamando il <xref:System.Transactions.Enlistment.Done%2A> metodo su di `enlistment` parametro.  
  
 Se il gestore di risorse è stata integrata in modo permanente, ma non risponde chiamando <xref:System.Transactions.Enlistment.Done%2A> metodo, il gestore delle transazioni è che il gestore di risorse sia stato ricevuto la <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> chiamare. Di conseguenza, il gestore delle transazioni resta in attesa di una risposta e mantiene le informazioni rilevanti per questa transazione.  Se <xref:System.Transactions.Enlistment.Done%2A> viene mai chiamato, questa informazione viene mantenuta in modo indefinito in memoria o in una risorsa a livello di sistema. Di conseguenza le risorse non sono in grado di essere recuperato. Nel caso di una transazione distribuita, potrebbe verificarsi il riempimento del log MSDTC interrompe il processo MSDTC. Nel caso di una transazione gestita da <xref:System.Transactions>, ciò comporta un aumento graduale e continui il consumo di memoria del processo di resource manager. Pertanto, è indispensabile chiamare il <xref:System.Transactions.Enlistment.Done%2A> metodo dopo il gestore di risorse viene eseguito con la fase di preparazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>