<Type Name="CommittableTransaction" FullName="System.Transactions.CommittableTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8957450ef230e6ce593217a9976a10d6d374270" />
    <Meta Name="ms.sourcegitcommit" Value="01f28caab7b3f23878dd07b402a8dd48b9478c8c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="39141331" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CommittableTransaction : System.Transactions.Transaction, IAsyncResult, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CommittableTransaction extends System.Transactions.Transaction implements class System.IAsyncResult, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.CommittableTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommittableTransaction&#xA;Inherits Transaction&#xA;Implements IAsyncResult, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommittableTransaction sealed : System::Transactions::Transaction, IAsyncResult, IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type CommittableTransaction = class&#xA;    inherit Transaction&#xA;    interface ISerializable&#xA;    interface IDisposable&#xA;    interface IAsyncResult" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Transactions.Transaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d360d-101">Descrive una transazione di cui è possibile eseguire il commit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d360d-101">Describes a committable transaction.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d360d-102">A differenza della classe <xref:System.Transactions.CommittableTransaction>, che consente di utilizzare le transazioni in modo implicito, la classe <xref:System.Transactions.TransactionScope> consente di utilizzare le transazioni in modo esplicito.</span><span class="sxs-lookup"><span data-stu-id="d360d-102">The <xref:System.Transactions.CommittableTransaction> class provides an explicit way for applications to use a transaction, as opposed to using the <xref:System.Transactions.TransactionScope> class implicitly.</span></span> <span data-ttu-id="d360d-103">A differenza della classe <xref:System.Transactions.TransactionScope>, il writer di applicazione deve chiamare in modo specifico i metodi <xref:System.Transactions.CommittableTransaction.Commit%2A> e <xref:System.Transactions.Transaction.Rollback%2A>, rispettivamente per interrompere la transazione o per eseguirne il commit.</span><span class="sxs-lookup"><span data-stu-id="d360d-103">Unlike the <xref:System.Transactions.TransactionScope> class, the application writer needs to specifically call the <xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.Transaction.Rollback%2A> methods in order to commit or abort the transaction.</span></span> <span data-ttu-id="d360d-104">Tuttavia, solo l'autore di una transazione possibile eseguire il commit della transazione.</span><span class="sxs-lookup"><span data-stu-id="d360d-104">However, only the creator of a transaction can commit the transaction.</span></span> <span data-ttu-id="d360d-105">Di conseguenza, le copie di una transazione di eseguire il commit, ottenuta tramite il <xref:System.Transactions.Transaction.Clone%2A> (metodo) non è possibile eseguire il commit.</span><span class="sxs-lookup"><span data-stu-id="d360d-105">Therefore, copies of a committable transaction, obtained through the <xref:System.Transactions.Transaction.Clone%2A> method are not committable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d360d-106">Si consiglia di creare transazioni implicite mediante la <xref:System.Transactions.TransactionScope> classe, in modo che il contesto di transazione di ambiente viene gestito automaticamente per l'utente.</span><span class="sxs-lookup"><span data-stu-id="d360d-106">We recommend that you create implicit transactions using the <xref:System.Transactions.TransactionScope> class, so that the ambient transaction context is automatically managed for you.</span></span> <span data-ttu-id="d360d-107">È anche consigliabile usare la <xref:System.Transactions.TransactionScope> e <xref:System.Transactions.DependentTransaction> classe per le applicazioni che richiedono l'uso della stessa transazione tra più chiamate di funzione o di thread.</span><span class="sxs-lookup"><span data-stu-id="d360d-107">You should also use the <xref:System.Transactions.TransactionScope> and <xref:System.Transactions.DependentTransaction> class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</span></span> <span data-ttu-id="d360d-108">Per altre informazioni su questo modello, vedere la [Implementing An implicita delle transazioni con transazioni Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) argomento.</span><span class="sxs-lookup"><span data-stu-id="d360d-108">For more information on this model, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="d360d-109">Creazione di un <xref:System.Transactions.CommittableTransaction> non viene impostata automaticamente la transazione di ambiente, ovvero la transazione viene eseguito il codice in.</span><span class="sxs-lookup"><span data-stu-id="d360d-109">Creating a <xref:System.Transactions.CommittableTransaction> does not automatically set the ambient transaction, which is the transaction your code executes in.</span></span> <span data-ttu-id="d360d-110">È possibile ottenere o impostare la transazione di ambiente tramite una chiamata al metodo statico <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> proprietà dell'oggetto globale <xref:System.Transactions.Transaction> oggetto.</span><span class="sxs-lookup"><span data-stu-id="d360d-110">You can get or set the ambient transaction by calling the static <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> property of the global <xref:System.Transactions.Transaction> object.</span></span> <span data-ttu-id="d360d-111">Per altre informazioni sulle transazioni di ambiente, vedere la sezione "Gestione delle transazioni del flusso mediante l'enumerazione TransactionScopeOption" del [Implementing An implicita delle transazioni con transazioni Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) argomento.</span><span class="sxs-lookup"><span data-stu-id="d360d-111">For more information on ambient transactions, see the " Managing Transaction Flow using TransactionScopeOption" section of the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span> <span data-ttu-id="d360d-112">Se la transazione di ambiente non è impostata, qualsiasi operazione su un gestore di risorse non fa parte di tale transazione.</span><span class="sxs-lookup"><span data-stu-id="d360d-112">If the ambient transaction is not set, any operation on a resource manager is not part of that transaction.</span></span> <span data-ttu-id="d360d-113">È necessario impostare e reimpostare la transazione di ambiente per assicurarsi che i gestori di risorse funzionino nel contesto di transazione a destra in modo esplicito.</span><span class="sxs-lookup"><span data-stu-id="d360d-113">You need to explicitly set and reset the ambient transaction to ensure that resource managers operate under the right transaction context.</span></span>  
  
 <span data-ttu-id="d360d-114">Fino a quando un <xref:System.Transactions.CommittableTransaction> è stato eseguito il commit, tutte le risorse interessate dalla transazione sono comunque bloccate.</span><span class="sxs-lookup"><span data-stu-id="d360d-114">Until a <xref:System.Transactions.CommittableTransaction> has been committed, all the resources involved with the transaction are still locked.</span></span>  
  
 <span data-ttu-id="d360d-115">Gli oggetti <xref:System.Transactions.CommittableTransaction> non possono essere riutilizzati.</span><span class="sxs-lookup"><span data-stu-id="d360d-115">A <xref:System.Transactions.CommittableTransaction> object cannot be reused.</span></span> <span data-ttu-id="d360d-116">Dopo che è stato eseguito il commit o rollback, non può essere usato nuovamente in una transazione o impostata come contesto di transazione di ambiente corrente.</span><span class="sxs-lookup"><span data-stu-id="d360d-116">Once it has been committed or rolled back, it cannot be used again in a transaction or set as the current ambient transaction context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d360d-117">L'esempio seguente crea due nuove istanze di <xref:System.Transactions.CommittableTransaction>, esegue il commit e il rollback ne rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="d360d-117">The following sample creates two new instances of <xref:System.Transactions.CommittableTransaction>, commits and rolls back them respectively.</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d360d-118">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d360d-118">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d360d-119">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.CommittableTransaction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-119">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d360d-120">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.CommittableTransaction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-120">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d360d-121">L'esempio seguente crea una nuova istanza della <xref:System.Transactions.CommittableTransaction> e commit.</span><span class="sxs-lookup"><span data-stu-id="d360d-121">The following sample creates a new instance of <xref:System.Transactions.CommittableTransaction> and commits it.</span></span>  
  
 [!code-csharp[Tx_CommittableTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_committabletx/cs/committabletxwithsql.cs#1)]
 [!code-vb[Tx_CommittableTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_committabletx/vb/committabletxwithsql.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d360d-122">Tentativo di creare una transazione in Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-122">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="new System.Transactions.CommittableTransaction : TimeSpan -&gt; System.Transactions.CommittableTransaction" Usage="new System.Transactions.CommittableTransaction timeout" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d360d-123">Tempo massimo di esistenza della transazione prima della sua interruzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-123">The maximum amount of time the transaction can exist, before it is aborted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d360d-124">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.CommittableTransaction" /> con il valore <paramref name="timeout" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-124">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified <paramref name="timeout" /> value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d360d-125">Tentativo di creare una transazione in Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-125">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction (System.Transactions.TransactionOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As TransactionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction(System::Transactions::TransactionOptions options);" />
      <MemberSignature Language="F#" Value="new System.Transactions.CommittableTransaction : System.Transactions.TransactionOptions -&gt; System.Transactions.CommittableTransaction" Usage="new System.Transactions.CommittableTransaction options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="d360d-126">Struttura <see cref="T:System.Transactions.TransactionOptions" /> che descrive le opzioni di transazione da utilizzare per la nuova transazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-126">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use for the new transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d360d-127">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.CommittableTransaction" /> con le opzioni di transazione specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-127">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified transaction options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d360d-128">L'esempio seguente crea una nuova istanza della <xref:System.Transactions.CommittableTransaction> con le opzioni e viene interrotta.</span><span class="sxs-lookup"><span data-stu-id="d360d-128">The following sample creates a new instance of <xref:System.Transactions.CommittableTransaction> with options, and aborts it.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d360d-129">Tentativo di creare una transazione in Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-129">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d360d-130">
            <paramref name="options" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-130">
              <paramref name="options" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCommit">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCommit (AsyncCallback asyncCallback, object asyncState);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCommit(class System.AsyncCallback asyncCallback, object asyncState) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" FrameworkAlternate="netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCommit(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCommit (AsyncCallback callback, object user_defined_state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCommit(class System.AsyncCallback callback, object user_defined_state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCommit (callback As AsyncCallback, user_defined_state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCommit(AsyncCallback ^ callback, System::Object ^ user_defined_state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginCommit : AsyncCallback * obj -&gt; IAsyncResult" Usage="committableTransaction.BeginCommit (callback, user_defined_state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="user_defined_state" Type="System.Object" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="d360d-131">Delegato <see cref="T:System.AsyncCallback" /> richiamato quando la transazione viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-131">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes.</span>
          </span>
          <span data-ttu-id="d360d-132">Questo parametro può essere <see langword="null" />, nel qual caso all'applicazione non viene notificato il completamento della transazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-132">This parameter can be <see langword="null" />, in which case the application is not notified of the transaction's completion.</span>
          </span>
          <span data-ttu-id="d360d-133">Al contrario, nell'applicazione deve essere utilizzata l'interfaccia <see cref="T:System.IAsyncResult" /> per verificare il completamento e attendere di conseguenza, oppure deve essere chiamato il metodo <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> per attendere il completamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-133">Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d360d-134">Delegato <see cref="T:System.AsyncCallback" /> richiamato quando la transazione viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-134">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes.</span>
          </span>
          <span data-ttu-id="d360d-135">Questo parametro può essere <see langword="null" />, nel qual caso all'applicazione non viene notificato il completamento della transazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-135">This parameter can be <see langword="null" />, in which case the application is not notified of the transaction's completion.</span>
          </span>
          <span data-ttu-id="d360d-136">Al contrario, nell'applicazione deve essere utilizzata l'interfaccia <see cref="T:System.IAsyncResult" /> per verificare il completamento e attendere di conseguenza, oppure deve essere chiamato il metodo <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> per attendere il completamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-136">Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="d360d-137">Oggetto, che può contenere informazioni sullo stato arbitrarie, associato all'esecuzione asincrona del commit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-137">An object, which might contain arbitrary state information, associated with the asynchronous commitment.</span>
          </span>
          <span data-ttu-id="d360d-138">Questo oggetto viene passato al callback e non è interpretato mediante <see cref="N:System.Transactions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-138">This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />.</span>
          </span>
          <span data-ttu-id="d360d-139">È consentito un riferimento null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-139">A null reference is permitted.</span>
          </span>
        </param>
        <param name="user_defined_state">
          <span data-ttu-id="d360d-140">Oggetto, che può contenere informazioni sullo stato arbitrarie, associato all'esecuzione asincrona del commit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-140">An object, which might contain arbitrary state information, associated with the asynchronous commitment.</span>
          </span>
          <span data-ttu-id="d360d-141">Questo oggetto viene passato al callback e non è interpretato mediante <see cref="N:System.Transactions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-141">This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />.</span>
          </span>
          <span data-ttu-id="d360d-142">È consentito un riferimento null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-142">A null reference is permitted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d360d-143">Avvia un tentativo di eseguire il commit della transazione in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-143">Begins an attempt to commit the transaction asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d360d-144">Interfaccia <see cref="T:System.IAsyncResult" /> che può essere utilizzata dal chiamante per controllare lo stato dell'operazione asincrona o per attendere il completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-144">An <see cref="T:System.IAsyncResult" /> interface that can be used by the caller to check the status of the asynchronous operation, or to wait for the operation to complete.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d360d-145">Questo metodo restituisce immediatamente, prima che la transazione è stata completata.</span><span class="sxs-lookup"><span data-stu-id="d360d-145">This method returns immediately, before the transaction has been completed.</span></span> <span data-ttu-id="d360d-146">Commit in un thread diverso, quindi la transazione e `asyncCallback` delegato viene richiamato quando è stata completata.</span><span class="sxs-lookup"><span data-stu-id="d360d-146">The transaction then commits on a different thread, and the `asyncCallback` delegate is invoked when it has completed.</span></span> <span data-ttu-id="d360d-147">Dopo che questo metodo viene chiamato, il risultato della transazione non ricevono fino a quando non si chiama <xref:System.Transactions.CommittableTransaction.EndCommit%2A>.</span><span class="sxs-lookup"><span data-stu-id="d360d-147">After this method is called, you do not receive the outcome of the transaction until you call <xref:System.Transactions.CommittableTransaction.EndCommit%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d360d-148">Il processo di commit venga completato in modo sincrono all'interno di questa chiamata al metodo.</span><span class="sxs-lookup"><span data-stu-id="d360d-148">The commit process may complete synchronously inside this method call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="committableTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d360d-149">Tenta di eseguire il commit della transazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-149">Attempts to commit the transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d360d-150">Quando viene chiamato questo metodo, tutti gli oggetti registrati per partecipare alla transazione vengano eseguito il polling e possono indicare in modo indipendente i voti per eseguire il commit o rollback della transazione.</span><span class="sxs-lookup"><span data-stu-id="d360d-150">When this method is called, all objects that have registered to participate in the transaction are polled and can independently indicate their vote to either commit or roll back the transaction.</span></span> <span data-ttu-id="d360d-151">Se un partecipante vota per eseguire il rollback della transazione, viene eseguito il rollback e questo metodo genera un <xref:System.Transactions.TransactionException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="d360d-151">If any participant votes to roll back the transaction, it is rolled back and this method throws a <xref:System.Transactions.TransactionException> exception.</span></span> <span data-ttu-id="d360d-152">Si tratta di un'occorrenza normale per una transazione e il codice deve rilevare ed elaborare tali eccezioni.</span><span class="sxs-lookup"><span data-stu-id="d360d-152">This is a normal occurrence for a transaction and your code should catch and process such exceptions.</span></span>  
  
 <span data-ttu-id="d360d-153"><xref:System.Transactions.CommittableTransaction.Commit%2A> e <xref:System.Transactions.CommittableTransaction.EndCommit%2A> blocco fino al completamento della prima fase dell'elaborazione delle transazioni.</span><span class="sxs-lookup"><span data-stu-id="d360d-153"><xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.CommittableTransaction.EndCommit%2A> block until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="d360d-154">La prima fase termina dopo che tutti i gestori di risorse e il risultato della transazione è sono votato integrazioni nella transazione e <xref:System.Transactions.TransactionManager> durevole ha deciso di eseguire il commit o interrompere la transazione.</span><span class="sxs-lookup"><span data-stu-id="d360d-154">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="d360d-155">La seconda fase di elaborazione è sempre asincrona.</span><span class="sxs-lookup"><span data-stu-id="d360d-155">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="d360d-156">Pertanto, non c'è garanzia che i dati appena eseguito il commit da una determinata transazione sarà immediatamente disponibili in un secondo momento quando non si usa un'altra transazione per visualizzare i dati.</span><span class="sxs-lookup"><span data-stu-id="d360d-156">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 <span data-ttu-id="d360d-157">Poiché questo metodo si blocca fino a quando la prima fase dell'elaborazione delle transazioni è completa, è necessario prestare molta attenzione quando si usa questo metodo in un'applicazione Windows Form (WinForm) o da un deadlock può verificarsi.</span><span class="sxs-lookup"><span data-stu-id="d360d-157">Because this method blocks until the first phase of transaction processing is complete, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</span></span> <span data-ttu-id="d360d-158">Se si chiama questo metodo all'interno di un evento di controllo Windows Form (ad esempio, facendo clic su un pulsante) e usare sincroni <xref:System.Windows.Forms.Control.Invoke%2A> metodo per indirizzare il controllo per eseguire alcune attività dell'interfaccia utente (ad esempio, la modifica dei colori) durante l'elaborazione della transazione, un si verifica un deadlock.</span><span class="sxs-lookup"><span data-stu-id="d360d-158">If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous <xref:System.Windows.Forms.Control.Invoke%2A> method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</span></span> <span data-ttu-id="d360d-159">Infatti il <xref:System.Windows.Forms.Control.Invoke%2A> metodo è sincrono e blocca il thread di lavoro fino a quando il thread dell'interfaccia utente non termina il processo.</span><span class="sxs-lookup"><span data-stu-id="d360d-159">This is because the <xref:System.Windows.Forms.Control.Invoke%2A> method is synchronous and blocks the worker thread until the UI thread finishes its job.</span></span> <span data-ttu-id="d360d-160">Tuttavia, in questo scenario, il thread dell'interfaccia utente è inoltre in attesa per il thread di lavoro eseguire il commit della transazione.</span><span class="sxs-lookup"><span data-stu-id="d360d-160">However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</span></span> <span data-ttu-id="d360d-161">Il risultato è che nessuno è in grado di procedere e l'ambito per un periodo illimitato attende il Commit alla fine.</span><span class="sxs-lookup"><span data-stu-id="d360d-161">The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</span></span> <span data-ttu-id="d360d-162">È consigliabile usare <xref:System.Windows.Forms.Control.BeginInvoke%2A> anziché <xref:System.Windows.Forms.Control.Invoke%2A> laddove possibile, perché è asincrona e pertanto meno soggetto a un deadlock.</span><span class="sxs-lookup"><span data-stu-id="d360d-162">You should use <xref:System.Windows.Forms.Control.BeginInvoke%2A> rather than <xref:System.Windows.Forms.Control.Invoke%2A> wherever possible, because it is asynchronous and thus less prone to deadlock.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionInDoubtException">
          <span data-ttu-id="d360d-163">
            <see cref="M:System.Transactions.CommittableTransaction.Commit" /> viene chiamato in una transazione, che diventa <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-163">
              <see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called on a transaction and the transaction becomes <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Transactions.TransactionAbortedException">
          <span data-ttu-id="d360d-164">Viene chiamato <see cref="M:System.Transactions.CommittableTransaction.Commit" /> e viene eseguito il rollback della transazione per la prima volta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-164">
              <see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called and the transaction rolls back for the first time.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndCommit">
      <MemberSignature Language="C#" Value="public void EndCommit (IAsyncResult asyncResult);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCommit(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" FrameworkAlternate="netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCommit (asyncResult As IAsyncResult)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCommit(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public void EndCommit (IAsyncResult ar);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCommit(class System.IAsyncResult ar) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCommit (ar As IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCommit(IAsyncResult ^ ar);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndCommit : IAsyncResult -&gt; unit" Usage="committableTransaction.EndCommit ar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="ar" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d360d-165">Oggetto <see cref="T:System.IAsyncResult" /> associato al commit asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-165">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</span>
          </span>
        </param>
        <param name="ar">
          <span data-ttu-id="d360d-166">Oggetto <see cref="T:System.IAsyncResult" /> associato al commit asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-166">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d360d-167">Termina un tentativo di eseguire il commit della transazione in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-167">Ends an attempt to commit the transaction asynchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d360d-168">È necessario chiamare questo metodo nel delegato di callback specificato come parametro per il <xref:System.Transactions.CommittableTransaction.BeginCommit%2A> metodo, al termine delle operazioni di pulizia associate al commit asincrono.</span><span class="sxs-lookup"><span data-stu-id="d360d-168">You should call this method in the callback delegate specified as a parameter to the <xref:System.Transactions.CommittableTransaction.BeginCommit%2A> method, when you have finished any cleanup work associated with the asynchronous commitment.</span></span> <span data-ttu-id="d360d-169">È anche possibile chiamare questo metodo all'inizio senza tempi di attesa per il delegato.</span><span class="sxs-lookup"><span data-stu-id="d360d-169">You can also call this method early without waiting for the delegate.</span></span> <span data-ttu-id="d360d-170">Se, entro l'ora di che questo metodo viene chiamato, la transazione non è completato, questo metodo attende il completamento.</span><span class="sxs-lookup"><span data-stu-id="d360d-170">If, by the time you call this method, the transaction has not completed, this method waits for its completion.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d360d-171">Il <xref:System.IAsyncResult.CompletedSynchronously%2A> restituito dalla proprietà `asyncResult` è sempre `false`, anche se l'operazione è stata completata in modo sincrono.</span><span class="sxs-lookup"><span data-stu-id="d360d-171">The <xref:System.IAsyncResult.CompletedSynchronously%2A> property returned by `asyncResult` is always `false`, even if the operation completed synchronously.</span></span>  
  
 <span data-ttu-id="d360d-172"><xref:System.Transactions.CommittableTransaction.Commit%2A> e <xref:System.Transactions.CommittableTransaction.EndCommit%2A> blocco fino al completamento della prima fase dell'elaborazione delle transazioni.</span><span class="sxs-lookup"><span data-stu-id="d360d-172"><xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.CommittableTransaction.EndCommit%2A> block until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="d360d-173">La prima fase termina dopo che tutti i gestori di risorse e il risultato della transazione è sono votato integrazioni nella transazione e <xref:System.Transactions.TransactionManager> durevole ha deciso di eseguire il commit o interrompere la transazione.</span><span class="sxs-lookup"><span data-stu-id="d360d-173">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="d360d-174">La seconda fase di elaborazione è sempre asincrona.</span><span class="sxs-lookup"><span data-stu-id="d360d-174">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="d360d-175">Pertanto, non c'è garanzia che i dati appena eseguito il commit da una determinata transazione sarà immediatamente disponibili in un secondo momento quando non si usa un'altra transazione per visualizzare i dati.</span><span class="sxs-lookup"><span data-stu-id="d360d-175">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionAbortedException">
          <span data-ttu-id="d360d-176">Viene chiamato <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> e viene eseguito il rollback della transazione per la prima volta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-176">
              <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> is called and the transaction rolls back for the first time.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.AsyncState">
      <MemberSignature Language="C#" Value="object System.IAsyncResult.AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.IAsyncResult.AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AsyncState As Object Implements IAsyncResult.AsyncState" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.IAsyncResult.AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Transactions.CommittableTransaction.System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d360d-177">Ottiene l'oggetto fornito come ultimo parametro della chiamata del metodo <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-177">Gets the object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d360d-178">Oggetto fornito come ultimo parametro della chiamata del metodo <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-178">The object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.AsyncWaitHandle">
      <MemberSignature Language="C#" Value="System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AsyncWaitHandle As WaitHandle Implements IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="property System::Threading::WaitHandle ^ System.IAsyncResult.AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Transactions.CommittableTransaction.System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d360d-179">Ottiene un <see cref="T:System.Threading.WaitHandle" />, utilizzato per attendere il completamento di un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-179">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d360d-180">
            <see cref="T:System.Threading.WaitHandle" /> utilizzato per attendere il completamento di un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-180">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.CompletedSynchronously">
      <MemberSignature Language="C#" Value="bool System.IAsyncResult.CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CompletedSynchronously As Boolean Implements IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System.IAsyncResult.CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Transactions.CommittableTransaction.System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d360d-181">Ottiene un'indicazione sull'eventuale completamento in modo sincrono di un'operazione di commit asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-181">Gets an indication of whether the asynchronous commit operation completed synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d360d-182">
            <see langword="true" /> se l'operazione di commit asincrona è stata completata in modo sincrono, in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-182">
              <see langword="true" /> if the asynchronous commit operation completed synchronously; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d360d-183">Questa proprietà restituisce sempre <see langword="false" /> anche se l'operazione viene completata in modo sincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-183">This property always returns <see langword="false" /> even if the operation completed synchronously.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.IsCompleted">
      <MemberSignature Language="C#" Value="bool System.IAsyncResult.IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsCompleted As Boolean Implements IAsyncResult.IsCompleted" />
      <MemberSignature Language="C++ CLI" Value="property bool System.IAsyncResult.IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Transactions.CommittableTransaction.System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d360d-184">Ottiene un'indicazione del completamento dell'operazione di commit asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-184">Gets an indication whether the asynchronous commit operation has completed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d360d-185">
            <see langword="true" /> se l'operazione viene completata, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d360d-185">
              <see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>