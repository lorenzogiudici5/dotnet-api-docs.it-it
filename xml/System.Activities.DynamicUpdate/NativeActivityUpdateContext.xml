<Type Name="NativeActivityUpdateContext" FullName="System.Activities.DynamicUpdate.NativeActivityUpdateContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31752ff7cbccf2d246a87444d52271e1eb266243" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36723322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NativeActivityUpdateContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NativeActivityUpdateContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeActivityUpdateContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeActivityUpdateContext" />
  <TypeSignature Language="F#" Value="type NativeActivityUpdateContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un contesto di aggiornamento di un'attività nativa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe supporta il controllo delle versioni e le funzionalità di aggiornamento dinamiche di Windows Workflow Foundation. Per altre informazioni sul controllo delle versioni del flusso di lavoro, l'identità del flusso di lavoro e di aggiornamento dinamico, vedere gli argomenti seguenti.  
  
 [Controllo delle versioni del flusso di lavoro](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Viene descritta la funzionalità di controllo delle versioni del flusso di lavoro introdotta in [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Aggiornamento dinamico](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Viene descritto come aggiornare la definizione del flusso di lavoro di un'istanza permanente del flusso di lavoro tramite l'aggiornamento dinamico.  
  
 [Usando identità WorkflowApplication e controllo delle versioni](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Viene descritto come usare <xref:System.Activities.WorkflowIdentity> per ospitare più versioni di un flusso di lavoro side-by-side.  
  
 [Gestione di più versioni in WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Viene illustrato come ospitare più versioni di un flusso di lavoro in un singolo endpoint.  
  
 [Procedura: Ospitare più versioni di un flusso di lavoro side-by-side](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 In questo passaggio il [esercitazione introduttiva su](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustra l'aggiornamento di una definizione del flusso di lavoro e hosting di flussi di lavoro usando la definizione precedente e nuova contemporaneamente.  
  
 [Procedura: Aggiornare la definizione di un'istanza del flusso di lavoro in esecuzione](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 In questo passaggio il [esercitazione introduttiva su](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustra l'aggiornamento di istanze persistenti del flusso di lavoro per l'utilizzo di una nuova definizione del flusso di lavoro.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityInstanceId">
      <MemberSignature Language="C#" Value="public string ActivityInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivityInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ActivityInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivityInstanceId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivityInstanceId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivityInstanceId : string" Usage="System.Activities.DynamicUpdate.NativeActivityUpdateContext.ActivityInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'identificatore univoco dell'istanza di attività attualmente in esecuzione.</summary>
        <value>Ottiene l'identificatore univoco dell'istanza di attività attualmente in esecuzione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un punto al quale NativeActivity può attendere passivamente di essere ripreso.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark () As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark();" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : unit -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un punto al quale NativeActivity può attendere passivamente di essere ripreso.</summary>
        <returns>Un segnalibro.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (callback As BookmarkCallback) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::Activities::BookmarkCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : System.Activities.BookmarkCallback -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Il metodo da chiamare quando una notifica segnala la ripresa di NativeActivity.</param>
        <summary>Crea il punto al quale un NativeActivity può attendere passivamente di essere ripreso e pianifica il metodo specificato da eseguire quando una notifica dell'operazione di ripresa viene completata.</summary>
        <returns>Metodo di callback</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome del segnalibro.</param>
        <summary>Crea il punto, con il nome specificato, al quale un NativeActivity può attendere passivamente di essere ripreso.</summary>
        <returns>Segnalibro che include il nome del segnalibro.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (System.Activities.BookmarkCallback callback, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(class System.Activities.BookmarkCallback callback, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (callback As BookmarkCallback, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : System.Activities.BookmarkCallback * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (callback, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="callback">Il metodo da chiamare quando una notifica segnala la ripresa di NativeActivity.</param>
        <param name="options">Impostazione enumerata che governa come il segnalibro funziona in relazione agli altri thread durante l'esecuzione di un corrente NativeActivity.</param>
        <summary>Crea il punto al quale un NativeActivity può attendere passivamente di essere ripreso, con il metodo specificato da eseguire quando una notifica dell'operazione di ripresa viene completata e con l'opzione specificata che governa come il segnalibro viene utilizzato durante l'esecuzione del NativeActivity corrente.</summary>
        <returns>Segnalibro che include il metodo di callback e l'opzione dell'esecuzione di segnalibro.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="name">Nome del segnalibro.</param>
        <param name="callback">Il metodo da chiamare quando una notifica segnala la ripresa di NativeActivity.</param>
        <summary>Crea il punto al quale un NativeActivity può attendere passivamente di essere ripreso, con il nome specificato e il metodo specificato da eseguire quando una notifica dell'operazione di ripresa viene completata.</summary>
        <returns>Segnalibro che include il nome del segnalibro e il metodo di callback.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="name">Nome del segnalibro.</param>
        <param name="callback">Il metodo da chiamare quando una notifica segnala la ripresa di NativeActivity.</param>
        <param name="options">Opzioni del segnalibro che governano come il segnalibro viene utilizzato durante l'esecuzione dell'oggetto NativeActivity corrente.</param>
        <summary>Crea il punto al quale un NativeActivity può attendere passivamente di essere ripreso con il metodo specificato, il metodo specificato da eseguire quando una notifica dell'operazione di ripresa viene completata e con l'opzione specificata che governa come il segnalibro viene utilizzato durante l'esecuzione del NativeActivity corrente.</summary>
        <returns>Segnalibro che include il nome del segnalibro, il metodo di callback e l'opzione di esecuzione del segnalibro.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, scope As BookmarkScope) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkScope ^ scope);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkScope -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="name">Nome del segnalibro.</param>
        <param name="callback">Il metodo da chiamare quando una notifica segnala la ripresa di NativeActivity.</param>
        <param name="scope">Identificatore applicato a un gruppo di segnalibri che funzionano sotto lo stesso protocollo durante il runtime del flusso di lavoro.</param>
        <summary>Crea il punto al quale un NativeActivity può attendere passivamente di essere ripreso con il nome specificato, il metodo specificato da eseguire quando una notifica dell'operazione di ripresa viene completata e l'ambito del segnalibro specificato.</summary>
        <returns>Segnalibro che include il nome del segnalibro, il metodo di callback e l'ambito del segnalibro.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkScope scope, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, class System.Activities.BookmarkScope scope, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, scope As BookmarkScope, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkScope ^ scope, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkScope * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback, scope, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="name">Nome del segnalibro.</param>
        <param name="callback">Il metodo da chiamare quando una notifica segnala la ripresa di NativeActivity.</param>
        <param name="scope">Identificatore applicato a un gruppo di segnalibri che funzionano sotto lo stesso protocollo durante il runtime del flusso di lavoro.</param>
        <param name="options">Opzioni del segnalibro che governano come il segnalibro viene utilizzato durante l'esecuzione dell'oggetto NativeActivity corrente.</param>
        <summary>Crea il punto al quale un NativeActivity può attendere passivamente di essere ripreso con il metodo specificato, il metodo specificato da eseguire quando una notifica dell'operazione di ripresa viene completata, l'ambito specificato del segnalibro e con l'opzione specificata che governa come il segnalibro viene utilizzato durante l'esecuzione del NativeActivity corrente.</summary>
        <returns>Segnalibro che include il nome del segnalibro, il metodo di callback, l'ambito del segnalibro e l'opzione di esecuzione del segnalibro.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBookmarkScope">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkScope DefaultBookmarkScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.BookmarkScope DefaultBookmarkScope" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.DefaultBookmarkScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultBookmarkScope As BookmarkScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::BookmarkScope ^ DefaultBookmarkScope { System::Activities::BookmarkScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBookmarkScope : System.Activities.BookmarkScope" Usage="System.Activities.DynamicUpdate.NativeActivityUpdateContext.DefaultBookmarkScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ambito del segnalibro associato alla radice del flusso di lavoro.</summary>
        <value>Ambito del segnalibro associato alla radice del flusso di lavoro.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowUpdate">
      <MemberSignature Language="C#" Value="public void DisallowUpdate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisallowUpdate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.DisallowUpdate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisallowUpdate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisallowUpdate(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="member this.DisallowUpdate : string -&gt; unit" Usage="nativeActivityUpdateContext.DisallowUpdate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">Motivo per non consentire il contesto.</param>
        <summary>Impedisce l'aggiornamento di <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindExecutionProperty">
      <MemberSignature Language="C#" Value="public object FindExecutionProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindExecutionProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.FindExecutionProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindExecutionProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindExecutionProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.FindExecutionProperty : string -&gt; obj" Usage="nativeActivityUpdateContext.FindExecutionProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della proprietà di esecuzione del flusso di lavoro.</param>
        <summary>Trova una proprietà di esecuzione del flusso di lavoro con il nome specificato.</summary>
        <returns>Proprietà di esecuzione del flusso di lavoro con il nome specificato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocation&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.Location&lt;T&gt; GetLocation&lt;T&gt; (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Location`1&lt;!!T&gt; GetLocation&lt;T&gt;(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetLocation``1(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Activities::Location&lt;T&gt; ^ GetLocation(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.GetLocation : System.Activities.Variable -&gt; System.Activities.Location&lt;'T&gt;" Usage="nativeActivityUpdateContext.GetLocation variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Location&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo di percorso da restituire.</typeparam>
        <param name="variable">Variabile dal percorso.</param>
        <summary>Restituisce la posizione tipizzata per la posizione a cui viene fatto riferimento specificata.</summary>
        <returns>Percorso tipizzato per il percorso cui viene fatto riferimento specificato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSavedOriginalValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indica l'oggetto per salvare il valore originale dell'attività corrente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSavedOriginalValue">
      <MemberSignature Language="C#" Value="public object GetSavedOriginalValue (System.Activities.Activity childActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSavedOriginalValue(class System.Activities.Activity childActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetSavedOriginalValue(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSavedOriginalValue (childActivity As Activity) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSavedOriginalValue(System::Activities::Activity ^ childActivity);" />
      <MemberSignature Language="F#" Value="member this.GetSavedOriginalValue : System.Activities.Activity -&gt; obj" Usage="nativeActivityUpdateContext.GetSavedOriginalValue childActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="childActivity">L'attività figlio.</param>
        <summary>Indica l'oggetto per salvare il valore originale dell'attività corrente.</summary>
        <returns>Oggetto per salvare il valore originale per l'attività corrente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSavedOriginalValue">
      <MemberSignature Language="C#" Value="public object GetSavedOriginalValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSavedOriginalValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetSavedOriginalValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSavedOriginalValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSavedOriginalValue(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetSavedOriginalValue : string -&gt; obj" Usage="nativeActivityUpdateContext.GetSavedOriginalValue propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nome della proprietà.</param>
        <summary>Indica l'oggetto per salvare il valore originale dell'attività corrente.</summary>
        <returns>Oggetto per salvare il valore originale per l'attività corrente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene il valore dell'oggetto specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.Argument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.Argument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.Argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::Argument ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.Argument -&gt; obj" Usage="nativeActivityUpdateContext.GetValue argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.Argument" />
      </Parameters>
      <Docs>
        <param name="argument">Argomento da esaminare.</param>
        <summary>Ottiene il valore dell'argomento specificato.</summary>
        <returns>Valore dell'argomento specificato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.RuntimeArgument runtimeArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.RuntimeArgument runtimeArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::RuntimeArgument ^ runtimeArgument);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.RuntimeArgument -&gt; obj" Usage="nativeActivityUpdateContext.GetValue runtimeArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runtimeArgument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="runtimeArgument">Argomento da esaminare.</param>
        <summary>Ottiene il valore dell'oggetto RuntimeArgument specificato.</summary>
        <returns>Valore dell'oggetto RuntimeArgument specificato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.Variable -&gt; obj" Usage="nativeActivityUpdateContext.GetValue variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable">Variabile il cui valore viene recuperato durante l'esecuzione dell'istanza NativeActivity corrente.</param>
        <summary>ottiene il valore della variabile generica specificata nell'istanza NativeActivity corrente.</summary>
        <returns>Valore della variabile generica specificata nell'istanza NativeActivity corrente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetValue&lt;T&gt; (System.Activities.Variable&lt;T&gt; variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetValue&lt;T&gt;(class System.Activities.Variable`1&lt;!!T&gt; variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue``1(System.Activities.Variable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue(Of T) (variable As Variable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetValue(System::Activities::Variable&lt;T&gt; ^ variable);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.Variable&lt;'T&gt; -&gt; 'T" Usage="nativeActivityUpdateContext.GetValue variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo di variabile il cui valore è recuperato.</typeparam>
        <param name="variable">Variabile generica il cui valore viene recuperato durante l'esecuzione dell'istanza NativeActivity corrente.</param>
        <summary>Restituisce il valore della variabile generica specificata nell'istanza NativeActivity.</summary>
        <returns>Valore della variabile generica specificata nell'istanza NativeActivity.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancellationRequested">
      <MemberSignature Language="C#" Value="public bool IsCancellationRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancellationRequested" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsCancellationRequested" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCancellationRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancellationRequested { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCancellationRequested : bool" Usage="System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsCancellationRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'istanza NativeActivity attualmente in esecuzione deve essere annullata.</summary>
        <value>
          <see langword="True" /> se l'istanza NativeActivity attualmente in esecuzione deve essere annullata; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewlyAdded">
      <MemberSignature Language="C#" Value="public bool IsNewlyAdded (System.Activities.Activity childActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNewlyAdded(class System.Activities.Activity childActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsNewlyAdded(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNewlyAdded (childActivity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNewlyAdded(System::Activities::Activity ^ childActivity);" />
      <MemberSignature Language="F#" Value="member this.IsNewlyAdded : System.Activities.Activity -&gt; bool" Usage="nativeActivityUpdateContext.IsNewlyAdded childActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="childActivity">L'attività figlio.</param>
        <summary>Inizializza se <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" /> è stato appena aggiunto.</summary>
        <returns>
          <see langword="True" /> se <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" /> è stato appena aggiunto; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllBookmarks">
      <MemberSignature Language="C#" Value="public void RemoveAllBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveAllBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllBookmarks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllBookmarks();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllBookmarks : unit -&gt; unit" Usage="nativeActivityUpdateContext.RemoveAllBookmarks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove tutti i segnalibri associati all'istanza NativeActivity attualmente in esecuzione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rimuove il segnalibro specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (System.Activities.Bookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(class System.Activities.Bookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.Activities.Bookmark)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::Activities::Bookmark ^ bookmark);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : System.Activities.Bookmark -&gt; bool" Usage="nativeActivityUpdateContext.RemoveBookmark bookmark" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="bookmark">Punto al quale un'istanza NativeActivity può attendere passivamente di essere ripresa.</param>
        <summary>Rimuove il segnalibro specificato dall'istanza NativeActivity attualmente in esecuzione.</summary>
        <returns>
          <see langword="True" /> se il segnalibro specificato dall'istanza di NativeActivity attualmente in esecuzione è stato rimosso; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : string -&gt; bool" Usage="nativeActivityUpdateContext.RemoveBookmark name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome del segnalibro.</param>
        <summary>Rimuove il segnalibro con il nome specificato.</summary>
        <returns>Restituisce <see langword="True" /> se è stato rimosso il segnalibro con il nome specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (string name, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(string name, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (name As String, scope As BookmarkScope) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::String ^ name, System::Activities::BookmarkScope ^ scope);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : string * System.Activities.BookmarkScope -&gt; bool" Usage="nativeActivityUpdateContext.RemoveBookmark (name, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="name">Nome del segnalibro.</param>
        <param name="scope">Identificatore GUID univoco per un gruppo di oggetti Segnalibro suddivisi in categorie che funzionano sotto lo stesso protocollo.</param>
        <summary>Rimuove il segnalibro con il nome specificato e l'ambito di segnalibro specificato.</summary>
        <returns>
          <see langword="True" /> il segnalibro con il nome specificato e l'ambito del segnalibro specificato sono stati rimossi; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction">
      <MemberSignature Language="C#" Value="public void ScheduleAction (System.Activities.ActivityAction activityAction, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction(class System.Activities.ActivityAction activityAction, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityAction.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityAction.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction specificato che non dispone di parametri e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityAction.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T&gt; (System.Activities.ActivityAction&lt;T&gt; activityAction, T argument, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T&gt;(class System.Activities.ActivityAction`1&lt;!!T&gt; activityAction, !!T argument, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T) (activityAction As ActivityAction(Of T), argument As T, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T&gt; * 'T * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T&gt;" />
        <Parameter Name="argument" Type="T" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T&gt;.</param>
        <summary>Pianifica per l'esecuzione un'ActivityAction&lt;T&gt; specificata che può avere un parametro per un argomento e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2&gt; (System.Activities.ActivityAction&lt;T1,T2&gt; activityAction, T1 argument1, T2 argument2, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2&gt;(class System.Activities.ActivityAction`2&lt;!!T1, !!T2&gt; activityAction, !!T1 argument1, !!T2 argument2, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2) (activityAction As ActivityAction(Of T1, T2), argument1 As T1, argument2 As T2, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2&gt; * 'T1 * 'T2 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2&gt; che può avere due parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3&gt; (System.Activities.ActivityAction&lt;T1,T2,T3&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3&gt;(class System.Activities.ActivityAction`3&lt;!!T1, !!T2, !!T3&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3) (activityAction As ActivityAction(Of T1, T2, T3), argument1 As T1, argument2 As T2, argument3 As T3, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3&gt; * 'T1 * 'T2 * 'T3 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3&gt; che può avere tre parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4&gt;(class System.Activities.ActivityAction`4&lt;!!T1, !!T2, !!T3, !!T4&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4) (activityAction As ActivityAction(Of T1, T2, T3, T4), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4&gt; * 'T1 * 'T2 * 'T3 * 'T4 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4&gt; che può avere quattro parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5&gt;(class System.Activities.ActivityAction`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5&gt; che può avere cinque parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Activities.ActivityAction`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt; che può avere sei parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Activities.ActivityAction`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; che può avere sette parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Activities.ActivityAction`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt; che può avere otto parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Activities.ActivityAction`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; che può avere nove parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Activities.ActivityAction`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; che può avere dieci parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Activities.ActivityAction`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; che può avere undici parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Activities.ActivityAction`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T12">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="argument12">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; che può avere dodici parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Activities.ActivityAction`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T12">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T13">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="argument12">Argomento che porta dati in un'attività.</param>
        <param name="argument13">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; che può avere tredici parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Activities.ActivityAction`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T12">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T13">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T14">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="argument12">Argomento che porta dati in un'attività.</param>
        <param name="argument13">Argomento che porta dati in un'attività.</param>
        <param name="argument14">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; che può avere quattordici parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Activities.ActivityAction`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T12">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T13">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T14">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T15">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="argument12">Argomento che porta dati in un'attività.</param>
        <param name="argument13">Argomento che porta dati in un'attività.</param>
        <param name="argument14">Argomento che porta dati in un'attività.</param>
        <param name="argument15">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; che può avere quindici parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, T16 argument16, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Activities.ActivityAction`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, !!T16 argument16, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, argument16 As T16, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, argument16, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="argument16" Type="T16" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T12">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T13">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T14">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T15">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T16">Dati che sono portati in un'attività.</typeparam>
        <param name="activityAction">Azione eseguita quando si verifica un evento specifico nell'attività padre.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="argument12">Argomento che porta dati in un'attività.</param>
        <param name="argument13">Argomento che porta dati in un'attività.</param>
        <param name="argument14">Argomento che porta dati in un'attività.</param>
        <param name="argument15">Argomento che porta dati in un'attività.</param>
        <param name="argument16">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; che può avere sedici parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScheduleActivity">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Programma l'elemento NativeActivity specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Attività figlio che viene attivata da un evento che si verifica durante l'esecuzione di NativeActivity padre.</param>
        <summary>Pianifica l'attività figlio NativeActivity specificata per l'esecuzione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity, System.Activities.CompletionCallback onCompleted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity, class System.Activities.CompletionCallback onCompleted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::CompletionCallback ^ onCompleted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.CompletionCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onCompleted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Attività figlio che viene attivata da un evento che si verifica durante l'esecuzione di NativeActivity padre.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityAction.</param>
        <summary>Pianifica l'attività figlio NativeActivity specificata per l'esecuzione usando il percorso di callback di completamento specificato dove il processo padre riprende al completamento dell'attività figlio.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity, System.Activities.FaultCallback onFaulted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::FaultCallback ^ onFaulted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Attività figlio che viene attivata da un evento che si verifica durante l'esecuzione di NativeActivity padre.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione NativeActivity riprende se un errore causa la chiusura di ActivityAction.</param>
        <summary>Pianifica l'attività figlio NativeActivity specificata per l'esecuzione usando il percorso di callback di errore specificato dove il processo padre riprende quando l'attività passa allo stato di errore.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity, System.Activities.CompletionCallback onCompleted, System.Activities.FaultCallback onFaulted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::CompletionCallback ^ onCompleted, System::Activities::FaultCallback ^ onFaulted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Attività figlio che viene attivata da un evento che si verifica durante l'esecuzione di NativeActivity padre.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityAction.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione NativeActivity riprende se un errore causa la chiusura di ActivityAction.</param>
        <summary>Pianifica l'attività figlio NativeActivity specificata per l'esecuzione usando il percorso di callback di errore specificato dove il processo padre riprende quando l'attività passa allo stato di errore.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleActivity&lt;TResult&gt; (System.Activities.Activity&lt;TResult&gt; activity, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity&lt;TResult&gt;(class System.Activities.Activity`1&lt;!!TResult&gt; activity, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleActivity(Of TResult) (activity As Activity(Of TResult), Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity&lt;'Result&gt; * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity&lt;TResult&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activity">Attività figlio che viene attivata da un evento che si verifica durante l'esecuzione di NativeActivity padre.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione di NativeActivity al completamento di ActivityAction&lt;T&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione NativeActivity riprende se un errore causa la chiusura di ActivityAction.</param>
        <summary>Pianifica l'attività figlio NativeActivity specificata per l'esecuzione con un parametro per un argomento in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityAction&lt;T&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleDelegate">
      <MemberSignature Language="C#" Value="public void ScheduleDelegate (System.Activities.ActivityDelegate activityDelegate, System.Collections.Generic.IDictionary&lt;string,object&gt; inputParameters, System.Activities.DelegateCompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleDelegate(class System.Activities.ActivityDelegate activityDelegate, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputParameters, class System.Activities.DelegateCompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="F#" Value="member this.ScheduleDelegate : System.Activities.ActivityDelegate * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Activities.DelegateCompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleDelegate (activityDelegate, inputParameters, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" />
        <Parameter Name="inputParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.DelegateCompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activityDelegate">Il metodo di callback al quale restituisce un'attività quando l'azione di attività specificata viene completata.</param>
        <param name="inputParameters">Un elenco di dizionario di nomi e valori di un argomento di attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityAction.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityAction.</param>
        <summary>Indirizza il metodo di callback per un'attività nel pool dell'elemento di lavoro.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;TResult&gt; (System.Activities.ActivityFunc&lt;TResult&gt; activityFunc, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;TResult&gt;(class System.Activities.ActivityFunc`1&lt;!!TResult&gt; activityFunc, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of TResult) (activityFunc As ActivityFunc(Of TResult), Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'Result&gt; * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;TResult&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;TResult&gt; specificato con un parametro che contiene un valore restituito e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T,TResult&gt; (System.Activities.ActivityFunc&lt;T,TResult&gt; activityFunc, T argument, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T, TResult&gt;(class System.Activities.ActivityFunc`2&lt;!!T, !!TResult&gt; activityFunc, !!T argument, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T, TResult) (activityFunc As ActivityFunc(Of T, TResult), argument As T, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T, 'Result&gt; * 'T * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T,TResult&gt;" />
        <Parameter Name="argument" Type="T" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T, TResult&gt; specificato che può avere due parametri per un valore restituito e un argomento in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,TResult&gt; activityFunc, T1 argument1, T2 argument2, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, TResult&gt;(class System.Activities.ActivityFunc`3&lt;!!T1, !!T2, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, TResult) (activityFunc As ActivityFunc(Of T1, T2, TResult), argument1 As T1, argument2 As T2, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'Result&gt; * 'T1 * 'T2 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, TResult&gt; specificato che può avere tre parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, TResult&gt;(class System.Activities.ActivityFunc`4&lt;!!T1, !!T2, !!T3, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, TResult), argument1 As T1, argument2 As T2, argument3 As T3, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'Result&gt; * 'T1 * 'T2 * 'T3 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, TResult&gt; specificato che può avere quattro parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, TResult&gt;(class System.Activities.ActivityFunc`5&lt;!!T1, !!T2, !!T3, !!T4, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, TResult&gt; specificato che può avere cinque parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, TResult&gt;(class System.Activities.ActivityFunc`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt; specificato che può avere sei parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt;(class System.Activities.ActivityFunc`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; che può avere sette parametri per argomenti in e inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento dell'elemento ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt;(class System.Activities.ActivityFunc`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt; specificato che può avere otto parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt;(class System.Activities.ActivityFunc`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt; specificato che può avere nove parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt;(class System.Activities.ActivityFunc`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt; specificato che può avere dieci parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt;(class System.Activities.ActivityFunc`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt; specificato che può avere undici parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt;(class System.Activities.ActivityFunc`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 TResult&gt; specificato che può avere dodici parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt;(class System.Activities.ActivityFunc`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T12">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="argument12">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt; specificato che può avere tredici parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt;(class System.Activities.ActivityFunc`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T12">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T13">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="argument12">Argomento che porta dati in un'attività.</param>
        <param name="argument13">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt; specificato che può avere quattordici parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt;(class System.Activities.ActivityFunc`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T12">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T13">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T14">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="argument12">Argomento che porta dati in un'attività.</param>
        <param name="argument13">Argomento che porta dati in un'attività.</param>
        <param name="argument14">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt; specificato che può avere quindici parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt;(class System.Activities.ActivityFunc`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T12">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T13">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T14">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T15">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="argument12">Argomento che porta dati in un'attività.</param>
        <param name="argument13">Argomento che porta dati in un'attività.</param>
        <param name="argument14">Argomento che porta dati in un'attività.</param>
        <param name="argument15">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt; specificato che può avere sedici parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, T16 argument16, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt;(class System.Activities.ActivityFunc`17&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, !!T16 argument16, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, argument16 As T16, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, argument16, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="argument16" Type="T16" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T2">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T3">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T4">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T5">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T6">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T7">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T8">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T9">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T10">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T11">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T12">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T13">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T14">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T15">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="T16">Dati che sono portati in un'attività.</typeparam>
        <typeparam name="TResult">Il tipo dell'argomento out dell'attività figlio di NativeActivity.</typeparam>
        <param name="activityFunc">Un'attività figlio eseguita quando un evento specifico si verifica nell'attività padre e restituisce un valore.</param>
        <param name="argument1">Argomento che porta dati in un'attività.</param>
        <param name="argument2">Argomento che porta dati in un'attività.</param>
        <param name="argument3">Argomento che porta dati in un'attività.</param>
        <param name="argument4">Argomento che porta dati in un'attività.</param>
        <param name="argument5">Argomento che porta dati in un'attività.</param>
        <param name="argument6">Argomento che porta dati in un'attività.</param>
        <param name="argument7">Argomento che porta dati in un'attività.</param>
        <param name="argument8">Argomento che porta dati in un'attività.</param>
        <param name="argument9">Argomento che porta dati in un'attività.</param>
        <param name="argument10">Argomento che porta dati in un'attività.</param>
        <param name="argument11">Argomento che porta dati in un'attività.</param>
        <param name="argument12">Argomento che porta dati in un'attività.</param>
        <param name="argument13">Argomento che porta dati in un'attività.</param>
        <param name="argument14">Argomento che porta dati in un'attività.</param>
        <param name="argument15">Argomento che porta dati in un'attività.</param>
        <param name="argument16">Argomento che porta dati in un'attività.</param>
        <param name="onCompleted">Segnalibro che indica dove viene ripresa l'esecuzione dell'attività padre al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt;.</param>
        <param name="onFaulted">Segnalibro che indica dove l'esecuzione dell'attività padre riprende se un errore causa la chiusura di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt;.</param>
        <summary>Pianifica l'esecuzione di un elemento ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt; specificato che può avere diciassette parametri per un valore restituito e argomenti in e che inserisce un segnalibro nei percorsi di callback specificati dove il processo padre riprende al completamento di ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Assegna un valore all'oggetto specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Activities.Argument argument, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Activities.Argument argument, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue(System.Activities.Argument,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Activities::Argument ^ argument, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Activities.Argument * obj -&gt; unit" Usage="nativeActivityUpdateContext.SetValue (argument, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.Argument" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argument">L'argomento per ricevere il nuovo valore.</param>
        <param name="value">Il nuovo valore dell'argomento.</param>
        <summary>Assegna un valore all'argomento specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Activities.Variable variable, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Activities.Variable variable, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue(System.Activities.Variable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Activities::Variable ^ variable, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Activities.Variable * obj -&gt; unit" Usage="nativeActivityUpdateContext.SetValue (variable, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="variable">Un oggetto variabile senza un tipo specificato che può essere assegnato a un oggetto del valore.</param>
        <param name="value">Oggetto variabile senza un tipo specificato che può essere assegnato a un oggetto variabile.</param>
        <summary>Assegna l'oggetto del valore specificato all'oggetto variabile specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void SetValue&lt;T&gt; (System.Activities.Variable&lt;T&gt; variable, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue&lt;T&gt;(class System.Activities.Variable`1&lt;!!T&gt; variable, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue``1(System.Activities.Variable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue(Of T) (variable As Variable(Of T), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void SetValue(System::Activities::Variable&lt;T&gt; ^ variable, T value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Activities.Variable&lt;'T&gt; * 'T -&gt; unit" Usage="nativeActivityUpdateContext.SetValue (variable, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo della variabile.</typeparam>
        <param name="variable">Oggetto variabile con un tipo specificato che può essere assegnato a un oggetto del valore.</param>
        <param name="value">Oggetto variabile con un tipo specificato che può essere assegnato a un oggetto variabile.</param>
        <summary>Assegna l'oggetto del valore generico specificato all'oggetto variabile generico.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>