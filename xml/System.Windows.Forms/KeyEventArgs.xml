<Type Name="KeyEventArgs" FullName="System.Windows.Forms.KeyEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7677a8abed6de6921dd7137d79eb3ed66213093" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d8ba9-101">Fornisce i dati per l'evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> o <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8ba9-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba9-102">Oggetto <xref:System.Windows.Forms.KeyEventArgs>, che consente di specificare la chiave, l'utente preme e se i tasti di modifica (MAIUSC, CTRL e ALT) sono stati premuti contemporaneamente, viene passato a ogni <xref:System.Windows.Forms.Control.KeyDown> o <xref:System.Windows.Forms.Control.KeyUp> evento.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-102">A <xref:System.Windows.Forms.KeyEventArgs>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.</span></span>  
  
 <span data-ttu-id="d8ba9-103">Il <xref:System.Windows.Forms.Control.KeyDown> evento si verifica quando l'utente preme un tasto qualsiasi.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-103">The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key.</span></span> <span data-ttu-id="d8ba9-104">Il <xref:System.Windows.Forms.Control.KeyUp> evento si verifica quando l'utente rilascia la chiave.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-104">The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key.</span></span> <span data-ttu-id="d8ba9-105">Duplicare <xref:System.Windows.Forms.Control.KeyDown> gli eventi si verificano ogni volta che si ripete la chiave, se la chiave viene tenuta premuto, ma solo uno <xref:System.Windows.Forms.Control.KeyUp> evento viene generato quando l'utente rilascia la chiave.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-105">Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.</span></span>  
  
 <span data-ttu-id="d8ba9-106">Il <xref:System.Windows.Forms.Control.KeyPress> evento si verifica anche quando viene premuto un tasto.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-106">The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed.</span></span> <span data-ttu-id="d8ba9-107">Oggetto <xref:System.Windows.Forms.KeyPressEventArgs> viene passato a ogni <xref:System.Windows.Forms.Control.KeyPress> evento che specifica il carattere che è stato composto in seguito a ogni pressione di tasto.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-107">A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.</span></span>  
  
 <span data-ttu-id="d8ba9-108">Per informazioni sul modello di eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d8ba9-108">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ba9-109">Gli esempi di codice seguente viene illustrato come rilevare lo stato di un tasto.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-109">The following code examples demonstrate how to detect the state of a key press.</span></span>  
  
 <span data-ttu-id="d8ba9-110">**Esempio 1**</span><span class="sxs-lookup"><span data-stu-id="d8ba9-110">**Example 1**</span></span>  
  
 <span data-ttu-id="d8ba9-111">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.Control.KeyDown> evento con la <xref:System.Windows.Forms.Help> classe per visualizzare una finestra popup della Guida per l'utente dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-111">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="d8ba9-112">Nell'esempio viene utilizzata la <xref:System.Windows.Forms.KeyEventArgs> proprietà passate al metodo del gestore eventi per filtrare tutte le variazioni di premere il tasto F1 con un tasto di modifica.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-112">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="d8ba9-113">Quando l'utente preme qualsiasi variazione di F1 che include qualsiasi tasto di modifica, il <xref:System.Windows.Forms.Help> classe visualizza una finestra popup, simile a un <xref:System.Windows.Forms.ToolTip>, accanto al controllo.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-113">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="d8ba9-114">Se l'utente preme ALT + F2, viene visualizzato un popup della Guida diversi con informazioni aggiuntive.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-114">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="d8ba9-115">**Esempio 2**</span><span class="sxs-lookup"><span data-stu-id="d8ba9-115">**Example 2**</span></span>  
  
 <span data-ttu-id="d8ba9-116">Nell'esempio seguente determina se l'utente ha premuto ALT + E, e se il puntatore del mouse è posizionato un <xref:System.Windows.Forms.TreeNode>, consente all'utente di modifica che <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-116">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="d8ba9-117">**Esempio 3**</span><span class="sxs-lookup"><span data-stu-id="d8ba9-117">**Example 3**</span></span>  
  
 <span data-ttu-id="d8ba9-118">Nell'esempio seguente determina se l'utente ha premuto un tasto non numerico, annullando in tal caso, il <xref:System.Windows.Forms.Control.KeyPress> eventi usando il <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-118">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEventArgs (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyData As Keys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyEventArgs(System::Windows::Forms::Keys keyData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="d8ba9-119">Oggetto <see cref="T:System.Windows.Forms.Keys" /> che rappresenta il tasto premuto, combinato con eventuali flag di modifica che indicano quali tra i tasti CTRL, MAIUSC e ALT sono stati premuti contemporaneamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-119">A <see cref="T:System.Windows.Forms.Keys" /> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</span>
          </span>
          <span data-ttu-id="d8ba9-120">I possibili valori vengono ottenuti applicando l'operatore OR bit per bit (|) alle costanti dell'enumerazione <see cref="T:System.Windows.Forms.Keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-120">Possible values are obtained be applying the bitwise OR (|) operator to constants from the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8ba9-121">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.KeyEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public virtual bool Alt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Alt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Alt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Alt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ba9-122">Ottiene un valore che indica se è stato premuto il tasto ALT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-122">Gets a value indicating whether the ALT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ba9-123">
            <see langword="true" /> se è stato premuto il tasto ALT; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-123">
              <see langword="true" /> if the ALT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba9-124">**Esempio 1**</span><span class="sxs-lookup"><span data-stu-id="d8ba9-124">**Example 1**</span></span>  
  
 <span data-ttu-id="d8ba9-125">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.Control.KeyDown> evento con la <xref:System.Windows.Forms.Help> classe per visualizzare una finestra popup della Guida per l'utente dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="d8ba9-126">Nell'esempio viene utilizzata la <xref:System.Windows.Forms.KeyEventArgs> proprietà passate al metodo del gestore eventi per filtrare tutte le variazioni di premere il tasto F1 con un tasto di modifica.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-126">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="d8ba9-127">Quando l'utente preme qualsiasi variazione di F1 che include qualsiasi tasto di modifica, il <xref:System.Windows.Forms.Help> classe visualizza una finestra popup, simile a un <xref:System.Windows.Forms.ToolTip>, accanto al controllo.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-127">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="d8ba9-128">Se l'utente preme ALT + F2, viene visualizzato un popup della Guida diversi con informazioni aggiuntive.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-128">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="d8ba9-129">**Esempio 2**</span><span class="sxs-lookup"><span data-stu-id="d8ba9-129">**Example 2**</span></span>  
  
 <span data-ttu-id="d8ba9-130">Nell'esempio seguente determina se l'utente ha premuto ALT + E, e se il puntatore del mouse è posizionato <xref:System.Windows.Forms.TreeNode>, consente all'utente di modifica che <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-130">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public bool Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Control { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ba9-131">Ottiene un valore che indica se è stato premuto il tasto CTRL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-131">Gets a value indicating whether the CTRL key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ba9-132">
            <see langword="true" /> se è stato premuto il tasto CTRL; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-132">
              <see langword="true" /> if the CTRL key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba9-133">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.Control.KeyDown> evento con la <xref:System.Windows.Forms.Help> classe per visualizzare una finestra popup della Guida per l'utente dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-133">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="d8ba9-134">Nell'esempio viene utilizzata la <xref:System.Windows.Forms.KeyEventArgs> proprietà passate al metodo del gestore eventi per filtrare tutte le variazioni di premere il tasto F1 con un tasto di modifica.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-134">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="d8ba9-135">Quando l'utente preme qualsiasi variazione di F1 che include qualsiasi tasto di modifica, il <xref:System.Windows.Forms.Help> classe visualizza una finestra popup, simile a un <xref:System.Windows.Forms.ToolTip>, accanto al controllo.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-135">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="d8ba9-136">Se l'utente preme ALT + F2, viene visualizzato un popup della Guida diversi con informazioni aggiuntive.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-136">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ba9-137">Ottiene o imposta un valore che indica se l’evento è stato gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-137">Gets or sets a value indicating whether the event was handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ba9-138">
            <see langword="true" /> per ignorare la gestione predefinita del controllo; in caso contrario, <see langword="false" /> per passare anche l'evento insieme al gestore controlli predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-138">
              <see langword="true" /> to bypass the control's default handling; otherwise, <see langword="false" /> to also pass the event along to the default control handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba9-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> viene implementata differentemente dai diversi controlli all'interno di Windows Form.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> is implemented differently by different controls within Windows Forms.</span></span> <span data-ttu-id="d8ba9-140">Per i controlli come <xref:System.Windows.Forms.TextBox> quali sottoclasse controlli nativi Win32, viene interpretato per indicare che il messaggio chiave non deve essere passato al controllo nativo sottostante.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-140">For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</span></span> <span data-ttu-id="d8ba9-141">Se si imposta `Handled` su true in un <xref:System.Windows.Forms.TextBox>, controllo non passerà alla pressione del tasto `events` per il controllo casella di testo Win32 sottostante, ma continuerà a visualizzare i caratteri inseriti dall'utente.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-141">If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.</span></span>  
  
 <span data-ttu-id="d8ba9-142">Se si desidera impedire che il controllo corrente riceve un tasto, utilizzare il <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-142">If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ba9-143">Nell'esempio seguente determina se l'utente ha premuto un tasto non numerico, annullando in tal caso, il <xref:System.Windows.Forms.Control.KeyPress> eventi usando il <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-143">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyCode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyCode As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyCode { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ba9-144">Ottiene il codice di tastiera per un evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> o <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-144">Gets the keyboard code for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ba9-145">Valore <see cref="T:System.Windows.Forms.Keys" /> che rappresenta il codice di tastiera per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-145">A <see cref="T:System.Windows.Forms.Keys" /> value that is the key code for the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba9-146">Gli esempi di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> proprietà per determinare il tasto premuto.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-146">The following code examples show how to use the <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> property to determine which key was pressed.</span></span>  
  
 <span data-ttu-id="d8ba9-147">**Esempio 1**</span><span class="sxs-lookup"><span data-stu-id="d8ba9-147">**Example 1**</span></span>  
  
 <span data-ttu-id="d8ba9-148">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.Control.KeyDown> evento con la <xref:System.Windows.Forms.Help> classe per visualizzare una finestra popup della Guida per l'utente dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-148">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="d8ba9-149">Nell'esempio viene utilizzata la <xref:System.Windows.Forms.KeyEventArgs> proprietà passate al metodo del gestore eventi per filtrare tutte le variazioni di premere il tasto F1 con un tasto di modifica.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-149">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="d8ba9-150">Quando l'utente preme qualsiasi variazione di F1 che include qualsiasi tasto di modifica, il <xref:System.Windows.Forms.Help> classe visualizza una finestra popup, simile a un <xref:System.Windows.Forms.ToolTip>, accanto al controllo.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-150">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="d8ba9-151">Se l'utente preme ALT + F2, viene visualizzato un popup della Guida diversi con informazioni aggiuntive.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-151">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="d8ba9-152">**Esempio 2**</span><span class="sxs-lookup"><span data-stu-id="d8ba9-152">**Example 2**</span></span>  
  
 <span data-ttu-id="d8ba9-153">Nell'esempio seguente determina se l'utente ha premuto ALT + E, e se il puntatore del mouse è posizionato un <xref:System.Windows.Forms.TreeNode>, consente all'utente di modifica che <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-153">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="d8ba9-154">**Esempio 3**</span><span class="sxs-lookup"><span data-stu-id="d8ba9-154">**Example 3**</span></span>  
  
 <span data-ttu-id="d8ba9-155">Nell'esempio seguente determina se l'utente ha premuto un tasto non numerico, annullando in tal caso, il <xref:System.Windows.Forms.Control.KeyPress> eventi usando il <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-155">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyData { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ba9-156">Ottiene i dati del tasto relativi a un evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> o <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-156">Gets the key data for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ba9-157">Oggetto <see cref="T:System.Windows.Forms.Keys" /> che rappresenta il codice del tasto premuto, combinato con eventuali flag di modifica che indicano quali tra i tasti CTRL, MAIUSC e ALT sono stati premuti contemporaneamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-157">A <see cref="T:System.Windows.Forms.Keys" /> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba9-158">È possibile utilizzare le costanti di <xref:System.Windows.Forms.Keys> per estrarre informazioni dal <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-158">You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> property.</span></span> <span data-ttu-id="d8ba9-159">Utilizzare l'operatore AND bit per bit per confrontare i dati restituiti da <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> con le costanti <xref:System.Windows.Forms.Keys> per ottenere informazioni sui tasti premuti l'utente.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-159">Use the bitwise AND operator to compare data returned by <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed.</span></span> <span data-ttu-id="d8ba9-160">Per determinare se è stato premuto un tasto di modifica specifico, utilizzare il <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, e <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-160">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ba9-161">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-161">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d8ba9-162">Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-162">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="d8ba9-163">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-163">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d8ba9-164">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-164">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d8ba9-165">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.Control>, ad esempio un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-165">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d8ba9-166">Quindi assegnare un nome di istanza `Control1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-166">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public int KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyValue { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ba9-167">Ottiene il valore di tastiera relativo a un evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> o <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-167">Gets the keyboard value for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ba9-168">La rappresentazione in Integer della proprietà <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-168">The integer representation of the <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba9-169">Esempio di codice seguente viene illustrato l'utilizzo di questo membro.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-169">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d8ba9-170">Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-170">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="d8ba9-171">Questo report consente di capire quando l'evento si verifica e possa agevolare il debug.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-171">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d8ba9-172">Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-172">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d8ba9-173">Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di un tipo che eredita da <xref:System.Windows.Forms.Control>, ad esempio un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-173">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d8ba9-174">Quindi assegnare un nome di istanza `Control1` e assicurarsi che il gestore dell'evento è associato il <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-174">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys Modifiers { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ba9-175">Ottiene i flag di modifica relativi a un evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> o <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-175">Gets the modifier flags for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
          <span data-ttu-id="d8ba9-176">I flag indicano quale combinazione di tasti CTRL, MAIUSC e ALT è stata premuta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-176">The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ba9-177">Valore <see cref="T:System.Windows.Forms.Keys" /> che rappresenta uno o più flag di modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-177">A <see cref="T:System.Windows.Forms.Keys" /> value representing one or more modifier flags.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba9-178">Per determinare se è stato premuto un tasto di modifica specifico, utilizzare il <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, e <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-178">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span> <span data-ttu-id="d8ba9-179">Flag di modifica possono essere combinati con OR bit per bit.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-179">Modifier flags can be combined with bitwise OR.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ba9-180">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> proprietà per determinare quali tasti di modifica sono stati premuti insieme alla chiave primaria.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-180">The following code example shows how to use the <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> property to determine which modifier keys were pressed along with the primary key.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
      </Docs>
    </Member>
    <Member MemberName="Shift">
      <MemberSignature Language="C#" Value="public virtual bool Shift { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shift" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Shift As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Shift { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ba9-181">Ottiene un valore che indica se è stato premuto il tasto MAIUSC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-181">Gets a value indicating whether the SHIFT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ba9-182">
            <see langword="true" />se è stato premuto il tasto MAIUSC; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-182">
              <see langword="true" /> if the SHIFT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba9-183">Nell'esempio seguente determina se l'utente ha premuto il tasto MAIUSC con il tasto F1, e se in tal caso, Visualizza la Guida.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-183">The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="SuppressKeyPress">
      <MemberSignature Language="C#" Value="public bool SuppressKeyPress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressKeyPress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressKeyPress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressKeyPress { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8ba9-184">Ottiene o imposta un valore che indica se l'evento del tasto deve essere passato al controllo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-184">Gets or sets a value indicating whether the key event should be passed on to the underlying control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8ba9-185">
            <see langword="true" /> se l'evento principale non deve essere inviato al controllo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8ba9-185">
              <see langword="true" /> if the key event should not be sent to the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba9-186">È possibile assegnare `true` a questa proprietà in un gestore eventi, ad esempio <xref:System.Windows.Forms.Control.KeyDown> per evitare l'input dell'utente.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-186">You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.</span></span>  
  
 <span data-ttu-id="d8ba9-187">Impostazione <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> a `true` imposta inoltre <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-187">Setting <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ba9-188">Esempio di codice riportato di seguito impedisce le sequenze di tasti numerici di raggiungere il <xref:System.Windows.Forms.TextBox> controllo denominato `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="d8ba9-188">The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/csharp/VS_Snippets_Winforms/keyeventargs.suppresskeypress/cs/form1.cs#1)]
 [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/keyeventargs.suppresskeypress/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Handled" />
      </Docs>
    </Member>
  </Members>
</Type>