<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36617700af2104e254aac0c99fbca2f634f0d425" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640255" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce i dati per l'evento <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" /> o <see cref="E:System.Windows.Forms.Control.DragOver" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.Control.DragDrop> evento si verifica quando l'utente completa un'operazione di trascinamento e rilascio trascinando un oggetto sul controllo e quindi rilasciandola rilasciando il pulsante del mouse sul controllo. Il <xref:System.Windows.Forms.Control.DragEnter> evento si verifica quando l'utente sposta il puntatore del mouse sul controllo mentre si trascina un oggetto con il mouse. Il <xref:System.Windows.Forms.Control.DragOver> evento si verifica quando l'utente sposta il puntatore del mouse sul controllo mentre si trascina un oggetto con il mouse.  
  
 Oggetto <xref:System.Windows.Forms.DragEventArgs> oggetto specifica i dati associati a questo evento, lo stato corrente dei tasti MAIUSC, CTRL e ALT, la posizione del puntatore del mouse; e gli effetti di trascinamento e rilascio consentite dall'origine e di destinazione dell'evento di trascinamento.  
  
 Per informazioni sul modello di eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'operazione di trascinamento e rilascio tra due <xref:System.Windows.Forms.ListBox> controlli. Nell'esempio viene chiamato il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo quando si avvia l'azione di trascinamento. L'azione di trascinamento viene avviata se il mouse viene spostato più <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> dalla posizione del mouse durante la <xref:System.Windows.Forms.Control.MouseDown> evento. Il <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il `MouseDown` evento.  
  
 Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio. Nell'esempio si presuppone che due file cursore, `3dwarro.cur` e `3dwno.cur`, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente. I cursori personalizzati da utilizzare se il `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> è selezionata. I cursori personalizzati vengono impostati <xref:System.Windows.Forms.Control.GiveFeedback> gestore dell'evento.  
  
 Lo stato della tastiera viene valutato nel <xref:System.Windows.Forms.Control.DragOver> il gestore eventi per il diritto `ListBox`, per determinare l'operazione di trascinamento basata sullo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT. Il percorso nel `ListBox` in cui si verificherà il rilascio è determinato anche durante la `DragOver` evento. Se i dati da eliminare non sono un `String`, quindi il <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> è impostato su <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Infine, lo stato del trascinamento viene visualizzato nel `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 I dati da eliminare per il diritto `ListBox` viene determinato nel <xref:System.Windows.Forms.Control.DragDrop> gestore dell'evento e il `String` valore viene aggiunto nella posizione appropriata all'interno di `ListBox`. Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <xref:System.Windows.Forms.Control.QueryContinueDrag> gestore dell'evento.  
  
 Questo estratto di codice viene illustrato l'utilizzo di <xref:System.Windows.Forms.DragEventArgs> classe. Vedere il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo per l'esempio di codice completo.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 Nell'esempio seguente viene illustrato come <xref:System.Windows.Forms.DragEventArgs> vengono passati tra l'origine e destinazione di un'operazione di trascinamento e rilascio. In questo esempio, un <xref:System.Windows.Forms.ListBox> controllo rappresenta l'origine dei dati e <xref:System.Windows.Forms.RichTextBox> controllo è la destinazione. Nell'esempio si presuppone che il <xref:System.Windows.Forms.ListBox> controllo sia stato compilato con un elenco di nomi di file validi. Quando l'utente trascina uno dei nomi di file visualizzati dal <xref:System.Windows.Forms.ListBox> sul controllo di <xref:System.Windows.Forms.RichTextBox> (controllo), il file a cui fa riferimento il nome del file è aperto.  
  
 Cui viene avviata l'operazione di <xref:System.Windows.Forms.ListBox> evento MouseDown del controllo. Nel <xref:System.Windows.Forms.RichTextBox.DragEnter> gestore eventi, nell'esempio viene utilizzato il <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> metodo per verificare che i dati in un formato che il <xref:System.Windows.Forms.RichTextBox> controllo consente di visualizzare e quindi imposta il <xref:System.Windows.Forms.DragDropEffects> proprietà per specificare che i dati dovrà essere copiato il controllo del codice sorgente per il controllo di destinazione. Infine, il <xref:System.Windows.Forms.RichTextBox> gestore di eventi DragDrop del controllo utilizza il <xref:System.Windows.Forms.IDataObject.GetData%2A> metodo per recuperare il nome del file da aprire.  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">Dati associati a questo evento.</param>
        <param name="keyState">Stato corrente dei tasti MAIUSC, CTRL e ALT.</param>
        <param name="x">Coordinata x del cursore del mouse espressa in pixel.</param>
        <param name="y">Coordinata y del cursore del mouse espressa in pixel.</param>
        <param name="allowedEffect">Uno dei valori di <see cref="T:System.Windows.Forms.DragDropEffects" />.</param>
        <param name="effect">Uno dei valori di <see cref="T:System.Windows.Forms.DragDropEffects" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DragEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le operazioni di trascinamento e rilascio consentite dall'elemento usato per generare l'evento di trascinamento.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.DragDropEffects" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un controllo Avvia un'operazione di trascinamento e rilascio chiamando il <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> metodo, specifica gli effetti consentiti dell'operazione. Ad esempio, quando si trascina un file da un'origine, se il file è di sola lettura (o da un supporto di archiviazione di sola lettura, ad esempio un CD), l'origine indicherà che il file può essere copiato, ma non trasferito alla destinazione.  
  
 Prima di tentare di eseguire un'operazione sui dati trascinati, è necessario esaminare questa proprietà per assicurarsi che l'operazione è consentita.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'operazione di trascinamento e rilascio tra due <xref:System.Windows.Forms.ListBox> controlli. Nell'esempio viene chiamato il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo quando si avvia l'azione di trascinamento. L'azione di trascinamento viene avviata se il mouse viene spostato più <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> dalla posizione del mouse durante la <xref:System.Windows.Forms.Control.MouseDown> evento. Il <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il `MouseDown` evento.  
  
 Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio. Nell'esempio si presuppone che due file cursore, `3dwarro.cur` e `3dwno.cur`, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente. I cursori personalizzati da utilizzare se il `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> è selezionata. I cursori personalizzati vengono impostati <xref:System.Windows.Forms.Control.GiveFeedback> gestore dell'evento.  
  
 Lo stato della tastiera viene valutato nel <xref:System.Windows.Forms.Control.DragOver> il gestore eventi per il diritto `ListBox`, per determinare l'operazione di trascinamento basata sullo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT. Il percorso nel `ListBox` in cui si verificherà il rilascio è determinato anche durante la `DragOver` evento. Se i dati da eliminare non sono un `String`, quindi il <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> è impostato su <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Infine, lo stato del trascinamento viene visualizzato nel `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 I dati da eliminare per il diritto `ListBox` viene determinato nel <xref:System.Windows.Forms.Control.DragDrop> gestore dell'evento e il `String` valore viene aggiunto nella posizione appropriata all'interno di `ListBox`. Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <xref:System.Windows.Forms.Control.QueryContinueDrag> gestore dell'evento.  
  
 Questo estratto di codice viene illustrato l'utilizzo di <xref:System.Windows.Forms.DragEventArgs> classe. Vedere il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo per l'esempio di codice completo.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Forms.IDataObject" /> che contiene i dati associati a questo evento.</summary>
        <value>Dati associati a questo evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nel corpo del gestore eventi, è possibile utilizzare il <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> metodo per determinare se i dati soddisfano i requisiti di formato del controllo su cui i dati trascinati. È inoltre possibile specificare se si desidera tentare di convertire i dati per soddisfare i requisiti di formato. Se i dati trascinati soddisfano i requisiti di formato, utilizzare il <xref:System.Windows.Forms.IDataObject.GetData%2A> metodo per recuperare i dati.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'operazione di trascinamento e rilascio tra due <xref:System.Windows.Forms.ListBox> controlli. Nell'esempio viene chiamato il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo quando si avvia l'azione di trascinamento. L'azione di trascinamento viene avviata se il mouse viene spostato più <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> dalla posizione del mouse durante la <xref:System.Windows.Forms.Control.MouseDown> evento. Il <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il `MouseDown` evento.  
  
 Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio. Nell'esempio si presuppone che due file cursore, `3dwarro.cur` e `3dwno.cur`, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente. I cursori personalizzati da utilizzare se il `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> è selezionata. I cursori personalizzati vengono impostati <xref:System.Windows.Forms.Control.GiveFeedback> gestore dell'evento.  
  
 Lo stato della tastiera viene valutato nel <xref:System.Windows.Forms.Control.DragOver> il gestore eventi per il diritto `ListBox`, per determinare l'operazione di trascinamento basata sullo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT. Il percorso nel `ListBox` in cui si verificherà il rilascio è determinato anche durante la `DragOver` evento. Se i dati da eliminare non sono un `String`, quindi il <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> è impostato su <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Infine, lo stato del trascinamento viene visualizzato nel `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 I dati da eliminare per il diritto `ListBox` viene determinato nel <xref:System.Windows.Forms.Control.DragDrop> gestore dell'evento e il `String` valore viene aggiunto nella posizione appropriata all'interno di `ListBox`. Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <xref:System.Windows.Forms.Control.QueryContinueDrag> gestore dell'evento.  
  
 Questo estratto di codice viene illustrato l'utilizzo di <xref:System.Windows.Forms.DragEventArgs> classe. Vedere il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo per l'esempio di codice completo.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'effetto di rilascio di destinazione in un'operazione di trascinamento.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.DragDropEffects" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, l'effetto applicato determina il cursore del mouse per la destinazione di un'operazione di trascinamento e rilascio. Ciò è utile per fornire feedback all'utente per l'operazione che si verifichi. Ad esempio, se si preme il tasto CTRL quando si trascina un file da un'origine, specificare <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> per indicare la destinazione tenterà di eseguire un'operazione di copia.  
  
 Per utilizzare cursori personalizzati per un'operazione di trascinamento, vedere <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'operazione di trascinamento e rilascio tra due <xref:System.Windows.Forms.ListBox> controlli. Nell'esempio viene chiamato il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo quando si avvia l'azione di trascinamento. L'azione di trascinamento viene avviata se il mouse viene spostato più <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> dalla posizione del mouse durante la <xref:System.Windows.Forms.Control.MouseDown> evento. Il <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il `MouseDown` evento.  
  
 Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio. Nell'esempio si presuppone che due file cursore, `3dwarro.cur` e `3dwno.cur`, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente. I cursori personalizzati da utilizzare se il `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> è selezionata. I cursori personalizzati vengono impostati <xref:System.Windows.Forms.Control.GiveFeedback> gestore dell'evento.  
  
 Lo stato della tastiera viene valutato nel <xref:System.Windows.Forms.Control.DragOver> il gestore eventi per il diritto `ListBox`, per determinare l'operazione di trascinamento basata sullo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT. Il percorso nel `ListBox` in cui si verificherà il rilascio è determinato anche durante la `DragOver` evento. Se i dati da eliminare non sono un `String`, quindi il <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> è impostato su <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Infine, lo stato del trascinamento viene visualizzato nel `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 I dati da eliminare per il diritto `ListBox` viene determinato nel <xref:System.Windows.Forms.Control.DragDrop> gestore dell'evento e il `String` valore viene aggiunto nella posizione appropriata all'interno di `ListBox`. Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <xref:System.Windows.Forms.Control.QueryContinueDrag> gestore dell'evento.  
  
 Questo estratto di codice viene illustrato l'utilizzo di <xref:System.Windows.Forms.DragEventArgs> classe. Vedere il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo per l'esempio di codice completo.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato corrente dei tasti MAIUSC, CTRL e ALT, nonché lo stato dei pulsanti del mouse.</summary>
        <value>Stato corrente dei tasti MAIUSC, CTRL e ALT e dei pulsanti del mouse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile rendere l'effetto di un'operazione di trascinamento e rilascio dipendono dallo stato di una chiave specifica. Ad esempio, si potrebbe decidere di copiare o spostare i dati a seconda se viene premuto il tasto CTRL o MAIUSC durante l'operazione di trascinamento e rilascio.  
  
 I bit impostati nella <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> proprietà identificare le chiavi o i pulsanti del mouse premuti durante l'operazione. Ad esempio, se viene premuto il pulsante sinistro del mouse, il primo bit nella <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> proprietà è impostata. Per verificare la presenza di un determinato stato di chiave, è possibile utilizzare l'operatore AND bit per bit.  
  
 Nella tabella seguente sono elencati i valori utilizzati per un evento specifico.  
  
|Valore|Chiave|  
|-----------|---------|  
|1 (bit 0)|Rappresenta il pulsante sinistro del mouse.|  
|2 (bit 1)|Rappresenta il pulsante destro del mouse.|  
|4 (il bit 2)|Rappresenta il tasto MAIUSC.|  
|8 (3 bit)|Rappresenta il tasto CTRL.|  
|16 (4 bit)|Rappresenta il pulsante centrale del mouse.|  
|32 (5 bit)|Rappresenta il tasto ALT.|  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'operazione di trascinamento e rilascio tra due <xref:System.Windows.Forms.ListBox> controlli. Nell'esempio viene chiamato il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo quando si avvia l'azione di trascinamento. L'azione di trascinamento viene avviata se il mouse viene spostato più <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> dalla posizione del mouse durante la <xref:System.Windows.Forms.Control.MouseDown> evento. Il <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il `MouseDown` evento.  
  
 Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio. Nell'esempio si presuppone che due file cursore, `3dwarro.cur` e `3dwno.cur`, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente. I cursori personalizzati da utilizzare se il `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> è selezionata. I cursori personalizzati vengono impostati <xref:System.Windows.Forms.Control.GiveFeedback> gestore dell'evento.  
  
 Lo stato della tastiera viene valutato nel <xref:System.Windows.Forms.Control.DragOver> il gestore eventi per il diritto `ListBox`, per determinare l'operazione di trascinamento basata sullo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT. Il percorso nel `ListBox` in cui si verificherà il rilascio è determinato anche durante la `DragOver` evento. Se i dati da eliminare non sono un `String`, quindi il <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> è impostato su <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Infine, lo stato del trascinamento viene visualizzato nel `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 I dati da eliminare per il diritto `ListBox` viene determinato nel <xref:System.Windows.Forms.Control.DragDrop> gestore dell'evento e il `String` valore viene aggiunto nella posizione appropriata all'interno di `ListBox`. Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <xref:System.Windows.Forms.Control.QueryContinueDrag> gestore dell'evento.  
  
 Questo estratto di codice viene illustrato l'utilizzo di <xref:System.Windows.Forms.DragEventArgs> classe. Vedere il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo per l'esempio di codice completo.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la coordinata x del puntatore del mouse espressa in coordinate dello schermo.</summary>
        <value>Coordinata x del puntatore del mouse espressa in pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrata un'operazione di trascinamento e rilascio tra due <xref:System.Windows.Forms.ListBox> controlli. Nell'esempio viene chiamato il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo quando si avvia l'azione di trascinamento. L'azione di trascinamento viene avviata se il mouse viene spostato più <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> dalla posizione del mouse durante la <xref:System.Windows.Forms.Control.MouseDown> evento. Il <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il `MouseDown` evento.  
  
 Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio. Nell'esempio si presuppone che due file cursore, `3dwarro.cur` e `3dwno.cur`, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente. I cursori personalizzati da utilizzare se il `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> è selezionata. I cursori personalizzati vengono impostati <xref:System.Windows.Forms.Control.GiveFeedback> gestore dell'evento.  
  
 Lo stato della tastiera viene valutato nel <xref:System.Windows.Forms.Control.DragOver> il gestore eventi per il diritto `ListBox`, per determinare l'operazione di trascinamento basata sullo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT. Il percorso nel `ListBox` in cui si verificherà il rilascio è determinato anche durante la `DragOver` evento. Se i dati da eliminare non sono un `String`, quindi il <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> è impostato su <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Infine, lo stato del trascinamento viene visualizzato nel `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 I dati da eliminare per il diritto `ListBox` viene determinato nel <xref:System.Windows.Forms.Control.DragDrop> gestore dell'evento e il `String` valore viene aggiunto nella posizione appropriata all'interno di `ListBox`. Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <xref:System.Windows.Forms.Control.QueryContinueDrag> gestore dell'evento.  
  
 Questo estratto di codice viene illustrato l'utilizzo di <xref:System.Windows.Forms.DragEventArgs> classe. Vedere il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo per l'esempio di codice completo.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la coordinata y del puntatore del mouse espressa in coordinate dello schermo.</summary>
        <value>Coordinata y del puntatore del mouse espressa in pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrata un'operazione di trascinamento e rilascio tra due <xref:System.Windows.Forms.ListBox> controlli. Nell'esempio viene chiamato il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo quando si avvia l'azione di trascinamento. L'azione di trascinamento viene avviata se il mouse viene spostato più <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> dalla posizione del mouse durante la <xref:System.Windows.Forms.Control.MouseDown> evento. Il <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il `MouseDown` evento.  
  
 Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio. Nell'esempio si presuppone che due file cursore, `3dwarro.cur` e `3dwno.cur`, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente. I cursori personalizzati da utilizzare se il `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> è selezionata. I cursori personalizzati vengono impostati <xref:System.Windows.Forms.Control.GiveFeedback> gestore dell'evento.  
  
 Lo stato della tastiera viene valutato nel <xref:System.Windows.Forms.Control.DragOver> il gestore eventi per il diritto `ListBox`, per determinare l'operazione di trascinamento basata sullo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT. Il percorso nel `ListBox` in cui si verificherà il rilascio è determinato anche durante la `DragOver` evento. Se i dati da eliminare non sono un `String`, quindi il <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> è impostato su <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Infine, lo stato del trascinamento viene visualizzato nel `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 I dati da eliminare per il diritto `ListBox` viene determinato nel <xref:System.Windows.Forms.Control.DragDrop> gestore dell'evento e il `String` valore viene aggiunto nella posizione appropriata all'interno di `ListBox`. Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <xref:System.Windows.Forms.Control.QueryContinueDrag> gestore dell'evento.  
  
 Questo estratto di codice viene illustrato l'utilizzo di <xref:System.Windows.Forms.DragEventArgs> classe. Vedere il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo per l'esempio di codice completo.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>