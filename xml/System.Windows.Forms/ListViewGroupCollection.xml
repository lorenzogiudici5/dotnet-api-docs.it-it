<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0bcdeaf566c5053057291fcf612b4552616d300e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650125" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta l'insieme dei gruppi all'interno di un controllo <see cref="T:System.Windows.Forms.ListView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> proprietà da ottenere il <xref:System.Windows.Forms.ListViewGroupCollection> associata a un <xref:System.Windows.Forms.ListView> controllo. Questa raccolta contiene il <xref:System.Windows.Forms.ListViewGroup> gli oggetti che rappresentano i gruppi mostrati nel controllo quando il <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> proprietà è impostata su un valore diverso da <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>. Tutti gli elementi che non sono assegnati a un gruppo verranno visualizzato nel gruppo predefinito, che contiene l'etichetta dell'intestazione "DefaultGroup {0}". Il gruppo predefinito non è inclusa nel <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> insieme e non può essere modificato. È particolarmente utile nel debug per verificare che tutti gli elementi siano stati aggiunti correttamente a gruppi. Se non sono presenti gruppi nel <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> insieme, la funzionalità di raggruppamento è disabilitato.  
  
 Utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metodo per aggiungere un singolo gruppo alla raccolta. Utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> metodo per aggiungere un gruppo da un particolare indice all'interno della raccolta. Per rimuovere un gruppo, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> metodo. Utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> metodo per rimuovere il gruppo da un particolare indice.  
  
 Non è possibile aggiungere un <xref:System.Windows.Forms.ListViewGroup> alla raccolta più volte. Per riposizionare un gruppo all'interno della raccolta, è necessario innanzitutto rimuovere dalla raccolta e quindi inserito nella posizione desiderata. Utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metodo per determinare se un particolare gruppo è già nella raccolta. Per recuperare l'indice di un gruppo all'interno della raccolta, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> metodo. È possibile ottenere o impostare il gruppo in un determinato indice di <xref:System.Windows.Forms.ListViewGroupCollection.Item%2A> dell'indicizzatore.  
  
 Utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo per aggiungere più gruppi nella raccolta. È possibile aggiungere più gruppi o come una matrice di gruppi o come un <xref:System.Windows.Forms.ListViewGroupCollection> recuperato mediante la <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> proprietà di un altro <xref:System.Windows.Forms.ListView> controllo. Utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodo per rimuovere tutti i gruppi dalla raccolta.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>, <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>, e <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> rimuovere gruppi dall'insieme di metodi, ma non rimuove gli elementi dal <xref:System.Windows.Forms.ListView> controllo. Se non sono presenti gruppi nel <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> insieme, la funzionalità di raggruppamento è disabilitata e tutti gli elementi nel controllo sono visualizzati normalmente.  
  
 Il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> e <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> i metodi sono utili quando si desidera fornire diverse modalità per raggruppare gli elementi in un <xref:System.Windows.Forms.ListView> controllo. A tale scopo, creare più array di gruppo. Per modificare il raggruppamento, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodo per rimuovere tutti i gruppi dalla raccolta, quindi utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo per aggiungere la matrice di gruppi per la visualizzazione successiva.  
  
 Utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> metodo per copiare i gruppi in una raccolta in una matrice compatibile, iniziando in corrispondenza dell'indice specificato. Ciò è utile, ad esempio, quando si desidera ordinare i gruppi nella raccolta usando il <xref:System.Array.Sort%2A?displayProperty=nameWithType> metodo. A tale scopo, copiare i gruppi in una matrice compatibile, quindi ordinare la matrice. Successivamente, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodo per rimuovere tutti i gruppi dalla raccolta, quindi utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo per aggiungere la matrice ordinata nuovamente alla raccolta.  
  
 Utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> proprietà per determinare il numero di gruppi presenti nella raccolta. Per scorrere la raccolta, utilizzare il <xref:System.Collections.IEnumerator> restituito dal <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> metodo.  
  
> [!NOTE]
>  La funzionalità di raggruppamento è disponibile solo in Windows XP e in Windows Server 2003 quando l'applicazione chiama il <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodo. Nei sistemi operativi precedenti, qualsiasi codice relativo a gruppi verrà ignorati e non verranno visualizzati i gruppi. Di conseguenza, qualsiasi codice che dipende la funzionalità di raggruppamento potrebbe non funzionare correttamente. Si desidera includere un test che determina se la funzionalità di raggruppamento è disponibile e fornire una funzionalità alternativa quando non è disponibile. Ad esempio, si potrebbe voler fornire un ordinamento alternativo durante l'esecuzione nei sistemi operativi che non supportano l'ordinamento dal gruppo.  
>   
>  La funzionalità del segno di inserimento viene fornita nella stessa libreria che fornisce la funzionalità di temi del sistema operativo. Per verificare la disponibilità di questa raccolta, chiamare il <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> overload del metodo e passare il <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valore.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ListView> caratteristica di raggruppamento per organizzare gli elementi per il valore dell'elemento secondario nella visualizzazione dettagli. Questa modalità di raggruppamento è simile al raggruppamento utilizzato in Esplora risorse. Nell'esempio, i gruppi vengono creati dinamicamente. Per ogni colonna dell'elemento secondario, viene creato un gruppo per ogni valore univoco dell'elemento secondario. Per la colonna dell'elemento padre, viene creato un gruppo per ogni lettera iniziale univoca. Fare clic sull'intestazione di una colonna Ordina gli elementi nei gruppi creati per tale colonna. Fare di nuovo la stessa intestazione di colonna inverte l'ordine dei gruppi.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge un oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> alla raccolta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> da aggiungere alla raccolta.</param>
        <summary>Aggiunge l'oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> specificato alla raccolta.</summary>
        <returns>Indice del gruppo all'interno dell'insieme oppure -1 se il gruppo è già presente nell'insieme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per aggiungere un oggetto esistente <xref:System.Windows.Forms.ListViewGroup> alla raccolta. Non è possibile aggiungere un <xref:System.Windows.Forms.ListViewGroup> alla raccolta più volte. Quando si chiama il <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metodo usando un <xref:System.Windows.Forms.ListViewGroup> che è già presente nella raccolta, l'aggiunta avrà esito negativo e viene restituito -1.  
  
 Per aggiungere più gruppi per la raccolta, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="group" /> contiene almeno un oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> appartenente a un controllo <see cref="T:System.Windows.Forms.ListView" /> diverso da quello a cui appartiene questo <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Valore iniziale della proprietà <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> per il nuovo gruppo.</param>
        <param name="headerText">Valore iniziale della proprietà <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> per il nuovo gruppo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.ListViewGroup" /> sull'insieme utilizzando il valore specificato per inizializzare le proprietà <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> e <see cref="P:System.Windows.Forms.ListViewGroup.Header" />.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge più gruppi all'insieme.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">Matrice di tipo <see cref="T:System.Windows.Forms.ListViewGroup" /> che specifica i gruppi da aggiungere all'insieme.</param>
        <summary>Aggiunge una matrice di gruppi all'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa versione di <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo per aggiungere una matrice di gruppi all'insieme di gruppi. Questo metodo è utile quando si crea più <xref:System.Windows.Forms.ListViewGroup> degli oggetti e aggiungerli alla raccolta con una singola chiamata al metodo. Per aggiungere singoli gruppi alla raccolta, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metodo.  
  
 Questo metodo è utile anche quando si desidera fornire diverse modalità per raggruppare gli elementi in un <xref:System.Windows.Forms.ListView> controllo. A tale scopo, creare più array di gruppo. Per modificare il raggruppamento, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodo per rimuovere tutti i gruppi dalla raccolta, quindi utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo per aggiungere una matrice di gruppi diversi.  
  
 A differenza di <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> (metodo), il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo non dispone di un valore restituito può essere utilizzato per determinare se un gruppo da aggiungere è già nella raccolta. Se queste informazioni sono necessarie, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metodo prima di utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come la <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo può essere utilizzato in un'applicazione che consente di organizzare <xref:System.Windows.Forms.ListView> gli elementi in base al valore dell'elemento secondario nella visualizzazione dettagli. Questa modalità di raggruppamento è simile al raggruppamento utilizzato in Esplora risorse. Nell'esempio, i gruppi vengono creati dinamicamente. Per ogni colonna dell'elemento secondario, viene creato un gruppo per ogni valore univoco dell'elemento secondario. Per la colonna dell'elemento padre, viene creato un gruppo per ogni lettera iniziale univoca. I gruppi creati per ogni colonna vengono archiviati in una tabella hash con la lettera iniziale o il testo dell'elemento secondario. Quando si seleziona un'intestazione di colonna, il <xref:System.Windows.Forms.ListViewGroupCollection> è deselezionata. La tabella hash corrispondente alla colonna selezionata viene quindi recuperata e ogni elemento viene assegnato al gruppo appropriato. Infine, aggiungere una matrice ordinata dei gruppi nella tabella hash il <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Per un esempio completo, vedere il <xref:System.Windows.Forms.ListViewGroupCollection> Panoramica di riferimento.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> contiene almeno un oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> appartenente a un controllo <see cref="T:System.Windows.Forms.ListView" /> diverso da quello a cui appartiene questo <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups">Oggetto <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> contenente i gruppi da aggiungere all'insieme.</param>
        <summary>Aggiunge i gruppi di un oggetto <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> esistente all'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa versione di <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo per aggiungere gli elementi di un <xref:System.Windows.Forms.ListViewGroupCollection> recuperato mediante la <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> proprietà di un altro <xref:System.Windows.Forms.ListView> controllo.  
  
 A differenza di <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> (metodo), il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo non dispone di un valore restituito può essere utilizzato per determinare se un gruppo da aggiungere è già nella raccolta. Se queste informazioni sono necessarie, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metodo prima di utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> contiene almeno un oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> appartenente a un controllo <see cref="T:System.Windows.Forms.ListView" /> diverso da quello a cui appartiene questo <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove tutti i gruppi dall'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per rimuovere tutti i gruppi dalla raccolta. Si noti che la rimozione di gruppi dal <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> non rimuove gli elementi dalla raccolta di <xref:System.Windows.Forms.ListView> controllo.  
  
 Questo metodo è utile per disabilitare la funzionalità di raggruppamento. Quando non sono presenti gruppi in un <xref:System.Windows.Forms.ListView> controllare, gli elementi vengono visualizzati in genere. Per rimuovere singoli gruppi dalla raccolta, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> o <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> metodo.  
  
 Questo metodo è utile anche quando si desidera fornire diverse modalità per raggruppare gli elementi. Per modificare il raggruppamento, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodo per rimuovere tutti i gruppi dalla raccolta, quindi utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo per aggiungere una matrice di gruppi diversi.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come la <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodo può essere utilizzato in un'applicazione che consente di organizzare <xref:System.Windows.Forms.ListView> gli elementi in base al valore dell'elemento secondario nella visualizzazione dettagli. Questa modalità di raggruppamento è simile al raggruppamento utilizzato in Esplora risorse. Nell'esempio, i gruppi vengono creati dinamicamente. Per ogni colonna dell'elemento secondario, viene creato un gruppo per ogni valore univoco dell'elemento secondario. Per la colonna dell'elemento padre, viene creato un gruppo per ogni lettera iniziale univoca. I gruppi creati per ogni colonna vengono archiviati in una tabella hash con la lettera iniziale o il testo dell'elemento secondario. Quando si seleziona un'intestazione di colonna, il <xref:System.Windows.Forms.ListViewGroupCollection> è deselezionata. La tabella hash corrispondente alla colonna selezionata viene quindi recuperata e ogni elemento viene assegnato al gruppo appropriato. Infine, aggiungere una matrice ordinata dei gruppi nella tabella hash il <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Per un esempio completo, vedere il <xref:System.Windows.Forms.ListViewGroupCollection> Panoramica di riferimento.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> da individuare nella raccolta.</param>
        <summary>Consente di determinare se il gruppo specificato è contenuto nell'insieme.</summary>
        <returns>
          <see langword="true" /> se il gruppo è nell'insieme; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è possibile aggiungere un <xref:System.Windows.Forms.ListViewGroup> alla raccolta più volte. Tuttavia, il tentativo di aggiungere un'altra copia non genererà un'eccezione. Al contrario, l'aggiunta semplicemente avrà esito negativo. Il <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> metodo restituirà un valore di -1 in questo caso. Il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> e <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> metodi, tuttavia, non hanno i valori restituiti. Quando si aggiungono gruppi tramite uno di questi metodi, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metodo per determinare se un particolare <xref:System.Windows.Forms.ListViewGroup> è già presente nella raccolta.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Matrice <see cref="T:System.Array" /> nella quale vengono copiati i gruppi.</param>
        <param name="index">Primo indice nella matrice in corrispondenza del quale vengono copiati i gruppi.</param>
        <summary>Copia i gruppi dell'insieme in una matrice compatibile unidimensionale <see cref="T:System.Array" />, a partire dall'indice specificato della matrice di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> metodo per copiare i gruppi in una raccolta (inclusi i riferimenti agli elementi che contengono) in una matrice compatibile, iniziando in corrispondenza dell'indice specificato. Ciò è utile, ad esempio, quando si desidera ordinare i gruppi nella raccolta usando il <xref:System.Array.Sort%2A?displayProperty=nameWithType> metodo. A tale scopo, copiare i gruppi in una matrice compatibile, quindi ordinare la matrice. Successivamente, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodo per rimuovere tutti i gruppi dalla raccolta, quindi utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> metodo per aggiungere la matrice ordinata nuovamente alla raccolta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di gruppi nell'insieme.</summary>
        <value>Numero di gruppi nella raccolta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per determinare il numero di gruppi nella raccolta. Ciò è utile quando è necessario scorrere la raccolta e la stessa operazione su ogni gruppo. È inoltre possibile utilizzare il <xref:System.Collections.IEnumerator> restituito dal <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> metodo per scorrere la raccolta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore che consente di scorrere l'insieme.</summary>
        <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che rappresenta l'insieme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è utile quando è necessario scorrere la raccolta per eseguire la stessa operazione su ogni gruppo. È inoltre possibile scorrere la raccolta di una volta per ogni gruppo, utilizzando il <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> proprietà per determinare il numero di cicli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> da individuare nella raccolta.</param>
        <summary>Restituisce l'indice dell'oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> specificato all'interno dell'insieme.</summary>
        <returns>Indice in base zero del gruppo all'interno dell'insieme, oppure -1 se il gruppo non è nell'insieme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per determinare l'indice di un gruppo all'interno della raccolta. Ciò è utile, ad esempio, per determinare l'indice di ogni gruppo quando si scorre la raccolta utilizzando la <xref:System.Collections.IEnumerator> restituito dal <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell'insieme in corrispondenza del quale inserire il gruppo.</param>
        <param name="group">Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> da inserire nella raccolta.</param>
        <summary>Inserisce l'oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> specificato nell'insieme in corrispondenza dell'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per inserire un oggetto esistente <xref:System.Windows.Forms.ListViewGroup> da un particolare indice all'interno della raccolta.  
  
 Non è possibile aggiungere un <xref:System.Windows.Forms.ListViewGroup> alla raccolta più volte. Quando si chiama il <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> metodo utilizzando un gruppo che si trova già nella raccolta, l'inserimento ha esito negativo. Utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> metodo prima dell'inserimento per determinare se un particolare gruppo è già nella raccolta. Per riposizionare un gruppo all'interno della raccolta, è necessario innanzitutto rimuoverlo e quindi inserirla in corrispondenza dell'indice desiderato.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene o imposta un oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> nell'insieme.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice all'interno dell'insieme dell'oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> da ottenere o impostare.</param>
        <summary>Ottiene o imposta il gruppo <see cref="T:System.Windows.Forms.ListViewGroup" /> in corrispondenza dell'indice specificato all'interno dell'insieme.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> in corrispondenza dell'indice specificato all'interno dell'insieme.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per recuperare il gruppo in corrispondenza dell'indice specificato all'interno della raccolta. Quando si dispone di un riferimento all'oggetto gruppo ed è necessario l'indice, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> è minore di 0 oppure maggiore o uguale a <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nome del gruppo da ottenere o impostare.</param>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> con il valore della proprietà <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> specificato.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> con il nome specificato oppure <see langword="null" /> se non esiste alcun oggetto <see cref="T:System.Windows.Forms.ListViewGroup" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> da rimuovere dalla raccolta.</param>
        <summary>Rimuove l'oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> specificato dalla raccolta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per rimuovere un gruppo dalla raccolta quando si dispone di un riferimento al gruppo. La rimozione di un gruppo dal <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> non rimuove gli elementi dalla raccolta di <xref:System.Windows.Forms.ListView> controllo.  
  
 Per rimuovere un gruppo da un indice specifico, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> metodo invece. Per rimuovere tutti i gruppi dalla raccolta, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice all'interno dell'insieme dell'oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> da rimuovere.</param>
        <summary>Rimuove l'oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> in corrispondenza dell'indice specificato all'interno dell'insieme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per rimuovere un gruppo dalla raccolta quando è presente l'indice del gruppo all'interno della raccolta. Si noti che la rimozione di gruppi dal <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> non rimuove gli elementi dalla raccolta di <xref:System.Windows.Forms.ListView> controllo.  
  
 Per rimuovere un gruppo tramite un riferimento all'oggetto, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> metodo invece. Per rimuovere tutti i gruppi dalla raccolta, utilizzare il <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> metodo. Quando si rimuove un elemento dalla raccolta, vengono modificati gli indici per gli elementi successivi nell'insieme. Tutte le informazioni relative all'elemento rimosso vengono eliminate.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
        <value>
          <see langword="true" /> in tutti i casi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
        <value>Oggetto utilizzato per sincronizzare l'insieme.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> da aggiungere a <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Consente di aggiungere un nuovo oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> a <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <returns>Indice in corrispondenza del quale è stato aggiunto <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> non è un oggetto <see cref="T:System.Windows.Forms.ListViewGroup" />.  
  
 oppure  
  
 <paramref name="value" /> contiene almeno un oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> appartenente a un controllo <see cref="T:System.Windows.Forms.ListView" /> diverso da quello a cui appartiene questo <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto che rappresenta il gruppo <see cref="T:System.Windows.Forms.ListViewGroup" /> da individuare nell'insieme.</param>
        <summary>Consente di determinare se il valore specificato è contenuto nell'insieme.</summary>
        <returns>
          <see langword="true" /> se <paramref name="value" /> è un gruppo <see cref="T:System.Windows.Forms.ListViewGroup" /> contenuto nell'insieme; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Il gruppo <see cref="T:System.Windows.Forms.ListViewGroup" /> da trovare nell'insieme <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Restituisce l'indice all'interno dell'insieme del valore specificato.</summary>
        <returns>Indice in base zero dell'oggetto <paramref name="value" /> se presente nell'insieme; in caso contrario, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Posizione nella quale viene aggiunto il gruppo <see cref="T:System.Windows.Forms.ListViewGroup" /> all'interno dell'insieme.</param>
        <param name="value">Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> da aggiungere alla raccolta.</param>
        <summary>Inserisce un gruppo <see cref="T:System.Windows.Forms.ListViewGroup" /> nell'insieme <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `value` non è un <xref:System.Windows.Forms.ListViewGroup>, non viene aggiunto alla raccolta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
        <summary>Ottiene o imposta il gruppo <see cref="T:System.Windows.Forms.ListViewGroup" /> in corrispondenza dell'indice specificato all'interno dell'insieme.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> che rappresenta l'elemento che si trova in corrispondenza dell'indice specificato all'interno della raccolta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto <see cref="T:System.Windows.Forms.ListViewGroup" /> da rimuovere da <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Rimuove il gruppo <see cref="T:System.Windows.Forms.ListViewGroup" /> dall'insieme <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>