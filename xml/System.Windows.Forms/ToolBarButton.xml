<Type Name="ToolBarButton" FullName="System.Windows.Forms.ToolBarButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9bccf49a0da32b1095f4529738d8ecc86dc622b9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36513083" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolBarButton : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolBarButton extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBarButton" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolBarButton&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolBarButton : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ToolBarButton = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un pulsante della barra degli strumenti di Windows. Benché il controllo <see cref="T:System.Windows.Forms.ToolStripButton" /> sostituisca ed estenda il controllo <see cref="T:System.Windows.Forms.ToolBarButton" /> delle versioni precedenti, il controllo <see cref="T:System.Windows.Forms.ToolBarButton" /> viene mantenuto per compatibilità con le versioni precedenti e per eventuale uso futuro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton> i controlli sono padre <xref:System.Windows.Forms.ToolBar> controlli. Le proprietà comuni per impostare una volta creato il pulsante della barra degli strumenti sono <xref:System.Windows.Forms.ToolBarButton.Text%2A> e <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>. Impostare il <xref:System.Windows.Forms.ToolBarButton.Text%2A> proprietà del pulsante per visualizzare il testo di sotto o a destra dell'immagine. Per assegnare le immagini per i pulsanti tramite la creazione di un <xref:System.Windows.Forms.ImageList>, assegnarlo al <xref:System.Windows.Forms.ToolBar.ImageList%2A> proprietà della barra degli strumenti; quindi assegnare il valore di indice immagine per il <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> proprietà del pulsante.  
  
 Per modificare l'aspetto dei pulsanti della barra degli strumenti assegnati alla barra degli strumenti, impostare il <xref:System.Windows.Forms.ToolBar.Appearance%2A> proprietà del controllo barra degli strumenti padre. Il `ToolBarAppearance.Flat` conferisce ai pulsanti piatta. Al passaggio del mouse puntatore viene spostato sui pulsanti, le relative modifiche aspetto tridimensionale. I separatori sono visualizzati come righe anziché gli spazi tra i pulsanti quando i pulsanti hanno un aspetto. Se il <xref:System.Windows.Forms.ToolBar.Appearance%2A> è impostata su `ToolBarAppearance.Normal`, i pulsanti di rilievo e tridimensionale, e i separatori vengono visualizzati come un gap tra i pulsanti.  
  
 È possibile assegnare un <xref:System.Windows.Forms.ContextMenu> a un pulsante se la <xref:System.Windows.Forms.ToolBarButton.Style%2A> è impostata su `ToolBarButtonStyle.DropDown`. Quando si fa clic sul pulsante, viene visualizzato il menu assegnato.  
  
 Per creare una raccolta di <xref:System.Windows.Forms.ToolBarButton> controlli per la visualizzazione in un <xref:System.Windows.Forms.ToolBar>, aggiungere i pulsanti individualmente utilizzando il <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> metodo il <xref:System.Windows.Forms.ToolBar.Buttons%2A> proprietà. In alternativa, è possibile aggiungere più pulsanti della barra degli strumenti utilizzando il <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> metodo.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ToolBar> e tre <xref:System.Windows.Forms.ToolBarButton> controlli. I pulsanti della barra degli strumenti vengono assegnati alla raccolta pulsante, la raccolta viene assegnata alla barra degli strumenti e la barra degli strumenti viene aggiunto al form. Nel <xref:System.Windows.Forms.ToolBar.ButtonClick> eventi della barra degli strumenti, la <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> proprietà del <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> viene valutata e aperta la finestra di dialogo appropriata. Questo codice si presuppone che un <xref:System.Windows.Forms.Form>, una <xref:System.Windows.Forms.OpenFileDialog>, un <xref:System.Windows.Forms.SaveFileDialog>e un <xref:System.Windows.Forms.PrintDialog> siano stati creati.  
  
 [!code-cpp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBar Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolBar" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.Windows.Forms.ToolTip" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.ToolBarButton" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.ToolBarButton" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto appena creato <xref:System.Windows.Forms.ToolBarButton> non dispone di alcun valore predefinito <xref:System.Windows.Forms.ToolBarButton.Text%2A> o <xref:System.Drawing.Image> assegnato a esso. Lo stile del pulsante predefinito è `ToolBarButtonStyle.PushButton`.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ToolBar> e tre <xref:System.Windows.Forms.ToolBarButton> controlli, vengono assegnati i pulsanti alla barra degli strumenti e vengono impostate alcune proprietà comuni dei pulsanti. Questo codice si presuppone che un <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> e un <xref:System.Windows.Forms.Form> sono stati creati e il <xref:System.Windows.Forms.ImageList> ha almeno un <xref:System.Drawing.Image> assegnato a esso.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButton(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolBarButton : string -&gt; System.Windows.Forms.ToolBarButton" Usage="new System.Windows.Forms.ToolBarButton text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare sul nuovo controllo <see cref="T:System.Windows.Forms.ToolBarButton" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.ToolBarButton" /> nella quale è visualizzato il testo assegnato al pulsante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appena creato <xref:System.Windows.Forms.ToolBarButton> non ha alcun <xref:System.Drawing.Image> assegnato a esso. Lo stile del pulsante predefinito è <xref:System.Windows.Forms.ToolBarButtonStyle.PushButton>. Il `text` parametro è assegnato il <xref:System.Windows.Forms.ToolBarButton.Text%2A> proprietà e viene visualizzato sul nuovo controllo pulsante della barra degli strumenti.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ToolBar> e tre <xref:System.Windows.Forms.ToolBarButton> controlli, vengono assegnati i pulsanti alla barra degli strumenti e vengono impostate alcune proprietà comuni dei pulsanti. Questo codice si presuppone che un <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> e un <xref:System.Windows.Forms.Form> sono stati creati e il <xref:System.Windows.Forms.ImageList> ha almeno un <xref:System.Drawing.Image> assegnato a esso.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Text" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="toolBarButton.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Windows.Forms.ToolBarButton" /> e, facoltativamente, le risorse gestite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal metodo pubblico `Dispose` metodo e il <xref:System.Object.Finalize%2A> metodo. `Dispose` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.  
  
 Quando il `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Windows.Forms.ToolBarButton> riferimenti. Il metodo richiama il metodo `Dispose` di ciascun oggetto cui viene fatto riferimento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. Quando si esegue l'override <see langword="Dispose(Boolean)" /> prestare attenzione a non fare riferimento a oggetti già eliminati in una chiamata precedente a <see langword="Dispose" />. Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Per ulteriori informazioni <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [pulizia backup Resources](~/docs/standard/garbage-collection/unmanaged.md) non gestito e [override del metodo Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DropDownMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu DropDownMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu DropDownMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.DropDownMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownMenu As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu ^ DropDownMenu { System::Windows::Forms::Menu ^ get(); void set(System::Windows::Forms::Menu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownMenu : System.Windows.Forms.Menu with get, set" Usage="System.Windows.Forms.ToolBarButton.DropDownMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il menu da visualizzare nel pulsante a discesa della barra degli strumenti.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ContextMenu" /> da visualizzare nel pulsante a discesa della barra degli strumenti. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare un <xref:System.Windows.Forms.ContextMenu> da visualizzare quando viene scelto il pulsante di menu a discesa. Questa proprietà non viene utilizzata a meno che il <xref:System.Windows.Forms.ToolBarButton.Style%2A> valore della proprietà è impostato su <xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Anche se il <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A> proprietà viene definita come un <xref:System.Windows.Forms.Menu> tipo, è necessario assegnargli una <xref:System.Windows.Forms.ContextMenu> per poter essere visualizzati correttamente. Se si sta creando <xref:System.Windows.Forms.MenuItem> derivata è necessario assegnare tale oggetto a un <xref:System.Windows.Forms.ContextMenu> e assegnare il <xref:System.Windows.Forms.ContextMenu> per il <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A> proprietà.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ToolBar> e tre <xref:System.Windows.Forms.ToolBarButton> controlli, vengono assegnati i pulsanti alla barra degli strumenti e vengono impostate alcune proprietà comuni dei pulsanti. Questo codice si presuppone che un <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> e una <xref:System.Windows.Forms.Form> sono stati creati e il <xref:System.Windows.Forms.ImageList> ha almeno un <xref:System.Drawing.Image> assegnato a esso.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto assegnato non è un oggetto <see cref="T:System.Windows.Forms.ContextMenu" />.</exception>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il pulsante è abilitato.</summary>
        <value>
          <see langword="true" /> se il pulsante è abilitato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Windows.Forms.ToolBarButton.Enabled%2A> è impostata su `false`, non è possibile fare clic sul pulsante della barra degli strumenti e l'aspetto del pulsante Cambia. Il <xref:System.Drawing.Image> e <xref:System.Windows.Forms.ToolBarButton.Text%2A> assegnato al pulsante visualizzati in grigio. Se l'immagine o il testo ha più colori, verranno inoltre visualizzati in un grigio monocromatico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.ToolBarButton.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageIndexConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore di indice dell'immagine assegnata al pulsante.</summary>
        <value>Valore di indice dell'oggetto <see cref="T:System.Drawing.Image" /> assegnato al pulsante della barra degli strumenti. Il valore predefinito è -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> valore fa riferimento il valore indicizzato delle immagini in un <xref:System.Windows.Forms.ImageList> assegnato al controllo padre <xref:System.Windows.Forms.ToolBar> controllo.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ToolBar> e tre <xref:System.Windows.Forms.ToolBarButton> controlli, vengono assegnati i pulsanti alla barra degli strumenti e vengono impostate alcune proprietà comuni dei pulsanti. Questo codice si presuppone che un <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> e un <xref:System.Windows.Forms.Form> sono stati creati e il <xref:System.Windows.Forms.ImageList> ha almeno un <xref:System.Drawing.Image> assegnato a esso.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore assegnato è minore di -1.</exception>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="T:System.Windows.Forms.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.ToolBarButton.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'immagine assegnata al pulsante.</summary>
        <value>Nome dell'oggetto <see cref="T:System.Drawing.Image" /> assegnato al pulsante della barra degli strumenti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ToolBarButton.ImageKey%2A> valore indica un'immagine nel <xref:System.Windows.Forms.ImageList> assegnato al controllo padre <xref:System.Windows.Forms.ToolBar> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBar.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.ToolBarButton.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nome del pulsante.</summary>
        <value>Nome del pulsante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il nome del pulsante come chiave per recuperare il <xref:System.Windows.Forms.ToolBarButton> dal <xref:System.Windows.Forms.ToolBar.Buttons%2A> raccolta di un <xref:System.Windows.Forms.ToolBar> controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBar Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBar Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As ToolBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBar ^ Parent { System::Windows::Forms::ToolBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.ToolBar" Usage="System.Windows.Forms.ToolBarButton.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il controllo barra degli strumenti a cui è assegnato il pulsante.</summary>
        <value>Controllo <see cref="T:System.Windows.Forms.ToolBar" /> a cui è assegnato l'oggetto <see cref="T:System.Windows.Forms.ToolBarButton" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName="PartialPush">
      <MemberSignature Language="C#" Value="public bool PartialPush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PartialPush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.PartialPush" />
      <MemberSignature Language="VB.NET" Value="Public Property PartialPush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PartialPush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PartialPush : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.PartialPush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se un pulsante interruttore è parzialmente premuto.</summary>
        <value>
          <see langword="true" /> se un pulsante interruttore della barra degli strumenti è parzialmente premuto; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> è impostata su `true`, viene visualizzato il pulsante della barra degli strumenti per selezionabile. Questo aspetto è diverso da quello in grigio quando il <xref:System.Windows.Forms.ToolBarButton.Enabled%2A> è impostata su `false` poiché coinvolge per l'intera superficie del pulsante. Questa proprietà ha effetto solo se il <xref:System.Windows.Forms.ToolBarButtonStyle> è impostata su `ToggleButton`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, e <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form contenente un <xref:System.Windows.Forms.RichTextBox> controllo denominato `RichTextBox1`. Chiamare il `InitializeToolBar` metodo nel costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Pushed">
      <MemberSignature Language="C#" Value="public bool Pushed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pushed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Pushed" />
      <MemberSignature Language="VB.NET" Value="Public Property Pushed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Pushed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Pushed : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Pushed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se un pulsante interruttore della barra degli strumenti è premuto.</summary>
        <value>
          <see langword="true" /> se un pulsante interruttore della barra degli strumenti è attualmente premuto; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si <xref:System.Windows.Forms.ToolBarButton.Pushed%2A> è impostata su `true`, viene visualizzato il pulsante della barra degli strumenti incassato rispetto agli altri pulsanti. Questa proprietà ha effetto solo se il <xref:System.Windows.Forms.ToolBarButtonStyle> è impostata su `ToggleButton`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, e <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form contenente un <xref:System.Windows.Forms.RichTextBox> controllo denominato `RichTextBox1`. Chiamare il `InitializeToolBar` metodo nel costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Rectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Rectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.ToolBarButton.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il rettangolo di delimitazione di un pulsante della barra degli strumenti.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Rectangle" /> di delimitazione di un pulsante della barra degli strumenti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.ToolBar> e il pulsante corrente sono entrambi <xref:System.Windows.Forms.ToolBarButton.Visible%2A>, quindi questa proprietà recupera il rettangolo di delimitazione in cui è attualmente contenuto il pulsante.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBarButtonStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolBarButtonStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As ToolBarButtonStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBarButtonStyle Style { System::Windows::Forms::ToolBarButtonStyle get(); void set(System::Windows::Forms::ToolBarButtonStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Forms.ToolBarButtonStyle with get, set" Usage="System.Windows.Forms.ToolBarButton.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButtonStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo stile del pulsante della barra degli strumenti.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ToolBarButtonStyle" />. Il valore predefinito è <see langword="ToolBarButtonStyle.PushButton" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il pulsante <xref:System.Windows.Forms.ToolBarButton.Style%2A> è impostata su <xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton> è possibile specificare un <xref:System.Windows.Forms.MenuItem> da visualizzare quando viene premuto il pulsante di menu a discesa. Se lo stile è impostato su `ToolBarButtonStyle.Separator`, viene visualizzato il pulsante della barra degli strumenti come un separatore di pulsanti e non come un pulsante. Il `ToolBarButtonStyle.ToggleButton` stile fa sì che il pulsante della barra degli strumenti per agire come un pulsante di attivazione/disattivazione, può essere un attiva o disattiva lo stato.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ToolBar> e tre <xref:System.Windows.Forms.ToolBarButton> controlli, vengono assegnati i pulsanti alla barra degli strumenti e vengono impostate alcune proprietà comuni dei pulsanti. Questo codice si presuppone che un <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> e un <xref:System.Windows.Forms.Form> sono stati creati e il <xref:System.Windows.Forms.ImageList> ha almeno un <xref:System.Drawing.Image> assegnato a esso.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore assegnato non è uno dei valori di <see cref="T:System.Windows.Forms.ToolBarButtonStyle" />.</exception>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ToolBarButton.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto che contiene i dati relativi al pulsante della barra degli strumenti.</summary>
        <value>Oggetto <see cref="T:System.Object" /> contenente i dati relativi al pulsante della barra degli strumenti. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Recupera o assegna i dati attualmente associati al pulsante della barra degli strumenti. Qualsiasi <xref:System.Object> tipo derivato può essere assegnato a questa proprietà. Se questa proprietà viene impostata tramite la finestra di progettazione Windows Form, è possibile assegnare solo testo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>, e <xref:System.Windows.Forms.ToolBarButton.Tag%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form contenente un <xref:System.Windows.Forms.RichTextBox> controllo denominato `RichTextBox1`. Chiamare il `InitializeToolBar` metodo nel costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ToolBarButton.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo visualizzato sul pulsante della barra degli strumenti.</summary>
        <value>Testo visualizzato sul pulsante della barra degli strumenti. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito il valore della proprietà Text è una stringa vuota ("") a meno che non è stato creato il controllo con il <xref:System.Windows.Forms.ToolBar.%23ctor%2A> costruttore che accetta la stringa di testo come parametro. L'orientamento del testo sul pulsante della barra degli strumenti è determinata dal <xref:System.Windows.Forms.ToolBar.TextAlign%2A> proprietà dell'elemento padre del pulsante <xref:System.Windows.Forms.ToolBar>, che può essere impostato su uno del <xref:System.Windows.Forms.ToolBarTextAlign> valori di enumerazione. L'orientamento è in relazione l'immagine associata al pulsante. Se è presente alcuna immagine non viene assegnata al pulsante, sarà presente spazio a sinistra per uno sulla superficie del pulsante della barra degli strumenti.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ToolBar> e tre <xref:System.Windows.Forms.ToolBarButton> controlli, vengono assegnati i pulsanti alla barra degli strumenti e vengono impostate alcune proprietà comuni dei pulsanti. Questo codice si presuppone che un <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> e un <xref:System.Windows.Forms.Form> sono stati creati e il <xref:System.Windows.Forms.ImageList> ha almeno un <xref:System.Drawing.Image> assegnato a esso.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.ToolBarButton.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo visualizzato come descrizione comandi di un pulsante.</summary>
        <value>Testo che viene visualizzato quando il puntatore del mouse passa sul pulsante della barra degli strumenti. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per abilitare la visualizzazione del testo della descrizione comando quando il puntatore del mouse viene spostato su di esso, impostare il <xref:System.Windows.Forms.ToolBar.ShowToolTips%2A> proprietà dell'elemento padre del pulsante <xref:System.Windows.Forms.ToolBar> a `true`.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ToolBar> e tre <xref:System.Windows.Forms.ToolBarButton> controlli, vengono assegnati i pulsanti alla barra degli strumenti e vengono impostate alcune proprietà comuni dei pulsanti. Questo codice si presuppone che un <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> e un <xref:System.Windows.Forms.Form> sono stati creati e il <xref:System.Windows.Forms.ImageList> ha almeno un <xref:System.Drawing.Image> assegnato a esso.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolBar.ShowToolTips" />
        <altmember cref="T:System.Windows.Forms.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="toolBarButton.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una stringa che rappresenta il controllo <see cref="T:System.Windows.Forms.ToolBarButton" />.</summary>
        <returns>Stringa che rappresenta l'oggetto <see cref="T:System.Windows.Forms.ToolBarButton" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ToolBarButton.ToString%2A> metodo restituisce una stringa che include il tipo e il valore di <xref:System.Windows.Forms.ToolBarButton.Style%2A> e <xref:System.Windows.Forms.ToolBarButton.Text%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il pulsante della barra degli strumenti è visibile.</summary>
        <value>
          <see langword="true" /> se il pulsante della barra degli strumenti è visibile; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il pulsante della barra degli strumenti non è visibile, non verrà visualizzato sulla barra degli strumenti e pertanto non può ricevere input dell'utente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>