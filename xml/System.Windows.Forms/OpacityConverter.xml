<Type Name="OpacityConverter" FullName="System.Windows.Forms.OpacityConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ea33b1eb1e0b2b0d26e69b0ac4b1ceea55b018b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647845" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OpacityConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OpacityConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpacityConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class OpacityConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpacityConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un convertitore di tipi per convertire valori di opacità in e da una stringa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, non creare direttamente un'istanza di un <xref:System.Windows.Forms.OpacityConverter>. Chiamare invece il <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metodo <xref:System.ComponentModel.TypeDescriptor> classe. Per ulteriori informazioni sui convertitori di tipi e per visualizzare esempi di codice, vedere il <xref:System.ComponentModel.TypeConverter> classe di base e [procedura: implementare un convertitore di tipi](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpacityConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpacityConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza un'istanza della classe <see cref="T:System.Windows.Forms.OpacityConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo è il costruttore predefinito fornito dal compilatore.  
  
 In genere, non creare direttamente un'istanza di un <xref:System.Windows.Forms.OpacityConverter>. Chiamare invece il <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metodo <xref:System.ComponentModel.TypeDescriptor> classe. Per ulteriori informazioni, vedere gli esempi di codice nel <xref:System.ComponentModel.TypeConverter> classe di base.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce informazioni sul contesto di un convertitore di tipi.</param>
        <param name="sourceType">L'oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera eseguire la conversione.</param>
        <summary>Restituisce un valore che indica se questo convertitore può convertire un oggetto del tipo di origine specificato nel tipo nativo del convertitore che utilizza il contesto specificato.</summary>
        <returns>
          <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `sourceType` deve essere un <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Eseguire l'override del metodo per fornire specifici requisiti di conversione.  
  
 È possibile utilizzare il <paramref name="context" /> parametro per estrarre ulteriori informazioni sull'ambiente da cui viene richiamato il convertitore. Il parametro può essere <see langword="null" />, è consigliabile verificare sempre il contenuto. Anche le proprietà del <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> potrebbero restituire anche <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce informazioni sul contesto di un convertitore di tipi.</param>
        <param name="culture">Informazioni sulle impostazioni locali per la conversione.</param>
        <param name="value">Oggetto da convertire.</param>
        <summary>Converte l'oggetto specificato nel tipo nativo del convertitore.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.OpacityConverter.ConvertFrom%2A> metodo è specializzato per la conversione <xref:System.String> valori che rappresentano le percentuali o frazioni decimali nei corrispondenti <xref:System.Double> valori che rappresentano l'opacità in percentuale. I tipi diversi da <xref:System.String> vengono passati all'implementazione della classe di base di questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Il tipo di oggetto non è supportato per la conversione.</exception>
        <exception cref="T:System.FormatException">
          Non è stato possibile convertire <paramref name="value" /> nel tipo <see cref="T:System.Double" /> in modo corretto.  
  
 oppure  
  
 Il valore convertito <paramref name="value" /> risultante era minore dello 0% o maggiore del 100%.</exception>
        <block subset="none" type="overrides">
          <para>Eseguire l'override del metodo per fornire specifici requisiti di conversione.  
  
 È possibile utilizzare il <paramref name="context" /> parametro per estrarre ulteriori informazioni sull'ambiente da cui viene richiamato il convertitore. Il parametro può essere <see langword="null" />, è consigliabile verificare sempre il contenuto. Anche le proprietà del <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> potrebbero restituire anche <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce informazioni sul contesto di un convertitore di tipi.</param>
        <param name="culture">Informazioni sulle impostazioni locali per la conversione.</param>
        <param name="value">Valore da convertire.</param>
        <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
        <summary>Esegue la conversione di un valore dal tipo nativo del convertitore nel tipo di destinazione.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.OpacityConverter.ConvertTo%2A> metodo è specializzato per la conversione di valori per i relativi <xref:System.String> rappresentazioni percentuali. Altri tipi vengono passati all'implementazione della classe di base di questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> è <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          L'oggetto <paramref name="value" /> non può essere convertito nell'oggetto <paramref name="destinationType" />.</exception>
        <block subset="none" type="overrides">
          <para>Eseguire l'override del metodo per fornire specifici requisiti di conversione.  
  
 È possibile utilizzare il <paramref name="context" /> parametro per estrarre ulteriori informazioni sull'ambiente da cui viene richiamato il convertitore. Il parametro può essere <see langword="null" />, è consigliabile verificare sempre il contenuto. Anche le proprietà del <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> potrebbero restituire anche <see langword="null" />.  
  
 L'oggetto risulta è un <see cref="T:System.String" /> che rappresenta la percentuale di opacità.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
  </Members>
</Type>