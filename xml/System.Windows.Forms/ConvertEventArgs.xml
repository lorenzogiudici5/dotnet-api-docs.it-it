<Type Name="ConvertEventArgs" FullName="System.Windows.Forms.ConvertEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc70d2d1f8197b7c6877de1c7ac19c736d5a0004" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37571503" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConvertEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ConvertEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ConvertEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i dati per gli eventi <see cref="E:System.Windows.Forms.Binding.Format" /> e <see cref="E:System.Windows.Forms.Binding.Parse" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ConvertEventArgs> viene usata per formattare e annullare la formattazione dei valori visualizzati da un controllo Windows Form associato ai dati tramite un <xref:System.Windows.Forms.Binding> oggetto. Il <xref:System.Windows.Forms.Binding.Format> evento si verifica ogni volta che una proprietà del controllo associata a un valore e il <xref:System.Windows.Forms.Binding.Parse> evento si verifica ogni volta che cambia il valore associato.  
  
 Il <xref:System.Windows.Forms.Binding.Format> e <xref:System.Windows.Forms.Binding.Parse> eventi consentono di creare formati personalizzati per la visualizzazione dei dati. Ad esempio, se i dati in una tabella sono di tipo <xref:System.Decimal>, è possibile specificare che i dati dovrebbero essere visualizzati nel formato della valuta locale impostando il <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> proprietà delle <xref:System.Windows.Forms.ConvertEventArgs> al valore formattato nel <xref:System.Windows.Forms.Binding.Format> evento. È quindi necessario annullare la formattazione del valore visualizzato nel <xref:System.Windows.Forms.Binding.Parse> evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, consultare [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.Binding>, aggiunge un <xref:System.Windows.Forms.ConvertEventHandler> delegato a entrambi il <xref:System.Windows.Forms.Binding.Parse> e <xref:System.Windows.Forms.Binding.Format> eventi e Usa il <xref:System.Windows.Forms.Control.DataBindings%2A> proprietà da aggiungere la <xref:System.Windows.Forms.Binding> per il <xref:System.Windows.Forms.BindingsCollection> di una <xref:System.Windows.Forms.TextBox> controllo. Il `DecimalToCurrencyString` delegato dell'evento, che viene aggiunto al <xref:System.Windows.Forms.Binding.Format> evento, Usa le <xref:System.Decimal.ToString%2A> metodo per formattare il valore associato (un <xref:System.Decimal> tipo) come valuta. Il `CurrencyStringToDecimal` delegato dell'evento, che viene aggiunto al <xref:System.Windows.Forms.Binding.Parse> evento, converte il valore visualizzato dal controllo al <xref:System.Decimal> tipo.  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertEventArgs (object value, Type desiredType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object, desiredType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConvertEventArgs(System::Object ^ value, Type ^ desiredType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ConvertEventArgs : obj * Type -&gt; System.Windows.Forms.ConvertEventArgs" Usage="new System.Windows.Forms.ConvertEventArgs (value, desiredType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Object" /> che contiene il valore della proprietà corrente.</param>
        <param name="desiredType">
          <see cref="T:System.Type" /> del valore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredType">
      <MemberSignature Language="C#" Value="public Type DesiredType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesiredType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DesiredType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredType : Type" Usage="System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di dati del valore desiderato.</summary>
        <value>
          <see cref="T:System.Type" /> del valore desiderato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> proprietà consente di controllare il tipo della proprietà che il valore viene convertito in.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> proprietà per determinare se è possibile eseguire la conversione di un tipo a altro. Il `DecimalToCurrencyString` metodo verifica se il <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> è una stringa. In caso contrario, il codice termina il metodo. Analogamente, il `CurrencyStringToDecimal` metodo test se il <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> è un <xref:System.Decimal>e viene chiuso se non è `true`.  
  
 [!code-cpp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore di <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</summary>
        <value>Valore del <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore contenuto per il <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> proprietà dipende dall'evento in cui il <xref:System.Windows.Forms.ConvertEventArgs> viene restituito. Il <xref:System.Windows.Forms.ConvertEventArgs> può essere restituito in entrambi i <xref:System.Windows.Forms.Binding.Format> eventi o il <xref:System.Windows.Forms.Binding.Parse> evento.  
  
 Quando la <xref:System.Windows.Forms.ConvertEventArgs> viene restituito nel <xref:System.Windows.Forms.Binding.Format> evento, il <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> proprietà contiene il valore della proprietà non formattato dell'origine dati. All'interno di <xref:System.Windows.Forms.Binding.Format> evento, è possibile leggere il valore della proprietà, il valore di formato e reimpostare il <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> proprietà per il nuovo valore (formattato), in tal modo l'impostazione del valore visualizzato nel controllo associato a dati.  
  
 Quando la <xref:System.Windows.Forms.ConvertEventArgs> viene restituito nel <xref:System.Windows.Forms.Binding.Parse> evento, la proprietà contiene il valore di formattazione personalizzata del controllo associato a dati. All'interno di <xref:System.Windows.Forms.Binding.Parse> evento, è necessario leggere il valore formattato per analizzare e convertire i dati in stesso tipo di dati come origine dati. È quindi possibile reimpostare il <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> proprietà da non formattata ha valore e quindi impostare il valore dell'origine dati. Per determinare il tipo dell'origine dati, esaminare il <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> valore della proprietà.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.Binding>, aggiunge un <xref:System.Windows.Forms.ConvertEventHandler> delegato a entrambi il <xref:System.Windows.Forms.Binding.Parse> e <xref:System.Windows.Forms.Binding.Format> eventi e Usa il <xref:System.Windows.Forms.Control.DataBindings%2A> proprietà da aggiungere la <xref:System.Windows.Forms.Binding> per il <xref:System.Windows.Forms.BindingsCollection> di una <xref:System.Windows.Forms.TextBox> controllo. Il `DecimalToCurrencyString` delegato dell'evento, che viene aggiunto al <xref:System.Windows.Forms.Binding.Format> evento, Usa le <xref:System.Decimal.ToString%2A> metodo per formattare il valore associato (un <xref:System.Decimal> tipo) come valuta. Il `CurrencyStringToDecimal` delegato dell'evento, che viene aggiunto al <xref:System.Windows.Forms.Binding.Parse> evento, converte il valore visualizzato dal controllo al <xref:System.Decimal> tipo.  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
  </Members>
</Type>