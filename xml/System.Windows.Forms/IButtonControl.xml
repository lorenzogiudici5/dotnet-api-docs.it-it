<Type Name="IButtonControl" FullName="System.Windows.Forms.IButtonControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="17c404975336213b8a6fe8529180753c05d3a2da" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30638555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Consente a un controllo di agire come un pulsante di un form.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un esempio di in cui può essere implementata questa interfaccia è predefinito e l'elaborazione di pulsante Annulla. Pulsanti predefiniti vengono informati quando viene immesso un invio non elaborato per un form, esattamente come una finestra di dialogo verrà chiusa. Analogamente, Annulla pulsanti vengono visualizzata una notifica ogni volta che un tasto ESC non elaborato viene immesso in un form, molto come una finestra di dialogo potrebbe essere chiusa.  
  
   
  
## Examples  
 Nell'esempio seguente viene eredita il <xref:System.Windows.Forms.ButtonBase> classe e implementa il <xref:System.Windows.Forms.IButtonControl> interfaccia. L'implementazione viene aggiunta per il <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> proprietà e <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> e <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> metodi.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Implementare questa interfaccia nelle classi che agiscono come i controlli pulsante. I membri di questa interfaccia fornirà funzionalità di base dei pulsanti, ad esempio fornire un <see cref="T:System.Windows.Forms.DialogResult" /> per il form padre o la possibilità di eseguire un <see cref="E:System.Windows.Forms.Control.Click" /> evento oppure agire come pulsante predefinito di un form.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.Button" />
    <altmember cref="T:System.Windows.Forms.Form" />
  </Docs>
  <Members>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore restituito al form padre quando si sceglie il pulsante.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un form viene visualizzato come finestra di dialogo utilizzando il <xref:System.Windows.Forms.Form.ShowDialog%2A> (metodo) e uno dei pulsanti è selezionato, il pulsante <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> valore viene assegnato al form <xref:System.Windows.Forms.Form.DialogResult%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene eredita il <xref:System.Windows.Forms.ButtonBase> classe e implementa il <xref:System.Windows.Forms.IButtonControl> interfaccia. L'implementazione viene aggiunta per il <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> proprietà e <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> e <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> metodi.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="NotifyDefault">
      <MemberSignature Language="C#" Value="public void NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyDefault (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyDefault(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <see langword="true" /> se il controllo deve funzionare come pulsante predefinito; in caso contrario, <see langword="false" />.</param>
        <summary>Notifica a un controllo di essere il pulsante predefinito, in modo che l'aspetto e il funzionamento del controllo vengano regolati di conseguenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato da un form padre per creare un controllo pulsante predefinito. Per un bordo molto spesso vengono impostati i pulsanti predefiniti.  
  
   
  
## Examples  
 Nell'esempio seguente viene eredita il <xref:System.Windows.Forms.ButtonBase> classe e implementa il <xref:System.Windows.Forms.IButtonControl> interfaccia. L'implementazione viene aggiunta per il <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> proprietà e <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> e <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> metodi.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera un evento <see cref="E:System.Windows.Forms.Control.Click" /> per il controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato per il pulsante che ha lo stato attivo o per il pulsante predefinito (se nessun altro pulsante ha lo stato attivo) quando l'utente preme il tasto INVIO. Questo metodo viene chiamato anche quando l'utente preme il tasto ESC se il pulsante è impostato come pulsante Annulla.  
  
   
  
## Examples  
 Nell'esempio seguente viene eredita il <xref:System.Windows.Forms.ButtonBase> classe e implementa il <xref:System.Windows.Forms.IButtonControl> interfaccia. L'implementazione viene aggiunta per il <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> proprietà e <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> e <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> metodi.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
  </Members>
</Type>