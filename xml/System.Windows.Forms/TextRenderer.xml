<Type Name="TextRenderer" FullName="System.Windows.Forms.TextRenderer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e36de57e40edc9e9bc5f43d21074e0e96b6f5ebf" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52214235" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRenderer sealed" />
  <TypeSignature Language="F#" Value="type TextRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i metodi utilizzati per la misura e il rendering del testo. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TextRenderer> classe fornisce un set di `static` metodi che possono essere usati per la misurazione e il disegno di testo in un controllo Windows Form.  
  
 È possibile modificare il modo in cui viene creato il testo utilizzando uno degli overload <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un parametro <xref:System.Windows.Forms.TextFormatFlags>. Ad esempio, il comportamento predefinito della classe <xref:System.Windows.Forms.TextRenderer> è di aggiungere spaziatura al rettangolo di delimitazione del testo creato per sistemare le parti sporgenti delle icone. Se è necessario creare una riga di testo senza tale spazio aggiuntivo, è necessario utilizzare le versioni dei metodi <xref:System.Windows.Forms.TextRenderer.DrawText%2A> e <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> che accettano un parametro <xref:System.Drawing.Size> e <xref:System.Windows.Forms.TextFormatFlags>. Per un esempio, vedere <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  I metodi <xref:System.Windows.Forms.TextRenderer.DrawText%2A> dell'oggetto <xref:System.Windows.Forms.TextRenderer> non sono supportati per la stampa. È consigliabile usare sempre la <xref:System.Drawing.Graphics.DrawString%2A> metodi del <xref:System.Drawing.Graphics> classe.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `RenderText1` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea il testo specificato nella posizione specificata, utilizzando il contesto di periferica, il colore e il tipo di carattere specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il rendering del testo offerto dal <xref:System.Windows.Forms.TextRenderer> classe si basa sul rendering del testo GDI e non è supportata per la stampa da Windows Form. Usare invece i <xref:System.Drawing.Graphics.DrawString%2A> metodi del <xref:System.Drawing.Graphics> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui creare il testo.</param>
        <param name="text">Testo da disegnare.</param>
        <param name="font">Classe <see cref="T:System.Drawing.Font" /> da applicare al testo creato.</param>
        <param name="pt">Struttura <see cref="T:System.Drawing.Point" /> che rappresenta l'angolo superiore sinistro del testo creato.</param>
        <param name="foreColor">Classe <see cref="T:System.Drawing.Color" /> da applicare al testo creato.</param>
        <summary>Crea il testo specificato nella posizione specificata, utilizzando il contesto di periferica, il tipo di carattere e il colore specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile modificare il modo in cui viene creato il testo utilizzando uno degli overload <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un parametro <xref:System.Windows.Forms.TextFormatFlags>.  
  
 Se `font` viene `null` oppure `forecolor` viene <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, il <xref:System.Windows.Forms.TextRenderer.DrawText%2A> verrà disegnato il testo di tipo carattere o colore attualmente selezionato nel contesto di dispositivo specificato dal `dc`. Se `forecolor` è <xref:System.Drawing.Color.Transparent%2A>, il testo non verrà creato.  
  
 Il rendering del testo offerto dal <xref:System.Windows.Forms.TextRenderer> classe si basa sul rendering del testo GDI e non è supportata per la stampa da Windows Form. Usare invece i <xref:System.Drawing.Graphics.DrawString%2A> metodi del <xref:System.Drawing.Graphics> classe.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metodi che specificano un <xref:System.Drawing.Point> come l'angolo superiore sinistro del testo disegnato non vengono visualizzati correttamente in Windows 2000. Se l'applicazione è destinata all'utilizzo in computer che eseguono Windows 2000, è necessario usare uno dei <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metodi che specificano un <xref:System.Drawing.Rectangle> per i limiti del testo disegnato.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `RenderText1` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui creare il testo.</param>
        <param name="text">Testo da disegnare.</param>
        <param name="font">Classe <see cref="T:System.Drawing.Font" /> da applicare al testo creato.</param>
        <param name="bounds">Struttura <see cref="T:System.Drawing.Rectangle" /> che rappresenta i limiti del testo.</param>
        <param name="foreColor">Classe <see cref="T:System.Drawing.Color" /> da applicare al testo creato.</param>
        <summary>Crea il testo specificato all'interno dei limiti specificati, utilizzando il contesto di periferica, il tipo di carattere e il colore specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `font` oppure `forecolor` viene `null` o <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>rispettivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> verrà disegnato il testo di tipo carattere o colore attualmente selezionato nel contesto di dispositivo specificato dal `dc`. Se `forecolor` è <xref:System.Drawing.Color.Transparent%2A>, il testo non verrà creato.  
  
 Questo metodo genererà il testo è centrato orizzontalmente e verticalmente nel rettangolo specificato da di `bounds` parametro. Per modificare la modalità in cui viene disegnato il testo, usare una versione di <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un <xref:System.Windows.Forms.TextFormatFlags> tipo di parametro.  
  
 Il rendering del testo offerto dal <xref:System.Windows.Forms.TextRenderer> classe si basa sul rendering del testo GDI e non è supportata per la stampa da Windows Form. Usare invece i <xref:System.Drawing.Graphics.DrawString%2A> metodi del <xref:System.Drawing.Graphics> classe.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `RenderText2` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui creare il testo.</param>
        <param name="text">Testo da disegnare.</param>
        <param name="font">Classe <see cref="T:System.Drawing.Font" /> da applicare al testo creato.</param>
        <param name="pt">Struttura <see cref="T:System.Drawing.Point" /> che rappresenta l'angolo superiore sinistro del testo creato.</param>
        <param name="foreColor">Classe <see cref="T:System.Drawing.Color" /> da applicare al testo creato.</param>
        <param name="backColor">Classe <see cref="T:System.Drawing.Color" /> da applicare all'area di sfondo del testo creato.</param>
        <summary>Crea il testo specificato nella posizione specificata, utilizzando il contesto di periferica, il tipo di carattere e il colore di sfondo specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `backColor` parametro viene applicato per l'area rettangolare che contiene il testo disegnato. Se `font`, `backcolor` o `forecolor` viene `null` oppure <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>rispettivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> verrà disegnato il testo di tipo carattere o colore attualmente selezionato nel contesto di dispositivo specificato dal `dc`. Se `forecolor` è <xref:System.Drawing.Color.Transparent%2A>, il testo non verrà creato.  
  
 È possibile modificare il modo in cui viene creato il testo utilizzando uno degli overload <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un parametro <xref:System.Windows.Forms.TextFormatFlags>.  
  
 Il rendering del testo offerto dal <xref:System.Windows.Forms.TextRenderer> classe si basa sul rendering del testo GDI e non è supportata per la stampa da Windows Form. Usare invece i <xref:System.Drawing.Graphics.DrawString%2A> metodi del <xref:System.Drawing.Graphics> classe.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metodi che specificano un <xref:System.Drawing.Point> come l'angolo superiore sinistro del testo disegnato non vengono visualizzati correttamente in Windows 2000. Se l'applicazione è destinata all'utilizzo in computer che eseguono Windows 2000, è necessario usare uno dei <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metodi che specificano un <xref:System.Drawing.Rectangle> per i limiti del testo disegnato.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `RenderText3` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui creare il testo.</param>
        <param name="text">Testo da disegnare.</param>
        <param name="font">Classe <see cref="T:System.Drawing.Font" /> da applicare al testo creato.</param>
        <param name="pt">Struttura <see cref="T:System.Drawing.Point" /> che rappresenta l'angolo superiore sinistro del testo creato.</param>
        <param name="foreColor">Classe <see cref="T:System.Drawing.Color" /> da applicare al testo creato.</param>
        <param name="flags">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Crea il testo specificato nella posizione specificata, utilizzando il contesto di periferica, il tipo di carattere, il colore e le istruzioni di formattazione specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile modificare il modo in cui viene creato il testo utilizzando uno degli overload <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un parametro <xref:System.Windows.Forms.TextFormatFlags>. Ad esempio, il comportamento predefinito della classe <xref:System.Windows.Forms.TextRenderer> è di aggiungere spaziatura al rettangolo di delimitazione del testo creato per sistemare le parti sporgenti delle icone. Se è necessario creare una riga di testo senza tale spazio aggiuntivo, è necessario utilizzare le versioni dei metodi <xref:System.Windows.Forms.TextRenderer.DrawText%2A> e <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> che accettano un parametro <xref:System.Drawing.Size> e <xref:System.Windows.Forms.TextFormatFlags>. Per un esempio, vedere <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Il `backColor` parametro viene applicato per l'area all'interno di `bounds` parametro. Se `font` oppure `forecolor` viene `null` o <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>rispettivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> verrà disegnato il testo di tipo carattere o colore attualmente selezionato nel contesto di dispositivo specificato dal `dc`. Se `forecolor` è <xref:System.Drawing.Color.Transparent%2A>, il testo non verrà creato.  
  
 Il rendering del testo offerto dal <xref:System.Windows.Forms.TextRenderer> classe si basa sul rendering del testo GDI e non è supportata per la stampa da Windows Form. Usare invece i <xref:System.Drawing.Graphics.DrawString%2A> metodi del <xref:System.Drawing.Graphics> classe.  
  
 Il <xref:System.Windows.Forms.TextRenderer> fa uso non supporta l'aggiunta di tabulazione al testo disegnato, anche se è possibile espandere la scheda esistente viene interrotto il <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> flag.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metodi che specificano un <xref:System.Drawing.Point> come l'angolo superiore sinistro del testo disegnato non vengono visualizzati correttamente in Windows 2000. Se l'applicazione è destinata all'utilizzo in computer che eseguono Windows 2000, è necessario usare uno dei <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metodi che specificano un <xref:System.Drawing.Rectangle> per i limiti del testo disegnato.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `RenderText5` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui creare il testo.</param>
        <param name="text">Testo da disegnare.</param>
        <param name="font">Classe <see cref="T:System.Drawing.Font" /> da applicare al testo creato.</param>
        <param name="bounds">Struttura <see cref="T:System.Drawing.Rectangle" /> che rappresenta i limiti del testo.</param>
        <param name="foreColor">Classe <see cref="T:System.Drawing.Color" /> da applicare al testo creato.</param>
        <param name="backColor">Struttura <see cref="T:System.Drawing.Color" /> da applicare all'area rappresentata dal parametro <paramref name="bounds" />.</param>
        <summary>Crea il testo specificato nei limiti specificati, utilizzando il contesto di periferica, il tipo di carattere e il colore di sfondo specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `backColor` parametro viene applicato per l'area all'interno di `bounds` parametro. Se `font`, `backcolor` o `forecolor` viene `null` oppure <xref:System.Drawing.Color.Empty>rispettivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> verrà disegnato il testo di tipo carattere o colore attualmente selezionato nel contesto di dispositivo specificato dal `dc`. Se `forecolor` è <xref:System.Drawing.Color.Transparent%2A>, il testo non verrà creato.  
  
 Questo metodo genererà il testo è centrato orizzontalmente e verticalmente nel rettangolo specificato da di `bounds` parametro. Per modificare la modalità in cui viene disegnato il testo, usare una versione di <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un <xref:System.Windows.Forms.TextFormatFlags> tipo di parametro.  
  
 Il rendering del testo offerto dal <xref:System.Windows.Forms.TextRenderer> classe si basa sul rendering del testo GDI e non è supportata per la stampa da Windows Form. Usare invece i <xref:System.Drawing.Graphics.DrawString%2A> metodi del <xref:System.Drawing.Graphics> classe.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `RenderText4` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui creare il testo.</param>
        <param name="text">Testo da disegnare.</param>
        <param name="font">Classe <see cref="T:System.Drawing.Font" /> da applicare al testo creato.</param>
        <param name="bounds">Struttura <see cref="T:System.Drawing.Rectangle" /> che rappresenta i limiti del testo.</param>
        <param name="foreColor">Classe <see cref="T:System.Drawing.Color" /> da applicare al testo creato.</param>
        <param name="flags">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Crea il testo specificato nei limiti specificati, utilizzando il contesto di periferica, il tipo di carattere, il colore e le istruzioni di formattazione specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `font` oppure `color` viene `null` o <xref:System.Drawing.Color.Empty>rispettivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> verrà disegnato il testo di tipo carattere o colore attualmente selezionato nel contesto di dispositivo specificato dal `dc`. Se `forecolor` è <xref:System.Drawing.Color.Transparent%2A>, il testo non verrà creato.  
  
 È possibile modificare il modo in cui viene creato il testo utilizzando uno degli overload <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un parametro <xref:System.Windows.Forms.TextFormatFlags>. Ad esempio, il comportamento predefinito della classe <xref:System.Windows.Forms.TextRenderer> è di aggiungere spaziatura al rettangolo di delimitazione del testo creato per sistemare le parti sporgenti delle icone. Se è necessario creare una riga di testo senza tale spazio aggiuntivo, è necessario utilizzare le versioni dei metodi <xref:System.Windows.Forms.TextRenderer.DrawText%2A> e <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> che accettano un parametro <xref:System.Drawing.Size> e <xref:System.Windows.Forms.TextFormatFlags>. Per un esempio, vedere <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Il rendering del testo offerto dal <xref:System.Windows.Forms.TextRenderer> classe si basa sul rendering del testo GDI e non è supportata per la stampa da Windows Form. Usare invece i <xref:System.Drawing.Graphics.DrawString%2A> metodi del <xref:System.Drawing.Graphics> classe.  
  
 Il <xref:System.Windows.Forms.TextRenderer> fa uso non supporta l'aggiunta di tabulazione al testo disegnato, anche se è possibile espandere la scheda esistente viene interrotto il <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> flag.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `RenderText6` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui creare il testo.</param>
        <param name="text">Testo da disegnare.</param>
        <param name="font">Classe <see cref="T:System.Drawing.Font" /> da applicare al testo creato.</param>
        <param name="pt">Struttura <see cref="T:System.Drawing.Point" /> che rappresenta l'angolo superiore sinistro del testo creato.</param>
        <param name="foreColor">Struttura <see cref="T:System.Drawing.Color" /> da applicare al testo.</param>
        <param name="backColor">Classe <see cref="T:System.Drawing.Color" /> da applicare all'area di sfondo del testo creato.</param>
        <param name="flags">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Crea il testo specificato nella posizione specificata, utilizzando il contesto di periferica, il tipo di carattere, il colore, il colore di sfondo e le istruzioni di formattazione specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `backcolor` parametro viene applicato l'area rettangolare che contiene il testo disegnato. Se `font` oppure `forecolor` viene `null` o <xref:System.Drawing.Color.Empty>rispettivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> verrà disegnato il testo di tipo carattere o colore attualmente selezionato nel contesto di dispositivo specificato dal `dc`. Se `forecolor` è <xref:System.Drawing.Color.Transparent%2A>, il testo non verrà creato.  
  
 È possibile modificare il modo in cui viene creato il testo utilizzando uno degli overload <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un parametro <xref:System.Windows.Forms.TextFormatFlags>. Ad esempio, il comportamento predefinito della classe <xref:System.Windows.Forms.TextRenderer> è di aggiungere spaziatura al rettangolo di delimitazione del testo creato per sistemare le parti sporgenti delle icone. Se è necessario creare una riga di testo senza tale spazio aggiuntivo, è necessario utilizzare le versioni dei metodi <xref:System.Windows.Forms.TextRenderer.DrawText%2A> e <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> che accettano un parametro <xref:System.Drawing.Size> e <xref:System.Windows.Forms.TextFormatFlags>. Per un esempio, vedere <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Il rendering del testo offerto dal <xref:System.Windows.Forms.TextRenderer> classe si basa sul rendering del testo GDI e non è supportata per la stampa da Windows Form. Usare invece i <xref:System.Drawing.Graphics.DrawString%2A> metodi del <xref:System.Drawing.Graphics> classe.  
  
 Il <xref:System.Windows.Forms.TextRenderer> fa uso non supporta l'aggiunta di tabulazione al testo disegnato, anche se è possibile espandere la scheda esistente viene interrotto il <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> flag.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metodi che specificano un <xref:System.Drawing.Point> come l'angolo superiore sinistro del testo disegnato non vengono visualizzati correttamente in Windows 2000. Se l'applicazione è destinata all'utilizzo in computer che eseguono Windows 2000, è necessario usare uno dei <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metodi che specificano un <xref:System.Drawing.Rectangle> per i limiti del testo disegnato.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `RenderText7` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui creare il testo.</param>
        <param name="text">Testo da disegnare.</param>
        <param name="font">Classe <see cref="T:System.Drawing.Font" /> da applicare al testo creato.</param>
        <param name="bounds">Struttura <see cref="T:System.Drawing.Rectangle" /> che rappresenta i limiti del testo.</param>
        <param name="foreColor">Struttura <see cref="T:System.Drawing.Color" /> da applicare al testo.</param>
        <param name="backColor">Struttura <see cref="T:System.Drawing.Color" /> da applicare all'area rappresentata dal parametro <paramref name="bounds" />.</param>
        <param name="flags">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Crea il testo specificato nei limiti specificati, utilizzando il contesto di periferica, il tipo di carattere, il colore, il colore di sfondo e le istruzioni di formattazione specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `backcolor` parametro viene applicato per l'area all'interno di `bounds` parametro`.` se `font`, `forecolor` o `backcolor` è `null` o <xref:System.Drawing.Color.Empty>rispettivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metodo verrà disegnare il testo di tipo carattere o colore attualmente selezionato nel contesto di dispositivo specificato dal `dc`. Se `forecolor` è <xref:System.Drawing.Color.Transparent%2A>, il testo non verrà creato.  
  
 È possibile modificare il modo in cui viene creato il testo utilizzando uno degli overload <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un parametro <xref:System.Windows.Forms.TextFormatFlags>. Ad esempio, il comportamento predefinito della classe <xref:System.Windows.Forms.TextRenderer> è di aggiungere spaziatura al rettangolo di delimitazione del testo creato per sistemare le parti sporgenti delle icone. Se è necessario creare una riga di testo senza tale spazio aggiuntivo, è necessario utilizzare le versioni dei metodi <xref:System.Windows.Forms.TextRenderer.DrawText%2A> e <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> che accettano un parametro <xref:System.Drawing.Size> e <xref:System.Windows.Forms.TextFormatFlags>. Per un esempio, vedere <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Il rendering del testo offerto dal <xref:System.Windows.Forms.TextRenderer> classe si basa sul rendering del testo GDI e non è supportata per la stampa da Windows Form. Usare invece i <xref:System.Drawing.Graphics.DrawString%2A> metodi del <xref:System.Drawing.Graphics> classe.  
  
 Il <xref:System.Windows.Forms.TextRenderer> fa uso non supporta l'aggiunta di tabulazione al testo disegnato, anche se è possibile espandere la scheda esistente viene interrotto il <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> flag.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `RenderText8` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Misura il testo specificato quando viene creato con il tipo di carattere specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Testo da misurare.</param>
        <param name="font">Struttura <see cref="T:System.Drawing.Font" /> da applicare al testo misurato.</param>
        <summary>Fornisce le dimensioni, in pixel, del testo specificato al momento della creazione con il tipo di carattere specificato.</summary>
        <returns>Struttura <see cref="T:System.Drawing.Size" />, in pixel, del parametro <paramref name="text" /> creato su una sola riga con il parametro <paramref name="font" /> specificato. È possibile modificare il modo in cui viene creato il testo utilizzando uno degli overload <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" /> che accetta un parametro <see cref="T:System.Windows.Forms.TextFormatFlags" />. Ad esempio, il comportamento predefinito della classe <see cref="T:System.Windows.Forms.TextRenderer" /> è di aggiungere spaziatura al rettangolo di delimitazione del testo creato per sistemare le parti sporgenti delle icone. Se è necessario creare una riga di testo senza tale spazio aggiuntivo, è necessario utilizzare le versioni dei metodi <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" /> e <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" /> che accettano un parametro <see cref="T:System.Drawing.Size" /> e <see cref="T:System.Windows.Forms.TextFormatFlags" />. Per un esempio, vedere <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metodo richiede che il testo viene disegnato su una singola riga.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `MeasureText1` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui misurare il testo.</param>
        <param name="text">Testo da misurare.</param>
        <param name="font">Struttura <see cref="T:System.Drawing.Font" /> da applicare al testo misurato.</param>
        <summary>Fornisce le dimensioni, in pixel, del testo specificato disegnato con il tipo di carattere specificato nel contesto di periferica specificato.</summary>
        <returns>Struttura <see cref="T:System.Drawing.Size" />, in pixel, del parametro <paramref name="text" /> creato su una sola riga con il parametro <paramref name="font" /> specificato nel contesto di periferica specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metodo richiede che il testo viene disegnato su una singola riga.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare uno del <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metodi. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `DrawALineOfText` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="text">Testo da misurare.</param>
        <param name="font">Struttura <see cref="T:System.Drawing.Font" /> da applicare al testo misurato.</param>
        <param name="proposedSize">Struttura <see cref="T:System.Drawing.Size" /> del rettangolo di delimitazione iniziale.</param>
        <summary>Fornisce le dimensioni, in pixel, del testo specificato al momento della creazione con il tipo di carattere specificato, utilizzando la dimensione specificata per creare un rettangolo di delimitazione iniziale.</summary>
        <returns>Struttura <see cref="T:System.Drawing.Size" />, in pixel, del parametro <paramref name="text" /> creato con il parametro <paramref name="font" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metodo viene utilizzato il `proposedSize` parametro per indicare la relazione tra altezza e larghezza quando si determina la dimensione del testo. Durante la misurazione del testo in una singola riga, se il `proposedSize` parametro rappresenta un <xref:System.Drawing.Size> con una dimensione di altezza maggiore <xref:System.Int32.MaxValue?displayProperty=nameWithType>, restituito <xref:System.Drawing.Size> verrà regolata in modo da riflettere l'effettivo altezza del testo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare uno del <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metodi. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `DrawALineOfText` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui misurare il testo.</param>
        <param name="text">Testo da misurare.</param>
        <param name="font">Struttura <see cref="T:System.Drawing.Font" /> da applicare al testo misurato.</param>
        <param name="proposedSize">Struttura <see cref="T:System.Drawing.Size" /> del rettangolo di delimitazione iniziale.</param>
        <summary>Fornisce le dimensioni, in pixel, del testo specificato al momento della creazione con il tipo di carattere specificato nel contesto di periferica specificato, utilizzando la dimensione specificata per creare un rettangolo di delimitazione iniziale per il testo.</summary>
        <returns>Struttura <see cref="T:System.Drawing.Size" />, in pixel, del parametro <paramref name="text" /> creato con il parametro <paramref name="font" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metodo viene utilizzato il `proposedSize` parametro per indicare la relazione tra altezza e larghezza quando si determina la dimensione del testo. Durante la misurazione del testo in una singola riga, se il `proposedSize` parametro rappresenta un <xref:System.Drawing.Size> con una dimensione di altezza maggiore <xref:System.Int32.MaxValue?displayProperty=nameWithType>, restituito <xref:System.Drawing.Size> verrà regolata in modo da riflettere l'effettivo altezza del testo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare uno del <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metodi. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `DrawALineOfText` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="text">Testo da misurare.</param>
        <param name="font">Struttura <see cref="T:System.Drawing.Font" /> da applicare al testo misurato.</param>
        <param name="proposedSize">Struttura <see cref="T:System.Drawing.Size" /> del rettangolo di delimitazione iniziale.</param>
        <param name="flags">Istruzioni di formattazione da applicare al testo misurato.</param>
        <summary>Fornisce le dimensioni, in pixel, del testo specificato al momento della creazione con il tipo di carattere e le istruzioni di formattazione specificati, utilizzando la dimensione specificata per creare il rettangolo di delimitazione iniziale.</summary>
        <returns>Struttura <see cref="T:System.Drawing.Size" />, in pixel, del parametro <paramref name="text" /> creato con il parametro <paramref name="font" /> e il formato specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Usa il `proposedSize` e `flags` parametri per indicare la relazione tra altezza e larghezza quando si determina la dimensione del testo. Durante la misurazione del testo in una singola riga, se il `proposedSize` parametro rappresenta un <xref:System.Drawing.Size> con una dimensione di altezza maggiore <xref:System.Int32.MaxValue?displayProperty=nameWithType>, restituito <xref:System.Drawing.Size> verrà regolata in modo da riflettere l'effettivo altezza del testo.  
  
 È possibile modificare il modo in cui viene creato il testo utilizzando uno degli overload <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un parametro <xref:System.Windows.Forms.TextFormatFlags>. Ad esempio, il comportamento predefinito della classe <xref:System.Windows.Forms.TextRenderer> è di aggiungere spaziatura al rettangolo di delimitazione del testo creato per sistemare le parti sporgenti delle icone. Se è necessario creare una riga di testo senza tale spazio aggiuntivo, è necessario utilizzare le versioni dei metodi <xref:System.Windows.Forms.TextRenderer.DrawText%2A> e <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> che accettano un parametro <xref:System.Drawing.Size> e <xref:System.Windows.Forms.TextFormatFlags>. Per un esempio, vedere <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  Questo overload del metodo <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> ignorerà un <xref:System.Windows.Forms.TextFormatFlags> pari a <xref:System.Windows.Forms.TextFormatFlags.NoPadding> o <xref:System.Windows.Forms.TextFormatFlags.LeftAndRightPadding>. Se si specifica un valore di riempimento diverso da quello predefinito, è consigliabile usare l'overload dei metodi <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> che accetta un <xref:System.Drawing.IDeviceContext> oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare uno del <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metodi. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `DrawALineOfText` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Contesto di periferica in cui misurare il testo.</param>
        <param name="text">Testo da misurare.</param>
        <param name="font">Struttura <see cref="T:System.Drawing.Font" /> da applicare al testo misurato.</param>
        <param name="proposedSize">Struttura <see cref="T:System.Drawing.Size" /> del rettangolo di delimitazione iniziale.</param>
        <param name="flags">Istruzioni di formattazione da applicare al testo misurato.</param>
        <summary>Fornisce le dimensioni, in pixel, del testo specificato al momento della creazione con il contesto di periferica, il tipo di carattere e le istruzioni di formattazione specificati, utilizzando la dimensione specificata per creare il rettangolo di delimitazione iniziale.</summary>
        <returns>Struttura <see cref="T:System.Drawing.Size" />, in pixel, del parametro <paramref name="text" /> creato con il parametro <paramref name="font" /> e il formato specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> metodo viene utilizzato il `proposedSize` e `flags` parametri per indicare la relazione tra altezza e larghezza quando si determina la dimensione del testo. Durante la misurazione del testo in una singola riga, se il `proposedSize` parametro rappresenta un <xref:System.Drawing.Size> con una dimensione di altezza maggiore <xref:System.Int32.MaxValue?displayProperty=nameWithType>, restituito <xref:System.Drawing.Size> verrà regolata in modo da riflettere l'effettivo altezza del testo.  
  
 È possibile modificare il modo in cui viene creato il testo utilizzando uno degli overload <xref:System.Windows.Forms.TextRenderer.DrawText%2A> che accetta un parametro <xref:System.Windows.Forms.TextFormatFlags>. Ad esempio, il comportamento predefinito della classe <xref:System.Windows.Forms.TextRenderer> è di aggiungere spaziatura al rettangolo di delimitazione del testo creato per sistemare le parti sporgenti delle icone. Se è necessario disegnare una riga di testo senza tale spazio aggiuntivo, usare le versioni di <xref:System.Windows.Forms.TextRenderer.DrawText%2A> e <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> che accettano un <xref:System.Drawing.Size> e <xref:System.Windows.Forms.TextFormatFlags> parametro, come illustrato nell'esempio.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> e <xref:System.Windows.Forms.TextRenderer.DrawText%2A> metodi per disegnare una singola riga di testo in diversi stili di carattere. Per eseguire questo esempio incollando il codice seguente in un Windows Form e chiamare `DrawALineOfText` del form <xref:System.Windows.Forms.Control.Paint> gestore eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>