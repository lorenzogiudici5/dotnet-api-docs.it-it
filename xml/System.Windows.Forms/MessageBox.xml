<Type Name="MessageBox" FullName="System.Windows.Forms.MessageBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed3e050db04583c9bfb4106c1a421571a64f0b38" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30651485" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageBox extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MessageBox" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageBox" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Visualizza una finestra di messaggio, nota anche come finestra di dialogo, che presenta un messaggio all'utente. Si tratta di una finestra modale, che impedisce altre azioni nell'applicazione fino alla sua chiusura. Un oggetto <see cref="T:System.Windows.Forms.MessageBox" /> può contenere testo, pulsanti e simboli che forniscono istruzioni e informazioni all'utente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è possibile creare una nuova istanza di <xref:System.Windows.Forms.MessageBox> classe. Per visualizzare una finestra di messaggio, chiamare il `static` metodo <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>. Il titolo, messaggio, i pulsanti e le icone visualizzate nella finestra di messaggio sono determinate dai parametri passati a questo metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare un <xref:System.Windows.Forms.MessageBox> per informare l'utente di una voce mancante in un <xref:System.Windows.Forms.TextBox>. In questo esempio richiede che il metodo viene chiamato da un modulo esistente con un <xref:System.Windows.Forms.TextBox> denominato **ServerName** su di esso.  
  
 [!code-cpp[MessageBox.Show Variations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#1)]
 [!code-csharp[MessageBox.Show Variations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#1)]
 [!code-vb[MessageBox.Show Variations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#1)]  
  
 Esempio di codice seguente viene illustrato come richiedere all'utente una domanda Sì o no e prendere una decisione in base alla risposta.  
  
 [!code-cpp[Classic MessageBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MessageBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MessageBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MessageBox Example/CS/source.cs#1)]
 [!code-vb[Classic MessageBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MessageBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Visualizza una finestra di messaggio.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <summary>Visualizza una finestra di messaggio con il testo specificato.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, la finestra di messaggio viene visualizzato un **OK** pulsante. La finestra di messaggio non contiene una didascalia del titolo.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare una finestra di messaggio.  
  
 [!code-csharp[MessageBox.Show Variations#6](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#6)]
 [!code-vb[MessageBox.Show Variations#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre impostare questa proprietà. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <summary>Visualizza una finestra di messaggio con il testo e le didascalie specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, la finestra di messaggio viene visualizzato un **OK** pulsante.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implementazione di <see cref="T:System.Windows.Forms.IWin32Window" /> che sarà proprietaria della finestra di dialogo modale.</param>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <summary>Visualizza una finestra di messaggio davanti all'oggetto indicato e con il testo specificato.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il `owner` parametro per specificare un particolare oggetto che implementa il <xref:System.Windows.Forms.IWin32Window> interfaccia, che fungerà da finestra di primo livello e il proprietario della finestra di dialogo. Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Per impostazione predefinita, la finestra di messaggio viene visualizzato un **OK** pulsante. La finestra di messaggio non contiene una didascalia del titolo.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia e i pulsanti specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si può avere un massimo di tre pulsanti nella finestra di messaggio.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare un <xref:System.Windows.Forms.MessageBox> con le opzioni supportate da questo overload di <xref:System.Windows.Forms.MessageBox.Show%2A>. Dopo aver verificato che una variabile di stringa, `ServerName`, è vuota, viene visualizzato un <xref:System.Windows.Forms.MessageBox>, viene offerta all'utente la possibilità di annullare l'operazione. Se il <xref:System.Windows.Forms.MessageBox.Show%2A> valore restituito del metodo restituisce <xref:System.Windows.Forms.DialogResult.Yes>, il modulo che è visualizzato il <xref:System.Windows.Forms.MessageBox> è chiuso.  
  
 [!code-cpp[MessageBox.Show Variations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#1)]
 [!code-csharp[MessageBox.Show Variations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#1)]
 [!code-vb[MessageBox.Show Variations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il parametro <paramref name="buttons" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implementazione di <see cref="T:System.Windows.Forms.IWin32Window" /> che sarà proprietaria della finestra di dialogo modale.</param>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <summary>Visualizza una finestra di messaggio davanti all'oggetto specificato, con il testo e la didascalia specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il `owner` parametro per specificare un particolare oggetto che implementa il <xref:System.Windows.Forms.IWin32Window> interfaccia, che fungerà da finestra di primo livello e il proprietario della finestra di dialogo. Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Per impostazione predefinita, la finestra di messaggio viene visualizzato un **OK** pulsante.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti e l'icona specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si può avere un massimo di tre pulsanti nella finestra di messaggio.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra uno del <xref:System.Windows.Forms.MessageBox.Show%2A> metodi quando si gestisce il <xref:System.Windows.Forms.ComboBox.DropDown?displayProperty=nameWithType> evento. Per eseguire l'esempio, incollare il codice seguente in un form e chiamare il `InitializeComboBox` metodo dal costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il parametro <paramref name="buttons" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 Il parametro <paramref name="icon" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
      </Parameters>
      <Docs>
        <param name="owner">Implementazione di <see cref="T:System.Windows.Forms.IWin32Window" /> che sarà proprietaria della finestra di dialogo modale.</param>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <summary>Visualizza una finestra di messaggio davanti all'oggetto specificato, con il testo, la didascalia e i pulsanti specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il `owner` parametro per specificare un particolare oggetto che implementa il <xref:System.Windows.Forms.IWin32Window> interfaccia, che fungerà da finestra di primo livello e il proprietario della finestra di dialogo. Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Si può avere un massimo di tre pulsanti nella finestra di messaggio.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare un <xref:System.Windows.Forms.MessageBox> con le opzioni supportate da questo overload di <xref:System.Windows.Forms.MessageBox.Show%2A>. Dopo aver verificato che una variabile di stringa, `ServerName`, è vuota, viene visualizzato un <xref:System.Windows.Forms.MessageBox>, viene offerta all'utente la possibilità di annullare l'operazione. Se il <xref:System.Windows.Forms.MessageBox.Show%2A> valore restituito del metodo restituisce <xref:System.Windows.Forms.DialogResult.Yes>, il modulo che è visualizzato il <xref:System.Windows.Forms.MessageBox> è chiuso.  
  
 [!code-cpp[MessageBox.Show Variations#5](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#5)]
 [!code-csharp[MessageBox.Show Variations#5](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#5)]
 [!code-vb[MessageBox.Show Variations#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona e il pulsante predefinito specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si può avere un massimo di tre pulsanti nella finestra di messaggio.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare un <xref:System.Windows.Forms.MessageBox> con le opzioni supportate da questo overload di <xref:System.Windows.Forms.MessageBox.Show%2A>. Dopo aver verificato che una variabile di stringa, `ServerName`, è vuota, viene visualizzato un <xref:System.Windows.Forms.MessageBox> con un'icona domanda, offerta all'utente la possibilità di annullare l'operazione. Se il <xref:System.Windows.Forms.MessageBox.Show%2A> valore restituito del metodo restituisce <xref:System.Windows.Forms.DialogResult.Yes>, il modulo che è visualizzato il <xref:System.Windows.Forms.MessageBox> è chiuso.  
  
 [!code-cpp[MessageBox.Show Variations#3](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#3)]
 [!code-csharp[MessageBox.Show Variations#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#3)]
 [!code-vb[MessageBox.Show Variations#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 <paramref name="defaultButton" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
      </Parameters>
      <Docs>
        <param name="owner">Implementazione di <see cref="T:System.Windows.Forms.IWin32Window" /> che sarà proprietaria della finestra di dialogo modale.</param>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <summary>Visualizza una finestra di messaggio davanti all'oggetto specificato, con il testo, la didascalia, i pulsanti e l'icona specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il `owner` parametro per specificare un particolare oggetto che implementa il <xref:System.Windows.Forms.IWin32Window> interfaccia, che fungerà da finestra di primo livello e il proprietario della finestra di dialogo. Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Si può avere un massimo di tre pulsanti nella finestra di messaggio.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare un <xref:System.Windows.Forms.MessageBox> con le opzioni supportate da questo overload di <xref:System.Windows.Forms.MessageBox.Show%2A>. Dopo aver verificato che una variabile di stringa, `ServerName`, è vuota, viene visualizzato un <xref:System.Windows.Forms.MessageBox>, viene offerta all'utente la possibilità di annullare l'operazione. Se il <xref:System.Windows.Forms.MessageBox.Show%2A> valore restituito del metodo restituisce <xref:System.Windows.Forms.DialogResult.Yes>, il modulo che è visualizzato il <xref:System.Windows.Forms.MessageBox> è chiuso.  
  
 [!code-cpp[MessageBox.Show Variations#4](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#4)]
 [!code-csharp[MessageBox.Show Variations#4](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#4)]
 [!code-vb[MessageBox.Show Variations#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona, il pulsante predefinito e le opzioni specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si può avere un massimo di tre pulsanti nella finestra di messaggio.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare un <xref:System.Windows.Forms.MessageBox> con le opzioni supportate da questo overload di <xref:System.Windows.Forms.MessageBox.Show%2A>. Dopo aver verificato che una variabile di stringa, `ServerName`, è vuota, viene visualizzato un <xref:System.Windows.Forms.MessageBox> con un'icona domanda, offerta all'utente la possibilità di annullare l'operazione. Nell'esempio viene utilizzato il <xref:System.Windows.Forms.MessageBoxOptions.RightAlign> appartenente il <xref:System.Windows.Forms.MessageBoxOptions> enumerazione per allineare il testo al bordo destro della finestra di dialogo. Se il <xref:System.Windows.Forms.MessageBox.Show%2A> valore restituito del metodo restituisce <xref:System.Windows.Forms.DialogResult.Yes>, il modulo che è visualizzato il <xref:System.Windows.Forms.MessageBox> è chiuso.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 Il parametro <paramref name="defaultButton" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
      </Parameters>
      <Docs>
        <param name="owner">Implementazione di <see cref="T:System.Windows.Forms.IWin32Window" /> che sarà proprietaria della finestra di dialogo modale.</param>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <summary>Visualizza una finestra di messaggio davanti all'oggetto specificato, con il testo, la didascalia, i pulsanti, l'icona e il pulsante predefinito specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il `owner` parametro per specificare un particolare oggetto che implementa il <xref:System.Windows.Forms.IWin32Window> interfaccia, che fungerà da finestra di primo livello e il proprietario della finestra di dialogo. Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Si può avere un massimo di tre pulsanti nella finestra di messaggio.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare un <xref:System.Windows.Forms.MessageBox> con le opzioni supportate da questo overload di <xref:System.Windows.Forms.MessageBox.Show%2A>. Dopo aver verificato che una variabile di stringa, `ServerName`, è vuota, viene visualizzato un <xref:System.Windows.Forms.MessageBox>, viene offerta all'utente la possibilità di annullare l'operazione. Se il <xref:System.Windows.Forms.MessageBox.Show%2A> valore restituito del metodo restituisce <xref:System.Windows.Forms.DialogResult.Yes>, il modulo che è visualizzato il <xref:System.Windows.Forms.MessageBox> è chiuso.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 <paramref name="defaultButton" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, bool displayHelpButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, bool displayHelpButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, displayHelpButton As Boolean) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, bool displayHelpButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="displayHelpButton" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <param name="displayHelpButton">
          <see langword="true" /> per visualizzare il pulsante ?; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona, il pulsante predefinito, le opzioni e il pulsante ? specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Quando l'utente fa clic sul pulsante della Guida, il modulo che possiede la finestra di messaggio (o il form attivo) riceve il <xref:System.Windows.Forms.Control.HelpRequested> evento. Gestire il <xref:System.Windows.Forms.Control.HelpRequested> evento per eseguire azioni personalizzate di Guida.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come visualizzare una finestra di messaggio con un pulsante della Guida, gestire il <xref:System.Windows.Forms.Control.HelpRequested?displayProperty=nameWithType> evento e Mostra una finestra della Guida personalizzata in risposta all'evento.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 Il parametro <paramref name="defaultButton" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <param name="helpFilePath">Percorso e nome del file della Guida da visualizzare quando l'utente sceglie il pulsante ?.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona, il pulsante predefinito, le opzioni e il pulsante ? specificati, usando il file della Guida desiderato.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Quando l'utente fa clic sul pulsante della Guida, il file della Guida specificata nella `helpFilePath` parametro viene aperto. Il form a cui appartiene la finestra di messaggio (o il form attivo) riceve anche la <xref:System.Windows.Forms.Control.HelpRequested> evento.  
  
 Il `helpFilePath` parametro può essere del form C:\path\sample.chm o /cartella/file.htm.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare una finestra di messaggio con il pulsante?. Quando l'utente fa clic sul pulsante Guida il `Mspaint.chm` viene aperto il file della Guida. Nell'esempio si presuppone che il `Mspaint.chm` file della Guida è installato.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 Il parametro <paramref name="defaultButton" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Per accedere a un file della Guida HTML tramite una richiesta HTTP. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per accedere a un file della Guida HTML non servito da un server HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
      </Parameters>
      <Docs>
        <param name="owner">Implementazione di <see cref="T:System.Windows.Forms.IWin32Window" /> che sarà proprietaria della finestra di dialogo modale.</param>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <summary>Visualizza una finestra di messaggio davanti all'oggetto specificato, con il testo, la didascalia, i pulsanti l'icona, il pulsante predefinito e le opzioni specificati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il `owner` parametro per specificare un particolare oggetto che implementa il <xref:System.Windows.Forms.IWin32Window> interfaccia, che fungerà da finestra di primo livello e il proprietario della finestra di dialogo. Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Si può avere un massimo di tre pulsanti nella finestra di messaggio.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare un <xref:System.Windows.Forms.MessageBox> con le opzioni supportate da questo overload di <xref:System.Windows.Forms.MessageBox.Show%2A>. Dopo aver verificato che una variabile di stringa, `ServerName`, è vuota, viene visualizzato un <xref:System.Windows.Forms.MessageBox>, viene offerta all'utente la possibilità di annullare l'operazione. Se il <xref:System.Windows.Forms.MessageBox.Show%2A> valore restituito del metodo restituisce <xref:System.Windows.Forms.DialogResult.Yes>, il modulo che è visualizzato il <xref:System.Windows.Forms.MessageBox> è chiuso.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 <paramref name="defaultButton" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="options" /> ha specificato <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> o <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" /> e un valore nel parametro <paramref name="owner" />. Queste due opzioni vanno usate solo se si richiama la versione di questo metodo che non accetta un parametro <paramref name="owner" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, keyword As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <param name="helpFilePath">Percorso e nome del file della Guida da visualizzare quando l'utente sceglie il pulsante ?.</param>
        <param name="keyword">Parola chiave della Guida visualizzata quando l'utente fa clic sul pulsante ?.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona, il pulsante predefinito, le opzioni e il pulsante ? specificati, usando il file della Guida e la parola chiave della Guida desiderati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Quando l'utente fa clic sul pulsante della Guida, il file della Guida specificata nella `helpFilePath` parametro è aperto e l'argomento della parola chiave identificate il `keyword` parametro viene visualizzato. Il form a cui appartiene la finestra di messaggio (o il form attivo) riceve anche la <xref:System.Windows.Forms.Control.HelpRequested> evento.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare una finestra di messaggio con il pulsante?. Quando l'utente fa clic sul pulsante Guida il `Mspaint.chm` viene aperto il file della Guida in linea e l'argomento identificato dal `mspaint.chm::/paint_brush.htm` parola chiave viene visualizzata. Nell'esempio si presuppone che il `Mspaint.chm` file della Guida è installato.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#9)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#9)]
[!code-vb[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 Il parametro <paramref name="defaultButton" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Per accedere a un file della Guida HTML tramite una richiesta HTTP. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per accedere a un file della Guida HTML non servito da un server HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <param name="helpFilePath">Percorso e nome del file della Guida da visualizzare quando l'utente sceglie il pulsante ?.</param>
        <param name="navigator">Uno dei valori di <see cref="T:System.Windows.Forms.HelpNavigator" />.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona, il pulsante predefinito, le opzioni e il pulsante ? specificati, usando il file della Guida desiderato e <see langword="HelpNavigator" />.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Quando l'utente fa clic sul pulsante della Guida, il file della Guida specificata nella `helpFilePath` parametro è aperto e il contenuto della Guida identificato dal `navigator` parametro viene visualizzato. Il form a cui appartiene la finestra di messaggio (o il form attivo) riceve anche la <xref:System.Windows.Forms.Control.HelpRequested> evento.  
  
 Della Guida compilati i file forniscono sommario, indice, ricerca e collegamenti (parola chiave) nelle pagine. È possibile utilizzare i valori seguenti per `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, o <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 Il `helpFilePath` parametro può essere del form C:\path\sample.chm o /cartella/file.htm.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare una finestra di messaggio con il pulsante?. Quando l'utente fa clic sul pulsante Guida il `Mspaint.chm` viene aperto il file della Guida in linea e viene visualizzata la scheda di indice della Guida. Nell'esempio si presuppone che il `Mspaint.chm` file della Guida è installato.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#5)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#5)]
[!code-vb[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 Il parametro <paramref name="defaultButton" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Per accedere a un file della Guida HTML tramite una richiesta HTTP. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per accedere a un file della Guida HTML non servito da un server HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implementazione di <see cref="T:System.Windows.Forms.IWin32Window" /> che sarà proprietaria della finestra di dialogo modale.</param>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <param name="helpFilePath">Percorso e nome del file della Guida da visualizzare quando l'utente sceglie il pulsante ?.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona, il pulsante predefinito, le opzioni e il pulsante ? specificati, usando il file della Guida desiderato.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato. È possibile utilizzare il `owner` parametro per specificare un particolare oggetto che implementa il <xref:System.Windows.Forms.IWin32Window> interfaccia, che fungerà da finestra di primo livello e il proprietario della finestra di dialogo.  
  
 Quando l'utente fa clic sul pulsante della Guida, il file della Guida specificata nella `helpFilePath` parametro viene aperto. Il form a cui appartiene la finestra di messaggio (o il form attivo) riceve anche la <xref:System.Windows.Forms.Control.HelpRequested> evento.  
  
 Il `helpFilePath` parametro può essere del form C:\path\sample.chm o /cartella/file.htm.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare una finestra di messaggio associato al form principale. La finestra di messaggio viene visualizzato un pulsante della Guida. Quando l'utente fa clic sul pulsante Guida il `Mspaint.chm` viene aperto il file della Guida. Nell'esempio si presuppone che il `Mspaint.chm` file della Guida è installato.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#4)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#4)]
[!code-vb[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 Il parametro <paramref name="defaultButton" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Per accedere a un file della Guida HTML tramite una richiesta HTTP. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per accedere a un file della Guida HTML non servito da un server HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator, object param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator, object param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator, param As Object) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator, System::Object ^ param);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
        <Parameter Name="param" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <param name="helpFilePath">Percorso e nome del file della Guida da visualizzare quando l'utente sceglie il pulsante ?.</param>
        <param name="navigator">Uno dei valori di <see cref="T:System.Windows.Forms.HelpNavigator" />.</param>
        <param name="param">ID numerico dell'argomento della Guida da visualizzare quando l'utente fa clic sul pulsante ?.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona, il pulsante predefinito, le opzioni e il pulsante ? specificati, usando il file della Guida, <see langword="HelpNavigator" /> e l'argomento della Guida desiderati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato.  
  
 Quando l'utente fa clic sul pulsante della Guida, il file della Guida specificata nella `helpFilePath` parametro è aperto e il contenuto della Guida identificato dal `navigator` parametro viene visualizzato. Il form a cui appartiene la finestra di messaggio (o il form attivo) riceve anche la <xref:System.Windows.Forms.Control.HelpRequested> evento.  
  
 Della Guida compilati i file forniscono sommario, indice, ricerca e collegamenti (parola chiave) nelle pagine. È possibile utilizzare i valori seguenti per `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, o <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 È possibile utilizzare `param` per circoscrivere il <xref:System.Windows.Forms.HelpNavigator.Topic> comando. Se il valore specificato nel `navigator` parametro <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Index>, o <xref:System.Windows.Forms.HelpNavigator.Find>, questo valore deve essere `null`. Se il `navigator` riferimenti ai parametri <xref:System.Windows.Forms.HelpNavigator.Topic>, questo valore deve fare riferimento a un oggetto che contiene il valore numerico dell'argomento da visualizzare.  
  
 Il `helpFilePath` parametro può essere del form C:\path\sample.chm o /cartella/file.htm.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare una finestra di messaggio con il pulsante?. Quando l'utente fa clic sul pulsante Guida il `Mspaint.chm` Help file viene aperto e la scheda di indice della Guida e l'argomento identificato dal `ovals` (parola chiave) vengono visualizzati. Nell'esempio si presuppone che il `Mspaint.chm` file della Guida è installato.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#7)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#7)]
[!code-vb[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 Il parametro <paramref name="defaultButton" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Per accedere a un file della Guida HTML tramite una richiesta HTTP. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per accedere a un file della Guida HTML non servito da un server HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, keyword As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implementazione di <see cref="T:System.Windows.Forms.IWin32Window" /> che sarà proprietaria della finestra di dialogo modale.</param>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <param name="helpFilePath">Percorso e nome del file della Guida da visualizzare quando l'utente sceglie il pulsante ?.</param>
        <param name="keyword">Parola chiave della Guida visualizzata quando l'utente fa clic sul pulsante ?.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona, il pulsante predefinito, le opzioni e il pulsante ? specificati, usando il file della Guida e la parola chiave della Guida desiderati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato. È possibile utilizzare il `owner` parametro per specificare un particolare oggetto che implementa il <xref:System.Windows.Forms.IWin32Window> interfaccia, che verrà utilizzato come proprietario di livello superiore della finestra di dialogo.  
  
 Quando l'utente fa clic sul pulsante della Guida, il file della Guida specificata nella `helpFilePath` parametro è aperto e l'argomento della parola chiave identificate il `keyword` parametro viene visualizzato. Il form a cui appartiene la finestra di messaggio (o il form attivo) riceve anche la <xref:System.Windows.Forms.Control.HelpRequested> evento.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare una finestra di messaggio come elemento padre della finestra principale. La finestra di messaggio viene visualizzato un pulsante della Guida. Quando l'utente fa clic sul pulsante Guida il `Mspaint.chm` viene aperto il file della Guida in linea e l'argomento identificato dal `mspaint.chm::/paint_brush.htm` parola chiave viene visualizzata. Nell'esempio si presuppone che il `Mspaint.chm` file della Guida è installato.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#10)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#10)]
[!code-vb[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 Il parametro <paramref name="defaultButton" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Per accedere a un file della Guida HTML tramite una richiesta HTTP. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per accedere a un file della Guida HTML non servito da un server HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
      </Parameters>
      <Docs>
        <param name="owner">Implementazione di <see cref="T:System.Windows.Forms.IWin32Window" /> che sarà proprietaria della finestra di dialogo modale.</param>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <param name="helpFilePath">Percorso e nome del file della Guida da visualizzare quando l'utente sceglie il pulsante ?.</param>
        <param name="navigator">Uno dei valori di <see cref="T:System.Windows.Forms.HelpNavigator" />.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona, il pulsante predefinito, le opzioni e il pulsante ? specificati, usando il file della Guida desiderato e <see langword="HelpNavigator" />.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato. È possibile utilizzare il `owner` parametro per specificare un particolare oggetto che implementa il <xref:System.Windows.Forms.IWin32Window> interfaccia, che fungerà da finestra di primo livello e il proprietario della finestra di dialogo.  
  
 Quando l'utente fa clic sul pulsante della Guida, il file della Guida specificata nella `helpFilePath` parametro è aperto e il contenuto della Guida identificato dal `navigator` parametro viene visualizzato. Il form a cui appartiene la finestra di messaggio (o il form attivo) riceve anche la <xref:System.Windows.Forms.Control.HelpRequested> evento.  
  
 Della Guida compilati i file forniscono sommario, indice, ricerca e collegamenti (parola chiave) nelle pagine. È possibile utilizzare i valori seguenti per `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, o <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 Il `helpFilePath` parametro può essere del form C:\path\sample.chm o /cartella/file.htm.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare una finestra di messaggio come elemento padre della finestra principale. La finestra di messaggio viene visualizzato un pulsante della Guida. Quando l'utente fa clic sul pulsante Guida il `Mspaint.chm` viene aperto il file della Guida in linea e viene visualizzata la scheda di indice della Guida. Nell'esempio si presuppone che il `Mspaint.chm` file della Guida è installato.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#6)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#6)]
[!code-vb[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 Il parametro <paramref name="defaultButton" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Per accedere a un file della Guida HTML tramite una richiesta HTTP. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per accedere a un file della Guida HTML non servito da un server HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator, object param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator, object param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator, param As Object) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator, System::Object ^ param);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
        <Parameter Name="param" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="owner">Implementazione di <see cref="T:System.Windows.Forms.IWin32Window" /> che sarà proprietaria della finestra di dialogo modale.</param>
        <param name="text">Testo da visualizzare nella finestra di messaggio.</param>
        <param name="caption">Testo da visualizzare nella barra del titolo della finestra di messaggio.</param>
        <param name="buttons">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxButtons" /> che specifica i pulsanti da visualizzare nella finestra di messaggio.</param>
        <param name="icon">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxIcon" /> che specifica l'icona da visualizzare nella finestra di messaggio.</param>
        <param name="defaultButton">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> che specifica il pulsante predefinito per la finestra di messaggio.</param>
        <param name="options">Uno dei valori di <see cref="T:System.Windows.Forms.MessageBoxOptions" /> che specifica le opzioni di visualizzazione e di associazione da usare per la finestra di messaggio. Per usare le impostazioni predefinite, è possibile passare il valore 0.</param>
        <param name="helpFilePath">Percorso e nome del file della Guida da visualizzare quando l'utente sceglie il pulsante ?.</param>
        <param name="navigator">Uno dei valori di <see cref="T:System.Windows.Forms.HelpNavigator" />.</param>
        <param name="param">ID numerico dell'argomento della Guida da visualizzare quando l'utente fa clic sul pulsante ?.</param>
        <summary>Visualizza una finestra di messaggio con il testo, la didascalia, i pulsanti, l'icona, il pulsante predefinito, le opzioni e il pulsante ? specificati, usando il file della Guida, <see langword="HelpNavigator" /> e l'argomento della Guida desiderati.</summary>
        <returns>Uno dei valori di <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una finestra di messaggio è una finestra di dialogo modale, ovvero che nessun input (clic con il mouse o tastiera) può verificarsi, ad eccezione per gli oggetti nel form modale. Il programma deve nascondere o chiudere il form modale (in genere in risposta a un'operazione dell'utente) prima di input in un altro formato. È possibile utilizzare il `owner` parametro per specificare un particolare oggetto che implementa il <xref:System.Windows.Forms.IWin32Window> interfaccia, che fungerà da finestra di primo livello e il proprietario della finestra di dialogo.  
  
 Quando l'utente fa clic sul pulsante della Guida, il file della Guida specificata nella `helpFilePath` parametro è aperto e il contenuto della Guida identificato dal `navigator` parametro viene visualizzato. Il form a cui appartiene la finestra di messaggio (o il form attivo) riceve anche la <xref:System.Windows.Forms.Control.HelpRequested> evento.  
  
 Della Guida compilati i file forniscono sommario, indice, ricerca e collegamenti (parola chiave) nelle pagine. È possibile utilizzare i valori seguenti per `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, o <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 È possibile utilizzare `param` per circoscrivere il <xref:System.Windows.Forms.HelpNavigator.Topic> comando. Se il valore specificato nel `navigator` parametro <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Index>, o <xref:System.Windows.Forms.HelpNavigator.Find>, questo valore deve essere `null`. Se il `navigator` riferimenti ai parametri <xref:System.Windows.Forms.HelpNavigator.Topic>, questo valore deve fare riferimento a un oggetto che contiene il valore numerico dell'argomento da visualizzare.  
  
 Il `helpFilePath` parametro può essere del form C:\path\sample.chm o /cartella/file.htm.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare una finestra di messaggio come elemento padre della finestra principale. La finestra di messaggio viene visualizzato un pulsante della Guida. Quando l'utente fa clic sul pulsante Guida il `Mspaint.chm` Help file viene aperto e la scheda di indice della Guida e l'argomento identificato dal `ovals` (parola chiave) vengono visualizzati. Nell'esempio si presuppone che il `Mspaint.chm` file della Guida è installato.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#8)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#8)]
[!code-vb[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 oppure  
  
 <paramref name="icon" /> non è un membro di <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 oppure  
  
 Il parametro <paramref name="defaultButton" /> specificato non è un membro di <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Si è verificato un tentativo di visualizzare il controllo <see cref="T:System.Windows.Forms.MessageBox" /> in un processo non in esecuzione in modalità Interazione utente. Questa modalità è specificata dalla proprietà <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> ha specificato sia <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> sia <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 oppure  
  
 <paramref name="buttons" /> ha specificato una combinazione non valida di <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">per le sottofinestre chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Per accedere a un file della Guida HTML tramite una richiesta HTTP. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Per accedere a un file della Guida HTML non servito da un server HTTP. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
  </Members>
</Type>