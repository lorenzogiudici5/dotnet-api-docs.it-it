<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ControlStyles.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cc33f394b9675cc633b116b6039a1f3d0d639c2f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc33f394b9675cc633b116b6039a1f3d0d639c2f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ControlStyles">
          <source>Specifies the style and behavior of a control.</source>
          <target state="translated">Specifica lo stile e il comportamento di un controllo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Controls use this enumeration in various properties and methods to specify functionality.</source>
          <target state="translated">Controlli di utilizzare questa enumerazione in varie proprietà e metodi per specificare le funzionalità.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>A control can enable a style by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (or bits) and the Boolean value to set the bit(s) to.</source>
          <target state="translated">Un controllo è possibile attivare uno stile chiamando il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> metodo e passando l'oggetto appropriato <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (o bits) e il valore booleano per impostare i bit.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>For example, the following line of Visual Basic code would enable double-buffering.</source>
          <target state="translated">Ad esempio, la seguente riga di codice Visual Basic consentirebbe il doppio buffer.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If the AllPaintingInWmPaint bit is set to <ph id="ph1">`true`</ph>, the window message WM_ERASEBKGND is ignored, and both <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> methods are called directly from the window message WM_PAINT.</source>
          <target state="translated">Se il bit AllPaintingInWmPaint è impostato su <ph id="ph1">`true`</ph>, la finestra di messaggio WM_ERASEBKGND verrà ignorata ed entrambi <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> metodi vengono chiamati direttamente dalla finestra di messaggio WM_PAINT.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</source>
          <target state="translated">In genere una riduzione dello sfarfallio a meno che altri controlli di inviano il messaggio della finestra WM_ERASEBKGND al controllo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> with flat appearance does this.</source>
          <target state="translated">È possibile inviare il messaggio della finestra WM_ERASEBKGRND per ottenere un effetto pseudo-trasparente simile a SupportsTransparentBackColor; ad esempio, un <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> con piatta esegue questa operazione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Per abilitare completamente il doppio buffer, è possibile impostare i bit OptimizedDoubleBuffer e AllPaintingInWmPaint <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>However the preferred method for enabling double buffering, which yields the same result, is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> property for the control to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Tuttavia il metodo preferito per l'abilitazione del doppio buffer, che restituisce lo stesso risultato, consiste nell'impostare il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> proprietà per il controllo <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If the SupportsTransparentBackColor bit is set to <ph id="ph1">`true`</ph>, and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> is set to a color whose alpha component is less than 255, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> will simulate transparency by asking its parent control to paint the background.</source>
          <target state="translated">Se il bit SupportsTransparentBackColor è impostato su <ph id="ph1">`true`</ph>e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> è impostata su un colore il cui componente alfa è minore di 255, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> consente di simulare la trasparenza richiedendo al relativo controllo padre per disegnare lo sfondo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This is not true transparency.</source>
          <target state="translated">Non si tratta di trasparenza vera e propria.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If there is another control between the control and its parent, the current control will not show the control in the middle.</source>
          <target state="translated">Se è presente un altro controllo tra il controllo e il relativo elemento padre, il controllo corrente non visualizzerà il controllo al centro.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the UserMouse bit is set to <ph id="ph1">`true`</ph>, the following methods are still called: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph8">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Quando il bit UserMouse è impostato su <ph id="ph1">`true`</ph>, sono ancora chiamare i seguenti metodi: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph8">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the control is clicked, if the StandardClick bit is set to <ph id="ph1">`true`</ph> the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType&gt;</ph> method is called and it raises the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Quando il controllo è selezionato, se il bit StandardClick è impostato su <ph id="ph1">`true`</ph> il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType&gt;</ph> metodo viene chiamato e viene generato il <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to <ph id="ph1">`true`</ph>, the click is passed on to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.</source>
          <target state="translated">Quando si fa doppio clic il controllo e StandardClick sia StandardDoubleClick bit vengono impostati su <ph id="ph1">`true`</ph>, fare clic su viene passato al <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Then the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType&gt;</ph> method is called and it raises the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType&gt;</ph> metodo viene chiamato e viene generato il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>However, the control can call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> directly regardless of the StandardClick and StandardDoubleClick bit values.</source>
          <target state="translated">Tuttavia, il controllo può chiamare <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> direttamente indipendentemente dal fatto di StandardClick e StandardDoubleClick valori di bit.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>For more information on control click and double click behaviors, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> topics.</source>
          <target state="translated">Per ulteriori informazioni sul controllo fare clic su e fare doppio clic su comportamenti, vedere il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> argomenti.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the UseTextForAccessibility bit is set and there is a value in the control's <ph id="ph1">`Text`</ph> property, the value of that control's <ph id="ph2">`Text`</ph> property determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">Quando viene impostato il bit UseTextForAccessibility e non vi è un valore del controllo <ph id="ph1">`Text`</ph> proprietà, il valore di tale controllo <ph id="ph2">`Text`</ph> proprietà determina tasto Active Accessibility predefiniti nome e la scelta rapida del controllo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Otherwise, the text of the preceding <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> control will be used instead.</source>
          <target state="translated">In caso contrario, il testo dell'oggetto precedente <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> controllo verrà utilizzato invece.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This style is set by default.</source>
          <target state="translated">Questo stile è impostato per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Certain built-in control types, such as <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, reset this style so that the <ph id="ph3">`Text`</ph> property of those controls will not be used by Active Accessibility.</source>
          <target state="translated">Tipi di controllo incorporato, ad esempio <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, reimpostare questo stile in modo che il <ph id="ph3">`Text`</ph> proprietà di tali controlli non essere utilizzata da Active Accessibility.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>The following example demonstrates a use of <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event.</source>
          <target state="translated">Nell'esempio seguente viene illustrato un utilizzo di <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> con il <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Inheriting from a standard Windows Forms control and changing the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /&gt;</ph> bit values to <ph id="ph3">&lt;see langword="true" /&gt;</ph> can cause unexpected behavior or can have no effect at all if the control does not support the <ph id="ph4">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> events.</source>
          <target state="translated">Eredità da un controllo Windows Form standard e la modifica di <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> o <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /&gt;</ph> bit di valori da <ph id="ph3">&lt;see langword="true" /&gt;</ph> può causare un comportamento imprevisto o non può avere alcun effetto se il controllo non supporta il <ph id="ph4">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> o <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control ignores the window message WM_ERASEBKGND to reduce flicker.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo ignora il messaggio finestra WM_ERASEBKGND per ridurre lo sfarfallio.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint">
          <source>This style should only be applied if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Questo stile deve essere applicato solo se il bit di <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> è impostato su <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control keeps a copy of the text rather than getting it from the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> each time it is needed.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo mantiene una copia del testo anziché ottenerlo dalla proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> ogni volta che è necessario.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>This style defaults to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito per questo stile è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>This behavior improves performance, but makes it difficult to keep the text synchronized.</source>
          <target state="translated">Questo comportamento migliora le prestazioni, ma rende difficile mantenere il testo sincronizzato.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.ContainerControl">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is a container-like control.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo è un controllo simile a un contenitore.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, drawing is performed in a buffer, and after it completes, the result is output to the screen.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il disegno viene eseguito in un buffer e, una volta completato, il risultato viene inviato allo schermo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>Double-buffering prevents flicker caused by the redrawing of the control.</source>
          <target state="translated">Il doppio buffer impedisce lo sfarfallio causato dal ridisegno del controllo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>If you set <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph>, you should also set <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> and <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> to <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se si imposta <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /&gt;</ph> su <ph id="ph2">&lt;see langword="true" /&gt;</ph>, è necessario impostare anche <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> e <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> su <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> method is called for every message sent to the control's <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il metodo <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> viene chiamato per ogni messaggio inviato al metodo <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph> del controllo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source>This style defaults to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito per questo stile è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /&gt;</ph> does not work in partial trust.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /&gt;</ph> non funziona con l'attendibilità parziale.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedHeight">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control has a fixed height when auto-scaled.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo ha una altezza fissa quando viene eseguito il ridimensionamento automatico.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedHeight">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> remains unchanged.</source>
          <target state="translated">Ad esempio, se un'operazione di layout tenta di ridimensionare il controllo per contenere un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, la proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> del controllo rimane invariata.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedWidth">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control has a fixed width when auto-scaled.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo ha una larghezza fissa quando viene eseguito il ridimensionamento automatico.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedWidth">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> remains unchanged.</source>
          <target state="translated">Ad esempio, se un'operazione di layout tenta di ridimensionare il controllo per contenere un nuovo oggetto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, la proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> del controllo rimane invariata.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.Opaque">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is drawn opaque and the background is not painted.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo viene disegnato opaco e lo sfondo non viene disegnato.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo prima viene disegnato in un buffer anziché direttamente sullo schermo, in modo da ridurre lo sfarfallio.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer">
          <source>If you set this property to <ph id="ph1">&lt;see langword="true" /&gt;</ph>, you should also set the <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se si imposta questa proprietà su <ph id="ph1">&lt;see langword="true" /&gt;</ph>, è necessario impostare <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> su <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.ResizeRedraw">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is redrawn when it is resized.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo viene ridisegnato quando viene ridimensionato.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.Selectable">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control can receive focus.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo può ricevere lo stato attivo.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardClick">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control implements the standard <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> behavior.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo implementa il comportamento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> standard.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardDoubleClick">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control implements the standard <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> behavior.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo implementa il comportamento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> standard.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardDoubleClick">
          <source>This style is ignored if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> bit is not set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Questo stile viene ignorato se il bit di <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> non è impostato su <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control accepts a <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> with an alpha component of less than 255 to simulate transparency.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo accetta una proprietà <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> con un componente alfa minore di 255 per simulare la trasparenza.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor">
          <source>Transparency will be simulated only if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the parent control is derived from <ph id="ph3">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">La trasparenza verrà simulata solo se il bit di <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> viene impostato su <ph id="ph2">&lt;see langword="true" /&gt;</ph> e il controllo padre è derivato da <ph id="ph3">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserMouse">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control does its own mouse processing, and mouse events are not handled by the operating system.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo esegue autonomamente l'elaborazione del mouse e gli eventi del mouse non vengono gestiti dal sistema operativo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control paints itself rather than the operating system doing so.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il controllo si disegna da solo anziché essere disegnato dal sistema operativo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event is not raised.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="false" /&gt;</ph>, l'evento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> non viene generato.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>This style only applies to classes derived from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">Questo stile si applica solo alle classi derivate da <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility">
          <source>Specifies that the value of the control's <bpt id="p1">&lt;c&gt;</bpt>Text<ept id="p1">&lt;/c&gt;</ept> property, if set, determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">Specifica che il valore della proprietà <bpt id="p1">&lt;c&gt;</bpt>Text<ept id="p1">&lt;/c&gt;</ept> del controllo, se impostato, determina il tasto di scelta rapida e il nome Active Accessibility predefiniti del controllo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>