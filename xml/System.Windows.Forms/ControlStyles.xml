<Type Name="ControlStyles" FullName="System.Windows.Forms.ControlStyles">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc33f394b9675cc633b116b6039a1f3d0d639c2f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30639345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ControlStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ControlStyles extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlStyles" />
  <TypeSignature Language="VB.NET" Value="Public Enum ControlStyles" />
  <TypeSignature Language="C++ CLI" Value="public enum class ControlStyles" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica lo stile e il comportamento di un controllo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlli di utilizzare questa enumerazione in varie proprietà e metodi per specificare le funzionalità. Un controllo è possibile attivare uno stile chiamando il <xref:System.Windows.Forms.Control.SetStyle%2A> metodo e passando l'oggetto appropriato <xref:System.Windows.Forms.ControlStyles> bit (o bits) e il valore booleano per impostare i bit. Ad esempio, la seguente riga di codice Visual Basic consentirebbe il doppio buffer.  
  
```  
myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  
```  
  
 Se il bit AllPaintingInWmPaint è impostato su `true`, la finestra di messaggio WM_ERASEBKGND verrà ignorata ed entrambi <xref:System.Windows.Forms.Control.OnPaintBackground%2A> e <xref:System.Windows.Forms.Control.OnPaint%2A> metodi vengono chiamati direttamente dalla finestra di messaggio WM_PAINT. In genere una riduzione dello sfarfallio a meno che altri controlli di inviano il messaggio della finestra WM_ERASEBKGND al controllo. È possibile inviare il messaggio della finestra WM_ERASEBKGRND per ottenere un effetto pseudo-trasparente simile a SupportsTransparentBackColor; ad esempio, un <xref:System.Windows.Forms.ToolBar> con piatta esegue questa operazione.  
  
 Per abilitare completamente il doppio buffer, è possibile impostare i bit OptimizedDoubleBuffer e AllPaintingInWmPaint `true`. Tuttavia il metodo preferito per l'abilitazione del doppio buffer, che restituisce lo stesso risultato, consiste nell'impostare il <xref:System.Windows.Forms.Control.DoubleBuffered%2A> proprietà per il controllo `true`.  
  
 Se il bit SupportsTransparentBackColor è impostato su `true`e <xref:System.Windows.Forms.Control.BackColor%2A> è impostata su un colore il cui componente alfa è minore di 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> consente di simulare la trasparenza richiedendo al relativo controllo padre per disegnare lo sfondo. Non si tratta di trasparenza vera e propria.  
  
> [!NOTE]
>  Se è presente un altro controllo tra il controllo e il relativo elemento padre, il controllo corrente non visualizzerà il controllo al centro.  
  
 Quando il bit UserMouse è impostato su `true`, sono ancora chiamare i seguenti metodi: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, e <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.  
  
 Quando il controllo è selezionato, se il bit StandardClick è impostato su `true` il <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> metodo viene chiamato e viene generato il <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> evento. Quando si fa doppio clic il controllo e StandardClick sia StandardDoubleClick bit vengono impostati su `true`, fare clic su viene passato al <xref:System.Windows.Forms.Control.DoubleClick> evento. Il <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> metodo viene chiamato e viene generato il <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> evento. Tuttavia, il controllo può chiamare <xref:System.Windows.Forms.Control.OnClick%2A> o <xref:System.Windows.Forms.Control.OnDoubleClick%2A> direttamente indipendentemente dal fatto di StandardClick e StandardDoubleClick valori di bit. Per ulteriori informazioni sul controllo fare clic su e fare doppio clic su comportamenti, vedere il <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> e <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> argomenti.  
  
 Quando viene impostato il bit UseTextForAccessibility e non vi è un valore del controllo `Text` proprietà, il valore di tale controllo `Text` proprietà determina tasto Active Accessibility predefiniti nome e la scelta rapida del controllo. In caso contrario, il testo dell'oggetto precedente <xref:System.Windows.Forms.Label> controllo verrà utilizzato invece. Questo stile è impostato per impostazione predefinita. Tipi di controllo incorporato, ad esempio <xref:System.Windows.Forms.TextBox> e <xref:System.Windows.Forms.ComboBox>, reimpostare questo stile in modo che il `Text` proprietà di tali controlli non essere utilizzata da Active Accessibility.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un utilizzo di <xref:System.Windows.Forms.ControlStyles> con il <xref:System.Windows.Forms.Control.StyleChanged> evento.  
  
 [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]
 [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]
 [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Eredità da un controllo Windows Form standard e la modifica di <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> o <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit di valori da <see langword="true" /> può causare un comportamento imprevisto o non può avere alcun effetto se il controllo non supporta il <see cref="E:System.Windows.Forms.Control.Click" /> o <see cref="E:System.Windows.Forms.Control.DoubleClick" /> eventi.</para>
    </block>
    <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
  </Docs>
  <Members>
    <Member MemberName="AllPaintingInWmPaint">
      <MemberSignature Language="C#" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles AllPaintingInWmPaint = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberSignature Language="VB.NET" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="C++ CLI" Value="AllPaintingInWmPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo ignora il messaggio finestra WM_ERASEBKGND per ridurre lo sfarfallio. Questo stile deve essere applicato solo se il bit di <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> è impostato su <see langword="true" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="CacheText">
      <MemberSignature Language="C#" Value="CacheText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles CacheText = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.CacheText" />
      <MemberSignature Language="VB.NET" Value="CacheText" />
      <MemberSignature Language="C++ CLI" Value="CacheText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo mantiene una copia del testo anziché ottenerlo dalla proprietà <see cref="P:System.Windows.Forms.Control.Handle" /> ogni volta che è necessario. Il valore predefinito per questo stile è <see langword="false" />. Questo comportamento migliora le prestazioni, ma rende difficile mantenere il testo sincronizzato.</summary>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="ContainerControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ContainerControl = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="ContainerControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo è un controllo simile a un contenitore.</summary>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffer">
      <MemberSignature Language="C#" Value="DoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles DoubleBuffer = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="DoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="DoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il disegno viene eseguito in un buffer e, una volta completato, il risultato viene inviato allo schermo. Il doppio buffer impedisce lo sfarfallio causato dal ridisegno del controllo. Se si imposta <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> su <see langword="true" />, è necessario impostare anche <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> e <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> su <see langword="true" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="EnableNotifyMessage">
      <MemberSignature Language="C#" Value="EnableNotifyMessage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles EnableNotifyMessage = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberSignature Language="VB.NET" Value="EnableNotifyMessage" />
      <MemberSignature Language="C++ CLI" Value="EnableNotifyMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il metodo <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> viene chiamato per ogni messaggio inviato al metodo <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> del controllo. Il valore predefinito per questo stile è <see langword="false" />. <see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> non funziona con l'attendibilità parziale.</summary>
      </Docs>
    </Member>
    <Member MemberName="FixedHeight">
      <MemberSignature Language="C#" Value="FixedHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedHeight = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberSignature Language="VB.NET" Value="FixedHeight" />
      <MemberSignature Language="C++ CLI" Value="FixedHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo ha una altezza fissa quando viene eseguito il ridimensionamento automatico. Ad esempio, se un'operazione di layout tenta di ridimensionare il controllo per contenere un nuovo oggetto <see cref="T:System.Drawing.Font" />, la proprietà <see cref="P:System.Windows.Forms.Control.Height" /> del controllo rimane invariata.</summary>
      </Docs>
    </Member>
    <Member MemberName="FixedWidth">
      <MemberSignature Language="C#" Value="FixedWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedWidth = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberSignature Language="VB.NET" Value="FixedWidth" />
      <MemberSignature Language="C++ CLI" Value="FixedWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo ha una larghezza fissa quando viene eseguito il ridimensionamento automatico. Ad esempio, se un'operazione di layout tenta di ridimensionare il controllo per contenere un nuovo oggetto <see cref="T:System.Drawing.Font" />, la proprietà <see cref="P:System.Windows.Forms.Control.Width" /> del controllo rimane invariata.</summary>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="C#" Value="Opaque" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Opaque = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Opaque" />
      <MemberSignature Language="VB.NET" Value="Opaque" />
      <MemberSignature Language="C++ CLI" Value="Opaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo viene disegnato opaco e lo sfondo non viene disegnato.</summary>
      </Docs>
    </Member>
    <Member MemberName="OptimizedDoubleBuffer">
      <MemberSignature Language="C#" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles OptimizedDoubleBuffer = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="OptimizedDoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo prima viene disegnato in un buffer anziché direttamente sullo schermo, in modo da ridurre lo sfarfallio. Se si imposta questa proprietà su <see langword="true" />, è necessario impostare <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> su <see langword="true" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="ResizeRedraw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ResizeRedraw = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="ResizeRedraw" />
      <MemberSignature Language="C++ CLI" Value="ResizeRedraw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo viene ridisegnato quando viene ridimensionato.</summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Selectable = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo può ricevere lo stato attivo.</summary>
      </Docs>
    </Member>
    <Member MemberName="StandardClick">
      <MemberSignature Language="C#" Value="StandardClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardClick = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberSignature Language="VB.NET" Value="StandardClick" />
      <MemberSignature Language="C++ CLI" Value="StandardClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo implementa il comportamento <see cref="E:System.Windows.Forms.Control.Click" /> standard.</summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDoubleClick">
      <MemberSignature Language="C#" Value="StandardDoubleClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardDoubleClick = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberSignature Language="VB.NET" Value="StandardDoubleClick" />
      <MemberSignature Language="C++ CLI" Value="StandardDoubleClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo implementa il comportamento <see cref="E:System.Windows.Forms.Control.DoubleClick" /> standard. Questo stile viene ignorato se il bit di <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> non è impostato su <see langword="true" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsTransparentBackColor">
      <MemberSignature Language="C#" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles SupportsTransparentBackColor = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberSignature Language="VB.NET" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="C++ CLI" Value="SupportsTransparentBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo accetta una proprietà <see cref="P:System.Windows.Forms.Control.BackColor" /> con un componente alfa minore di 255 per simulare la trasparenza. La trasparenza verrà simulata solo se il bit di <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> viene impostato su <see langword="true" /> e il controllo padre è derivato da <see cref="T:System.Windows.Forms.Control" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserMouse">
      <MemberSignature Language="C#" Value="UserMouse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserMouse = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberSignature Language="VB.NET" Value="UserMouse" />
      <MemberSignature Language="C++ CLI" Value="UserMouse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo esegue autonomamente l'elaborazione del mouse e gli eventi del mouse non vengono gestiti dal sistema operativo.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserPaint">
      <MemberSignature Language="C#" Value="UserPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserPaint = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberSignature Language="VB.NET" Value="UserPaint" />
      <MemberSignature Language="C++ CLI" Value="UserPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Se <see langword="true" />, il controllo si disegna da solo anziché essere disegnato dal sistema operativo. Se <see langword="false" />, l'evento <see cref="E:System.Windows.Forms.Control.Paint" /> non viene generato. Questo stile si applica solo alle classi derivate da <see cref="T:System.Windows.Forms.Control" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseTextForAccessibility">
      <MemberSignature Language="C#" Value="UseTextForAccessibility" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UseTextForAccessibility = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberSignature Language="VB.NET" Value="UseTextForAccessibility" />
      <MemberSignature Language="C++ CLI" Value="UseTextForAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary>Specifica che il valore della proprietà <c>Text</c> del controllo, se impostato, determina il tasto di scelta rapida e il nome Active Accessibility predefiniti del controllo.</summary>
      </Docs>
    </Member>
  </Members>
</Type>