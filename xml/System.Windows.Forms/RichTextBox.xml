<Type Name="RichTextBox" FullName="System.Windows.Forms.RichTextBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6bc4582e825296fa306e1a8f5b9ad0a64930707" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36516164" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RichTextBox : System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RichTextBox extends System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.RichTextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class RichTextBox&#xA;Inherits TextBoxBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RichTextBox : System::Windows::Forms::TextBoxBase" />
  <TypeSignature Language="F#" Value="type RichTextBox = class&#xA;    inherit TextBoxBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.RichTextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un controllo casella di testo RTF di Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con il <xref:System.Windows.Forms.RichTextBox> (controllo), l'utente può immettere e modificare il testo. Il controllo fornisce anche funzionalità di formattazione più avanzate rispetto allo standard <xref:System.Windows.Forms.TextBox> controllo. Testo può essere assegnato direttamente al controllo o può essere caricato da un formato RTF (RICH) o un file di testo normale. Il testo all'interno del controllo può essere assegnato formattazione di carattere e paragrafo.  
  
 Il <xref:System.Windows.Forms.RichTextBox> controllo fornisce una serie di proprietà che è possibile utilizzare per applicare la formattazione a qualsiasi parte del testo all'interno del controllo. Per modificare la formattazione del testo, è necessario prima selezionarlo. Formattazione di carattere e paragrafo, è possibile assegnare solo il testo selezionato. Dopo avere creata un'impostazione a una sezione selezionata del testo, tutto il testo immesso dopo la selezione formattata anch ' esso con le stesse impostazioni fino a quando non viene apportata una modifica impostazione o un'altra sezione del documento del controllo è selezionata. Il <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A> proprietà consente di rendere il testo in grassetto o corsivo. È inoltre possibile utilizzare questa proprietà per modificare le dimensioni e tipo di carattere del testo. Il <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> proprietà consente di modificare il colore del testo. Per creare elenchi puntati è possibile utilizzare il <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> proprietà. È inoltre possibile regolare paragrafo formattazione impostando il <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A>, <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A>, e <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> proprietà.  
  
 Il <xref:System.Windows.Forms.RichTextBox> controllo fornisce metodi che forniscono funzionalità per l'apertura e salvataggio di file. Il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo consente di caricare un file di testo ASCII o RTF esistente nel controllo. È anche possibile caricare dati da un flusso di dati già aperta. Il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> consente di salvare un file di testo ASCII o RTF. Simile ai <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo, è anche possibile usare il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> per salvare in un flusso di dati aperti. Il <xref:System.Windows.Forms.RichTextBox> controllo fornisce anche funzionalità per la ricerca di stringhe di testo. Il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo viene sottoposto a overload per trovare entrambe le stringhe di testo specifici, nonché caratteri all'interno del testo del controllo.  
  
 È anche possibile inizializzare il <xref:System.Windows.Forms.RichTextBox> controllo ai dati archiviati in memoria. Ad esempio, è possibile inizializzare il <xref:System.Windows.Forms.RichTextBox.Rtf%2A> proprietà in una stringa che contiene il testo da visualizzare, compresi i codici RTF che determinano il modo in cui deve essere formattato il testo.  
  
 Se il testo all'interno del controllo contiene i collegamenti, ad esempio un collegamento a un sito Web, è possibile utilizzare il <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A> proprietà per visualizzare correttamente il collegamento nel testo del controllo. È quindi possibile gestire il <xref:System.Windows.Forms.RichTextBox.LinkClicked> evento per eseguire le attività associate al collegamento. Il <xref:System.Windows.Forms.RichTextBox.SelectionProtected%2A> proprietà consente di impedire all'utente di modificare testo all'interno del controllo. Con testo protetto nel controllo, è possibile gestire il <xref:System.Windows.Forms.RichTextBox.Protected> evento per determinare quando l'utente ha tentato di modificare un testo protetto e di avvisare l'utente che il testo è protetto o fornire all'utente di modificare il file di testo protetto in modo standard.  
  
 Le applicazioni che già utilizzano <xref:System.Windows.Forms.TextBox> controlli possono essere facilmente adattati per utilizzare <xref:System.Windows.Forms.RichTextBox> controlli. Tuttavia, il <xref:System.Windows.Forms.RichTextBox> controllo ha lo stesso limite di capacità 64K caratteri del <xref:System.Windows.Forms.TextBox> controllo. Il <xref:System.Windows.Forms.RichTextBox> viene generalmente utilizzato per fornire la modifica del testo di visualizzazione e funzionalità simili alle applicazioni di elaborazione di testi, ad esempio Microsoft Word.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.TextBoxBase.Undo%2A?displayProperty=nameWithType> metodo non funziona con il <xref:System.Windows.Forms.Control.KeyPress> o <xref:System.Windows.Forms.Control.TextChanged> eventi.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.RichTextBox> controllo che carica un file RTF nel controllo e si cerca la prima istanza della parola "Text". Il codice quindi Modifica stile, dimensione del carattere e colore del carattere del testo selezionato e Salva le modifiche nel file originale. Il codice di esempio termina con l'aggiunta del controllo al relativo <xref:System.Windows.Forms.Form>. In questo esempio richiede che il metodo creato nell'esempio di codice viene aggiunto a un <xref:System.Windows.Forms.Form> classe e chiamato dal costruttore del form. Nell'esempio si presuppone inoltre che viene creato un file RTF nella radice dell'unità C, che contiene la parola "Text".  
  
 [!code-cpp[Classic RichTextBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TextBoxBase" />
    <altmember cref="T:System.Windows.Forms.TextBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RichTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RichTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, il <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> del controllo è impostata su `true`.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.RichTextBox> controllo che carica un file RTF nel controllo e si cerca la prima istanza della parola "Text". Il codice quindi Modifica stile, dimensione del carattere e colore del carattere del testo selezionato e Salva le modifiche nel file originale. Il codice di esempio termina con l'aggiunta del controllo al relativo <xref:System.Windows.Forms.Form>. In questo esempio richiede che il metodo creato nell'esempio di codice viene aggiunto a un <xref:System.Windows.Forms.Form> classe e chiamato dal costruttore del form. Nell'esempio si presuppone inoltre che viene creato un file RTF nella radice dell'unità C, che contiene la parola "Text".  
  
 [!code-cpp[Classic RichTextBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public override bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.RichTextBox.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il controllo consentirà operazioni di trascinamento.</summary>
        <value>
          <see langword="true" /> se il trascinamento è consentito nel controllo; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire operazioni di trascinamento e rilascio utilizzando un <xref:System.Windows.Forms.ListBox> controllo che contiene gli elementi da trascinare in un <xref:System.Windows.Forms.RichTextBox> controllo. Il costruttore del modulo imposta il <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> proprietà da `true` per abilitare le operazioni di trascinamento e rilascio avviene nel <xref:System.Windows.Forms.RichTextBox>. Nell'esempio viene utilizzata la <xref:System.Windows.Forms.Control.MouseDown> evento del <xref:System.Windows.Forms.ListBox> per avviare l'operazione di trascinamento chiamando il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo. Nell'esempio viene utilizzata la <xref:System.Windows.Forms.Control.DragEnter> evento per determinare se un elemento che viene trascinato al <xref:System.Windows.Forms.RichTextBox> è un tipo di dati valido. Il <xref:System.Windows.Forms.Control.DragDrop> evento esegue il rilascio effettivo di un elemento trascinato nel <xref:System.Windows.Forms.RichTextBox> controllo in corrispondenza della posizione corrente del cursore all'interno di <xref:System.Windows.Forms.RichTextBox>. Questo esempio si presuppone che il <xref:System.Windows.Forms.Control.DragDrop> e <xref:System.Windows.Forms.Control.DragEnter> eventi siano stati collegati ai gestori di eventi definiti nell'esempio.  
  
 [!code-cpp[RichTextBox.AllowDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.AllowDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CS/form1.cs#1)]
 [!code-vb[RichTextBox.AllowDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.AllowDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.RichTextBox.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà non è pertinente per questa classe.</summary>
        <value>
          <see langword="true" /> se abilitato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoWordSelection : bool with get, set" Usage="System.Windows.Forms.RichTextBox.AutoWordSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la selezione automatica della parola è abilitata.</summary>
        <value>
          <see langword="true" /> se la selezione automatica della parola è abilitata; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questa proprietà è impostata su `true`, qualsiasi parte del testo nel controllo se si seleziona l'intera parola.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Windows.Forms.RichTextBox> che esegue lo zoom sul testo, seleziona automaticamente parole nel testo del controllo quando si fa doppio clic e ha un margine sul lato destro dell'area client del controllo. Se il <xref:System.Windows.Forms.RichTextBox> controllo ha una larghezza di piccole dimensioni, con questo codice verrà creato un <xref:System.Windows.Forms.RichTextBox> in cui ogni carattere di testo viene visualizzato nella riga corrispondente. In questa posizione di visualizzazione verticale, fare clic su qualsiasi parte di una parola selezionerà tutti i caratteri della parola indipendentemente dal fatto che il testo viene visualizzato in verticale. In questo esempio è necessario un form che contiene un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`.  
  
 [!code-cpp[RichTextBox.ZoomFactor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.ZoomFactor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CS/form1.cs#1)]
 [!code-vb[RichTextBox.ZoomFactor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.ZoomFactor/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.RichTextBox.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà non è pertinente per questa classe.</summary>
        <value>Immagine di sfondo visualizzata nel controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.RichTextBox.BackgroundImage" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.RichTextBox.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà non è pertinente per questa classe.</summary>
        <value>Layout dell'immagine di sfondo visualizzata nel controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.RichTextBox.BackgroundImageLayout" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BulletIndent">
      <MemberSignature Language="C#" Value="public int BulletIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BulletIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.BulletIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property BulletIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BulletIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BulletIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.BulletIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il rientro utilizzato nel controllo <see cref="T:System.Windows.Forms.RichTextBox" /> quando lo stile puntato è applicato al testo.</summary>
        <value>Il numero dei pixel inseriti come rientro dopo un punto elenco. Il valore predefinito è zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per applicare lo stile elenco puntato a un paragrafo di testo, impostare il <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> proprietà da `true` e quindi impostare il <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A> proprietà per il numero di pixel che il testo deve essere aumentato il rientro. Il paragrafo avrà lo stile elenco puntato applicato con la quantità specificata di rientro dopo il punto elenco. Questa proprietà influisce solo il paragrafo corrente all'interno del testo del controllo e il punto dell'elenco selezionato in un elenco di voci dell'elenco puntato. Per applicare un diverso livello di rientro a un intero elenco di voci dell'elenco puntato, è necessario selezionare tutto il testo delle voci dell'elenco puntato prima di impostare il <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> proprietà con il <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A>, <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>, e <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> proprietà per creare un elenco puntato in un <xref:System.Windows.Forms.RichTextBox> controllo. Questo esempio si presuppone che un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1` viene creato in un form.  
  
 [!code-cpp[RichTextBox.BulletIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.BulletIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.BulletIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.BulletIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.BulletIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.BulletIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il rientro specificato era minore di zero</exception>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionBullet" />
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste (System.Windows.Forms.DataFormats.Format clipFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanPaste(class System.Windows.Forms.DataFormats/Format clipFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste (clipFormat As DataFormats.Format) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste(System::Windows::Forms::DataFormats::Format ^ clipFormat);" />
      <MemberSignature Language="F#" Value="member this.CanPaste : System.Windows.Forms.DataFormats.Format -&gt; bool" Usage="richTextBox.CanPaste clipFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipFormat" Type="System.Windows.Forms.DataFormats+Format" />
      </Parameters>
      <Docs>
        <param name="clipFormat">Uno dei valori di <see cref="T:System.Windows.Forms.DataFormats.Format" />.</param>
        <summary>Determina se è possibile incollare informazioni dagli Appunti nel formato di dati specificato.</summary>
        <returns>
          <see langword="true" /> se è possibile incollare dati dagli Appunti nel formato di dati specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questo metodo per determinare se il contenuto degli Appunti corrente è in un formato di dati degli Appunti specificato prima di abilitare l'utente incollare le informazioni contenute nel <xref:System.Windows.Forms.RichTextBox> controllo. Ad esempio, è possibile creare un gestore eventi per un <xref:System.Windows.Forms.MenuItem.Popup> evento di un comando Incolla <xref:System.Windows.Forms.MenuItem> e usare questo metodo per determinare se l'operazione di Incolla <xref:System.Windows.Forms.MenuItem> deve essere abilitata in base al tipo di dati negli Appunti.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.Paste%2A> metodo per incollare una bitmap nel <xref:System.Windows.Forms.RichTextBox> controllo. Dopo l'apertura di una bitmap da file, nell'esempio viene utilizzato il <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> metodo per copiare la bitmap negli Appunti di Windows. Infine, nell'esempio viene recuperato il formato per il <xref:System.Drawing.Bitmap> oggetto, viene utilizzato il <xref:System.Windows.Forms.RichTextBox.CanPaste%2A> metodo per verificare che il formato può essere incollato nel <xref:System.Windows.Forms.RichTextBox> controllo e quindi viene utilizzato il <xref:System.Windows.Forms.RichTextBox.Paste%2A> metodo per incollare i dati.  
  
 [!code-cpp[RichText_Paste#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichText_Paste/CPP/form1.cpp#1)]
 [!code-csharp[RichText_Paste#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichText_Paste/CS/form1.cs#1)]
 [!code-vb[RichText_Paste#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichText_Paste/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.Paste(System.Windows.Forms.DataFormats.Format)" />
        <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRedo : bool" Usage="System.Windows.Forms.RichTextBox.CanRedo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se vi sono operazioni eseguite all'interno dell'oggetto <see cref="T:System.Windows.Forms.RichTextBox" /> che possono essere riapplicate.</summary>
        <value>
          <see langword="true" /> se esistono operazioni annullate che possono essere riapplicate al contenuto del controllo; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa proprietà per determinare se l'ultima operazione annullata nel <xref:System.Windows.Forms.RichTextBox> può essere riapplicata utilizzando il <xref:System.Windows.Forms.RichTextBox.Redo%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> e <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> delle proprietà e il <xref:System.Windows.Forms.RichTextBox.Redo%2A> (metodo), per limitare un'operazione di rollforward a qualsiasi azione, ad eccezione dell'eliminazione del testo. In questo esempio è necessario un form che contiene un <xref:System.Windows.Forms.RichTextBox> controllo e che un'operazione all'interno di <xref:System.Windows.Forms.RichTextBox> è stata eseguita e annullata prima che il codice in questo esempio viene chiamato.  
  
 [!code-cpp[RichTextBox.RedoAction#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.RedoAction/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.RedoAction#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.RedoAction/CS/form1.cs#1)]
 [!code-vb[RichTextBox.RedoAction#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.RedoAction/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.Redo" />
      </Docs>
    </Member>
    <Member MemberName="ContentsResized">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ContentsResizedEventHandler ContentsResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ContentsResizedEventHandler ContentsResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.ContentsResized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentsResized As ContentsResizedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ContentsResizedEventHandler ^ ContentsResized;" />
      <MemberSignature Language="F#" Value="member this.ContentsResized : System.Windows.Forms.ContentsResizedEventHandler " Usage="member this.ContentsResized : System.Windows.Forms.ContentsResizedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContentsResizedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il contenuto del controllo viene ridimensionato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.RichTextBox.ContentsResized> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.RichTextBox> denominato `RichTextBox1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.RichTextBox.ContentsResized> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#537](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#537)]
 [!code-vb[System.Windows.Forms.EventExamples#537](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#537)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContentsResizedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.RichTextBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i parametri necessari per la creazione quando viene creato l'handle del controllo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.CreateParams" /> contenente i parametri di creazione necessari quando viene creato l'handle del controllo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRichEditOleCallback">
      <MemberSignature Language="C#" Value="protected virtual object CreateRichEditOleCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateRichEditOleCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.CreateRichEditOleCallback" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRichEditOleCallback () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateRichEditOleCallback();" />
      <MemberSignature Language="F#" Value="abstract member CreateRichEditOleCallback : unit -&gt; obj&#xA;override this.CreateRichEditOleCallback : unit -&gt; obj" Usage="richTextBox.CreateRichEditOleCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un oggetto compatibile con <see langword="IRichEditOleCallback" /> per la gestione di operazioni di callback RichEdit.</summary>
        <returns>Oggetto che implementa l'interfaccia <see langword="IRichEditOleCallback" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per il chiamante immediato chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>È possibile eseguire l'override di questo metodo nella classe derivata per abilitare l'accesso alle funzionalità RichEdit sottostanti. Se si esegue l'override di questo metodo, tutti gli eventi di trascinamento e rilascio non verrà generati. Di conseguenza, è necessario fornire il proprio supporto per le operazioni di trascinamento e rilascio. Per ulteriori informazioni sul <see langword="IRichEditOleCallback" /> l'interfaccia, vedere la documentazione di Platform SDK all'indirizzo http://msdn.microsoft.com.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.RichTextBox.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le dimensioni predefinite del controllo.</summary>
        <value>Valore <see cref="T:System.Drawing.Size" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DetectUrls">
      <MemberSignature Language="C#" Value="public bool DetectUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DetectUrls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.DetectUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property DetectUrls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DetectUrls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DetectUrls : bool with get, set" Usage="System.Windows.Forms.RichTextBox.DetectUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'oggetto <see cref="T:System.Windows.Forms.RichTextBox" /> formatterà automaticamente un Uniform Resource Locator (URL) quando viene digitato nel controllo.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Forms.RichTextBox" /> formatterà automaticamente gli URL digitati nel controllo come collegamenti; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questa proprietà è impostata su `true`, il testo immesso nel controllo che è determinato dal <xref:System.Windows.Forms.RichTextBox> a un URL viene automaticamente formattato come collegamento. È possibile creare un gestore eventi per il <xref:System.Windows.Forms.RichTextBox.LinkClicked> eventi per gestire tutti i collegamenti selezionato nel controllo. Il <xref:System.Windows.Forms.LinkClickedEventArgs> che viene fornito per il gestore dell'evento per il <xref:System.Windows.Forms.RichTextBox.LinkClicked> evento fornisce i dati che consente di determinare il collegamento selezionato nel controllo per elaborare il collegamento.  
  
   
  
## Examples  
 Esempio di codice seguente contiene un gestore eventi per il <xref:System.Windows.Forms.RichTextBox.LinkClicked> evento. Il gestore dell'evento elabora clic sui collegamenti all'interno del documento di un <xref:System.Windows.Forms.RichTextBox> controllare e avvia un'istanza del browser predefinito (usando il <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> metodo), visualizzazione della pagina per il collegamento che è stato fatto clic. In questo esempio richiede che il gestore dell'evento è stato connesso per il <xref:System.Windows.Forms.RichTextBox.LinkClicked> evento per un <xref:System.Windows.Forms.RichTextBox>.  
  
 [!code-cpp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.RichTextBox.LinkClicked" />
        <altmember cref="T:System.Windows.Forms.LinkClickedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragDrop;" />
      <MemberSignature Language="F#" Value="member this.DragDrop : System.Windows.Forms.DragEventHandler " Usage="member this.DragDrop : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente completa un'operazione di trascinamento della selezione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.Forms.DragEventHandler " Usage="member this.DragEnter : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un oggetto viene trascinato nei limiti del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.RichTextBox.DragEnter> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.RichTextBox> denominato `RichTextBox1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.RichTextBox.DragEnter> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#539](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#539)]
 [!code-vb[System.Windows.Forms.EventExamples#539](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#539)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : EventHandler " Usage="member this.DragLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un oggetto viene trascinato fuori dai limiti del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non è pertinente per questa classe. Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.DragEventHandler " Usage="member this.DragOver : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un oggetto viene trascinato sui limiti del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non è pertinente per questa classe. Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawToBitmap">
      <MemberSignature Language="C#" Value="public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawToBitmap(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Rectangle targetBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawToBitmap(System::Drawing::Bitmap ^ bitmap, System::Drawing::Rectangle targetBounds);" />
      <MemberSignature Language="F#" Value="override this.DrawToBitmap : System.Drawing.Bitmap * System.Drawing.Rectangle -&gt; unit" Usage="richTextBox.DrawToBitmap (bitmap, targetBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="targetBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bitmap">Oggetto <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="targetBounds">Oggetto <see cref="T:System.Drawing.Rectangle" />.</param>
        <summary>Questo metodo non è pertinente per questa classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoDragDrop">
      <MemberSignature Language="C#" Value="public bool EnableAutoDragDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoDragDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.EnableAutoDragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoDragDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoDragDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableAutoDragDrop : bool with get, set" Usage="System.Windows.Forms.RichTextBox.EnableAutoDragDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che consente le operazioni di trascinamento su testo, immagini e altri dati.</summary>
        <value>
          <see langword="true" /> per consentire operazioni di trascinamento; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ricerca il testo nel contenuto dell'oggetto <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (char[] characterSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(char[] characterSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (characterSet As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(cli::array &lt;char&gt; ^ characterSet);" />
      <MemberSignature Language="F#" Value="member this.Find : char[] -&gt; int" Usage="richTextBox.Find characterSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterSet" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="characterSet">Matrice di caratteri da ricercare.</param>
        <summary>Cerca nel testo di un controllo <see cref="T:System.Windows.Forms.RichTextBox" /> la prima istanza di un carattere da un elenco di caratteri.</summary>
        <returns>Posizione all'interno del controllo dove sono stati trovati i caratteri di ricerca oppure il valore -1, se i caratteri di ricerca non sono stati trovati o se un gruppo di caratteri di ricerca vuoto è specificato nel parametro <paramref name="char" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa versione del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo cerca la prima istanza di un carattere da un elenco di caratteri specificati nel `characterSet` parametro e restituisce la posizione del carattere. Ad esempio, si passa una matrice di caratteri che contiene il carattere 'Q'. Se il controllo è contenuto il testo "The rapido Brown volpe", il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo viene restituito il valore di quattro. Un carattere maiuscolo e un carattere minuscolo vengono considerati valori diversi nella ricerca.  
  
 Se la proprietà restituisce un valore negativo, i caratteri da cercare non trovati all'interno del contenuto del controllo. È possibile utilizzare questo metodo per eseguire la ricerca di un gruppo di caratteri all'interno del controllo. Questa versione del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo richiede che l'intero documento contenuto nel controllo viene eseguita la ricerca per i caratteri. Se un carattere dall'elenco di caratteri fornito il metodo `characterSet` parametro viene trovato, il valore restituito da questo metodo è un indice in base zero della posizione del carattere nel controllo. Uno spazio viene considerato un carattere dal metodo per determinare la posizione di un carattere.  
  
   
  
## Examples  
 Esempio di codice seguente cerca il contenuto di un <xref:System.Windows.Forms.RichTextBox> per i caratteri che vengono passati al metodo nel `text` parametro. Se il contenuto del `text` matrice sono inclusi il <xref:System.Windows.Forms.RichTextBox>, il metodo restituisce l'indice del valore che è stato trovato; in caso contrario, restituisce -1. Nell'esempio si presuppone che questo metodo viene collocato nella classe di un <xref:System.Windows.Forms.Form> che contiene una <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1` e un <xref:System.Windows.Forms.Button> controllo denominato `button1`, vale a dire connesso al `Click` gestore dell'evento definito in Nell'esempio.  
  
 [!code-cpp[RichTextBox.FindChar1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.FindChar1/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.FindChar1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.FindChar1/CS/form1.cs#1)]
 [!code-vb[RichTextBox.FindChar1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.FindChar1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str);" />
      <MemberSignature Language="F#" Value="member this.Find : string -&gt; int" Usage="richTextBox.Find str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Testo da individuare nel controllo.</param>
        <summary>Cerca una stringa nel testo in un controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <returns>Il percorso all'interno del controllo dove è stato trovato il testo di ricerca oppure il valore -1, se la stringa di ricerca non è stata trovata o se una stringa di ricerca vuota è specificata nel parametro <paramref name="str" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo cerca il testo specificato nella `str` parametro e restituisce la posizione del primo carattere all'interno del controllo. Se la proprietà restituisce un valore negativo, la stringa di testo cercata non è stata trovata all'interno del contenuto del controllo. È possibile utilizzare questo metodo per creare la funzionalità di ricerca che può essere fornita all'utente del controllo. È inoltre possibile utilizzare questo metodo per cercare il testo da sostituire con un formato specifico. Ad esempio, se l'utente ha immesso date nel controllo, è possibile utilizzare il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per eseguire la ricerca di tutte le date nel documento e sostituirli con il formato appropriato prima di usare il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo del controllo.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodi che accettano un `string` come un parametro non è possibile trovare il testo contenuto in più di una riga di testo all'interno di <xref:System.Windows.Forms.RichTextBox>. L'esecuzione di tale ricerca restituirà un valore negativo (-1).  
  
   
  
## Examples  
 Esempio di codice seguente cerca l'intero contenuto di un <xref:System.Windows.Forms.RichTextBox> per la prima istanza di una stringa di ricerca passato nel parametro del testo del metodo. Se la stringa di ricerca viene trovata nella <xref:System.Windows.Forms.RichTextBox>, il metodo restituisce un valore di `true` ed evidenzia il testo di ricerca, in caso contrario restituirà `false`. Nell'esempio si presuppone che questo metodo viene collocato nella classe di un <xref:System.Windows.Forms.Form> che contiene una <xref:System.Windows.Forms.RichTextBox> denominato `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.Find Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.Find Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.Find Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.Find Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.Find Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.Find Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (char[] characterSet, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(char[] characterSet, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (characterSet As Char(), start As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(cli::array &lt;char&gt; ^ characterSet, int start);" />
      <MemberSignature Language="F#" Value="member this.Find : char[] * int -&gt; int" Usage="richTextBox.Find (characterSet, start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterSet" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characterSet">Matrice di caratteri da ricercare.</param>
        <param name="start">Posizione nel testo del controllo nella quale avviare la ricerca.</param>
        <summary>Cerca nel testo di un controllo <see cref="T:System.Windows.Forms.RichTextBox" />, a partire da un punto specifico, la prima istanza di un carattere da un elenco di caratteri.</summary>
        <returns>Posizione all'interno del controllo in cui vengono trovati i caratteri di ricerca.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa versione del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo cerca la prima istanza di un carattere da un elenco di caratteri specificati nel `characterSet` parametro e restituisce la posizione del carattere. Ad esempio, si passa una matrice di caratteri che contiene il carattere 'Q'. Se il controllo è contenuto il testo "The rapido Brown volpe", il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo viene restituito il valore di quattro. Un carattere maiuscolo e un carattere minuscolo vengono considerati valori diversi nella ricerca.  
  
 Se la proprietà restituisce un valore negativo, i caratteri da cercare non trovati all'interno del contenuto del controllo. È possibile utilizzare questo metodo per eseguire la ricerca di un gruppo di caratteri all'interno del controllo. Se un carattere dall'elenco di caratteri fornito il metodo `characterSet` parametro viene trovato, il valore restituito da questo metodo è un indice in base zero della posizione del carattere nel controllo. Uno spazio viene considerato un carattere dal metodo per determinare la posizione di un carattere.  
  
 Questa versione di <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo consente di eseguire la ricerca di un gruppo di caratteri da una posizione di inizio specificato all'interno del testo del controllo, specificando un valore per il `start` parametro. Un valore pari a zero indica che deve iniziare la ricerca dall'inizio del documento del controllo. È possibile utilizzare questa versione del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per restringere la ricerca per evitare il testo che si conosce già non contiene i caratteri specificati si sta cercando o non sono rilevanti per la ricerca.  
  
   
  
## Examples  
 Esempio di codice seguente cerca il contenuto di un <xref:System.Windows.Forms.RichTextBox> per i caratteri che vengono passati al metodo nel `text` parametro. La ricerca inizia dalla posizione all'interno di <xref:System.Windows.Forms.RichTextBox> specificato dal `start` parametro del `FindMyText` (metodo). Se il contenuto della matrice di testo è inclusi il <xref:System.Windows.Forms.RichTextBox>, il metodo restituisce l'indice del valore che è stato trovato; in caso contrario, restituisce -1. Nell'esempio si presuppone che questo metodo viene collocato nella classe di un <xref:System.Windows.Forms.Form> che contiene una <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1` e un <xref:System.Windows.Forms.Button> controllo denominato `button1` che è connesso al <xref:System.Windows.Forms.Control.Click> gestore dell'evento definito nel esempio.  
  
 [!code-cpp[RichTextBox.FindChar2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.FindChar2/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.FindChar2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.FindChar2/CS/form1.cs#1)]
 [!code-vb[RichTextBox.FindChar2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.FindChar2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str, System.Windows.Forms.RichTextBoxFinds options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str, valuetype System.Windows.Forms.RichTextBoxFinds options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String,System.Windows.Forms.RichTextBoxFinds)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String, options As RichTextBoxFinds) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str, System::Windows::Forms::RichTextBoxFinds options);" />
      <MemberSignature Language="F#" Value="member this.Find : string * System.Windows.Forms.RichTextBoxFinds -&gt; int" Usage="richTextBox.Find (str, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="options" Type="System.Windows.Forms.RichTextBoxFinds" />
      </Parameters>
      <Docs>
        <param name="str">Testo da individuare nel controllo.</param>
        <param name="options">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.RichTextBoxFinds" />.</param>
        <summary>Cerca nel testo di un controllo <see cref="T:System.Windows.Forms.RichTextBox" /> una stringa con opzioni specifiche applicate alla ricerca.</summary>
        <returns>Posizione all'interno del controllo in cui è stato trovato il testo di ricerca.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo cerca il testo specificato nella `str` parametro e restituisce la posizione del primo carattere all'interno del controllo. Se la proprietà restituisce un valore negativo, la stringa di testo cercata non è stata trovata all'interno del contenuto del controllo. È possibile utilizzare questo metodo per creare la funzionalità di ricerca che può essere fornita all'utente del controllo. È inoltre possibile utilizzare questo metodo per cercare il testo da sostituire con un formato specifico. Ad esempio, se l'utente ha immesso date nel controllo, è possibile utilizzare il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per eseguire la ricerca di tutte le date nel documento e sostituirli con il formato appropriato prima di usare il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo del controllo.  
  
 Con questa versione il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo, è possibile specificare opzioni che consentono di espandere o limitare la ricerca. È possibile specificare opzioni che consentono di associare le maiuscole e minuscole della parola di ricerca o per cercare parole intere anziché parole parziali. Specificando il `RichTextBoxFinds.Reverse` enumerazione nel `options` parametro, è possibile cercare testo in fondo al documento nella parte superiore anziché i primi predefinito per un metodo di ricerca nella parte inferiore.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodi che accettano un `string` come un parametro non è possibile trovare il testo contenuto in più di una riga di testo all'interno di <xref:System.Windows.Forms.RichTextBox>. L'esecuzione di tale ricerca restituirà un valore negativo (-1).  
  
   
  
## Examples  
 Esempio di codice seguente cerca l'intero contenuto di un <xref:System.Windows.Forms.RichTextBox> per la prima istanza di una stringa di ricerca passato nel parametro del testo del metodo. Se la stringa di ricerca viene trovata nella <xref:System.Windows.Forms.RichTextBox>, il metodo restituisce un valore di `true` ed evidenzia il testo; in caso contrario, restituirà `false`. L'esempio specifica inoltre le opzioni nella ricerca di maiuscole/minuscole della stringa di ricerca specificato. Nell'esempio si presuppone che questo metodo viene collocato nella classe di un <xref:System.Windows.Forms.Form> che contiene una <xref:System.Windows.Forms.RichTextBox> denominato `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.Find1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.Find1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.Find1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.Find1 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.Find1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.Find1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (char[] characterSet, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(char[] characterSet, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (characterSet As Char(), start As Integer, end As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(cli::array &lt;char&gt; ^ characterSet, int start, int end);" />
      <MemberSignature Language="F#" Value="member this.Find : char[] * int * int -&gt; int" Usage="richTextBox.Find (characterSet, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterSet" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characterSet">Matrice di caratteri da ricercare.</param>
        <param name="start">Posizione nel testo del controllo nella quale avviare la ricerca.</param>
        <param name="end">Posizione nel testo del controllo nella quale terminare la ricerca.</param>
        <summary>Cerca in un intervallo di testo di un controllo <see cref="T:System.Windows.Forms.RichTextBox" /> la prima istanza di un carattere da un elenco di caratteri.</summary>
        <returns>Posizione all'interno del controllo in cui vengono trovati i caratteri di ricerca.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa versione del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo cerca la prima istanza di un carattere da un elenco di caratteri specificati nel `characterSet` parametro e restituisce la posizione del carattere. Ad esempio, si passa una matrice di caratteri che contiene il carattere 'Q'. Se il controllo è contenuto il testo "The rapido Brown volpe", il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo viene restituito il valore di quattro. Un carattere maiuscolo e un carattere minuscolo vengono considerati valori diversi nella ricerca.  
  
 Se la proprietà restituisce un valore negativo, i caratteri da cercare non trovati all'interno del contenuto del controllo. È possibile utilizzare questo metodo per eseguire la ricerca di un gruppo di caratteri all'interno del controllo. Se un carattere dall'elenco di caratteri fornito il metodo `characterSet` parametro viene trovato, il valore restituito da questo metodo è un in base zero dell'indice della posizione del carattere nel controllo. Uno spazio viene considerato un carattere dal metodo per determinare la posizione di un carattere.  
  
 Questa versione del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo consente di eseguire la ricerca di un gruppo di caratteri da un intervallo di testo nel controllo, specificando un valore per il `start` e `end` parametri. Un valore pari a zero per il `start` parametro indica che deve iniziare la ricerca dall'inizio del documento del controllo. Un valore di-1 per il `end` parametro indica che la ricerca deve terminare alla fine del testo all'interno del controllo. È possibile utilizzare questa versione del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per restringere la ricerca di uno specifico intervallo di testo all'interno del controllo per evitare la ricerca di aree del documento che non sono importanti per le esigenze dell'applicazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="characterSet" /> è null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="start" />è minore di 0 o maggiore della lunghezza del testo nel controllo.</exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str, int start, System.Windows.Forms.RichTextBoxFinds options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str, int32 start, valuetype System.Windows.Forms.RichTextBoxFinds options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Windows.Forms.RichTextBoxFinds)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String, start As Integer, options As RichTextBoxFinds) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str, int start, System::Windows::Forms::RichTextBoxFinds options);" />
      <MemberSignature Language="F#" Value="member this.Find : string * int * System.Windows.Forms.RichTextBoxFinds -&gt; int" Usage="richTextBox.Find (str, start, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="options" Type="System.Windows.Forms.RichTextBoxFinds" />
      </Parameters>
      <Docs>
        <param name="str">Testo da individuare nel controllo.</param>
        <param name="start">Posizione nel testo del controllo nella quale avviare la ricerca.</param>
        <param name="options">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.RichTextBoxFinds" />.</param>
        <summary>Cerca nel testo di un controllo <see cref="T:System.Windows.Forms.RichTextBox" /> una stringa in una posizione specifica all'interno del controllo e con opzioni specifiche applicate alla ricerca.</summary>
        <returns>Posizione all'interno del controllo in cui è stato trovato il testo di ricerca.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo cerca il testo specificato nella `str` parametro e restituisce la posizione del primo carattere della ricerca della stringa all'interno del controllo. Se la proprietà restituisce un valore negativo, la stringa di testo cercata non è stata trovata all'interno del contenuto del controllo. È possibile utilizzare questo metodo per creare la funzionalità di ricerca che può essere fornita all'utente del controllo. È inoltre possibile utilizzare questo metodo per cercare il testo da sostituire con un formato specifico. Ad esempio, se l'utente ha immesso date nel controllo, è possibile utilizzare il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per eseguire la ricerca di tutte le date nel documento e sostituirli con il formato appropriato prima di usare il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo del controllo.  
  
 Con questa versione il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo, è possibile specificare opzioni che consentono di espandere o limitare la ricerca. È possibile specificare opzioni che consentono di associare le maiuscole e minuscole della parola di ricerca o per cercare parole intere anziché parole parziali. Specificando il `RichTextBoxFinds.Reverse` enumerazione nel `options` parametro, è possibile cercare testo in fondo al documento nella parte superiore anziché i primi predefinito per un metodo di ricerca nella parte inferiore. Questa versione del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo consente inoltre di limitare la ricerca di testo selezionando una specifica posizione iniziale all'interno del testo del controllo. Questa funzionalità consente di evitare il testo che potrebbero avere già stata eseguita la ricerca o in cui il testo specifico che si sta cercando è sicuramente non esistono. Quando il `RichTextBoxFinds.Reverse` valore è espresso nel `options` parametro, il valore della `start` parametro indica la posizione in cui termina la ricerca inversa poiché ha inizio la ricerca nella parte inferiore del documento quando si utilizza questa versione del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodi che accettano un `string` come un parametro non è possibile trovare il testo contenuto in più di una riga di testo all'interno di <xref:System.Windows.Forms.RichTextBox>. L'esecuzione di tale ricerca restituirà un valore negativo (-1).  
  
   
  
## Examples  
 Esempio di codice seguente cerca l'intero contenuto di un <xref:System.Windows.Forms.RichTextBox> per la prima istanza di una stringa di ricerca passato nel parametro del testo del metodo. Posizione iniziale della ricerca viene specificata dal parametro di avvio del metodo. Se la stringa di ricerca viene trovata nella <xref:System.Windows.Forms.RichTextBox>, il metodo restituisce la posizione di indice del primo carattere del testo trovato ed evidenzia il testo trovato; in caso contrario, restituisce un valore pari a -1. L'esempio specifica inoltre le opzioni nella ricerca di maiuscole/minuscole della stringa di ricerca specificato. Nell'esempio si presuppone che questo metodo viene collocato nella classe di un <xref:System.Windows.Forms.Form> che contiene una <xref:System.Windows.Forms.RichTextBox> denominato `richTextBox1`. È possibile usare questo esempio per eseguire un tipo di operazione "Trova successivo". Dopo che è stata trovata un'istanza del testo di ricerca, è possibile trovare altre istanze del testo, modificando il valore del `start` parametro per la ricerca in una posizione oltre la posizione della corrispondenza corrente.  
  
 [!code-cpp[Classic RichTextBox.Find2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.Find2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.Find2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.Find2 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.Find2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.Find2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str, int start, int end, System.Windows.Forms.RichTextBoxFinds options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str, int32 start, int32 end, valuetype System.Windows.Forms.RichTextBoxFinds options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Int32,System.Windows.Forms.RichTextBoxFinds)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String, start As Integer, end As Integer, options As RichTextBoxFinds) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str, int start, int end, System::Windows::Forms::RichTextBoxFinds options);" />
      <MemberSignature Language="F#" Value="member this.Find : string * int * int * System.Windows.Forms.RichTextBoxFinds -&gt; int" Usage="richTextBox.Find (str, start, end, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="options" Type="System.Windows.Forms.RichTextBoxFinds" />
      </Parameters>
      <Docs>
        <param name="str">Testo da individuare nel controllo.</param>
        <param name="start">Posizione nel testo del controllo nella quale avviare la ricerca.</param>
        <param name="end">Posizione nel testo del controllo nella quale terminare la ricerca. Il valore deve essere uguale a uno negativo (-1) oppure maggiore di o uguale al parametro <c>start</c>.</param>
        <param name="options">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.RichTextBoxFinds" />.</param>
        <summary>Cerca nel testo in un controllo <see cref="T:System.Windows.Forms.RichTextBox" /> una stringa all’interno di un intervallo di testo nel controllo e con opzioni specifiche applicate alla ricerca.</summary>
        <returns>Posizione all'interno del controllo in cui è stato trovato il testo di ricerca.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo cerca il testo specificato nella `str` parametro e restituisce la posizione del primo carattere della ricerca della stringa all'interno del controllo. Se la proprietà restituisce un valore negativo, la stringa di testo cercata non è stata trovata all'interno del contenuto del controllo. È possibile utilizzare questo metodo per creare la funzionalità di ricerca che può essere fornita all'utente del controllo. È inoltre possibile utilizzare questo metodo per cercare il testo da sostituire con un formato specifico. Ad esempio, se l'utente ha immesso date nel controllo, è possibile utilizzare il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per eseguire la ricerca di tutte le date nel documento e sostituirli con il formato appropriato prima di usare il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo del controllo.  
  
 Con questa versione il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo, è possibile specificare opzioni che consentono di espandere o limitare la ricerca. È possibile specificare opzioni che consentono di associare le maiuscole e minuscole della parola di ricerca o per cercare parole intere anziché parole parziali. Specificando il `RichTextBoxFinds.Reverse` enumerazione nel `options` parametro, è possibile cercare testo in fondo al documento nella parte superiore anziché i primi predefinito per un metodo di ricerca nella parte inferiore. Questa versione del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo consente inoltre di limitare la ricerca di testo selezionando una posizione di inizio e fine specifica all'interno del testo del controllo. Questa funzionalità consente di limitare l'intervallo di ricerca a una sezione specifica del testo del controllo. Se un valore negativo (-1) viene assegnato ai `end` parametro, il metodo eseguirà la ricerca fino alla fine del testo nel <xref:System.Windows.Forms.RichTextBox> per le ricerche normale. Per le ricerche inverse, il valore uno negativo (-1 assegnato per) il `end` parametro indica che il testo verrà quindi cercato dalla fine del testo (inferiore) alla posizione definita da `start` parametro. Quando il `start` e `end` vengono specificati parametri viene eseguita la ricerca lo stesso valore dell'intero controllo per le ricerche normale. Per una ricerca inversa, tutto il controllo viene eseguita la ricerca, ma la ricerca inizia nella parte inferiore del documento e ricerca all'inizio del documento.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodi che accettano un `string` come un parametro non è possibile trovare il testo contenuto in più di una riga di testo all'interno di <xref:System.Windows.Forms.RichTextBox>. L'esecuzione di tale ricerca restituirà un valore negativo (-1).  
  
   
  
## Examples  
 Esempio di codice seguente cerca una sezione di testo in un <xref:System.Windows.Forms.RichTextBox> per la prima istanza di una stringa di ricerca passato il `searchText` parametro del metodo. L'intervallo per cercare testo all'interno del controllo è specificato per il `searchStart` e `searchEnd` parametri del metodo. Se la stringa di ricerca viene trovata nella <xref:System.Windows.Forms.RichTextBox>, il metodo restituisce la posizione di indice del primo carattere del testo trovato ed evidenzia il testo trovato; in caso contrario, restituisce un valore pari a -1. Nell'esempio viene inoltre utilizzata la `options` parametro del <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per specificare che il testo trovato deve corrispondere al caso della stringa di ricerca. Nell'esempio si presuppone che questo metodo viene collocato nella classe di un <xref:System.Windows.Forms.Form> che contiene una <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`. Dopo la prima istanza della stringa di ricerca è stata individuata, è possibile usare questo esempio per trovare altre istanze nel testo.  
  
 [!code-cpp[RichTextBox.FindStringStartEnd#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.FindStringStartEnd/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.FindStringStartEnd#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.FindStringStartEnd/CS/form1.cs#1)]
 [!code-vb[RichTextBox.FindStringStartEnd#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.FindStringStartEnd/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="str" /> era <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="end" /> era minore del parametro <paramref name="start" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.RichTextBox.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di carattere del testo visualizzato dal controllo.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Font" /> da applicare al testo visualizzato dal controllo. Il valore predefinito corrisponde al valore della proprietà <see cref="P:System.Windows.Forms.Control.DefaultFont" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.RichTextBox.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore primo piano del controllo.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore di primo piano del controllo.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public override int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="richTextBox.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Posizione da ricercare.</param>
        <summary>Recupera l'indice del carattere più vicino alla posizione specificata.</summary>
        <returns>Indice del carattere in base zero nella posizione specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo restituisce l'indice del carattere più vicino alla posizione specificata nel `pt` parametro. L'indice del carattere è un indice in base zero del testo nel controllo, inclusi gli spazi. È possibile utilizzare questo metodo per determinare il testo in cui l'utente dispone il mouse passando il mouse coordinate a questo metodo. Ciò può essere utile se si desidera eseguire le attività quando l'utente posiziona il puntatore del mouse su una parola nel testo del controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition%2A> metodo con il <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per cercare una stringa specifica in un <xref:System.Windows.Forms.RichTextBox> controllare e visualizzare l'indice del carattere in cui la stringa viene trovata si trova all'interno di <xref:System.Windows.Forms.RichTextBox> controllo. Nell'esempio cerca la parola "brown" all'interno del contenuto del controllo e restituisce la posizione di indice di tipo carattere in cui viene trovata la stringa di ricerca. In questo esempio è necessario un form che contiene un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1` contenente testo. Richiede inoltre che il codice nell'esempio viene collegato per il <xref:System.Windows.Forms.Control.MouseDown> evento del <xref:System.Windows.Forms.RichTextBox>.  
  
 [!code-cpp[RichTextBox.GetCharIndexFromPosition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.GetCharIndexFromPosition/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.GetCharIndexFromPosition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.GetCharIndexFromPosition/CS/form1.cs#1)]
 [!code-vb[RichTextBox.GetCharIndexFromPosition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.GetCharIndexFromPosition/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public override int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="override this.GetLineFromCharIndex : int -&gt; int" Usage="richTextBox.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Posizione dell'indice del carattere da ricercare.</param>
        <summary>Recupera il numero di riga dalla posizione del carattere specificata all'interno del testo del controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <returns>Numero di riga in base zero in cui si trova l'indice del carattere.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di determinare il numero di riga in base all'indice del carattere specificato nella `index` parametro del metodo. La prima riga del testo nel controllo restituisce il valore zero. Il <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> metodo restituisce il numero di riga fisica in cui il carattere indicizzato si trova all'interno del controllo. Ad esempio, se una parte della prima riga del testo nella logica il controllo esegue il wrapping alla riga successiva, il <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> metodo restituisce 1 se il carattere in corrispondenza dell'indice del carattere specificato è eseguito il wrapping per la seconda riga fisica. Se <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> è impostata su `false`, senza la parte della riga esegue il wrapping a quella successiva e il metodo restituisce 0 per l'indice del carattere specificato. È possibile utilizzare questo metodo per determinare la riga si trova all'interno di un indice dei caratteri specifici. Ad esempio, dopo la chiamata di <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per eseguire la ricerca di testo, è possibile ottenere l'indice del carattere per cui sono stati trovati risultati della ricerca. È possibile chiamare questo metodo con l'indice del carattere restituito dal <xref:System.Windows.Forms.RichTextBox.Find%2A> metodo per determinare quale riga di word è stato trovato.  
  
 In alcuni casi <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> non viene generata un'eccezione quando il `index` parametro è un valore non valido. Ad esempio:  
  
-   Se il `index` parametro <xref:System.Int32.MinValue> oppure -1, <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> restituisce 0.  
  
-   Se il `index` parametro è la lunghezza del testo o <xref:System.Int32.MaxValue>, <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> restituisce il numero dell'ultima riga di testo, non è necessariamente lo stesso come `Lines.Length-1`, a seconda del valore del <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> proprietà.  
  
 In questi casi, convalidare l'input prima di chiamare <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A>.  
  
> [!NOTE]
>  Se l'indice del carattere specificato nella `index` parametro non rientra al numero di righe contenute all'interno del controllo disponibili, viene restituito l'ultimo numero di riga.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> metodo. Per eseguire l'esempio, incollare il codice seguente in un form contenente un <xref:System.Windows.Forms.RichTextBox> controllo denominato `RichTextBox1`, un pulsante denominato `Button1` e due caselle di testo denominate `TextBox1` e `TextBox2`. Quando si esegue l'esempio, immettere una stringa di ricerca in `TextBox2` e fare clic sul pulsante per ottenere i risultati della ricerca.  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxGetLine#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxGetLine/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxGetLine#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxGetLine/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxGetLine#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxGetLine/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public override System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="richTextBox.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice del carattere del quale recuperare la posizione.</param>
        <summary>Recupera la posizione all'interno del controllo in corrispondenza dell'indice del carattere specificato.</summary>
        <returns>Posizione del carattere specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di determinare la posizione nel controllo di un indice del carattere specifico. È possibile utilizzare questo metodo per attività quali la visualizzazione di scelta rapida menu elementi o la Guida informazioni per una parola nel controllo. Ad esempio, se si desidera visualizzare un menu di opzioni per l'utente quando l'utente con il pulsante destro fa clic su una parola nel controllo, è possibile utilizzare questo metodo per determinare la posizione della parola per visualizzare correttamente una <xref:System.Windows.Forms.ContextMenu> controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante un'operazione di trascinamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HScroll">
      <MemberSignature Language="C#" Value="public event EventHandler HScroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HScroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.HScroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HScroll As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HScroll;" />
      <MemberSignature Language="F#" Value="member this.HScroll : EventHandler " Usage="member this.HScroll : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente fa clic sulla barra di scorrimento orizzontale del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.RichTextBox.HScroll> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.RichTextBox> denominato `RichTextBox1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.RichTextBox.HScroll> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#540](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#540)]
 [!code-vb[System.Windows.Forms.EventExamples#540](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#540)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeChange">
      <MemberSignature Language="C#" Value="public event EventHandler ImeChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeChange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.ImeChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ImeChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ImeChange;" />
      <MemberSignature Language="F#" Value="member this.ImeChange : EventHandler " Usage="member this.ImeChange : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente passa da un metodo di input all'altro in una versione asiatica del sistema operativo Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.RichTextBox.ImeChange> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.RichTextBox> denominato `RichTextBox1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.RichTextBox.ImeChange> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#542](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#542)]
 [!code-vb[System.Windows.Forms.EventExamples#542](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#542)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageOption">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.RichTextBoxLanguageOptions LanguageOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RichTextBoxLanguageOptions LanguageOption" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.LanguageOption" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageOption As RichTextBoxLanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::RichTextBoxLanguageOptions LanguageOption { System::Windows::Forms::RichTextBoxLanguageOptions get(); void set(System::Windows::Forms::RichTextBoxLanguageOptions value); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOption : System.Windows.Forms.RichTextBoxLanguageOptions with get, set" Usage="System.Windows.Forms.RichTextBox.LanguageOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RichTextBoxLanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica impostazioni <see cref="T:System.Windows.Forms.RichTextBox" /> per editor del metodo di input o IME e per il supporto delle lingue orientali.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.RichTextBoxLanguageOptions" />. Il valore predefinito è <see cref="F:System.Windows.Forms.RichTextBoxLanguageOptions.AutoFontSizeAdjust" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkClicked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LinkClickedEventHandler LinkClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LinkClickedEventHandler LinkClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.LinkClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LinkClicked As LinkClickedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LinkClickedEventHandler ^ LinkClicked;" />
      <MemberSignature Language="F#" Value="member this.LinkClicked : System.Windows.Forms.LinkClickedEventHandler " Usage="member this.LinkClicked : System.Windows.Forms.LinkClickedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkClickedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente fa clic su un collegamento all'interno del testo del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un gestore eventi per questo evento per l'elaborazione di un collegamento che è stato fatto clic all'interno del controllo. Utilizzando le informazioni fornite al gestore dell'evento, è possibile determinare il collegamento selezionato nel documento.  
  
> [!IMPORTANT]
>  Per impostazione predefinita, i collegamenti vengono visualizzati come testo e non sono selezionabili. Per renderli selezionabili, impostare il <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A> proprietà `true`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice seguente contiene un gestore eventi per il <xref:System.Windows.Forms.RichTextBox.LinkClicked> evento. Il gestore dell'evento elabora clic sui collegamenti all'interno del documento di un <xref:System.Windows.Forms.RichTextBox> controllare e avvia un'istanza del browser predefinito (usando il <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> metodo), visualizzazione della pagina per il collegamento che è stato fatto clic. In questo esempio richiede che il gestore dell'evento è stato connesso per il <xref:System.Windows.Forms.RichTextBox.LinkClicked> evento per un <xref:System.Windows.Forms.RichTextBox>.  
  
 [!code-cpp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.DetectUrls" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFile">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica il contenuto di un file nel controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public void LoadFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.LoadFile : string -&gt; unit" Usage="richTextBox.LoadFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Nome e percorso del file da caricare nel controllo.</param>
        <summary>Carica un file RTF o un file di testo ASCII standard nel controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si carica un file con il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo, il contenuto del file in fase di caricamento di sostituisce l'intero contenuto del <xref:System.Windows.Forms.RichTextBox> controllo. In questo modo, i valori del <xref:System.Windows.Forms.TextBoxBase.Text%2A> e <xref:System.Windows.Forms.RichTextBox.Rtf%2A> le proprietà da modificare. È possibile utilizzare questo metodo per caricare un documento di formato RTF o un testo creato in precedenza nel controllo per la modifica. Se si desidera salvare il file, è possibile utilizzare il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo.  
  
> [!NOTE]
>  Con questa versione il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo, se il file in fase di caricamento non è un documento RTF, verificherà un'eccezione. Per caricare un tipo diverso di file, ad esempio un file di testo ASCII, utilizzare le altre versioni di questo metodo che accetta un valore compreso il <xref:System.Windows.Forms.RichTextBoxStreamType> enumerazione come parametro.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo non verrà aperto un file fino a quando non viene creato un handle per il <xref:System.Windows.Forms.RichTextBox>. Assicurarsi che l'handle del controllo venga creata prima di chiamare il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente consente di aprire un file RTF nel <xref:System.Windows.Forms.RichTextBox> controllo. Nell'esempio viene utilizzata la <xref:System.Windows.Forms.OpenFileDialog> classe per visualizzare una finestra di dialogo che richiede il file da parte dell'utente. Il codice quindi li carica il file presupponendo che si tratta di un RTF file del documento. Se il file non è, il codice di esempio genererà un'eccezione. In questo esempio richiede che il codice viene inserito in un <xref:System.Windows.Forms.Form> classe con un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.LoadFile Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LoadFile Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LoadFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LoadFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Si è verificato un errore durante il caricamento del file nel controllo.</exception>
        <exception cref="T:System.ArgumentException">Il file da caricare non è un documento RTF.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per aprire un file. Enumerazione associata: il <see langword="Read" /> valore <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
        <altmember cref="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public void LoadFile (System.IO.Stream data, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFile(class System.IO.Stream data, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFile (data As Stream, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFile(System::IO::Stream ^ data, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.LoadFile : System.IO.Stream * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.LoadFile (data, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="data">Flusso di dati da caricare nel controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</param>
        <param name="fileType">Uno dei valori di <see cref="T:System.Windows.Forms.RichTextBoxStreamType" />.</param>
        <summary>Carica il contenuto di un flusso di dati esistente nel controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa versione del <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo per caricare il <xref:System.Windows.Forms.RichTextBox> con i dati da un flusso di dati esistente. I dati che viene caricati nel controllo sostituiscono l'intero contenuto di <xref:System.Windows.Forms.RichTextBox> controllo. In questo modo, i valori del <xref:System.Windows.Forms.TextBoxBase.Text%2A> e <xref:System.Windows.Forms.RichTextBox.Rtf%2A> le proprietà da modificare. È possibile utilizzare questo metodo per caricare un file che è stata aperta in precedenza in un flusso di dati nel controllo per la modifica. Se si desidera salvare il contenuto del controllo nel flusso, è possibile usare il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo che accetta un <xref:System.IO.Stream> oggetto come parametro.  
  
 Questa versione del <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo consente inoltre di specificare il tipo di dati che viene caricati nel controllo. Questa funzionalità consente di utilizzare i flussi di dati che contengono dati diversi documenti in formato (RTF) RTF nel controllo.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo non verrà aperto un file fino a quando non viene creato un handle per il <xref:System.Windows.Forms.RichTextBox>. Assicurarsi che l'handle del controllo venga creata prima di chiamare il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> e <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodi con flussi. Viene inoltre illustrato l'utilizzo di <xref:System.Windows.Forms.FileDialog.FileName%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=nameWithType>, e <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=nameWithType> membri.  
  
 Questo è un esempio completo che è pronto per l'esecuzione quando si copia al progetto.  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Si è verificato un errore durante il caricamento del file nel controllo.</exception>
        <exception cref="T:System.ArgumentException">Il file da caricare non è un documento RTF.</exception>
        <altmember cref="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public void LoadFile (string path, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFile(string path, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFile (path As String, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFile(System::String ^ path, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.LoadFile : string * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.LoadFile (path, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="path">Nome e percorso del file da caricare nel controllo.</param>
        <param name="fileType">Uno dei valori di <see cref="T:System.Windows.Forms.RichTextBoxStreamType" />.</param>
        <summary>Carica un tipo specifico di file nel controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si carica un file con il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo, il contenuto del file in fase di caricamento di sostituisce l'intero contenuto del <xref:System.Windows.Forms.RichTextBox> controllo. In questo modo, i valori del <xref:System.Windows.Forms.TextBoxBase.Text%2A> e <xref:System.Windows.Forms.RichTextBox.Rtf%2A> le proprietà da modificare. È possibile utilizzare questo metodo per caricare un testo creato in precedenza o documento RTF (RICH) nel controllo per la modifica. Se si desidera salvare il file, è possibile utilizzare il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo.  
  
 È possibile utilizzare questa versione del <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo per specificare il tipo di file del file in fase di caricamento. Questa funzionalità consente di caricare file, ad eccezione di documenti RTF nel controllo.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo non verrà aperto un file fino a quando non viene creato un handle per il <xref:System.Windows.Forms.RichTextBox>. Assicurarsi che l'handle del controllo venga creata prima di chiamare il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente consente di aprire un file di testo nel <xref:System.Windows.Forms.RichTextBox> controllo. Nell'esempio viene utilizzata la <xref:System.Windows.Forms.OpenFileDialog> classe per visualizzare una finestra di dialogo che richiede il file da parte dell'utente. Il codice carica quindi tale file nel <xref:System.Windows.Forms.RichTextBox> controllo. Nell'esempio viene utilizzata questa versione del <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo per specificare che il file deve essere aperto come file di testo ASCII anziché il formato RTF standard. In questo esempio richiede che il codice viene inserito in un <xref:System.Windows.Forms.Form> classe con un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.LoadFile1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LoadFile1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile1 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LoadFile1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LoadFile1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Si è verificato un errore durante il caricamento del file nel controllo.</exception>
        <exception cref="T:System.ArgumentException">Il file da caricare non è un documento RTF.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per aprire un file. Enumerazione associata: il <see langword="Read" /> valore <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
        <altmember cref="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public override int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.RichTextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero massimo di caratteri che l’utente può digitare nel controllo casella di testo RTF.</summary>
        <value>Numero di caratteri che può essere immesso nel controllo. Il valore predefinito è <see cref="F:System.Int32.MaxValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando questa proprietà è impostata su 0, la lunghezza massima del testo che può essere immesso nel controllo è 64 KB di caratteri. Questa proprietà è in genere utilizzato quando il <xref:System.Windows.Forms.RichTextBox> consente di visualizzare una singola riga di testo formato (RTF). È possibile utilizzare questa proprietà per limitare la lunghezza del testo immesso nel controllo per i valori, ad esempio i codici postali e i numeri di telefono, o per limitare la lunghezza del testo immesso quando i dati da immettere in un database. È possibile limitare il testo immesso nel controllo per la lunghezza massima del campo corrispondente nel database.  
  
> [!NOTE]
>  Nel codice, è possibile impostare il valore della <xref:System.Windows.Forms.TextBoxBase.Text%2A> proprietà su un valore che può avere una lunghezza maggiore rispetto al valore specificato per il <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> proprietà. Questa proprietà influisce solo sul testo immesso nel controllo in fase di esecuzione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.MaxLength%2A> proprietà per determinare se il testo da assegnare a un <xref:System.Windows.Forms.RichTextBox> è maggiore del valore assegnato al controllo il <xref:System.Windows.Forms.RichTextBox.MaxLength%2A> proprietà. Se il testo non è più grande, nell'esempio viene utilizzato il <xref:System.Windows.Forms.RichTextBox.SelectedText%2A> proprietà a cui assegnare il testo del controllo. Questo esempio si presuppone che un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`, è stato aggiunto a un form e che nell'esempio viene chiamato con il testo fornito al parametro che deve essere incollato nel controllo. L'esempio richiede inoltre che il <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> impostata su un valore per limitare l'immissione di testo nel <xref:System.Windows.Forms.RichTextBox>.  
  
 [!code-cpp[RichTextBox.MaxLength#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.MaxLength/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.MaxLength#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.MaxLength/CS/form1.cs#1)]
 [!code-vb[RichTextBox.MaxLength#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.MaxLength/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore assegnato alla proprietà è minore di zero.</exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public override bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.RichTextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se si tratta di un controllo <see cref="T:System.Windows.Forms.RichTextBox" /> su più righe.</summary>
        <value>
          <see langword="true" /> se il controllo è un controllo <see cref="T:System.Windows.Forms.RichTextBox" /> su più righe. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="richTextBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.BackColorChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentsResized">
      <MemberSignature Language="C#" Value="protected virtual void OnContentsResized (System.Windows.Forms.ContentsResizedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentsResized(class System.Windows.Forms.ContentsResizedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentsResized (e As ContentsResizedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentsResized(System::Windows::Forms::ContentsResizedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentsResized : System.Windows.Forms.ContentsResizedEventArgs -&gt; unit&#xA;override this.OnContentsResized : System.Windows.Forms.ContentsResizedEventArgs -&gt; unit" Usage="richTextBox.OnContentsResized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ContentsResizedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ContentsResizedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.RichTextBox.ContentsResized" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.RichTextBox.OnContentsResized%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.ContentsResized" />
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuChanged">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnContextMenuChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnContextMenuChanged : EventArgs -&gt; unit" Usage="richTextBox.OnContextMenuChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="richTextBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="richTextBox.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnHScroll (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHScroll(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHScroll (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHScroll(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHScroll : EventArgs -&gt; unit&#xA;override this.OnHScroll : EventArgs -&gt; unit" Usage="richTextBox.OnHScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.RichTextBox.HScroll" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.RichTextBox.OnHScroll%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.HScroll" />
      </Docs>
    </Member>
    <Member MemberName="OnImeChange">
      <MemberSignature Language="C#" Value="protected virtual void OnImeChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnImeChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnImeChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnImeChange(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnImeChange : EventArgs -&gt; unit&#xA;override this.OnImeChange : EventArgs -&gt; unit" Usage="richTextBox.OnImeChange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.RichTextBox.ImeChange" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.RichTextBox.OnImeChange%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.ImeChange" />
      </Docs>
    </Member>
    <Member MemberName="OnLinkClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnLinkClicked (System.Windows.Forms.LinkClickedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLinkClicked(class System.Windows.Forms.LinkClickedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLinkClicked (e As LinkClickedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLinkClicked(System::Windows::Forms::LinkClickedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLinkClicked : System.Windows.Forms.LinkClickedEventArgs -&gt; unit&#xA;override this.OnLinkClicked : System.Windows.Forms.LinkClickedEventArgs -&gt; unit" Usage="richTextBox.OnLinkClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LinkClickedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.LinkClickedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.RichTextBox.LinkClicked" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.RichTextBox.OnLinkClicked%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.LinkClicked" />
      </Docs>
    </Member>
    <Member MemberName="OnProtected">
      <MemberSignature Language="C#" Value="protected virtual void OnProtected (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProtected(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProtected (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProtected(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProtected : EventArgs -&gt; unit&#xA;override this.OnProtected : EventArgs -&gt; unit" Usage="richTextBox.OnProtected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.RichTextBox.Protected" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.RichTextBox.OnProtected%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.Protected" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="richTextBox.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionChanged : EventArgs -&gt; unit" Usage="richTextBox.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.RichTextBox.SelectionChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.RichTextBox.OnSelectionChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnVScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnVScroll (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVScroll(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVScroll (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVScroll(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVScroll : EventArgs -&gt; unit&#xA;override this.OnVScroll : EventArgs -&gt; unit" Usage="richTextBox.OnVScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.RichTextBox.VScroll" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.RichTextBox.OnVScroll%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.VScroll" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (System.Windows.Forms.DataFormats.Format clipFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(class System.Windows.Forms.DataFormats/Format clipFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Paste(System.Windows.Forms.DataFormats.Format)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (clipFormat As DataFormats.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::Windows::Forms::DataFormats::Format ^ clipFormat);" />
      <MemberSignature Language="F#" Value="override this.Paste : System.Windows.Forms.DataFormats.Format -&gt; unit" Usage="richTextBox.Paste clipFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipFormat" Type="System.Windows.Forms.DataFormats+Format" />
      </Parameters>
      <Docs>
        <param name="clipFormat">Formato degli Appunti in cui devono essere ottenuti i dati dagli Appunti.</param>
        <summary>Incolla il contenuto degli Appunti nel formato degli Appunti specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questo metodo per incollare dati dagli Appunti nel controllo. Questa versione del <xref:System.Windows.Forms.RichTextBox.Paste%2A> è diverso dal metodo di <xref:System.Windows.Forms.TextBoxBase.Paste%2A?displayProperty=nameWithType> il metodo consente di incollare solo il testo in un formato degli Appunti. È possibile utilizzare il <xref:System.Windows.Forms.RichTextBox.CanPaste%2A> metodo per determinare se i dati all'interno di Appunti sono nel formato degli Appunti specificato. È quindi possibile chiamare questa versione del <xref:System.Windows.Forms.RichTextBox.Paste%2A> metodo per assicurarsi che l'operazione Incolla viene eseguita con il formato di dati appropriato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.Paste%2A> metodo per incollare una bitmap nel <xref:System.Windows.Forms.RichTextBox> controllo. Dopo l'apertura di una bitmap da file, nell'esempio viene utilizzato il <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> metodo per copiare la bitmap negli Appunti di Windows. Infine, nell'esempio viene recuperato il formato per il <xref:System.Drawing.Bitmap> dell'oggetto, è possibile verificare che il formato può essere incollato nel <xref:System.Windows.Forms.RichTextBox> controllo e viene utilizzato il <xref:System.Windows.Forms.RichTextBox.Paste%2A> metodo per incollare i dati.  
  
 [!code-cpp[RichText_Paste#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichText_Paste/CPP/form1.cpp#1)]
 [!code-csharp[RichText_Paste#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichText_Paste/CS/form1.cs#1)]
 [!code-vb[RichText_Paste#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichText_Paste/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">per la lettura dagli Appunti. Enumerazione associata: il <see langword="AllClipboard" /> valore <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</permission>
        <altmember cref="M:System.Windows.Forms.RichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="richTextBox.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m">Oggetto <see cref="T:System.Windows.Forms.Message" />, passato per riferimento, che rappresenta il messaggio della finestra da elaborare.</param>
        <param name="keyData">Uno dei valori di <see cref="T:System.Windows.Forms.Keys" /> che rappresenta il tasto da elaborare.</param>
        <summary>Elabora un tasto di comando.</summary>
        <returns>
          <see langword="true" /> se il carattere è stato elaborato dal controllo; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="Protected">
      <MemberSignature Language="C#" Value="public event EventHandler Protected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Protected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.Protected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Protected As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Protected;" />
      <MemberSignature Language="F#" Value="member this.Protected : EventHandler " Usage="member this.Protected : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente tenta di modificare un testo protetto nel controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un gestore eventi per questo evento nelle applicazioni per determinare quando l'utente ha tentato di modificare il testo che è stato contrassegnato come protetto nel controllo. Il gestore dell'evento può essere utilizzato per notificare all'utente che il testo, l'utente tenta di modificare è protetto o per visualizzare una finestra di dialogo che consente all'utente di apportare modifiche appropriate al testo. Ad esempio, se l'area protetta è una data, è possibile visualizzare una finestra di dialogo che consente all'utente di scegliere una data che può essere applicata al testo del controllo.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.RichTextBox.Protected> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.RichTextBox> denominato `RichTextBox1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.RichTextBox.Protected> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#543](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#543)]
 [!code-vb[System.Windows.Forms.EventExamples#543](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#543)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questo evento non è pertinente per questa classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public void Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redo();" />
      <MemberSignature Language="F#" Value="member this.Redo : unit -&gt; unit" Usage="richTextBox.Redo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Riapplica l’ultima operazione annullata nel controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È quindi possibile usare il <xref:System.Windows.Forms.RichTextBox.Redo%2A> metodo per riapplicare l'ultima operazione di annullamento al controllo. Il <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> metodo consente di determinare se l'ultima operazione annullata dall'utente possa essere riapplicata al controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> e <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> delle proprietà e il <xref:System.Windows.Forms.RichTextBox.Redo%2A> (metodo), per limitare un'operazione di rollforward a qualsiasi azione, ad eccezione dell'eliminazione del testo. In questo esempio è necessario un form che contiene un <xref:System.Windows.Forms.RichTextBox> controllo e che un'operazione all'interno di <xref:System.Windows.Forms.RichTextBox> è stata eseguita e annullata prima che il codice in questo esempio viene chiamato.  
  
 [!code-cpp[RichTextBox.RedoAction#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.RedoAction/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.RedoAction#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.RedoAction/CS/form1.cs#1)]
 [!code-vb[RichTextBox.RedoAction#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.RedoAction/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.CanRedo" />
      </Docs>
    </Member>
    <Member MemberName="RedoActionName">
      <MemberSignature Language="C#" Value="public string RedoActionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedoActionName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.RedoActionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RedoActionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RedoActionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RedoActionName : string" Usage="System.Windows.Forms.RichTextBox.RedoActionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'operazione che può essere riapplicata al controllo quando viene chiamato il metodo <see cref="M:System.Windows.Forms.RichTextBox.Redo" />.</summary>
        <value>Stringa che rappresenta il nome dell'operazione che sarà eseguita quando viene eseguita una chiamata al metodo <see cref="M:System.Windows.Forms.RichTextBox.Redo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questa proprietà restituisce una stringa vuota (""), nessuna operazione disponibile per riapplicare al controllo. È possibile utilizzare questo metodo per determinare l'ultima azione annullata nel <xref:System.Windows.Forms.RichTextBox> controllo che possa essere applicato per il controllo quando una chiamata al <xref:System.Windows.Forms.RichTextBox.Redo%2A> metodo è costituito. È possibile determinare se sono presenti operazioni di essere riapplicate al controllo utilizzando il <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> e <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> delle proprietà e il <xref:System.Windows.Forms.RichTextBox.Redo%2A> (metodo), per limitare un'operazione di rollforward a qualsiasi azione, ad eccezione dell'eliminazione del testo. In questo esempio è necessario un form che contiene un <xref:System.Windows.Forms.RichTextBox> controllo e che un'operazione all'interno di <xref:System.Windows.Forms.RichTextBox> è stata eseguita e annullata prima che il codice in questo esempio viene chiamato.  
  
 [!code-cpp[RichTextBox.RedoAction#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.RedoAction/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.RedoAction#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.RedoAction/CS/form1.cs#1)]
 [!code-vb[RichTextBox.RedoAction#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.RedoAction/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.CanRedo" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.Redo" />
      </Docs>
    </Member>
    <Member MemberName="RichTextShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool RichTextShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RichTextShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property RichTextShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RichTextShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RichTextShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà non è pertinente per questa classe.</summary>
        <value>
          <see langword="true" /> se i tasti di scelta rapida sono abilitati; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightMargin">
      <MemberSignature Language="C#" Value="public int RightMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RightMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.RightMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property RightMargin As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RightMargin { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RightMargin : int with get, set" Usage="System.Windows.Forms.RichTextBox.RightMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la dimensione di una singola riga di testo all'interno del controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <value>Dimensioni di una singola riga di testo all'interno del controllo, in pixel. Il valore predefinito è zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando nel controllo viene immesso un valore maggiore di zero, viene inserito un margine non visibile nel controllo in corrispondenza del numero specificato di pixel dal lato sinistro del controllo. Qualsiasi testo immesso che si estenda oltre il margine viene inserito nella riga successiva del testo nel controllo. Questa proprietà influisce su tutto il testo attualmente immesso nel controllo, nonché il testo immesso nel controllo dopo aver impostata la proprietà. È possibile utilizzare questa proprietà per specificare la larghezza massima delle righe per tutto il testo immesso in un <xref:System.Windows.Forms.RichTextBox> controllo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Windows.Forms.RichTextBox> che esegue lo zoom sul testo, seleziona automaticamente parole nel testo del controllo quando si fa doppio clic e ha un margine sul lato destro dell'area client del controllo. Se il <xref:System.Windows.Forms.RichTextBox> controllo ha una larghezza di piccole dimensioni, con questo codice verrà creato un <xref:System.Windows.Forms.RichTextBox> in cui ogni carattere di testo viene visualizzato nella riga corrispondente. In questa posizione di visualizzazione verticale, fare clic su qualsiasi parte di una parola selezionerà tutti i caratteri della parola indipendentemente dal fatto che il testo viene visualizzato in verticale. In questo esempio è necessario un form che contiene un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`.  
  
 [!code-cpp[RichTextBox.ZoomFactor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.ZoomFactor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CS/form1.cs#1)]
 [!code-vb[RichTextBox.ZoomFactor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.ZoomFactor/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore specificato era minore di zero</exception>
      </Docs>
    </Member>
    <Member MemberName="Rtf">
      <MemberSignature Language="C#" Value="public string Rtf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Rtf" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Rtf" />
      <MemberSignature Language="VB.NET" Value="Public Property Rtf As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Rtf { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Rtf : string with get, set" Usage="System.Windows.Forms.RichTextBox.Rtf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo del controllo <see cref="T:System.Windows.Forms.RichTextBox" />, inclusi tutti i codici RTF.</summary>
        <value>Testo del controllo in formato RTF.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa proprietà per inserire il testo in formato RTF nel controllo per la visualizzazione o per estrarre il testo del controllo con la formattazione RTF specificata definita nel testo del controllo. Questa proprietà viene in genere utilizzata quando si assegna testo RTF da un'altra origine RTF, ad esempio Microsoft Word o WordPad di Windows per il controllo.  
  
 Se si modifica il <xref:System.Windows.Forms.Control.RightToLeft%2A> proprietà in fase di esecuzione, solo il testo non elaborato senza formattazione viene mantenuta.  
  
 Per i codici RTF, vedere "rich text format Specification (RTF), versione 1.6" in MSDN all'indirizzo http://msdn.microsoft.com/library.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Salva il contenuto dell'oggetto <see cref="T:System.Windows.Forms.RichTextBox" /> in un file.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveFile">
      <MemberSignature Language="C#" Value="public void SaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SaveFile : string -&gt; unit" Usage="richTextBox.SaveFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Nome e percorso del file da salvare.</param>
        <summary>Salva il contenuto dell'oggetto <see cref="T:System.Windows.Forms.RichTextBox" /> in un file RTF.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo consente di salvare l'intero contenuto del controllo in un file RTF che può essere usato da altri programmi, ad esempio Microsoft Word e WordPad di Windows. Se il nome del file che verrà passato il `path` parametro esiste già nella directory specificata, il file verrà sovrascritto senza preavviso. È possibile usare il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo per caricare il contenuto di un file nel <xref:System.Windows.Forms.RichTextBox>.  
  
> [!NOTE]
>  Per salvare il contenuto del controllo a un altro tipo di formato di file, ad esempio testo ASCII, utilizzare le altre versioni di questo metodo che accetta un valore compreso il <xref:System.Windows.Forms.RichTextBoxStreamType> enumerazione come parametro.  
  
   
  
## Examples  
 Esempio di codice seguente salva il contenuto di un <xref:System.Windows.Forms.RichTextBox> controllo in un file RTF. Nell'esempio viene utilizzata la <xref:System.Windows.Forms.SaveFileDialog> classe per visualizzare una finestra di dialogo per richiedere all'utente, il percorso e il nome del file da salvare. Il codice quindi Salva il file presupponendo che il contenuto è in formato RTF. Se il file esiste già, viene automaticamente sovrascritto. In questo esempio richiede che il codice viene inserito in un <xref:System.Windows.Forms.Form> classe con un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.SaveFile Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SaveFile Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SaveFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SaveFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Errore durante il salvataggio del contenuto del controllo in un file.</exception>
        <altmember cref="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SaveFile">
      <MemberSignature Language="C#" Value="public void SaveFile (System.IO.Stream data, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveFile(class System.IO.Stream data, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.SaveFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveFile (data As Stream, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveFile(System::IO::Stream ^ data, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.SaveFile : System.IO.Stream * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.SaveFile (data, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="data">Flusso di dati che contiene il file in cui effettuare il salvataggio.</param>
        <param name="fileType">Uno dei valori di <see cref="T:System.Windows.Forms.RichTextBoxStreamType" />.</param>
        <summary>Salva il contenuto di un controllo <see cref="T:System.Windows.Forms.RichTextBox" /> in un flusso di dati aperto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa versione del <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo consente di salvare l'intero contenuto del controllo al flusso di dati che è già aperto. Il flusso di dati può quindi salvare le informazioni in un file. È possibile usare il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo per caricare il contenuto di un file nel <xref:System.Windows.Forms.RichTextBox>.  
  
 Questa versione del <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo consente inoltre di specificare un formato di dati delle informazioni che verranno inviate al <xref:System.IO.Stream> oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> e <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodi con flussi. Viene inoltre illustrato l'utilizzo di <xref:System.Windows.Forms.FileDialog.FileName%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=nameWithType>, e <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=nameWithType> membri.  
  
 Questo è un esempio completo che è pronto per l'esecuzione quando si copia al progetto.  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tipo di file non valido specificato nel parametro <paramref name="fileType" />.</exception>
        <exception cref="T:System.IO.IOException">Errore durante il salvataggio del contenuto del controllo in un file.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la creazione o modifica di un file. Enumerazione associata: il <see langword="Write" /> valore <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="SaveFile">
      <MemberSignature Language="C#" Value="public void SaveFile (string path, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveFile(string path, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.SaveFile(System.String,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveFile (path As String, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveFile(System::String ^ path, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.SaveFile : string * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.SaveFile (path, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="path">Nome e percorso del file da salvare.</param>
        <param name="fileType">Uno dei valori di <see cref="T:System.Windows.Forms.RichTextBoxStreamType" />.</param>
        <summary>Salva il contenuto dell'oggetto <see cref="T:System.Windows.Forms.RichTextBox" /> in un tipo di file specifico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo consente di salvare l'intero contenuto del controllo in un file RTF che può essere usato da altri programmi, ad esempio Microsoft Word e WordPad di Windows. Se il nome del file che verrà passato il `path` parametro esiste già nella directory specificata, il file verrà sovrascritto senza preavviso. È possibile usare il <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> metodo per caricare il contenuto di un file nel <xref:System.Windows.Forms.RichTextBox>.  
  
 Questa versione del <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo consente di specificare un tipo di file per salvare il contenuto del controllo. È possibile utilizzare questa funzionalità per garantire che il file viene salvato nel formato corretto in base al contenuto del controllo. Ad esempio, se il documento non presenta differenze lo stile del carattere e colori, è possibile salvare il file come file di testo ASCII impostando il `fileType` parametro `RichTextBoxStreamType.PlainText`.  
  
   
  
## Examples  
 Esempio di codice seguente salva il contenuto del <xref:System.Windows.Forms.RichTextBox> in un file di testo ASCII. Nell'esempio viene utilizzata la <xref:System.Windows.Forms.SaveFileDialog> classe per visualizzare una finestra di dialogo per richiedere il percorso e nome file da parte dell'utente. Il codice salva il contenuto del controllo a tale file. Nell'esempio viene utilizzata questa versione del <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> metodo per specificare che il file salvati come file di testo ASCII anziché il formato RTF standard. In questo esempio richiede che il codice viene inserito in un <xref:System.Windows.Forms.Form> classe con un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.SaveFile1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SaveFile1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile1 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SaveFile1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SaveFile1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tipo di file non valido specificato nel parametro <paramref name="fileType" />.</exception>
        <exception cref="T:System.IO.IOException">Errore durante il salvataggio del contenuto del controllo in un file.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la creazione o modifica di un file. Enumerazione associata: il <see langword="Write" /> valore <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
        <altmember cref="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.RichTextBoxScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RichTextBoxScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As RichTextBoxScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::RichTextBoxScrollBars ScrollBars { System::Windows::Forms::RichTextBoxScrollBars get(); void set(System::Windows::Forms::RichTextBoxScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.RichTextBoxScrollBars with get, set" Usage="System.Windows.Forms.RichTextBox.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RichTextBoxScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di barre di scorrimento da visualizzare nel controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.RichTextBoxScrollBars" />. Il valore predefinito è <see langword="RichTextBoxScrollBars.Both" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di fornire all'utente di barre di scorrimento orizzontale e verticale di <xref:System.Windows.Forms.RichTextBox> controllo per abilitare scorrimento testo all'interno del controllo che non è compreso le dimensioni fisiche del controllo. È inoltre possibile utilizzare questa proprietà per rimuovere le barre di scorrimento dal controllo per limitare il contenuto del controllo di scorrimento.  
  
> [!NOTE]
>  Non verranno visualizzate le barre di scorrimento orizzontale se il <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> viene `true`, indipendentemente dal valore della <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è definito nell'enumerazione di <see cref="T:System.Windows.Forms.RichTextBoxScrollBars" />.</exception>
        <altmember cref="T:System.Windows.Forms.RichTextBoxScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="SelectedRtf">
      <MemberSignature Language="C#" Value="public string SelectedRtf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedRtf" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectedRtf" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedRtf As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedRtf { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedRtf : string with get, set" Usage="System.Windows.Forms.RichTextBox.SelectedRtf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo formattato RTF nel controllo attualmente selezionato.</summary>
        <value>Testo RTF selezionato nel controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di ottenere il testo selezionato nel controllo, tra cui i codici di formattazione RTF. È possibile utilizzare questa proprietà per copiare il testo dal controllo, completo di formattazione e Incolla il testo in altre applicazioni che accettano RTF formattato testo, ad esempio Microsoft Word e WordPad di Windows. Per ottenere il testo selezionato, senza i codici di formattazione RTF, usare il <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A> proprietà.  
  
 Se è selezionato alcun testo, il testo specificato in questa proprietà viene inserito nel punto di inserimento. Se viene selezionato testo, qualsiasi testo assegnato a questa proprietà sostituisce il testo selezionato.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.Rtf" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public override string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.RichTextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo selezionato all’interno dell'oggetto <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <value>Stringa che rappresenta il testo selezionato nel controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> proprietà con il <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>, e <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> delle proprietà per creare un elenco puntato in un <xref:System.Windows.Forms.RichTextBox> controllo. Questo esempio si presuppone che un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1` viene creato in un form.  
  
 [!code-cpp[RichTextBox.SelectionBullet#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionBullet#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionBullet#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionBullet/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment SelectionAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment SelectionAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionAlignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment SelectionAlignment { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionAlignment : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'allineamento da applicare alla selezione o al punto di inserimento.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se nel controllo è selezionato alcun paragrafo, impostazione di questa proprietà si applica l'impostazione di allineamento del paragrafo in cui il punto di inserimento viene visualizzato anche ai paragrafi creati dopo il paragrafo con l'impostazione della proprietà di allineamento. Ad esempio, se sono presenti due paragrafi in una <xref:System.Windows.Forms.RichTextBox> controllo e il punto di inserimento si trova all'interno del secondo paragrafo. Se si imposta la <xref:System.Windows.Forms.RichTextBox.SelectionAlignment%2A> proprietà `HorizontalAlignment.Center`, paragrafo nel punto di inserimento verrà centrato all'interno del controllo. Se viene creato un terzo paragrafo dopo il secondo paragrafo, anche viene allineato al centro del controllo.  
  
 Se viene effettuata una selezione all'interno del controllo quando la proprietà è impostata, tutti i paragrafi selezionati sono allineati in base a questa impostazione di proprietà. È possibile utilizzare questa proprietà per allineare i paragrafi in un documento viene creato il <xref:System.Windows.Forms.RichTextBox>. Ad esempio, se si desidera che tutti i paragrafi in un documento da allineare al centro, è possibile selezionare tutti i paragrafi nel controllo e impostare il <xref:System.Windows.Forms.RichTextBox.SelectionAlignment%2A> proprietà `HorizontalAlignment.Center`.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.RichTextBox.SelectionAlignment%2A> Restituisce `SelectionAlignment.Left` quando la selezione di testo contiene più paragrafi con allineamento misto.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come allineare il testo all'interno di <xref:System.Windows.Forms.RichTextBox>. È possibile utilizzare questa proprietà per limitare le operazioni disponibili per essere annullata dall'utente del controllo.  
  
 [!code-cpp[RichTextBox.SelectionAlignment#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionAlignment/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionAlignment#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionAlignment/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionAlignment#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionAlignment/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori definiti nella classe <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
      </Docs>
    </Member>
    <Member MemberName="SelectionBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore del testo quando il testo viene selezionato in un controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore del testo quando questo viene selezionato. Il valore predefinito corrisponde al valore della proprietà <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valore pari a 1,0 indica che nessun zoom viene applicato al controllo. La funzionalità dello zoom esegue in modo ottimale quando il documento contiene tipi di carattere TrueType. Quando viene utilizzato un carattere che non è TrueType all'interno del documento del controllo, il <xref:System.Windows.Forms.RichTextBox.SelectionBackColor%2A> proprietà utilizzerà il valore di numero intero più vicino.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBullet">
      <MemberSignature Language="C#" Value="public bool SelectionBullet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectionBullet" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionBullet" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBullet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectionBullet { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBullet : bool with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionBullet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se lo stile elenco puntato è applicato alla selezione o al punto di inserimento corrente.</summary>
        <value>
          <see langword="true" /> se alla selezione o punto di inserimento corrente è applicato lo stile elenco puntato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non viene selezionato testo, stile viene applicato al punto di inserimento corrente e a tutti i paragrafi immessi dall'utente dopo il punto di inserimento. Stile viene applicato al testo del controllo fino a quando il punto di inserimento verrà spostato o quando l'utente preme il tasto INVIO su un punto vuoto.  
  
 Se viene selezionato testo all'interno del controllo quando questa proprietà è impostata, tutti i paragrafi all'interno del testo selezionato vengono convertiti in elementi puntati nell'elenco puntato. È possibile utilizzare questa proprietà per creare elenchi puntati all'interno dei documenti creati nel <xref:System.Windows.Forms.RichTextBox> controllo.  
  
 Il <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A> proprietà consente di specificare la quantità di rientro da applicare tra il punto e il testo della voce di elenco puntato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> proprietà con il <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>, e <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> delle proprietà per creare un elenco puntato in un <xref:System.Windows.Forms.RichTextBox> controllo. Questo esempio si presuppone che un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1` viene creato in un form.  
  
 [!code-cpp[RichTextBox.SelectionBullet#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionBullet#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionBullet#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionBullet/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.BulletIndent" />
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la selezione del testo all'interno del controllo viene modificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un gestore eventi per questo evento determinare quando l'utente ha modificato la selezione di testo all'interno del controllo. Un gestore eventi per questo evento può essere utilizzato per mantenere il testo selezionato fino a quando l'utente ha completato un'attività all'interno dell'applicazione.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.RichTextBox.SelectionChanged> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.RichTextBox> denominato `RichTextBox1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.RichTextBox.SelectionChanged> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#544](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#544)]
 [!code-vb[System.Windows.Forms.EventExamples#544](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#544)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionCharOffset">
      <MemberSignature Language="C#" Value="public int SelectionCharOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionCharOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionCharOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionCharOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionCharOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionCharOffset : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionCharOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la visualizzazione del testo nel controllo sulla linea di base, come apice o come pedice sotto la linea di base.</summary>
        <value>Un numero che specifica l'offset dei caratteri.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa proprietà deve essere compreso tra -2000 e 2000.  
  
 Se questa proprietà è impostata su zero, il testo viene visualizzato sulla linea di base. Se è un numero positivo, il numero specifica il numero di pixel da cui elevare la selezione di testo sopra la linea di base. Se è un numero negativo, questo numero specifica il numero di pixel che in pedice la selezione di testo. È possibile utilizzare questa proprietà per specificare il testo come apice o pedice.  
  
 Se non viene selezionato testo, l'offset viene applicato al punto di inserimento corrente e a tutto il testo che l'utente digita dopo il punto di inserimento. L'offset carattere viene applicata fino a quando non viene modificata la proprietà su un valore diverso o fino a quando il punto di inserimento viene spostato in un'altra sezione all'interno del controllo.  
  
 Se viene selezionato testo all'interno del controllo, il testo selezionato e il testo immesso dopo la selezione di testo avrà il valore di questa proprietà applicato. È possibile utilizzare questa proprietà per creare testo apice e pedice per tali applicazioni come espressioni matematiche.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come specificare apice e pedice testo all'interno di <xref:System.Windows.Forms.RichTextBox> utilizzando il <xref:System.Windows.Forms.RichTextBox.SelectionCharOffset%2A> proprietà. È possibile utilizzare questa proprietà per limitare le operazioni disponibili per essere annullata dall'utente del controllo.  
  
 [!code-cpp[RichTextBox.SelectionCharOffset#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionCharOffset/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionCharOffset#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionCharOffset/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionCharOffset#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionCharOffset/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore specificato era minore di -2000 o maggiore di 2000.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore del testo della selezione di testo o del punto di inserimento corrente.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore da applicare alla selezione di testo corrente o al testo immesso dopo il punto di inserimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la selezione di testo corrente contiene più di un colore specificato, questa proprietà restituisce `Color.Empty`. Se è selezionato alcun testo, il colore del testo specificato in questa proprietà viene applicato al punto di inserimento corrente e a tutto il testo digitato nel controllo dopo il punto di inserimento. L'impostazione del colore del testo viene applicata fino a quando non viene modificata la proprietà su un colore diverso o fino a quando il punto di inserimento viene spostato in un'altra sezione all'interno del controllo.  
  
 Se viene selezionato testo all'interno del controllo, il testo selezionato e il testo immesso dopo la selezione di testo avrà il valore di questa proprietà applicato. È possibile utilizzare questa proprietà per modificare il colore del testo di <xref:System.Windows.Forms.RichTextBox>.  
  
 Per rendere il testo in grassetto nel controllo, usare il <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A> proprietà a cui assegnare un nuovo tipo di carattere con lo stile del carattere grassetto specificato.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene visualizza una <xref:System.Windows.Forms.ColorDialog> punto l'utente può specificare un colore per la selezione di testo corrente o il testo immesso dopo l'inserimento corrente in un <xref:System.Windows.Forms.RichTextBox> controllo. In questo esempio richiede che il metodo definito nell'esempio viene aggiunto a un <xref:System.Windows.Forms.Form> classe che contiene una <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`.  
  
 [!code-cpp[Classic RichTextBox.SelectionColor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SelectionColor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SelectionColor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SelectionColor Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SelectionColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SelectionColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionFont" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font SelectionFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font SelectionFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionFont" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ SelectionFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di carattere della selezione di testo o del punto di inserimento corrente.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Font" /> che rappresenta il tipo di carattere da applicare alla selezione di testo corrente o al testo immesso dopo il punto di inserimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la selezione di testo corrente contiene più di un tipo di carattere specificato, questa proprietà è `null`. Se è selezionato alcun testo, il tipo di carattere specificato in questa proprietà viene applicata al punto di inserimento corrente e a tutto il testo digitato nel controllo dopo il punto di inserimento. L'impostazione del tipo di carattere viene applicata fino a quando non viene modificata la proprietà di un carattere diverso o fino a quando il punto di inserimento viene spostato in un'altra sezione all'interno del controllo.  
  
 Se viene selezionato testo all'interno del controllo, il testo selezionato e il testo immesso dopo la selezione di testo avrà il valore di questa proprietà applicato. È possibile utilizzare questa proprietà per modificare lo stile del carattere del testo di <xref:System.Windows.Forms.RichTextBox>. È possibile rendere il testo nel controllo grassetto, corsivo e sottolineato. È inoltre possibile modificare le dimensioni del testo e il tipo di carattere applicato al testo.  
  
 Per modificare il colore del testo nel controllo, utilizzare il <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene modificato lo stile grassetto a carattere corrente l'impostazione per la selezione di testo o il testo immesso dopo il punto di inserimento all'interno di <xref:System.Windows.Forms.RichTextBox> controllo. In questo esempio richiede che il codice è contenuto all'interno di un metodo in un <xref:System.Windows.Forms.Form>. L'esempio richiede inoltre che un <xref:System.Windows.Forms.RichTextBox>, denominato `richTextBox1`, è stato aggiunto il <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[Classic RichTextBox.SelectionFont Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SelectionFont Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SelectionFont Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SelectionFont Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SelectionFont Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SelectionFont Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionColor" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionHangingIndent">
      <MemberSignature Language="C#" Value="public int SelectionHangingIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionHangingIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionHangingIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionHangingIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionHangingIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionHangingIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionHangingIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la distanza tra il margine sinistro della prima riga di testo, nel paragrafo selezionato, e il margine sinistro delle righe successive nello stesso paragrafo.</summary>
        <value>La distanza, in pixel, per il rientro sporgente applicato alla selezione di testo o al punto di inserimento corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è selezionato alcun testo, viene applicato il rientro sporgente per il paragrafo in cui viene visualizzato il punto di inserimento e tutto il testo digitato nel controllo dopo il punto di inserimento. L'impostazione di rientri sporgenti viene applicata fino a quando non viene modificata la proprietà su un valore diverso o fino a quando il punto di inserimento viene spostato in un paragrafo diversi all'interno del controllo.  
  
 Se viene selezionato testo all'interno del controllo, il testo selezionato e il testo immesso dopo la selezione di testo avrà il valore di questa proprietà applicato. È possibile utilizzare questa proprietà per applicare un rientro ai paragrafi.  
  
 Per impostare il rientro della prima riga di una selezione al paragrafo, utilizzare il <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come specificare rientri sporgenti all'interno di <xref:System.Windows.Forms.RichTextBox> utilizzando il <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> proprietà. È possibile utilizzare questa proprietà per limitare le operazioni disponibili per essere annullata dall'utente del controllo.  
  
 [!code-cpp[RichTextBox.SelectionHangingIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionHangingIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionHangingIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionHangingIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionHangingIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionHangingIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionIndent" />
      </Docs>
    </Member>
    <Member MemberName="SelectionIndent">
      <MemberSignature Language="C#" Value="public int SelectionIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la lunghezza in pixel del rientro della riga in corrispondenza della quale ha inizio la selezione.</summary>
        <value>Distanza corrente, in pixel, del rientro applicato a sinistra della selezione di testo o del punto di inserimento corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è selezionato alcun testo, l'impostazione di rientro viene applicato al paragrafo in cui viene visualizzato il punto di inserimento e a tutto il testo digitato nel controllo dopo il punto di inserimento. L'impostazione di rientro viene applicata fino a quando non viene modificata la proprietà su un valore diverso o fino a quando il punto di inserimento viene spostato in un paragrafo diversi all'interno del controllo.  
  
 Se viene selezionato testo all'interno del controllo, il testo selezionato e il testo immesso dopo la selezione di testo avrà il valore di questa proprietà applicato. È possibile utilizzare questa proprietà per impostare un rientro dei paragrafi contenuti nel documento del <xref:System.Windows.Forms.RichTextBox>. È possibile utilizzare questa proprietà in combinazione con il <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A> per creare paragrafi visualizzati nei paragrafi.  
  
 Per creare un rientro sporgente per paragrafi nel controllo, utilizzare il <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come specificare testo rientrato all'interno di <xref:System.Windows.Forms.RichTextBox> utilizzando il <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> proprietà. È possibile utilizzare questa proprietà per limitare le operazioni disponibili per essere annullata dall'utente del controllo.  
  
 [!code-cpp[RichTextBox.SelectionIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionRightIndent" />
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionHangingIndent" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public override int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di caratteri selezionati nel controllo.</summary>
        <value>Numero di caratteri selezionati nella casella di testo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa proprietà per determinare se tutti i caratteri sono attualmente selezionati nel controllo casella di testo prima di eseguire operazioni sul testo selezionato. È inoltre possibile utilizzare questa proprietà per determinare il numero totale di caratteri (spazi inclusi) che vengono selezionate durante l'esecuzione di un carattere singolo le attività in un `for` ciclo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.RichTextBox.SelectionLength%2A> proprietà per determinare se è selezionato del testo all'interno di <xref:System.Windows.Forms.RichTextBox>. È possibile utilizzare questa proprietà per limitare le operazioni disponibili per essere annullata dall'utente del controllo. L'esempio richiede inoltre che `richTextBox1` contiene il testo selezionato nel controllo.  
  
 [!code-cpp[RichTextBox.SelectionLength#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionLength/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionLength#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionLength/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionLength#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionLength/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionProtected">
      <MemberSignature Language="C#" Value="public bool SelectionProtected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectionProtected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionProtected" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectionProtected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionProtected : bool with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionProtected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la selezione di testo corrente è protetta.</summary>
        <value>
          <see langword="true" /> se non è consentito apportare modifiche ai contenuti della selezione corrente; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è selezionato alcun testo, l'impostazione di protezione viene applicata al paragrafo in cui viene visualizzato il punto di inserimento e a tutto il testo digitato nel controllo dopo il punto di inserimento. L'impostazione di protezione viene applicata fino a quando non viene modificata la proprietà su un valore diverso o fino a quando il punto di inserimento viene spostato in un paragrafo diversi all'interno del controllo.  
  
 Se viene selezionato testo all'interno del controllo, il testo selezionato e il testo immesso dopo la selezione di testo avrà il valore di questa proprietà applicato. È possibile utilizzare questa proprietà impedisce all'utente di modificare le sezioni di testo all'interno del controllo.  
  
 Se questa proprietà è impostata su `true`, il <xref:System.Windows.Forms.RichTextBox.Protected> evento viene generato quando l'utente tenta di modificare la selezione di testo corrente.  
  
> [!NOTE]
>  Questa proprietà restituirà `true` solo se l'intera selezione all'interno del controllo include contenuto protetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come specificare testo protetto all'interno di <xref:System.Windows.Forms.RichTextBox> utilizzando il <xref:System.Windows.Forms.RichTextBox.SelectionProtected%2A> proprietà. Questo esempio si presuppone che un <xref:System.Windows.Forms.RichTextBox> (controllo), denominato `richTextBox1`, è stato aggiunto al form e che il <xref:System.Windows.Forms.RichTextBox> controllo ha aggiunto a esso di testo che contiene la parola "RichTextBox."  
  
 [!code-cpp[RichTextBox.SelectionProtected#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionProtected/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionProtected#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionProtected/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionProtected#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionProtected/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.RichTextBox.Protected" />
      </Docs>
    </Member>
    <Member MemberName="SelectionRightIndent">
      <MemberSignature Language="C#" Value="public int SelectionRightIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionRightIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionRightIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionRightIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionRightIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionRightIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionRightIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Distanza, espressa in pixel, tra il bordo destro del controllo <see cref="T:System.Windows.Forms.RichTextBox" /> e il bordo destro del testo selezionato o aggiunto in corrispondenza del punto di inserimento.</summary>
        <value>Spazio di rientro, in pixel, a destra della selezione o del punto di inserimento corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è selezionato alcun testo, l'impostazione di rientro viene applicato al paragrafo in cui viene visualizzato il punto di inserimento e a tutto il testo digitato nel controllo dopo il punto di inserimento. L'impostazione di rientro viene applicata fino a quando non viene modificata la proprietà su un valore diverso o fino a quando il punto di inserimento viene spostato in un paragrafo diversi all'interno del controllo.  
  
 Se viene selezionato testo all'interno del controllo, il testo selezionato e il testo immesso dopo la selezione di testo avrà il valore di questa proprietà applicato. È possibile utilizzare questa proprietà per impostare un rientro dei paragrafi contenuti nel documento del <xref:System.Windows.Forms.RichTextBox>. È possibile utilizzare questa proprietà in combinazione con il <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> per creare paragrafi visualizzati nei paragrafi.  
  
 Per creare un rientro sporgente per paragrafi nel controllo, utilizzare il <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un margine destro in un <xref:System.Windows.Forms.RichTextBox> utilizzando il <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A> proprietà. L'esempio presenta i requisiti di avere un modulo che contiene un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`, e che il codice di esempio viene chiamato da un evento all'interno della classe del form.  
  
 [!code-cpp[RichTextBox.SelectionRightIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionRightIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionRightIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionRightIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionRightIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionRightIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionTabs">
      <MemberSignature Language="C#" Value="public int[] SelectionTabs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] SelectionTabs" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionTabs" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionTabs As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ SelectionTabs { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionTabs : int[] with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionTabs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le posizioni assolute dei punti di tabulazione in un controllo <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <value>Matrice nella quale ciascun membro specifica un offset di tabulazione, in pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di ottenere una matrice che contiene la spaziatura per ogni scheda nella selezione di testo corrente all'interno di <xref:System.Windows.Forms.RichTextBox> controllo. È quindi possibile utilizzare questa proprietà per modificare le dimensioni di ogni scheda all'interno della selezione di testo. Ad esempio, se si desidera modificare lo spazio scheda all'interno del documento, è possibile selezionare l'intero documento e ottenere l'elenco degli spazi di tabulazione utilizzando il <xref:System.Windows.Forms.RichTextBox.SelectionTabs%2A> proprietà. È quindi possibile apportare le modifiche ai nuovi valori e riassegnarli a questa proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La matrice supera il limite massimo di 32 elementi.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.RichTextBoxSelectionTypes SelectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RichTextBoxSelectionTypes SelectionType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionType As RichTextBoxSelectionTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::RichTextBoxSelectionTypes SelectionType { System::Windows::Forms::RichTextBoxSelectionTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionType : System.Windows.Forms.RichTextBoxSelectionTypes" Usage="System.Windows.Forms.RichTextBox.SelectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RichTextBoxSelectionTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di selezione all'interno del controllo.</summary>
        <value>Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.RichTextBoxSelectionTypes" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa proprietà per determinare il tipo di dati selezionato nel controllo per gestire correttamente la selezione durante l'esecuzione di attività all'interno del controllo sulla selezione corrente. La proprietà può rappresentare qualsiasi combinazione di valori dal <xref:System.Windows.Forms.RichTextBoxSelectionTypes> enumerazione che rappresenta i tipi di oggetti nella selezione corrente.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectedRtf" />
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionMargin">
      <MemberSignature Language="C#" Value="public bool ShowSelectionMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ShowSelectionMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionMargin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionMargin { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowSelectionMargin : bool with get, set" Usage="System.Windows.Forms.RichTextBox.ShowSelectionMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se un margine di selezione di testo è visualizzato nell'oggetto <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <value>
          <see langword="true" /> se un margine di selezione è abilitato nel controllo; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa proprietà per consentire all'utente di selezionare con facilità le righe di testo il <xref:System.Windows.Forms.RichTextBox>. Il margine di selezione viene aggiunto sul lato sinistro del <xref:System.Windows.Forms.RichTextBox>. Il margine rende più semplice per l'utente di selezionare il testo a partire sul lato sinistro del controllo. L'utente può fare clic sul margine di selezione per selezionare una singola riga di testo o fare doppio clic per selezionare l'intero paragrafo contenuta all'interno di riga di cui si fa doppio clic.  
  
> [!NOTE]
>  Se il <xref:System.Windows.Forms.RichTextBox.ShowSelectionMargin%2A> è impostata su `true`, impostando il <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> proprietà `RichTextBoxScrollBars.Horizontal`, `RichTextBoxScrollBars.Vertical`, o `RichTextBoxScrollBars.Both` non si verificherà le barre di scorrimento da visualizzare. Per visualizzare le barre di scorrimento durante la <xref:System.Windows.Forms.RichTextBox.ShowSelectionMargin%2A> è impostata su `true`, impostare il <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> proprietà `RichTextBoxScrollBars.ForcedHorizontal`, `RichTextBoxScrollBars.ForcedVertical`, o `RichTextBoxScrollBars.ForcedBoth`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.RichTextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo corrente nella casella di testo RTF.</summary>
        <value>Testo visualizzato nel controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per visualizzare più righe di testo in un <xref:System.Windows.Forms.RichTextBox>, impostare il <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> proprietà `true`. Per leggere o impostare il testo di una casella di testo su più righe, utilizzare il <xref:System.Windows.Forms.TextBoxBase.Lines%2A> proprietà. Il <xref:System.Windows.Forms.RichTextBox.Text%2A> proprietà non restituisce eventuali informazioni di formattazione applicata al contenuto del <xref:System.Windows.Forms.RichTextBox>. Per ottenere il formato RTF (RICH) codici di formattazione, usare il <xref:System.Windows.Forms.RichTextBox.Rtf%2A> proprietà. La quantità di testo che può essere immesse nel <xref:System.Windows.Forms.RichTextBox> controllo è limitato solo dalla memoria di sistema disponibile.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public override int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.RichTextBox.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la lunghezza del testo nel controllo.</summary>
        <value>Numero di caratteri contenuti nel testo del controllo.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.TextLength" />
      </Docs>
    </Member>
    <Member MemberName="UndoActionName">
      <MemberSignature Language="C#" Value="public string UndoActionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UndoActionName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.UndoActionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UndoActionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UndoActionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UndoActionName : string" Usage="System.Windows.Forms.RichTextBox.UndoActionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'operazione che non può essere annullata nel controllo quando viene chiamato il metodo <see cref="M:System.Windows.Forms.TextBoxBase.Undo" />.</summary>
        <value>Nome di testo dell'operazione che non può essere annullata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di determinare l'ultima azione che sono stata eseguita all'interno del controllo che può essere annullato. È possibile utilizzare questa proprietà per limitare le operazioni disponibili per essere annullata dall'utente del controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="VScroll">
      <MemberSignature Language="C#" Value="public event EventHandler VScroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VScroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.VScroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VScroll As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ VScroll;" />
      <MemberSignature Language="F#" Value="member this.VScroll : EventHandler " Usage="member this.VScroll : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente fa clic sulla barra di scorrimento verticale del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio report sull'occorrenza di un gestore eventi di <xref:System.Windows.Forms.RichTextBox.VScroll> evento. Questo report consente di capire quando l'evento si verifica e può semplificare il debug. Per generare report su più eventi o per gli eventi che si verificano di frequente, prendere in considerazione la sostituzione <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a una proprietà multiline <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza di tipo <xref:System.Windows.Forms.RichTextBox> denominato `RichTextBox1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.RichTextBox.VScroll> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#545](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#545)]
 [!code-vb[System.Windows.Forms.EventExamples#545](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#545)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="richTextBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Oggetto messaggio di Windows.</param>
        <summary>Elabora i messaggi di Windows.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomFactor">
      <MemberSignature Language="C#" Value="public float ZoomFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ZoomFactor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ZoomFactor" />
      <MemberSignature Language="VB.NET" Value="Public Property ZoomFactor As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ZoomFactor { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ZoomFactor : single with get, set" Usage="System.Windows.Forms.RichTextBox.ZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo zoom corrente dell'oggetto <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
        <value>Fattore in base al quale al contenuto del controllo viene applicato lo zoom.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di questa proprietà può essere compreso tra 1/64 (0,015625) e 64,0, non inclusivo. Un valore pari a 1,0 indica che nessun zoom viene applicato al controllo. La funzionalità dello zoom esegue in modo ottimale quando il documento contiene tipi di carattere TrueType. Quando viene utilizzato un carattere che non è TrueType all'interno del documento del controllo, il <xref:System.Windows.Forms.RichTextBox.ZoomFactor%2A> proprietà utilizzerà il valore di numero intero più vicino. È possibile utilizzare questa proprietà per consentire all'utente di <xref:System.Windows.Forms.RichTextBox> controllo per eseguire lo zoom in sezioni della documentazione che sono troppo piccole per visualizzare o comprimere la visualizzazione per consentire più del documento da visualizzare sullo schermo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Windows.Forms.RichTextBox> che esegue lo zoom sul testo, seleziona automaticamente parole nel testo del controllo quando si fa doppio clic e ha un margine sul lato destro dell'area client del controllo. Se il <xref:System.Windows.Forms.RichTextBox> controllo ha una larghezza di piccole dimensioni, con questo codice verrà creato un <xref:System.Windows.Forms.RichTextBox> in cui ogni carattere di testo viene visualizzato nella riga corrispondente. In questa posizione di visualizzazione verticale, fare clic su qualsiasi parte di una parola selezionerà tutti i caratteri della parola indipendentemente dal fatto che il testo viene visualizzato in verticale. In questo esempio è necessario un form che contiene un <xref:System.Windows.Forms.RichTextBox> controllo denominato `richTextBox1`.  
  
 [!code-cpp[RichTextBox.ZoomFactor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.ZoomFactor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CS/form1.cs#1)]
 [!code-vb[RichTextBox.ZoomFactor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.ZoomFactor/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il fattore di zoom specificato non è compreso nell'intervallo consentito.</exception>
      </Docs>
    </Member>
  </Members>
</Type>