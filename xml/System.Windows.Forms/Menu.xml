<Type Name="Menu" FullName="System.Windows.Forms.Menu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ceb80550db967550d4c9f685b9df0570a9e9ab37" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48600593" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Menu : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Menu extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Menu" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Menu&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Windows.Forms.MenuDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta la funzionalità di base per tutti i menu. Sebbene gli oggetti <see cref="T:System.Windows.Forms.ToolStripDropDown" /> e <see cref="T:System.Windows.Forms.ToolStripDropDownMenu" /> sostituiscano il controllo <see cref="T:System.Windows.Forms.Menu" /> delle versioni precedenti e aggiungano funzionalità rispetto a tale controllo, <see cref="T:System.Windows.Forms.Menu" /> può essere mantenuto per compatibilità con versioni precedenti e per un utilizzo futuro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe è la classe base per il <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, e <xref:System.Windows.Forms.ContextMenu> classi. È possibile creare un'istanza di questa classe. I menu per un'applicazione sono costituiti da <xref:System.Windows.Forms.MenuItem> oggetti. Questi possono contenere altri <xref:System.Windows.Forms.MenuItem> oggetti, che rappresentano voci di sottomenu. Il <xref:System.Windows.Forms.MenuItem> gli oggetti possono essere archiviati in un <xref:System.Windows.Forms.MainMenu> per la visualizzazione come un'intera struttura di menu per un form o un <xref:System.Windows.Forms.ContextMenu> che consente di visualizzare i menu di scelta rapida. Questa classe fornisce funzionalità comuni per tutte le classi di menu.  
  
 A differenza di molte classi di base, il <xref:System.Windows.Forms.Menu> classe utilizza le classi derivate per definire molte delle relative proprietà. Se si utilizza il menu in un'applicazione di interfaccia a documenti multipli (MDI), è possibile usare la <xref:System.Windows.Forms.Menu.MdiListItem%2A> proprietà per specificare un <xref:System.Windows.Forms.MenuItem> che visualizza un elenco di form figli MDI aperti nell'applicazione. Il <xref:System.Windows.Forms.Menu.MenuItems%2A> proprietà contiene un elenco di <xref:System.Windows.Forms.MenuItem> gli oggetti archiviati nella classe menu. Per un <xref:System.Windows.Forms.MainMenu> oppure <xref:System.Windows.Forms.ContextMenu>, questa proprietà contiene tutti i <xref:System.Windows.Forms.MenuItem> gli oggetti che vengono visualizzati. Per un <xref:System.Windows.Forms.MenuItem>, il <xref:System.Windows.Forms.Menu.MenuItems%2A> proprietà rappresenta le voci di sottomenu associate.  
  
 Oltre alle proprietà che vengono fornite per tutte le classi derivate di menu, il <xref:System.Windows.Forms.Menu> classe fornisce inoltre metodi, ad esempio <xref:System.Windows.Forms.Menu.CloneMenu%2A> e <xref:System.Windows.Forms.Menu.MergeMenu%2A>, che consentono di creare nuovi menu dal menu esistenti e anche unire due strutture di menu insieme.  
  
 Il <xref:System.Windows.Forms.Menu> classe definisce anche la classe annidata <xref:System.Windows.Forms.Menu.MenuItemCollection>. Questa classe definisce la raccolta di <xref:System.Windows.Forms.MenuItem> gli oggetti utilizzati dal <xref:System.Windows.Forms.Menu.MenuItems%2A> proprietà. È possibile usare i metodi del <xref:System.Windows.Forms.Menu.MenuItemCollection> classe per aggiungere e rimuovere le voci di menu da un <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ContextMenu>, o <xref:System.Windows.Forms.MenuItem>.  
  
   
  
## Examples  
 L'esempio di codice seguente usa la classe derivata, <xref:System.Windows.Forms.MenuItem>, per creare una struttura di menu per un form. L'esempio di codice aggiunge un <xref:System.Windows.Forms.MenuItem> per rappresentare la voce di menu di primo livello, aggiunge una voce di sottomenu per la selezione di una dimensione del carattere e aggiunge quindi due voci di sottomenu alla voce di menu che rappresentano le scelte di piccole e grandi dimensioni del carattere in un'applicazione. L'esempio richiede che sia presente una <xref:System.Windows.Forms.MainMenu> oggetto denominato `mainMenu1` e quattro <xref:System.Windows.Forms.MenuItem> oggetti denominati `menuItem1`, `menuItem2`, `menuItem3`, e `menuItem4`.  
  
 [!code-cpp[Classic Menu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu Example/CS/source.cs#1)]
 [!code-vb[Classic Menu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MainMenu" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Menu (System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.#ctor(System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Menu(cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Menu : System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.Menu" Usage="new System.Windows.Forms.Menu items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="items">Matrice di tipo <see cref="T:System.Windows.Forms.MenuItem" /> contenente gli oggetti da aggiungere al menu.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché <xref:System.Windows.Forms.Menu> è una classe astratta, solo le classi ereditate possono chiamare il costruttore del Menu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="protected internal void CloneMenu (System.Windows.Forms.Menu menuSrc);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CloneMenu(class System.Windows.Forms.Menu menuSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CloneMenu (menuSrc As Menu)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CloneMenu(System::Windows::Forms::Menu ^ menuSrc);" />
      <MemberSignature Language="F#" Value="member this.CloneMenu : System.Windows.Forms.Menu -&gt; unit" Usage="menu.CloneMenu menuSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSrc" Type="System.Windows.Forms.Menu" />
      </Parameters>
      <Docs>
        <param name="menuSrc">La <see cref="T:System.Windows.Forms.Menu" /> da copiare.</param>
        <summary>Copia l'oggetto <see cref="T:System.Windows.Forms.Menu" /> passato come parametro all'oggetto <see cref="T:System.Windows.Forms.Menu" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo copia l'intero elenco di <xref:System.Windows.Forms.MenuItem> oggetti (archiviati nel <xref:System.Windows.Forms.Menu> passato alla `menuSrc`) nel menu corrente. È possibile usare questo metodo nella classe derivata da clonare <xref:System.Windows.Forms.MenuItem> oggetti. Possono essere riutilizzati da altre classi che derivano da <xref:System.Windows.Forms.Menu>, ad esempio <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ContextMenu>, e <xref:System.Windows.Forms.MenuItem>.  
  
   
  
## Examples  
 Questo esempio viene creato un menu principale `mainMenu1`, con tre voci di menu: `File`, `Edit`, e `View`. Quindi, utilizza il <xref:System.Windows.Forms.Menu.CloneMenu%2A> metodo per copiare `mainMenu1` in `mainMenu2`. Il menu duplicato viene quindi assegnato al form e visualizzato. Il programma richiede che sia già stato creato un <xref:System.Windows.Forms.Form> denominato `Form1`.  
  
 [!code-cpp[CloneMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CloneMenu/CPP/form1.cpp#1)]
 [!code-csharp[CloneMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CloneMenu/CS/form1.cs#1)]
 [!code-vb[CloneMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CloneMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MainMenu" />
      </Docs>
    </Member>
    <Member MemberName="CreateMenuHandle">
      <MemberSignature Language="C#" Value="protected virtual IntPtr CreateMenuHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int CreateMenuHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.CreateMenuHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateMenuHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr CreateMenuHandle();" />
      <MemberSignature Language="F#" Value="abstract member CreateMenuHandle : unit -&gt; nativeint&#xA;override this.CreateMenuHandle : unit -&gt; nativeint" Usage="menu.CreateMenuHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuovo handle per l'oggetto <see cref="T:System.Windows.Forms.Menu" />.</summary>
        <returns>Handle per il menu se il metodo ha esito positivo. In caso contrario, <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="menu.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Elimina le risorse, diverse dalla memoria, usate da <see cref="T:System.Windows.Forms.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il metodo <xref:System.Windows.Forms.Menu.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Windows.Forms.Menu>. Il metodo <xref:System.Windows.Forms.Menu.Dispose%2A> lascia l'oggetto <xref:System.Windows.Forms.Menu> in una condizione di inutilizzabilità. Dopo avere chiamato <xref:System.Windows.Forms.Menu.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.Windows.Forms.Menu> in modo che la memoria occupata può essere recuperata da garbage collection.  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.Windows.Forms.Menu.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Windows.Forms.Menu>. In caso contrario, le risorse di <xref:System.Windows.Forms.Menu> non è verranno liberate finché le chiamate di procedura di garbage collection di <xref:System.Windows.Forms.Menu> distruttore dell'oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindHandle">
      <MemberSignature Language="C#" Value="public const int FindHandle = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FindHandle = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Menu.FindHandle" />
      <MemberSignature Language="VB.NET" Value="Public Const FindHandle As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int FindHandle = 0;" />
      <MemberSignature Language="F#" Value="val mutable FindHandle : int" Usage="System.Windows.Forms.Menu.FindHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Specifica che il metodo <see cref="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" /> deve eseguire la ricerca di un handle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMenuItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuItem FindMenuItem (int type, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.MenuItem FindMenuItem(int32 type, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMenuItem (type As Integer, value As IntPtr) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::MenuItem ^ FindMenuItem(int type, IntPtr value);" />
      <MemberSignature Language="F#" Value="member this.FindMenuItem : int * nativeint -&gt; System.Windows.Forms.MenuItem" Usage="menu.FindMenuItem (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Int32" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="type">Tipo di elemento da utilizzare per cercare l'oggetto <see cref="T:System.Windows.Forms.MenuItem" />.</param>
        <param name="value">Elemento da utilizzare per cercare l'oggetto <see cref="T:System.Windows.Forms.MenuItem" />.</param>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Forms.MenuItem" /> che contiene il valore specificato.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Forms.MenuItem" /> che corrisponde al valore; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per cercare un <xref:System.Windows.Forms.MenuItem> utilizzando un handle, passare il <xref:System.Windows.Forms.Menu.FindHandle> campo come il tipo e l'handle del <xref:System.Windows.Forms.MenuItem> da trovare come valore.  
  
 Per cercare un <xref:System.Windows.Forms.MenuItem> usando un collegamento, passare il <xref:System.Windows.Forms.Menu.FindShortcut> campo come tipo e il valore di scelta rapida per il <xref:System.Windows.Forms.MenuItem> da trovare come valore.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">per i controlli per chiamare questo metodo. Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FindMergePosition">
      <MemberSignature Language="C#" Value="protected int FindMergePosition (int mergeOrder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 FindMergePosition(int32 mergeOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.FindMergePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function FindMergePosition (mergeOrder As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int FindMergePosition(int mergeOrder);" />
      <MemberSignature Language="F#" Value="member this.FindMergePosition : int -&gt; int" Usage="menu.FindMergePosition mergeOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOrder" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mergeOrder">Posizione nell'ordine di unione per la voce di menu da unire.</param>
        <summary>Restituisce la posizione in cui dovrebbe essere inserita una voce all'interno del menu.</summary>
        <returns>Posizione in cui dovrebbe essere inserita una voce all'interno del menu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'ordine di tipo merge di una voce di menu consente di specificare la posizione relativa che questa voce di menu presuppone che se la struttura di menu che il <xref:System.Windows.Forms.MenuItem> è contenuta in è unito a un altro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindShortcut">
      <MemberSignature Language="C#" Value="public const int FindShortcut = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FindShortcut = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Menu.FindShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Const FindShortcut As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int FindShortcut = 1;" />
      <MemberSignature Language="F#" Value="val mutable FindShortcut : int" Usage="System.Windows.Forms.Menu.FindShortcut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Specifica che il metodo <see cref="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" /> deve eseguire la ricerca di un collegamento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenu GetContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ContextMenu GetContextMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.GetContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextMenu () As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ContextMenu ^ GetContextMenu();" />
      <MemberSignature Language="F#" Value="member this.GetContextMenu : unit -&gt; System.Windows.Forms.ContextMenu" Usage="menu.GetContextMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Forms.ContextMenu" /> che contiene questo menu.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Forms.ContextMenu" /> che contiene questo menu. Il valore predefinito è <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di ottenere un riferimento di <xref:System.Windows.Forms.ContextMenu> contenute in questo menu. Questa proprietà restituisce `null` se il menu di scelta non è contenuta un <xref:System.Windows.Forms.ContextMenu>. Ciò può verificarsi se il menu di scelta è contenuta in un <xref:System.Windows.Forms.MenuItem> o <xref:System.Windows.Forms.MainMenu>, o se il menu di scelta non è contenuta in un menu di scelta. È possibile utilizzare questa proprietà per determinare se un menu di scelta è attualmente in uso, nonché per determinare la posizione.  
  
   
  
## Examples  
 In questo esempio, si utilizza il <xref:System.Windows.Forms.Menu.GetContextMenu%2A> metodo per ottenere un riferimento al menu di scelta rapida contenente `menuItem1` o `menuItem2`e visualizzare le informazioni sul menu di scelta rapida in una finestra di messaggio. A livello di codice crea un menu di scelta rapida con gli elementi di due `New` e `Open`. Aggiungere quindi funzionalità per questi elementi tramite la creazione di gestori eventi appropriati. Quando si esegue l'esempio, si ottiene una finestra di messaggio che invita a fare clic sul form per visualizzare il menu di scelta rapida. Quindi, quando si fa clic su una voce di menu, si ottiene un altro messaggio che indica quale elemento è stato fatto clic e visualizza le informazioni sul menu di scelta rapida che lo contiene. Questo esempio richiede che sia già stato creato un <xref:System.Windows.Forms.Form> denominato `Form1`.  
  
 [!code-cpp[GetContextMenu2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetContextMenu2/CPP/form1.cpp#1)]
 [!code-csharp[GetContextMenu2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetContextMenu2/CS/form1.cs#1)]
 [!code-vb[GetContextMenu2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetContextMenu2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.GetMainMenu" />
      </Docs>
    </Member>
    <Member MemberName="GetMainMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu GetMainMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.MainMenu GetMainMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.GetMainMenu" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMainMenu () As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::MainMenu ^ GetMainMenu();" />
      <MemberSignature Language="F#" Value="member this.GetMainMenu : unit -&gt; System.Windows.Forms.MainMenu" Usage="menu.GetMainMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Windows.Forms.MainMenu" /> che contiene questo menu.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Forms.MainMenu" /> che contiene questo menu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di ottenere un riferimento di <xref:System.Windows.Forms.MainMenu> questo menu si trova attualmente nella. Questa proprietà restituisce `null` se il menu di scelta non è contenuta un <xref:System.Windows.Forms.MainMenu>. Ciò può verificarsi se il menu di scelta è contenuta in un <xref:System.Windows.Forms.MenuItem> o <xref:System.Windows.Forms.ContextMenu>, o se il menu di scelta non è contenuta in un menu di scelta. È possibile utilizzare questa proprietà per determinare se un menu di scelta è attualmente in uso, nonché per determinare la posizione.  
  
   
  
## Examples  
 Questo esempio viene dichiarata una <xref:System.Windows.Forms.MainMenu>, `mainMenu1`e quattro voci di menu `menuItem1`, `menuItem2`, `menuItem3`, e `menuItem4`. Solo i primi tre voci di menu vengono aggiunti a `mainMenu1` per la visualizzazione. Il programma controlla quindi se `menuItem3` viene usato, ovvero `true`e determina la forma in cui viene utilizzata. Il testo di etichetta viene utilizzato per visualizzare il nome del form che ospita il <xref:System.Windows.Forms.MainMenu>. Se si modifica la voce di menu viene eseguito per `menuItem4`, la condizione viene valutata `false` perché `menuItem4` non è mai stata usata. Nell'esempio si presuppone che sia stato creato un <xref:System.Windows.Forms.Form> denominate `MyForm` che include un <xref:System.Windows.Forms.Label> denominato `label1`.  
  
 [!code-cpp[GetMainMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetMainMenu/CPP/form1.cpp#1)]
 [!code-csharp[GetMainMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetMainMenu/CS/form1.cs#1)]
 [!code-vb[GetMainMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetMainMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.GetContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.Menu.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che rappresenta l'handle della finestra per il menu.</summary>
        <value>Valore HMENU del menu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questa proprietà per ottenere l'handle per il menu per eseguire operazioni speciali al menu di fuori di funzionalità fornite da questa classe o delle relative classi derivate.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsParent">
      <MemberSignature Language="C#" Value="public virtual bool IsParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.IsParent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsParent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsParent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsParent : bool" Usage="System.Windows.Forms.Menu.IsParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se questo menu contiene voci di menu. Questa proprietà è di sola lettura.</summary>
        <value>
          <see langword="true" /> se questo menu contiene oggetti <see cref="T:System.Windows.Forms.MenuItem" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questo metodo per determinare se eventuali <xref:System.Windows.Forms.MenuItem> gli oggetti vengono assegnati a questo menu. Ciò equivale al controllo della presenza `null` nella <xref:System.Windows.Forms.Menu.MenuItems%2A> proprietà.  
  
   
  
## Examples  
 L'esempio di codice seguente crea una <xref:System.Windows.Forms.MainMenu> con due <xref:System.Windows.Forms.MenuItem> oggetti. Quindi, utilizza il <xref:System.Windows.Forms.Menu.IsParent%2A> proprietà per determinare se `mainMenu1` contiene voci di menu. Se la condizione viene valutata `true`, imposta le <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> proprietà `true` e associa il menu principale per il <xref:System.Windows.Forms.Form>. In questo esempio è necessario disporre una <xref:System.Windows.Forms.Form> creata denominata `Form1`.  
  
 [!code-cpp[IsParent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IsParent/CPP/form1.cpp#1)]
 [!code-csharp[IsParent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IsParent/CS/form1.cs#1)]
 [!code-vb[IsParent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IsParent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="P:System.Windows.Forms.Menu.MenuItems" />
      </Docs>
    </Member>
    <Member MemberName="MdiListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuItem MdiListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuItem MdiListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MdiListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MdiListItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuItem ^ MdiListItem { System::Windows::Forms::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MdiListItem : System.Windows.Forms.MenuItem" Usage="System.Windows.Forms.Menu.MdiListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica l'oggetto <see cref="T:System.Windows.Forms.MenuItem" /> utilizzato per visualizzare un elenco di form figlio Multiple Document Interface (MDI).</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.MenuItem" /> che rappresenta la voce di menu che visualizza un elenco di form figli MDI aperti nell'applicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questa proprietà per determinare se un <xref:System.Windows.Forms.MenuItem> è stata specificata per visualizzare l'elenco delle finestre figlio aperto in un'applicazione MDI. Usare uno specifico <xref:System.Windows.Forms.MenuItem> come un elenco di MDI, impostare il <xref:System.Windows.Forms.MenuItem.MdiList%2A> proprietà nel <xref:System.Windows.Forms.MenuItem> da utilizzare.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MdiList" />
      </Docs>
    </Member>
    <Member MemberName="MenuItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu.MenuItemCollection MenuItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu/MenuItemCollection MenuItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuItems As Menu.MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu::MenuItemCollection ^ MenuItems { System::Windows::Forms::Menu::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuItems : System.Windows.Forms.Menu.MenuItemCollection" Usage="System.Windows.Forms.Menu.MenuItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu+MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica l'insieme degli oggetti <see cref="T:System.Windows.Forms.MenuItem" /> associato al menu.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.Menu.MenuItemCollection" /> che rappresenta l'elenco di oggetti <see cref="T:System.Windows.Forms.MenuItem" /> memorizzati nel menu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questa proprietà per ottenere un riferimento all'elenco di voci di menu attualmente archiviati nel menu di scelta. Per la <xref:System.Windows.Forms.MainMenu> e <xref:System.Windows.Forms.ContextMenu> oggetti, il <xref:System.Windows.Forms.Menu.MenuItems%2A> proprietà contiene l'intera struttura di menu nel controllo. Per il <xref:System.Windows.Forms.MenuItem> (classe), il <xref:System.Windows.Forms.Menu.MenuItems%2A> proprietà contiene l'elenco di voci di sottomenu associato il <xref:System.Windows.Forms.MenuItem>. Con il riferimento alla raccolta di voci di menu per il menu di scelta (fornito da questa proprietà), è possibile aggiungere e rimuovere voci di menu, determinare il numero totale di voci di menu e cancellare l'elenco di voci di menu dalla raccolta. Per altre informazioni sulla gestione di insieme delle voci di menu per un menu, vedere il <xref:System.Windows.Forms.Menu.MenuItemCollection?displayProperty=nameWithType> documentazione.  
  
   
  
## Examples  
 Esempio di codice seguente crea un'istanza della classe derivata, <xref:System.Windows.Forms.MainMenu>e aggiunge un <xref:System.Windows.Forms.MenuItem> oggetto alla relativa raccolta di <xref:System.Windows.Forms.MenuItem> oggetti. Questo esempio richiede che il metodo definito in questo esempio è che si trova all'interno della classe per un form e chiamato da un metodo in tale classe.  
  
 [!code-cpp[Classic Menu.MenuItems Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItems Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItems Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.Menu.MenuItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public virtual void MergeMenu (System.Windows.Forms.Menu menuSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeMenu(class System.Windows.Forms.Menu menuSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MergeMenu (menuSrc As Menu)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MergeMenu(System::Windows::Forms::Menu ^ menuSrc);" />
      <MemberSignature Language="F#" Value="abstract member MergeMenu : System.Windows.Forms.Menu -&gt; unit&#xA;override this.MergeMenu : System.Windows.Forms.Menu -&gt; unit" Usage="menu.MergeMenu menuSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSrc" Type="System.Windows.Forms.Menu" />
      </Parameters>
      <Docs>
        <param name="menuSrc">L'oggetto <see cref="T:System.Windows.Forms.Menu" /> le cui voci di menu sono unite con le voci del menu corrente.</param>
        <summary>Unisce gli oggetti <see cref="T:System.Windows.Forms.MenuItem" /> di un menu con il menu corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di unire <xref:System.Windows.Forms.MenuItem> gli oggetti di un menu con menu corrente. <xref:System.Windows.Forms.MenuItem> gli oggetti vengono uniti in base ai valori del <xref:System.Windows.Forms.MenuItem.MergeType%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.MenuItem.MergeOrder%2A?displayProperty=nameWithType> proprietà.  
  
 Unione di menu viene eseguita generalmente per unire i menu di un form padre di interfaccia a documenti multipli (MDI) con quelle del relativo form figlio MDI attivo. Viene eseguita automaticamente da .NET Framework common language runtime. Ad esempio, se un form padre MDI contiene un set di menu per la gestione dei file e i form figlio MDI ha anche voci di menu relative ai file, i set di menu unirà automaticamente in un menu a singolo file impostato quando il form figlio viene visualizzato nel form padre MDI.  
  
 È possibile usare il <xref:System.Windows.Forms.Menu.MergeMenu%2A> metodo se si uniscono due strutture di menu che non fanno parte di un'applicazione MDI. Questa implementazione può essere chiamata dal <xref:System.Windows.Forms.MainMenu> oppure <xref:System.Windows.Forms.ContextMenu> classi per unire due o più oggetti che derivano da <xref:System.Windows.Forms.Menu>.  
  
 Per unire due <xref:System.Windows.Forms.MenuItem> agli oggetti usano il <xref:System.Windows.Forms.MenuItem.MergeMenu%2A?displayProperty=nameWithType> (metodo).  
  
   
  
## Examples  
 Questo esempio vengono creati due menu, `mainMenu1` e `mainMenu2`. Il primo menu contiene una <xref:System.Windows.Forms.MenuItem>, `File`, e il secondo ne contiene uno <xref:System.Windows.Forms.MenuItem>, `Edit`. Usando il <xref:System.Windows.Forms.Menu.MergeMenu%2A> metodo `mainMenu2` unito con `mainMenu1`. Quando è visualizzata `mainMenu1` conterrà due voci di menu, `File` e `Edit`. Nell'esempio si presuppone che sia stato creato un <xref:System.Windows.Forms.Form> denominato `Form1`.  
  
 [!code-cpp[MergeMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MergeMenu/CPP/form1.cpp#1)]
 [!code-csharp[MergeMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MergeMenu/CS/form1.cs#1)]
 [!code-vb[MergeMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MergeMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">È stato effettuato un tentativo di unire il menu a se stesso.</exception>
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.Menu.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome di <see cref="T:System.Windows.Forms.Menu" />.</summary>
        <value>Stringa che rappresenta il nome.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In fase di progettazione, questa proprietà è impostata sull'identificatore del controllo a livello di codice. Tuttavia, questa non ha alcun effetto sul controllo in fase di esecuzione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="menu.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">Oggetto <see cref="T:System.Windows.Forms.Message" />, passato per riferimento, che rappresenta il messaggio per finestra da elaborare.</param>
        <param name="keyData">Uno dei valori di <see cref="T:System.Windows.Forms.Keys" /> che rappresenta il tasto da elaborare.</param>
        <summary>Elabora un tasto di comando.</summary>
        <returns>
          <see langword="true" /> se il carattere è stato elaborato dal controllo; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Menu.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta dati definiti dall'utente associati al controllo.</summary>
        <value>Oggetto che rappresenta i dati.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="menu.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una stringa <see cref="T:System.String" /> che rappresenta il controllo <see cref="T:System.Windows.Forms.Menu" />.</summary>
        <returns>Oggetto <see cref="T:System.String" /> che rappresenta l'oggetto <see cref="T:System.Windows.Forms.Menu" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.Menu.ToString%2A> metodo restituisce un <xref:System.String> che include il tipo e il numero di elementi nel <xref:System.Windows.Forms.Menu.MenuItems%2A> proprietà del controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>