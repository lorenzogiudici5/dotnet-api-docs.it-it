<Type Name="Timer" FullName="System.Windows.Forms.Timer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edf81ff72ec14a0a499608d1879749fafd6f668b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9c415-101">Implementa un timer con il quale viene generato un evento a intervalli definiti dall'utente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c415-101">Implements a timer that raises an event at user-defined intervals.</span>
      </span>
      <span data-ttu-id="9c415-102">Questo timer è ottimizzato per l'uso in applicazioni Windows Forms e deve essere usato in una finestra.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c415-102">This timer is optimized for use in Windows Forms applications and must be used in a window.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-103">Oggetto <xref:System.Windows.Forms.Timer> viene utilizzata per generare un evento a intervalli definiti dall'utente.</span><span class="sxs-lookup"><span data-stu-id="9c415-103">A <xref:System.Windows.Forms.Timer> is used to raise an event at user-defined intervals.</span></span> <span data-ttu-id="9c415-104">Questo timer di Windows è progettato per un ambiente a thread singolo in cui vengono utilizzati i thread dell'interfaccia utente per eseguire l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="9c415-104">This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</span></span> <span data-ttu-id="9c415-105">Richiede che il codice utente dispone di un message pump dell'interfaccia utente disponibili e sempre operano dallo stesso thread o effettuare il marshalling della chiamata su un altro thread.</span><span class="sxs-lookup"><span data-stu-id="9c415-105">It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</span></span>  
  
 <span data-ttu-id="9c415-106">Quando si utilizza questo timer, utilizzare il <xref:System.Windows.Forms.Timer.Tick> evento per eseguire il polling o per visualizzare una schermata per un periodo di tempo specificato.</span><span class="sxs-lookup"><span data-stu-id="9c415-106">When you use this timer, use the <xref:System.Windows.Forms.Timer.Tick> event to perform a polling operation or to display a splash screen for a specified period of time.</span></span> <span data-ttu-id="9c415-107">Ogni volta che il <xref:System.Windows.Forms.Timer.Enabled%2A> è impostata su `true` e <xref:System.Windows.Forms.Timer.Interval%2A> proprietà è maggiore di zero, il <xref:System.Windows.Forms.Timer.Tick> evento a intervalli in base il <xref:System.Windows.Forms.Timer.Interval%2A> l'impostazione della proprietà.</span><span class="sxs-lookup"><span data-stu-id="9c415-107">Whenever the <xref:System.Windows.Forms.Timer.Enabled%2A> property is set to `true` and the <xref:System.Windows.Forms.Timer.Interval%2A> property is greater than zero, the <xref:System.Windows.Forms.Timer.Tick> event is raised at intervals based on the <xref:System.Windows.Forms.Timer.Interval%2A> property setting.</span></span>  
  
 <span data-ttu-id="9c415-108">Questa classe fornisce metodi per impostare l'intervallo e per avviare e arrestare il timer.</span><span class="sxs-lookup"><span data-stu-id="9c415-108">This class provides methods to set the interval, and to start and stop the timer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c415-109">Il componente Timer di Windows Form è a thread singolo ed è limitato a una precisione pari a 55 millisecondi.</span><span class="sxs-lookup"><span data-stu-id="9c415-109">The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</span></span> <span data-ttu-id="9c415-110">Se è necessario un timer multithreading con maggiore accuratezza, utilizzare il <xref:System.Timers.Timer> classe il <xref:System.Timers> dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="9c415-110">If you require a multithreaded timer with greater accuracy, use the <xref:System.Timers.Timer> class in the <xref:System.Timers> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c415-111">Nell'esempio seguente viene implementato un timer intervallo semplice, che viene attivato un avviso ogni cinque secondi.</span><span class="sxs-lookup"><span data-stu-id="9c415-111">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="9c415-112">Quando viene attivato l'avviso, un <xref:System.Windows.Forms.MessageBox> Visualizza un conteggio del numero di volte in cui l'avviso è stata avviata e chiede all'utente se il timer dovrebbe continuare a funzionare.</span><span class="sxs-lookup"><span data-stu-id="9c415-112">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9c415-113">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c415-114">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-115">Quando viene creato un nuovo timer, è disabilitato; vale a dire <xref:System.Windows.Forms.Timer.Enabled%2A> è impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="9c415-115">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="9c415-116">Per abilitare il timer, chiamare il <xref:System.Windows.Forms.Timer.Start%2A> metodo o un insieme <xref:System.Windows.Forms.Timer.Enabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="9c415-116">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="9c415-117">Se il timer è disattivato e il timer esula dall'ambito, il timer verrà eliminato durante la garbage collection.</span><span class="sxs-lookup"><span data-stu-id="9c415-117">If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</span></span> <span data-ttu-id="9c415-118">Se il timer è abilitato, anche se rientra nell'ambito, non è sottoposte a garbage collection.</span><span class="sxs-lookup"><span data-stu-id="9c415-118">If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="9c415-119">Oggetto <see cref="T:System.ComponentModel.IContainer" /> che rappresenta il contenitore per il timer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-119">An <see cref="T:System.ComponentModel.IContainer" /> that represents the container for the timer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c415-120">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Timer" /> insieme al contenitore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class together with the specified container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-121">Il <xref:System.Windows.Forms.Timer> costruttore consente di associare un <xref:System.Windows.Forms.Timer> con qualsiasi <xref:System.ComponentModel.Container> oggetto.</span><span class="sxs-lookup"><span data-stu-id="9c415-121">The <xref:System.Windows.Forms.Timer> constructor enables you to associate a <xref:System.Windows.Forms.Timer> with any <xref:System.ComponentModel.Container> object.</span></span> <span data-ttu-id="9c415-122">Associando il <xref:System.Windows.Forms.Timer> simile al seguente, si passa il controllo della durata del <xref:System.Windows.Forms.Timer> per il <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="9c415-122">By associating the <xref:System.Windows.Forms.Timer> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.Timer> to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="9c415-123">Può essere utile se si utilizza un numero di componenti dell'applicazione e si desidera eliminare tutti gli elementi contemporaneamente.</span><span class="sxs-lookup"><span data-stu-id="9c415-123">This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</span></span> <span data-ttu-id="9c415-124">Ad esempio, se si associa un <xref:System.Windows.Forms.ToolTip>, un <xref:System.Windows.Forms.ImageList>e un <xref:System.Windows.Forms.Timer> con un <xref:System.ComponentModel.Container>, la chiamata <xref:System.ComponentModel.Container.Dispose%2A> sul <xref:System.ComponentModel.Container> si forzerà l'eliminazione di tutti questi componenti.</span><span class="sxs-lookup"><span data-stu-id="9c415-124">For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the <xref:System.ComponentModel.Container> will force disposal of all of these components as well.</span></span>  
  
 <span data-ttu-id="9c415-125">Quando viene creato un nuovo timer, è disabilitato; vale a dire <xref:System.Windows.Forms.Timer.Enabled%2A> è impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="9c415-125">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="9c415-126">Per abilitare il timer, chiamare il <xref:System.Windows.Forms.Timer.Start%2A> metodo o un insieme <xref:System.Windows.Forms.Timer.Enabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="9c415-126">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="9c415-127">Questa istanza sarà disponibile fino a quando il relativo contenitore rilascia a garbage collection.</span><span class="sxs-lookup"><span data-stu-id="9c415-127">This instance will exist until its container releases it to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="9c415-128">
            <see langword="true" /> per rilasciare le risorse gestite e non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-128">
              <see langword="true" /> to release both managed and unmanaged resources.</span>
          </span>
          <span data-ttu-id="9c415-129">
            <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-129">
              <see langword="false" /> to release only the unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c415-130">Elimina le risorse, tranne la memoria, usate dal timer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-130">Disposes of the resources, other than memory, used by the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-131">Chiamare <xref:System.Windows.Forms.Timer.Dispose%2A> dopo aver terminato di utilizzare il timer.</span><span class="sxs-lookup"><span data-stu-id="9c415-131">Call <xref:System.Windows.Forms.Timer.Dispose%2A> when you are finished using the timer.</span></span> <span data-ttu-id="9c415-132">Il <xref:System.Windows.Forms.Timer.Dispose%2A> metodo rende il timer in uno stato inutilizzabile.</span><span class="sxs-lookup"><span data-stu-id="9c415-132">The <xref:System.Windows.Forms.Timer.Dispose%2A> method leaves the timer in an unusable state.</span></span> <span data-ttu-id="9c415-133">Dopo aver chiamato <xref:System.Windows.Forms.Timer.Dispose%2A>, è necessario rilasciare tutti i riferimenti al timer in modo che la memoria occupata può essere recuperata tramite garbage collection.</span><span class="sxs-lookup"><span data-stu-id="9c415-133">After you call <xref:System.Windows.Forms.Timer.Dispose%2A>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c415-134">Chiamare sempre il metodo <xref:System.Windows.Forms.Timer.Dispose%2A> prima di rilasciare l'ultimo riferimento al timer.</span><span class="sxs-lookup"><span data-stu-id="9c415-134">Always call <xref:System.Windows.Forms.Timer.Dispose%2A> before you release your last reference to the timer.</span></span> <span data-ttu-id="9c415-135">In caso contrario, le risorse che utilizza il timer non vengono liberate fino a quando l'operazione di garbage collection chiama il distruttore dell'oggetto timer.</span><span class="sxs-lookup"><span data-stu-id="9c415-135">Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c415-136">Ottiene o imposta un valore che indica se il timer è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-136">Gets or sets whether the timer is running.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c415-137">
            <see langword="true" /> se il timer è attualmente abilitato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-137">
              <see langword="true" /> if the timer is currently enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9c415-138">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-138">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-139">Il timer non sottoposte a garbage collection quando il valore è `true`.</span><span class="sxs-lookup"><span data-stu-id="9c415-139">The timer is not subject to garbage collection when the value is `true`.</span></span>  
  
 <span data-ttu-id="9c415-140">La chiamata di <xref:System.Windows.Forms.Timer.Start%2A> metodo è la stessa impostazione <xref:System.Windows.Forms.Timer.Enabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="9c415-140">Calling the <xref:System.Windows.Forms.Timer.Start%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span> <span data-ttu-id="9c415-141">Analogamente, la chiamata di <xref:System.Windows.Forms.Timer.Stop%2A> metodo è la stessa impostazione <xref:System.Windows.Forms.Timer.Enabled%2A> a `false`.</span><span class="sxs-lookup"><span data-stu-id="9c415-141">Likewise, calling the <xref:System.Windows.Forms.Timer.Stop%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c415-142">Nell'esempio seguente viene implementato un timer intervallo semplice, che viene attivato un avviso ogni cinque secondi.</span><span class="sxs-lookup"><span data-stu-id="9c415-142">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="9c415-143">Quando viene attivato l'avviso, un <xref:System.Windows.Forms.MessageBox> Visualizza un conteggio del numero di volte in cui l'audio dell'allarme è stato avviato e richiede all'utente se il timer dovrebbe continuare a funzionare.</span><span class="sxs-lookup"><span data-stu-id="9c415-143">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c415-144">Ottiene o imposta l'intervallo di tempo, in millisecondi, prima che venga generato l'evento <see cref="E:System.Windows.Forms.Timer.Tick" /> relativo all'ultima occorrenza dell'evento <see cref="E:System.Windows.Forms.Timer.Tick" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-144">Gets or sets the time, in milliseconds, before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c415-145">Un valore <see cref="T:System.Int32" /> che specifica il numero di millisecondi prima che venga generato l'evento <see cref="E:System.Windows.Forms.Timer.Tick" /> relativo all'ultima occorrenza dell'evento <see cref="E:System.Windows.Forms.Timer.Tick" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-145">An <see cref="T:System.Int32" /> specifying the number of milliseconds before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
          <span data-ttu-id="9c415-146">Il valore non può essere minore di 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-146">The value cannot be less than one.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-147">Per ottenere il numero di secondi dell'intervallo, dividere il numero per 1000.</span><span class="sxs-lookup"><span data-stu-id="9c415-147">To get the number of seconds in the interval, divide this number by 1,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c415-148">Esempio di codice seguente implementa un timer intervallo semplice, che viene attivato un avviso ogni cinque secondi.</span><span class="sxs-lookup"><span data-stu-id="9c415-148">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="9c415-149">Quando viene attivato l'avviso, un <xref:System.Windows.Forms.MessageBox> Visualizza un conteggio del numero di volte in cui l'audio dell'allarme è stato avviato e richiede all'utente se il timer dovrebbe continuare a funzionare.</span><span class="sxs-lookup"><span data-stu-id="9c415-149">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9c415-150">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-150">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="9c415-151">Questo valore è sempre <see cref="F:System.EventArgs.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-151">This is always <see cref="F:System.EventArgs.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c415-152">Genera l'evento <see cref="E:System.Windows.Forms.Timer.Tick" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-152">Raises the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-153">Questo metodo viene chiamato per ogni tick del timer.</span><span class="sxs-lookup"><span data-stu-id="9c415-153">This method is called for each timer tick.</span></span> <span data-ttu-id="9c415-154">Chiama i metodi che vengono aggiunti tramite <xref:System.Windows.Forms.Timer.Tick>.</span><span class="sxs-lookup"><span data-stu-id="9c415-154">It calls any methods that are added through <xref:System.Windows.Forms.Timer.Tick>.</span></span> <span data-ttu-id="9c415-155">Se sta ereditando da <xref:System.Windows.Forms.Timer>, è possibile eseguire l'override di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="9c415-155">If you are inheriting from <xref:System.Windows.Forms.Timer>, you can override this method.</span></span>  
  
 <span data-ttu-id="9c415-156">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="9c415-156">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="9c415-157">Per ulteriori informazioni, vedere [gestione e generazione di eventi](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span><span class="sxs-lookup"><span data-stu-id="9c415-157">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9c415-158">Quando si esegue l'override <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9c415-158">When overriding <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in a derived class, make sure that you call the base class's <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c415-159">Avvia il timer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-159">Starts the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-160">È inoltre possibile avviare il timer impostando il <xref:System.Windows.Forms.Timer.Enabled%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="9c415-160">You can also start the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c415-161">Esempio di codice seguente implementa un timer intervallo semplice, che viene attivato un avviso ogni cinque secondi.</span><span class="sxs-lookup"><span data-stu-id="9c415-161">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="9c415-162">Quando viene attivato l'avviso, un <xref:System.Windows.Forms.MessageBox> Visualizza un conteggio del numero di volte in cui l'audio dell'allarme è stato avviato e richiede all'utente se il timer dovrebbe continuare a funzionare.</span><span class="sxs-lookup"><span data-stu-id="9c415-162">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c415-163">Arresta il timer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-163">Stops the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-164">È anche possibile arrestare il timer impostando il <xref:System.Windows.Forms.Timer.Enabled%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="9c415-164">You can also stop the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="9c415-165">Oggetto <xref:System.Windows.Forms.Timer> oggetto può essere abilitato e disabilitato più volte all'interno della stessa sessione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9c415-165">A <xref:System.Windows.Forms.Timer> object may be enabled and disabled multiple times within the same application session.</span></span>  
  
 <span data-ttu-id="9c415-166">La chiamata <xref:System.Windows.Forms.Timer.Start%2A> dopo aver disabilitato una <xref:System.Windows.Forms.Timer> chiamando <xref:System.Windows.Forms.Timer.Stop%2A> causerà la <xref:System.Windows.Forms.Timer> al riavvio dell'intervallo interrotto.</span><span class="sxs-lookup"><span data-stu-id="9c415-166">Calling <xref:System.Windows.Forms.Timer.Start%2A> after you have disabled a <xref:System.Windows.Forms.Timer> by calling <xref:System.Windows.Forms.Timer.Stop%2A> will cause the <xref:System.Windows.Forms.Timer> to restart the interrupted interval.</span></span> <span data-ttu-id="9c415-167">Se il <xref:System.Windows.Forms.Timer> è impostato su un intervallo di 5000 millisecondi, che è possibile chiamare <xref:System.Windows.Forms.Timer.Stop%2A> circa 3000 millisecondi, la chiamata <xref:System.Windows.Forms.Timer.Start%2A> causerà la <xref:System.Windows.Forms.Timer> di 5000 millisecondi di attesa prima che venga generato il <xref:System.Windows.Forms.Timer.Tick> evento.</span><span class="sxs-lookup"><span data-stu-id="9c415-167">If your <xref:System.Windows.Forms.Timer> is set for a 5000-millisecond interval, and you call <xref:System.Windows.Forms.Timer.Stop%2A> at around 3000 milliseconds, calling <xref:System.Windows.Forms.Timer.Start%2A> will cause the <xref:System.Windows.Forms.Timer> to wait 5000 milliseconds before raising the <xref:System.Windows.Forms.Timer.Tick> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c415-168">La chiamata di arresto in qualsiasi <xref:System.Windows.Forms.Timer> all'interno di un Windows Form applicazione può causare messaggi dagli altri <xref:System.Windows.Forms.Timer> i componenti dell'applicazione per essere elaborati immediatamente, perché tutti <xref:System.Windows.Forms.Timer> componenti funzionino nel thread principale dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9c415-168">Calling Stop on any <xref:System.Windows.Forms.Timer> within a Windows Forms application can cause messages from other <xref:System.Windows.Forms.Timer> components in the application to be processed immediately, because all <xref:System.Windows.Forms.Timer> components operate on the main application thread.</span></span> <span data-ttu-id="9c415-169">Se si dispone di due <xref:System.Windows.Forms.Timer> componenti, uno impostato su 700 millisecondi e uno per 500 millisecondi e si chiama <xref:System.Windows.Forms.Timer.Stop%2A> sul primo <xref:System.Windows.Forms.Timer>, l'applicazione può ricevere un callback di evento per il secondo componente prima.</span><span class="sxs-lookup"><span data-stu-id="9c415-169">If you have two <xref:System.Windows.Forms.Timer> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <xref:System.Windows.Forms.Timer.Stop%2A> on the first <xref:System.Windows.Forms.Timer>, your application may receive an event callback for the second component first.</span></span> <span data-ttu-id="9c415-170">In caso di problemi, è consigliabile utilizzare il <xref:System.Threading.Timer> classe il <xref:System.Threading> dello spazio dei nomi invece.</span><span class="sxs-lookup"><span data-stu-id="9c415-170">If this proves problematic, consider using the <xref:System.Threading.Timer> class in the <xref:System.Threading> namespace instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c415-171">Esempio di codice seguente implementa un timer intervallo semplice, che viene attivato un avviso ogni cinque secondi.</span><span class="sxs-lookup"><span data-stu-id="9c415-171">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="9c415-172">Quando viene attivato l'avviso, un <xref:System.Windows.Forms.MessageBox> Visualizza un conteggio del numero di volte in cui l'audio dell'allarme è stato avviato e richiede all'utente se il timer dovrebbe continuare a funzionare.</span><span class="sxs-lookup"><span data-stu-id="9c415-172">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c415-173">Ottiene o imposta una stringa arbitraria che rappresenta un tipo di stato dell'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-173">Gets or sets an arbitrary string representing some type of user state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c415-174">Stringa arbitraria che rappresenta un tipo di stato dell'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-174">An arbitrary string representing some type of user state.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c415-175">Si verifica quando l'intervallo specificato del timer è trascorso e il timer viene abilitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-175">Occurs when the specified timer interval has elapsed and the timer is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-176">La chiamata il <xref:System.Diagnostics.Debug.Assert%2A> metodo sul <xref:System.Diagnostics.Debug> classe dall'interno il <xref:System.Windows.Forms.Timer.Tick> evento potrebbe non comportarsi come previsto, come visualizzare la finestra di dialogo di asserzione relativa può causare la generazione di <xref:System.Windows.Forms.Timer.Tick> evento ripetutamente.</span><span class="sxs-lookup"><span data-stu-id="9c415-176">Calling the <xref:System.Diagnostics.Debug.Assert%2A> method on the <xref:System.Diagnostics.Debug> class from within the <xref:System.Windows.Forms.Timer.Tick> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <xref:System.Windows.Forms.Timer.Tick> event repeatedly.</span></span> <span data-ttu-id="9c415-177">È consigliabile evitare di testare le asserzioni all'interno di questo evento e utilizzare il <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, o <xref:System.Diagnostics.Debug.WriteLineIf%2A> metodi invece.</span><span class="sxs-lookup"><span data-stu-id="9c415-177">We recommend that you refrain from testing assertions within this event, and use the <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, or <xref:System.Diagnostics.Debug.WriteLineIf%2A> methods instead.</span></span>  
  
 <span data-ttu-id="9c415-178">Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span><span class="sxs-lookup"><span data-stu-id="9c415-178">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c415-179">Esempio di codice seguente implementa un timer intervallo semplice, che viene attivato un avviso ogni cinque secondi.</span><span class="sxs-lookup"><span data-stu-id="9c415-179">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="9c415-180">Quando viene attivato l'avviso, un <xref:System.Windows.Forms.MessageBox> Visualizza un conteggio del numero di volte in cui l'audio dell'allarme è stato avviato e richiede all'utente se il timer dovrebbe continuare a funzionare.</span><span class="sxs-lookup"><span data-stu-id="9c415-180">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c415-181">Restituisce una stringa che rappresenta l'oggetto <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-181">Returns a string that represents the <see cref="T:System.Windows.Forms.Timer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c415-182">Stringa che rappresenta l'oggetto <see cref="T:System.Windows.Forms.Timer" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c415-182">A string that represents the current <see cref="T:System.Windows.Forms.Timer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c415-183">Il <xref:System.Windows.Forms.Timer.ToString%2A> metodo restituisce una stringa che include il valore della <xref:System.Windows.Forms.Timer.Interval%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="9c415-183">The <xref:System.Windows.Forms.Timer.ToString%2A> method returns a string that includes the value of the <xref:System.Windows.Forms.Timer.Interval%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>