<Type Name="StatusBar+StatusBarPanelCollection" FullName="System.Windows.Forms.StatusBar+StatusBarPanelCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="527b835bcc94181a7534c8683870cf6f9e0f8796" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37508200" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StatusBar.StatusBarPanelCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit StatusBar/StatusBarPanelCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StatusBar.StatusBarPanelCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class StatusBar::StatusBarPanelCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type StatusBar.StatusBarPanelCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the collection of panels in a <see cref="T:System.Windows.Forms.StatusBar" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> classe archivia i pannelli visualizzati nel <xref:System.Windows.Forms.StatusBar>. Ogni oggetto nella raccolta è un'istanza di <xref:System.Windows.Forms.StatusBarPanel> classe che definisce le caratteristiche di visualizzazione e i comportamenti di un pannello visualizzato in un <xref:System.Windows.Forms.StatusBar>.  
  
 Esistono diversi modi per aggiungere pannelli nella raccolta. Il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> metodo offre la possibilità di aggiungere un solo pannello alla raccolta. Per aggiungere un numero di riquadri per la raccolta, si crea una matrice di <xref:System.Windows.Forms.StatusBarPanel> degli oggetti e assegnarlo al <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> (metodo). Se si desidera inserire un pannello in una posizione specifica all'interno della raccolta, è possibile usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> (metodo). Per rimuovere i pannelli, è possibile usare la <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> metodo o il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A> metodo se si conosce il pannello in cui si trova all'interno della raccolta. Il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A> metodo consente di rimuovere tutti i pannelli dalla raccolta invece di usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> metodo per rimuovere un pannello singolo alla volta.  
  
 Oltre ai metodi e proprietà per aggiungere e rimuovere i pannelli, la <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> fornisce inoltre metodi per trovare i pannelli all'interno della raccolta. Il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A> metodo consente di determinare se un pannello è un membro della raccolta. Una volta stabilito che il pannello si trova all'interno della raccolta, è possibile usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> metodo per determinare il pannello in cui si trova all'interno della raccolta.  
  
   
  
## Examples  
 L'esempio di codice seguente crea una <xref:System.Windows.Forms.StatusBar> control per un form e aggiunge due <xref:System.Windows.Forms.StatusBarPanel> oggetti. Uno dei <xref:System.Windows.Forms.StatusBarPanel>, denominato `panel1`, Visualizza il testo di stato per un'applicazione. Il secondo <xref:System.Windows.Forms.StatusBarPanel>, denominato `panel2`, viene visualizzata la data corrente e utilizza il <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> proprietà del <xref:System.Windows.Forms.StatusBarPanel> classe per visualizzare l'ora corrente. L'esempio Usa il <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> proprietà per assicurarsi che i pannelli vengono visualizzati anziché un pannello standard e usa e il <xref:System.Windows.Forms.StatusBar.Panels%2A> proprietà a cui accedere il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> metodo del <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> per aggiungere pannelli al <xref:System.Windows.Forms.StatusBar>. L'esempio Usa anche il <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>, <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>, e <xref:System.Windows.Forms.StatusBarPanel.Text%2A> le proprietà da inizializzare il <xref:System.Windows.Forms.StatusBarPanel> oggetti. Questo esempio si presuppone che il metodo definito nell'esempio viene definito e chiamato dal costruttore di una <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusBarPanelCollection (System.Windows.Forms.StatusBar owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.StatusBar owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.#ctor(System.Windows.Forms.StatusBar)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As StatusBar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StatusBarPanelCollection(System::Windows::Forms::StatusBar ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.StatusBar.StatusBarPanelCollection : System.Windows.Forms.StatusBar -&gt; System.Windows.Forms.StatusBar.StatusBarPanelCollection" Usage="new System.Windows.Forms.StatusBar.StatusBarPanelCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.StatusBar" />
      </Parameters>
      <Docs>
        <param name="owner">The <see cref="T:System.Windows.Forms.StatusBar" /> control that contains this collection.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un'istanza di questa classe senza associandolo a un <xref:System.Windows.Forms.StatusBar> controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds a <see cref="T:System.Windows.Forms.StatusBarPanel" /> to the collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.StatusBarPanel Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::StatusBarPanel ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.StatusBarPanel&#xA;override this.Add : string -&gt; System.Windows.Forms.StatusBarPanel" Usage="statusBarPanelCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text for the <see cref="T:System.Windows.Forms.StatusBarPanel" /> that is being added.</param>
        <summary>Adds a <see cref="T:System.Windows.Forms.StatusBarPanel" /> with the specified text to the collection.</summary>
        <returns>A <see cref="T:System.Windows.Forms.StatusBarPanel" /> that represents the panel that was added to the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile aggiungere pannelli a un <xref:System.Windows.Forms.StatusBar> controllo per visualizzare più di un tipo di informazioni. Questa versione del <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> crea un nuovo metodo <xref:System.Windows.Forms.StatusBarPanel> con il testo specificato nella `text` parametro e lo aggiunge alla raccolta. L'ordine in cui si trovano i pannelli nel <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> rappresenta l'ordine in cui i pannelli vengono visualizzati all'interno di <xref:System.Windows.Forms.StatusBar> controllo. I pannelli vengono visualizzati da sinistra verso destra a partire dal primo pannello nella raccolta. Il <xref:System.Windows.Forms.Control.RightToLeft%2A> proprietà del <xref:System.Windows.Forms.StatusBar> controllo non modifica l'ordine in cui i pannelli sono visualizzati nei <xref:System.Windows.Forms.StatusBar>. Per inserire un pannello in una posizione specifica nella raccolta, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> (metodo). Per aggiungere un gruppo di pannelli nella raccolta in un'unica operazione, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As StatusBarPanel) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.StatusBarPanel -&gt; int&#xA;override this.Add : System.Windows.Forms.StatusBarPanel -&gt; int" Usage="statusBarPanelCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.Windows.Forms.StatusBarPanel" /> that represents the panel to add to the collection.</param>
        <summary>Adds a <see cref="T:System.Windows.Forms.StatusBarPanel" /> to the collection.</summary>
        <returns>The zero-based index of the item in the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile aggiungere pannelli a un <xref:System.Windows.Forms.StatusBar> controllo per visualizzare più di un tipo di informazioni. Questa versione del <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> metodo aggiunge le <xref:System.Windows.Forms.StatusBarPanel> specificato nel `value` parametro alla raccolta. L'ordine in cui si trovano i pannelli nel <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> rappresenta l'ordine in cui i pannelli vengono visualizzati all'interno di <xref:System.Windows.Forms.StatusBar> controllo. I pannelli vengono visualizzati da sinistra verso destra a partire dal primo pannello nella raccolta. Il <xref:System.Windows.Forms.Control.RightToLeft%2A> proprietà del <xref:System.Windows.Forms.StatusBar> controllo non modifica l'ordine in cui i pannelli sono visualizzati nei <xref:System.Windows.Forms.StatusBar>. Per inserire un pannello in una posizione specifica nella raccolta, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> (metodo). Per aggiungere un gruppo di pannelli nella raccolta in un'unica operazione, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> (metodo).  
  
   
  
## Examples  
 L'esempio di codice seguente crea una <xref:System.Windows.Forms.StatusBar> control per un form e aggiunge due <xref:System.Windows.Forms.StatusBarPanel> oggetti. Uno dei <xref:System.Windows.Forms.StatusBarPanel> oggetti, denominati `panel1`, Visualizza il testo di stato per un'applicazione. Il secondo <xref:System.Windows.Forms.StatusBarPanel>, denominato `panel2`, viene visualizzata la data corrente e utilizza il <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> proprietà del <xref:System.Windows.Forms.StatusBarPanel> classe per visualizzare l'ora corrente. L'esempio Usa il <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> proprietà per assicurarsi che i pannelli vengono visualizzati anziché un pannello standard e usa e il <xref:System.Windows.Forms.StatusBar.Panels%2A> proprietà a cui accedere il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> metodo del <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> per aggiungere pannelli al <xref:System.Windows.Forms.StatusBar>. L'esempio Usa anche il <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>, <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>, e <xref:System.Windows.Forms.StatusBarPanel.Text%2A> le proprietà da inizializzare il <xref:System.Windows.Forms.StatusBarPanel> oggetti. Questo esempio si presuppone che il metodo definito nell'esempio viene definito e chiamato dal costruttore di una <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Windows.Forms.StatusBarPanel" /> being added to the collection was <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The parent of the <see cref="T:System.Windows.Forms.StatusBarPanel" /> specified in the <paramref name="value" /> parameter is not <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.StatusBarPanel[] panels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.StatusBarPanel[] panels) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (panels As StatusBarPanel())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::StatusBarPanel ^&gt; ^ panels);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.StatusBarPanel[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.StatusBarPanel[] -&gt; unit" Usage="statusBarPanelCollection.AddRange panels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panels" Type="System.Windows.Forms.StatusBarPanel[]" />
      </Parameters>
      <Docs>
        <param name="panels">An array of <see cref="T:System.Windows.Forms.StatusBarPanel" /> objects to add.</param>
        <summary>Adds an array of <see cref="T:System.Windows.Forms.StatusBarPanel" /> objects to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile aggiungere pannelli a un <xref:System.Windows.Forms.StatusBar> controllo per visualizzare più di un tipo di informazioni. Il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> metodo aggiunge una matrice di <xref:System.Windows.Forms.StatusBarPanel> oggetti specificati nel `panels` parametro alla raccolta. Tutti i pannelli esistenti nella raccolta vengono rimossi dalla raccolta prima di inserire nuovi pannelli. L'ordine in cui si trovano i pannelli nel <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> rappresenta l'ordine in cui i pannelli vengono visualizzati all'interno di <xref:System.Windows.Forms.StatusBar> controllo. I pannelli vengono visualizzati da sinistra verso destra a partire dal primo pannello nella raccolta. Il <xref:System.Windows.Forms.Control.RightToLeft%2A> proprietà del <xref:System.Windows.Forms.StatusBar> controllo non modifica l'ordine in cui i pannelli sono visualizzati nei <xref:System.Windows.Forms.StatusBar>. Per aggiungere un unico <xref:System.Windows.Forms.StatusBarPanel> alla raccolta, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> (metodo). Per inserire un pannello in una posizione specifica nel <xref:System.Windows.Forms.StatusBar> controllo (e in questa raccolta), usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The array of <see cref="T:System.Windows.Forms.StatusBarPanel" /> objects being added to the collection was <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="statusBarPanelCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all items from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si rimuove i pannelli dalla raccolta, tutte le informazioni sui pannelli eliminati vengono perse. Per rimuovere un singolo pannello dal <xref:System.Windows.Forms.StatusBar>, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> o <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.StatusBarPanel panel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.StatusBarPanel panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (panel As StatusBarPanel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::StatusBarPanel ^ panel);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.StatusBarPanel -&gt; bool" Usage="statusBarPanelCollection.Contains panel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="panel">The <see cref="T:System.Windows.Forms.StatusBarPanel" /> to locate in the collection.</param>
        <summary>Determines whether the specified panel is located within the collection.</summary>
        <returns>
          <see langword="true" /> if the panel is located within the collection; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A> metodo consente di determinare se un pannello è un membro della raccolta. Una volta stabilito che l'elemento si trova all'interno della raccolta, è possibile usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> metodo per determinare il pannello in cui si trova all'interno della raccolta.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf(System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="statusBarPanelCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the item to find in the collection.</param>
        <summary>Determines whether the collection contains a <see cref="T:System.Windows.Forms.StatusBarPanel" /> with the specified key.</summary>
        <returns>
          <see langword="true" /> to indicate the collection contains a <see cref="T:System.Windows.Forms.StatusBarPanel" /> with the specified key; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.StatusBarPanel.Name%2A> proprietà corrisponde alla chiave per un <xref:System.Windows.Forms.StatusBarPanel> nel <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>.  
  
 Il confronto delle chiavi non distinzione maiuscole/minuscole. Se il `key` parametro è `null` o una stringa vuota, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.ContainsKey%2A> restituisce `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of items in the collection.</summary>
        <value>Numero di oggetti <see cref="T:System.Windows.Forms.StatusBarPanel" /> nella raccolta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di determinare il numero di pannelli nel <xref:System.Windows.Forms.StatusBar>. È quindi possibile usare questo valore quando si scorrono i valori della raccolta ed è necessario specificare un numero di iterazioni da eseguire il ciclo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="statusBarPanelCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator to use to iterate through the item collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> that represents the item collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.StatusBarPanel panel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.StatusBarPanel panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (panel As StatusBarPanel) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::StatusBarPanel ^ panel);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.StatusBarPanel -&gt; int" Usage="statusBarPanelCollection.IndexOf panel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="panel">The <see cref="T:System.Windows.Forms.StatusBarPanel" /> to locate in the collection.</param>
        <summary>Returns the index within the collection of the specified panel.</summary>
        <returns>The zero-based index where the panel is located within the collection; otherwise, negative one (-1).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> metodo consente di determinare un pannello in cui si trova all'interno della raccolta. Per determinare se un elemento si trova all'interno della raccolta prima di chiamare questo metodo, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains(System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="statusBarPanelCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the <see cref="T:System.Windows.Forms.StatusBarPanel" /> to find in the collection.</param>
        <summary>Returns the index of the first occurrence of a <see cref="T:System.Windows.Forms.StatusBarPanel" /> with the specified key.</summary>
        <returns>The zero-based index of the first occurrence of the <see cref="T:System.Windows.Forms.StatusBarPanel" /> with the specified key, if found; otherwise, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey%2A> viene chiamato successivamente, l'ultimo restituito indice verrà innanzitutto verificato la corrispondenza delle chiavi e se non viene trovata alcuna corrispondenza, la ricerca inizia all'inizio della raccolta.  
  
 Il <xref:System.Windows.Forms.StatusBarPanel.Name%2A> proprietà corrisponde alla chiave per un <xref:System.Windows.Forms.StatusBarPanel> nel <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>. Il confronto delle chiavi non distinzione maiuscole/minuscole.  
  
 Se il `key` parametro è `null` o una stringa vuota, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey%2A> restituisce -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As StatusBarPanel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.Forms.StatusBarPanel -&gt; unit&#xA;override this.Insert : int * System.Windows.Forms.StatusBarPanel -&gt; unit" Usage="statusBarPanelCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index location where the panel is inserted.</param>
        <param name="value">A <see cref="T:System.Windows.Forms.StatusBarPanel" /> representing the panel to insert.</param>
        <summary>Inserts the specified <see cref="T:System.Windows.Forms.StatusBarPanel" /> into the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile aggiungere pannelli a un <xref:System.Windows.Forms.StatusBar> controllo per visualizzare più di un tipo di informazioni. Il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> metodo consente di creare un nuovo <xref:System.Windows.Forms.StatusBarPanel> e inserirlo in una posizione specifica all'interno della raccolta. L'ordine in cui si trovano i pannelli nel <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> rappresenta l'ordine in cui i pannelli vengono visualizzati all'interno di <xref:System.Windows.Forms.StatusBar> controllo. I pannelli vengono visualizzati da sinistra verso destra a partire dal primo pannello nella raccolta. Il <xref:System.Windows.Forms.Control.RightToLeft%2A> proprietà del <xref:System.Windows.Forms.StatusBar> controllo non modifica l'ordine in cui i pannelli sono visualizzati nei <xref:System.Windows.Forms.StatusBar>. Per aggiungere un pannello alla fine della raccolta, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> (metodo). Per aggiungere un gruppo di pannelli nella raccolta in un'unica operazione, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="value" /> parameter's parent is not <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" /> property of the <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> class.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <see cref="P:System.Windows.Forms.StatusBarPanel.AutoSize" /> property of the <paramref name="value" /> parameter's panel is not a valid <see cref="T:System.Windows.Forms.StatusBarPanelAutoSize" /> value.</exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether this collection is read-only.</summary>
        <value>
          <see langword="true" /> Se questa raccolta è di sola lettura. in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è sempre `false` per questa raccolta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets or sets an item within the collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBarPanel Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::StatusBarPanel ^ default[int] { System::Windows::Forms::StatusBarPanel ^ get(int index); void set(int index, System::Windows::Forms::StatusBarPanel ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.StatusBarPanel with get, set" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the panel in the collection to get or set.</param>
        <summary>Gets or sets the <see cref="T:System.Windows.Forms.StatusBarPanel" /> at the specified index.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.StatusBarPanel" /> che rappresenta il pannello che si trova in corrispondenza dell'indice specificato all'interno della raccolta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questo metodo per ottenere il <xref:System.Windows.Forms.StatusBarPanel> archiviati in una posizione specifica all'interno della raccolta. Per determinare l'indice di un pannello specifico all'interno della raccolta, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" /> property of the <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> class.</exception>
        <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Windows.Forms.StatusBarPanel" /> assigned to the collection was <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBarPanel Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::StatusBarPanel ^ default[System::String ^] { System::Windows::Forms::StatusBarPanel ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.StatusBarPanel" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the item to retrieve from the collection.</param>
        <summary>Gets an item with the specified key from the collection.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.StatusBarPanel" /> con la chiave specificata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.StatusBarPanel.Name%2A> proprietà corrisponde alla chiave per un <xref:System.Windows.Forms.StatusBarPanel> nel <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>.  
  
 Il confronto delle chiavi non distinzione maiuscole/minuscole. Se il `key` parametro è `null` o una stringa vuota, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item%2A> restituisce `null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As StatusBarPanel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.StatusBarPanel -&gt; unit&#xA;override this.Remove : System.Windows.Forms.StatusBarPanel -&gt; unit" Usage="statusBarPanelCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Windows.Forms.StatusBarPanel" /> representing the panel to remove from the collection.</param>
        <summary>Removes the specified <see cref="T:System.Windows.Forms.StatusBarPanel" /> from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si rimuove un riquadro dall'elenco, modificano gli indici per gli elementi successivi nell'insieme. Tutte le informazioni sul pannello rimossa vengono eliminate. È possibile usare questo metodo per rimuovere un pannello specifico dal <xref:System.Windows.Forms.StatusBar> specificando l'effettivo <xref:System.Windows.Forms.StatusBarPanel> da rimuovere dalla raccolta. Per specificare l'indice del pannello da rimuovere anziché il pannello stesso, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A> (metodo). Per rimuovere tutti i pannelli dalla raccolta, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Windows.Forms.StatusBarPanel" /> assigned to the <paramref name="value" /> parameter is <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="statusBarPanelCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the item to remove.</param>
        <summary>Removes the <see cref="T:System.Windows.Forms.StatusBarPanel" /> located at the specified index within the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si rimuove un riquadro dalla raccolta, gli indici cambiano per pannelli nella raccolta. Tutte le informazioni sul pannello rimossa vengono eliminate. È possibile utilizzare questo metodo per rimuovere un pannello specifico dall'elenco, specificando l'indice del pannello da rimuovere dalla raccolta. Per specificare il pannello da rimuovere anziché l'indice del pannello, usare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> (metodo). Per rimuovere tutti i pannelli dal <xref:System.Windows.Forms.StatusBar> controllo, utilizzare il <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" /> property of the <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> class.</exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="statusBarPanelCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the <see cref="T:System.Windows.Forms.StatusBarPanel" /> to remove from the collection.</param>
        <summary>Removes the <see cref="T:System.Windows.Forms.StatusBarPanel" /> with the specified key from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.StatusBarPanel.Name%2A> proprietà corrisponde alla chiave per un <xref:System.Windows.Forms.StatusBarPanel> nel <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>.  
  
 Il confronto delle chiavi non distinzione maiuscole/minuscole.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param>
        <param name="index">The zero-based index in the array at which copying begins.</param>
        <summary>Copies the <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> is multidimensional.  -or-  The number of elements in the <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> is greater than the available space from index to the end of <paramref name="array" />.</exception>
        <exception cref="T:System.InvalidCastException">The type in the collection cannot be cast automatically to the type of <paramref name="array" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that can be used to synchronize access to the collection.</summary>
        <value>Oggetto utilizzato per sincronizzare l'accesso alla raccolta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.Windows.Forms.StatusBarPanel" /> that represents the panel to add to the collection.</param>
        <summary>Adds a <see cref="T:System.Windows.Forms.StatusBarPanel" /> to the collection.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is not a <see cref="T:System.Windows.Forms.StatusBarPanel" />.  -or-  The parent of value is not <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object panel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (panel As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ panel) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="panel">The <see cref="T:System.Windows.Forms.StatusBarPanel" /> to locate in the collection.</param>
        <summary>Determines whether the specified panel is located within the collection.</summary>
        <returns>
          <see langword="true" /> if panel is a <see cref="T:System.Windows.Forms.StatusBarPanel" /> located within the collection; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object panel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (panel As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ panel) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="panel">The <see cref="T:System.Windows.Forms.StatusBarPanel" /> to locate in the collection.</param>
        <summary>Returns the index of the specified panel within the collection.</summary>
        <returns>The zero-based index of panel, if found, within the entire collection; otherwise, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index location where the panel is inserted.</param>
        <param name="value">A <see cref="T:System.Windows.Forms.StatusBarPanel" /> that represents the panel to insert.</param>
        <summary>Inserts the specified <see cref="T:System.Windows.Forms.StatusBarPanel" /> into the collection at the specified index.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The index parameter is less than zero or greater than the value of the <see langword="Count" /> property.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is not a <see cref="T:System.Windows.Forms.StatusBarPanel" />.  -or-  The parent of value is not <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection has a fixed size.</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the element to get or set.</param>
        <summary>Gets or sets the element at the specified index.</summary>
        <value>Elemento in corrispondenza dell'indice specificato.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is not a <see cref="T:System.Windows.Forms.StatusBarPanel" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Windows.Forms.StatusBarPanel" /> that represents the panel to remove from the collection.</param>
        <summary>Removes the specified <see cref="T:System.Windows.Forms.StatusBarPanel" /> from the collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>