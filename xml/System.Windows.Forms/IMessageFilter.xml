<Type Name="IMessageFilter" FullName="System.Windows.Forms.IMessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ddb5b94e8d608dfc1700ba4a7281c7306ca1f8b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30644635" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce un'interfaccia del filtro messaggi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa interfaccia consente a un'applicazione di acquisire un messaggio prima che venga inviato a un controllo o un modulo.  
  
 Una classe che implementa il <xref:System.Windows.Forms.IMessageFilter> interfaccia può essere aggiunti a message pump dell'applicazione per filtrare un messaggio o eseguire altre operazioni prima dell'invio del messaggio a un form o controllo. Per aggiungere il filtro messaggi message pump di un'applicazione, utilizzare il <xref:System.Windows.Forms.Application.AddMessageFilter%2A> metodo la <xref:System.Windows.Forms.Application> classe.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.IMessageFilter" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
  </Docs>
  <Members>
    <Member MemberName="PreFilterMessage">
      <MemberSignature Language="C#" Value="public bool PreFilterMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreFilterMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreFilterMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool PreFilterMessage(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Messaggio da inviare. Il messaggio non può essere modificato.</param>
        <summary>Filtra un messaggio prima che sia inviato.</summary>
        <returns>
          <see langword="true" /> per filtrare il messaggio e interromperne l'invio; <see langword="false" /> per consentire al messaggio di continuare fino al filtro o controllo successivo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> per filtrare un messaggio prima che venga inviato a un controllo o un modulo. Ad esempio, per arrestare il <xref:System.Windows.Forms.Control.Click> evento di un <xref:System.Windows.Forms.Button> controllo da cui vengono inviati al controllo, si implementa il <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> metodo e restituire un `true` valore quando il <xref:System.Windows.Forms.Control.Click> messaggio viene visualizzato. È inoltre possibile utilizzare questo metodo per eseguire il codice che potrebbe essere necessario eseguire prima dell'invio del messaggio.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Richiede <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> autorizzazione in fase di collegamento.</permission>
      </Docs>
    </Member>
  </Members>
</Type>