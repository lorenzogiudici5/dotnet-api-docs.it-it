<Type Name="WindowsFormsSynchronizationContext" FullName="System.Windows.Forms.WindowsFormsSynchronizationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79055ce2d7e343dfc46d75fff1e02983c1c1d90f" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51891621" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WindowsFormsSynchronizationContext : System.Threading.SynchronizationContext, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsFormsSynchronizationContext extends System.Threading.SynchronizationContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsFormsSynchronizationContext&#xA;Inherits SynchronizationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsFormsSynchronizationContext sealed : System::Threading::SynchronizationContext, IDisposable" />
  <TypeSignature Language="F#" Value="type WindowsFormsSynchronizationContext = class&#xA;    inherit SynchronizationContext&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.SynchronizationContext</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce un contesto di sincronizzazione per il modello di applicazione Windows Form.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Threading.SynchronizationContext" />
    <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3">Cenni preliminari sul modello asincrono basato su eventi</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsSynchronizationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsSynchronizationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3">Cenni preliminari sul modello asincrono basato su eventi</related>
      </Docs>
    </Member>
    <Member MemberName="AutoInstall">
      <MemberSignature Language="C#" Value="public static bool AutoInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoInstall" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoInstall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoInstall { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoInstall : bool with get, set" Usage="System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'oggetto <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> è stato installato quando è stato creato un controllo.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> è stato installato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall%2A> proprietà determina se il <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> viene installato quando viene creato un controllo o quando viene avviato un ciclo di messaggi.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3">Cenni preliminari sul modello asincrono basato su eventi</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public override System.Threading.SynchronizationContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.SynchronizationContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCopy () As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::SynchronizationContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : unit -&gt; System.Threading.SynchronizationContext&#xA;override this.CreateCopy : unit -&gt; System.Threading.SynchronizationContext" Usage="windowsFormsSynchronizationContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copia il contesto di sincronizzazione.</summary>
        <returns>Copia del contesto di sincronizzazione.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3">Cenni preliminari sul modello asincrono basato su eventi</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="windowsFormsSynchronizationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il metodo <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>. Il metodo <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> lascia l'oggetto <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A>, è necessario rilasciare tutti i riferimenti per il <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> in modo che il garbage collector di recuperare la memoria che il <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> occupata. Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementa un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>. In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public override void Post (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Post(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Post (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Post : System.Threading.SendOrPostCallback * obj -&gt; unit&#xA;override this.Post : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="windowsFormsSynchronizationContext.Post (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">Delegato di <see cref="T:System.Threading.SendOrPostCallback" /> da chiamare.</param>
        <param name="state">Oggetto passato al delegato.</param>
        <summary>Invia un messaggio asincrono a un contesto di sincronizzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Post%2A> metodo avvia una richiesta asincrona per inviare un messaggio.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3">Cenni preliminari sul modello asincrono basato su eventi</related>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public override void Send (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Send(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Send (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Send(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.Threading.SendOrPostCallback * obj -&gt; unit&#xA;override this.Send : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="windowsFormsSynchronizationContext.Send (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">Delegato di <see cref="T:System.Threading.SendOrPostCallback" /> da chiamare.</param>
        <param name="state">Oggetto passato al delegato.</param>
        <summary>Invia un messaggio sincrono a un contesto di sincronizzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il thread di destinazione non esiste più o il valore del relativo <xref:System.Threading.Thread.IsAlive%2A?displayProperty=nameWithType> proprietà viene `false`, il <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Send%2A> metodo che genera un <xref:System.ComponentModel.InvalidAsynchronousStateException>. Spetta al chiamante di determinare quali ulteriori azioni da intraprendere.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidAsynchronousStateException">Thread di destinazione non più esistente.</exception>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3">Cenni preliminari sul modello asincrono basato su eventi</related>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public static void Uninstall ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uninstall() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Uninstall" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Uninstall ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Uninstall();" />
      <MemberSignature Language="F#" Value="static member Uninstall : unit -&gt; unit" Usage="System.Windows.Forms.WindowsFormsSynchronizationContext.Uninstall " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disinstalla l'oggetto <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> attualmente installato e lo sostituisce con il contesto precedentemente installato</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se installato in precedenza <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> viene `null`, il contesto corrente è impostato su `null`.  
  
 Se il contesto di sincronizzazione attualmente installata non è un <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>, questo metodo non esegue alcuna operazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3">Cenni preliminari sul modello asincrono basato su eventi</related>
      </Docs>
    </Member>
  </Members>
</Type>