<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NativeWindow.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d4a3ca7cdea7a8179f3cad217bcd84e9c7f3aad2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4a3ca7cdea7a8179f3cad217bcd84e9c7f3aad2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.NativeWindow">
          <source>Provides a low-level encapsulation of a window handle and a window procedure.</source>
          <target state="translated">Fornisce un'inclusione di basso livello di un handle di finestra e di una routine di finestra.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>This class automatically manages window class creation and registration.</source>
          <target state="translated">Questa classe gestisce automaticamente la registrazione e creazione di classi di finestra.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>A window is not eligible for garbage collection when it is associated with a window handle.</source>
          <target state="translated">Una finestra non è idonea per l'operazione di garbage collection quando è associato a un handle di finestra.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>To ensure proper garbage collection, handles must either be destroyed manually using <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph> or released using <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>.</source>
          <target state="translated">Per garantire una corretta operazione di garbage collection, gli handle devono essere eliminati manualmente tramite <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph> o liberata usando <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> method is called when the WM_NCDESTROY message is processed.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> metodo viene chiamato quando viene elaborato il messaggio WM_NCDESTROY.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>This means there are cases in which when you do not need to manually call <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>, but it is good practice to do so.</source>
          <target state="translated">Ciò significa che esistono casi in cui non è necessario chiamare manualmente <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>, ma è consigliabile eseguire questa operazione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class provides the following properties and methods to manage handles: <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> classe fornisce le seguenti proprietà e metodi per gestire gli handle: <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph>, e <ph id="ph6">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The following code example demonstrates intercepting operating system window messages in a window procedure, and creating a window with a specific operating system window class name.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'intercettazione di messaggi di finestra del sistema operativo in una routine della finestra e creazione di una finestra con un nome di classe di finestra specifico del sistema operativo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The example creates two classes that inherit from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> that accomplish this.</source>
          <target state="translated">L'esempio crea due classi che ereditano da <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> che eseguire questa operazione.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The <ph id="ph1">`MyNativeWindowListener`</ph> class hooks into the window procedure of the form passed into the constructor, and overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept the <ph id="ph3">`WM_ACTIVATEAPP`</ph> window message.</source>
          <target state="translated">Il <ph id="ph1">`MyNativeWindowListener`</ph> hook della routine della finestra del form passato al costruttore di classe ed esegue l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodo per intercettare la <ph id="ph3">`WM_ACTIVATEAPP`</ph> messaggio della finestra.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The class demonstrates the usage of the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> methods to identify the window handle the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> will use.</source>
          <target state="translated">La classe illustra l'uso del <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> metodi per identificare l'handle della finestra di <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> utilizzerà.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The handle is assign based upon the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> events.</source>
          <target state="translated">L'handle viene assegnato in base il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>When the <ph id="ph1">`WM_ACTIVATEAPP`</ph> window message is received, the class calls the <ph id="ph2">`form1.ApplicationActivated`</ph> method.</source>
          <target state="translated">Quando il <ph id="ph1">`WM_ACTIVATEAPP`</ph> finestra di messaggio viene ricevuto, la classe chiama il <ph id="ph2">`form1.ApplicationActivated`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The <ph id="ph1">`MyNativeWindow`</ph> class creates a new window with the <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> set to <ph id="ph3">`BUTTON`</ph>.</source>
          <target state="translated">Il <ph id="ph1">`MyNativeWindow`</ph> classe crea una nuova finestra con il <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> impostato su <ph id="ph3">`BUTTON`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>The class demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> method and overriding the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept window messages that are received.</source>
          <target state="translated">Viene illustrato come utilizzare la classe di <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> metodo e si esegue l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodo per intercettare i messaggi di finestra ricevuti.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">per il chiamante immediato chiamare codice non gestito.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.NativeWindow">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.#ctor">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.NativeWindow" /&gt;</ph> class.</source>
          <target state="translated">Inizializza un'istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.NativeWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.#ctor">
          <source>This is the default <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.%23ctor%2A&gt;</ph> constructor provided by the compiler.</source>
          <target state="translated">Questa è l'impostazione predefinita <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.%23ctor%2A&gt;</ph> costruttore fornito dal compilatore.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class also has a static constructor that initializes application domain-wide message handlers and hash tables.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> classe dispone anche di un costruttore statico che inizializza i gestori di messaggi a livello di dominio di applicazione e le tabelle hash.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The handle to assign to this window.</source>
          <target state="translated">Handle da assegnare a questa finestra.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>Assigns a handle to this window.</source>
          <target state="translated">Assegna un handle a questa finestra.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> intercepts window messages sent to the <ph id="ph2">`handle`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> intercetta i messaggi finestra inviati per la <ph id="ph2">`handle`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> to reset the handle's window procedure to the default window procedure.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> per reimpostare la routine dell'handle finestra alla routine della finestra predefinita.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> method to indicate that the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> property has changed.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> chiamate al metodo di <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> metodo per indicare che il valore della <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> proprietà è stata modificata.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The handle to assign cannot be in a different application process.</source>
          <target state="translated">Assegnare l'handle non può essere un altro processo dell'applicazione.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The following code example demonstrates intercepting operating system window messages in a window procedure.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato l'intercettazione di messaggi di finestra del sistema operativo in una routine della finestra.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">Nell'esempio viene creata una classe che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> a questo scopo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The <ph id="ph1">`MyNativeWindowListener`</ph> class hooks into the window procedure of the form passed into the constructor, and overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercepts the <ph id="ph3">`WM_ACTIVATEAPP`</ph> window message.</source>
          <target state="translated">Il <ph id="ph1">`MyNativeWindowListener`</ph> hook della routine della finestra del form passato al costruttore di classe ed esegue l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodo intercetta il <ph id="ph3">`WM_ACTIVATEAPP`</ph> messaggio della finestra.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The class demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> methods to identify which window handle the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> will use.</source>
          <target state="translated">Viene illustrato come utilizzare la classe di <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> metodi per identificare quale finestra gestiscono il <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> verrà utilizzato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The handle is assigned based upon the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> events.</source>
          <target state="translated">L'handle viene assegnato in base al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>When the <ph id="ph1">`WM_ACTIVATEAPP`</ph> window message is received, the class calls the <ph id="ph2">`form1.ApplicationActivated`</ph> method.</source>
          <target state="translated">Quando il <ph id="ph1">`WM_ACTIVATEAPP`</ph> finestra di messaggio viene ricevuto, la classe chiama il <ph id="ph2">`form1.ApplicationActivated`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class overview.</source>
          <target state="translated">Questo codice è tratto dall'esempio illustrato nel <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">Codice non viene visualizzato allo scopo di brevità.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> for the whole code listing.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> per il listato di codice completo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>This window already has a handle.</source>
          <target state="translated">Questa finestra dispone già di un handle.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)">
          <source>The windows procedure for the associated native window could not be retrieved.</source>
          <target state="translated">Non è possibile recuperare la routine di finestra per la finestra nativa associata.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that specifies the creation parameters for this window.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> che specifica i parametri di creazione per la finestra corrente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>Creates a window and its handle with the specified creation parameters.</source>
          <target state="translated">Crea una finestra e il relativo handle con i parametri di creazione specificati.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The <ph id="ph1">`cp`</ph> parameter specifies the values that are passed to the native Win32 <ph id="ph2">`CreateWindowEx`</ph> method to create a window and its handle.</source>
          <target state="translated">Il <ph id="ph1">`cp`</ph> parametro specifica i valori che vengono passati a Win32 nativo <ph id="ph2">`CreateWindowEx`</ph> metodo per creare una finestra e il relativo handle.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> field is not <ph id="ph2">`null`</ph>, the newly created window handle inherits from the specified class.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> campo non è <ph id="ph2">`null`</ph>, l'handle di finestra appena creato eredita dalla classe specificata.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>For example, if <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> is set to <ph id="ph2">`BUTTON`</ph>, the newly created window is based on the Win32 <ph id="ph3">`BUTTON`</ph> window class.</source>
          <target state="translated">Ad esempio, se <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> è impostato su <ph id="ph2">`BUTTON`</ph>, la finestra appena creata è basata su Win32 <ph id="ph3">`BUTTON`</ph> classe della finestra.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Param%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> object must either be <ph id="ph3">`null`</ph> or reference an instance of a class that was declared as a structure.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Param%2A&gt;</ph> proprietà del <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> oggetto deve essere <ph id="ph3">`null`</ph> o fare riferimento a un'istanza di una classe che è stata dichiarata come una struttura.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class overview.</source>
          <target state="translated">Questo codice è tratto dall'esempio illustrato nel <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">Codice non viene visualizzato allo scopo di brevità.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> for the whole code listing.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> per il listato di codice completo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The class name provided is registered with the operating system.</source>
          <target state="translated">Il nome di classe specificato è registrato con il sistema operativo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The following code example demonstrates creating a window with a specific operating system window class name.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la creazione di una finestra con un nome di classe di finestra specifico del sistema operativo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">Nell'esempio viene creata una classe che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> a questo scopo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The <ph id="ph1">`MyNativeWindow`</ph> class creates a new window with the <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> set to <ph id="ph3">`BUTTON`</ph>.</source>
          <target state="translated">Il <ph id="ph1">`MyNativeWindow`</ph> classe crea una nuova finestra con il <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> impostato su <ph id="ph3">`BUTTON`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>This creates a Win32 button window.</source>
          <target state="translated">Crea una finestra pulsante Win32.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The location and size of the button is set, along with specifying additional window styles.</source>
          <target state="translated">La posizione e le dimensioni del pulsante è impostata e si specificano gli stili di finestra aggiuntiva.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The class demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> method and override the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept window messages that are received.</source>
          <target state="translated">La classe viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> ed eseguire l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodo per intercettare i messaggi di finestra ricevuti.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</source>
          <target state="translated">Nell'esempio per quanto il WM_ACTIVATEAPP, questo può essere sostituito in un'applicazione reale con i messaggi della finestra specifici del tipo creato.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>Some control types send their window messages to the window parent instead of the window.</source>
          <target state="translated">Alcuni tipi di controllo di inviare i messaggi della finestra alla finestra padre anziché nella finestra.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>See the Windows Platform SDK for more information.</source>
          <target state="translated">Windows Platform SDK per ulteriori informazioni, vedere.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The operating system ran out of resources when trying to create the native window.</source>
          <target state="translated">Nel tentativo di creare la finestra nativa, il sistema operativo ha esaurito le risorse.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The native Win32 API could not create the specified window.</source>
          <target state="translated">L'API Win32 nativa non è in grado di creare la finestra specificata.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>The handle of the current native window is already assigned; in explanation, the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.NativeWindow.Handle" /&gt;</ph> property is not equal to <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</source>
          <target state="translated">L'handle della finestra nativa corrente è già stato assegnato; in altri termini, la proprietà <ph id="ph1">&lt;see cref="P:System.Windows.Forms.NativeWindow.Handle" /&gt;</ph> è diversa da <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>to create a top-level window.</source>
          <target state="translated">Per creare una finestra di primo livello.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>This permission is only demanded if the window style is not a child or if the window does not have a parent.</source>
          <target state="translated">Questa autorizzazione è richiesta solo se lo stile della finestra non è un elemento figlio o se la finestra non dispone di un padre.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Enumerazione associata: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>The message that is currently being processed.</source>
          <target state="translated">Messaggio correntemente in fase di elaborazione.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>Invokes the default window procedure associated with this window.</source>
          <target state="translated">Richiama la routine di finestra predefinita associata a questa finestra.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>Typically, you only call the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> method when you are intercepting window messages and would like the default window procedure to handle the message.</source>
          <target state="translated">In genere, si chiama solo il <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> metodo quando si intercettano i messaggi della finestra e usare la procedura di finestra predefinito per gestire il messaggio.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> should not be called to send a window message to the window; call the Win32 <ph id="ph2">`SendMessage`</ph> function instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> non deve essere chiamato per inviare un messaggio della finestra alla finestra. chiamare Win32 <ph id="ph2">`SendMessage`</ph> funzione alternativa.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>It is an error to call <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> when the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> property is 0.</source>
          <target state="translated">È un errore di chiamare <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DefWndProc%2A&gt;</ph> quando il <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> proprietà è 0.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>Override this method in a derived class to implement generalized custom message handling for a specific native window or .NET Windows Forms <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">Eseguire l'override di questo metodo in una classe derivata per implementare la gestione per una specifica finestra nativa o un Windows Form .NET generalizzato messaggi personalizzati <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>Custom processing can be performed before, after, or instead of a call to the base class implementation of this method, which performs standard message processing.</source>
          <target state="translated">L'elaborazione personalizzata può essere eseguita prima, dopo o invece di una chiamata all'implementazione della classe di base di questo metodo, che esegue l'elaborazione dei messaggi standard.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)">
          <source>In contrast, adding customized message handling for an application can be accomplished through the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /&gt;</ph> method of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Application" /&gt;</ph> class.</source>
          <target state="translated">Al contrario, aggiunta personalizzate per un'applicazione può essere eseguita tramite la gestione dei messaggi il <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /&gt;</ph> metodo la <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Application" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.DestroyHandle">
          <source>Destroys the window and its handle.</source>
          <target state="translated">Elimina la finestra e il relativo handle.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DestroyHandle">
          <source>This method destroys the window associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph>, sets the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> property to 0, and calls the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> method to reflect the change.</source>
          <target state="translated">Questo metodo elimina la finestra associata la <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph>, imposta il <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> proprietà su 0 e chiamate di <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> metodo in modo da riflettere la modifica.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DestroyHandle">
          <source>Typically, you only call <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph> when you are done with the native window.</source>
          <target state="translated">In genere, si chiama solo <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</ph> al termine con la finestra nativa.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.DestroyHandle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class automatically will destroy the associated window and release its resources in response to a WM_DESTROY message.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> classe verrà automaticamente distruggere la finestra associata e rilasciare le risorse in risposta a un messaggio WM_DESTROY.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.Finalize">
          <source>Releases the resources associated with this window.</source>
          <target state="translated">Rilascia le risorse associate a questa finestra.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Finalize%2A&gt;</ph> method removes the Win32 derived class associated with the current <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> instance, releases the handle, and posts a WM_CLOSE message to the associated window.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Finalize%2A&gt;</ph> metodo rimuove la classe derivata Win32 associata all'oggetto corrente <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> rilascia l'handle di istanza e invia un messaggio WM_CLOSE associato alla finestra.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>A handle to a window.</source>
          <target state="translated">Handle di una finestra.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>Retrieves the window associated with the specified handle.</source>
          <target state="translated">Recupera la finestra associata all'handle specificato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.NativeWindow" /&gt;</ph> associated with the specified handle.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.NativeWindow" /&gt;</ph> associato all'handle specificato.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>This method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> when the handle does not have an associated window.</source>
          <target state="translated">Questo metodo restituisce <ph id="ph1">&lt;see langword="null" /&gt;</ph> quando nessuna finestra è associata all'handle.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>If you receive a handle from another method, use this method to retrieve the window associated with the handle.</source>
          <target state="translated">Se si riceve un handle da un altro metodo, è possibile utilizzare questo metodo per recuperare la finestra associata all'handle.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)">
          <source>The handle must already be owned by another <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> in the current process; otherwise, <ph id="ph2">`null`</ph> is returned.</source>
          <target state="translated">L'handle deve già essere appartenga a un altro <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> nell'attuale processo; in caso contrario, <ph id="ph2">`null`</ph> viene restituito.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>Gets the handle for this window.</source>
          <target state="translated">Ottiene l'handle di questa finestra.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>If successful, an <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> representing the handle to the associated native Win32 window; otherwise, 0 if no handle is associated with the window.</source>
          <target state="translated">In caso di esito positivo, oggetto <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> che rappresenta l'handle associato alla finestra Win32 nativa; in caso contrario, 0 se non esistono handle associati alla finestra.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>Use this method when calling Windows API methods that require a handle for a window or control.</source>
          <target state="translated">Utilizzare questo metodo quando si chiamano metodi API di Windows che richiedono un handle per una finestra o un controllo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The following code example demonstrates creating a window with a specific operating system window class name.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la creazione di una finestra con un nome di classe di finestra specifico del sistema operativo.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">Nell'esempio viene creata una classe che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> a questo scopo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The example also demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> method to be notified when the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> changes.</source>
          <target state="translated">Nell'esempio viene illustrato anche l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> metodo per ricevere una notifica quando il <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> le modifiche.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The <ph id="ph1">`MyNativeWindow`</ph> class creates a new window with the <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> set to BUTTON.</source>
          <target state="translated">Il <ph id="ph1">`MyNativeWindow`</ph> classe crea una nuova finestra con il <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> impostato su pulsante.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>This creates a Win32 button window.</source>
          <target state="translated">Crea una finestra pulsante Win32.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The location and size of the button is set, along with specifying additional window styles.</source>
          <target state="translated">La posizione e le dimensioni del pulsante è impostata e si specificano gli stili di finestra aggiuntiva.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>The class demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> method and override the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept window messages that are received.</source>
          <target state="translated">La classe viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> ed eseguire l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodo per intercettare i messaggi di finestra ricevuti.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>Although the example looks for the WM_ACTIVATEAPP message, this could be replaced in a real program with window messages specific to the type created.</source>
          <target state="translated">Nell'esempio per quanto il WM_ACTIVATEAPP, questo potrebbe essere sostituito in un'applicazione reale con i messaggi della finestra specifici del tipo creato.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>Some control types send their window messages to the window parent instead of the window.</source>
          <target state="translated">Alcuni tipi di controllo di inviare i messaggi della finestra alla finestra padre anziché nella finestra.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.NativeWindow.Handle">
          <source>See the Windows Platform SDK for more information.</source>
          <target state="translated">Windows Platform SDK per ulteriori informazioni, vedere.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>Specifies a notification method that is called when the handle for a window is changed.</source>
          <target state="translated">Specifica un metodo di notifica che viene chiamato quando varia l'handle di una finestra.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>This method is invoked when the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> property has changed.</source>
          <target state="translated">Questo metodo viene richiamato quando il valore di <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> proprietà è stata modificata.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The following code example demonstrates creating a window with a specific operating system window class name.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la creazione di una finestra con un nome di classe di finestra specifico del sistema operativo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">Nell'esempio viene creata una classe che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> a questo scopo.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The example also demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> method to be notified when the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> changes.</source>
          <target state="translated">Nell'esempio viene illustrato anche l'override di <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> metodo per ricevere una notifica quando il <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> le modifiche.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The <ph id="ph1">`MyNativeWindow`</ph> class creates a new window with the <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> set to <ph id="ph3">`BUTTON`</ph>.</source>
          <target state="translated">Il <ph id="ph1">`MyNativeWindow`</ph> classe crea una nuova finestra con il <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</ph> impostato su <ph id="ph3">`BUTTON`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>This creates a Win32 button window.</source>
          <target state="translated">Crea una finestra pulsante Win32.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The location and size of the button is set, along with specifying additional window styles.</source>
          <target state="translated">La posizione e le dimensioni del pulsante è impostata e si specificano gli stili di finestra aggiuntiva.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>The class demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> method and override the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept window messages that are received.</source>
          <target state="translated">La classe viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;</ph> ed eseguire l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodo per intercettare i messaggi di finestra ricevuti.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</source>
          <target state="translated">Nell'esempio per quanto il WM_ACTIVATEAPP, questo può essere sostituito in un'applicazione reale con i messaggi della finestra specifici del tipo creato.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class overview.</source>
          <target state="translated">Questo codice è tratto dall'esempio illustrato nel <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">Codice non viene visualizzato allo scopo di brevità.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> for the whole code listing.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> per il listato di codice completo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>Some control types send their window messages to the window parent instead of the window.</source>
          <target state="translated">Alcuni tipi di controllo di inviare i messaggi della finestra alla finestra padre anziché nella finestra.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>See the Windows Platform SDK for more information.</source>
          <target state="translated">Windows Platform SDK per ulteriori informazioni, vedere.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnHandleChange">
          <source>Override this method to track changes that are made to the window handle.</source>
          <target state="translated">Eseguire l'override di questo metodo per rilevare le modifiche apportate all'handle di finestra.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that specifies the unhandled thread exception.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> che specifica le eccezioni di thread non gestite.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)">
          <source>When overridden in a derived class, manages an unhandled thread exception.</source>
          <target state="translated">Quando è sottoposto a override in una classe derivata, gestisce un'eccezione di thread non gestita.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)">
          <source>Typically, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> handles thread exceptions.</source>
          <target state="translated">In genere, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> gestisce le eccezioni tra thread.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>Releases the handle associated with this window.</source>
          <target state="translated">Rilascia l'handle associato a questa finestra.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>This method does not destroy the window handle.</source>
          <target state="translated">Questo metodo non elimina l'handle di finestra.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>Instead, it sets the handle's window procedure to the default window procedure.</source>
          <target state="translated">Imposta invece la routine dell'handle finestra alla routine della finestra predefinita.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>It sets the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> property to 0 and calls <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> to reflect the change.</source>
          <target state="translated">Imposta il <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</ph> proprietà su 0 e chiama <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</ph> per riflettere la modifica.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>A window automatically calls this method if it receives a native Win32 WM_NCDESTROY message, indicating that Windows has destroyed the handle.</source>
          <target state="translated">Una finestra chiama automaticamente questo metodo se riceve un messaggio WM_NCDESTROY nativo Win32, che indica che Windows ha eliminato l'handle.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>The following code example demonstrates intercepting operating system window messages in a window procedure.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato l'intercettazione di messaggi di finestra del sistema operativo in una routine della finestra.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">Nell'esempio viene creata una classe che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> a questo scopo.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>The <ph id="ph1">`MyNativeWindowListener`</ph> class hooks into the window procedure of the form passed into the constructor, and overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercepts the <ph id="ph3">`WM_ACTIVATEAPP`</ph> window message.</source>
          <target state="translated">Il <ph id="ph1">`MyNativeWindowListener`</ph> hook della routine della finestra del form passato al costruttore di classe ed esegue l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodo intercetta il <ph id="ph3">`WM_ACTIVATEAPP`</ph> messaggio della finestra.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>The class demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> methods to identify the window handle the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> will use.</source>
          <target state="translated">Viene illustrato come utilizzare la classe di <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> metodi per identificare l'handle della finestra di <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> utilizzerà.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>The handle is assign based upon the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> events.</source>
          <target state="translated">L'handle viene assegnato in base il <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>When the <ph id="ph1">`WM_ACTIVATEAPP`</ph> window message is received, the class calls the <ph id="ph2">`form1.ApplicationActivated`</ph> method.</source>
          <target state="translated">Quando il <ph id="ph1">`WM_ACTIVATEAPP`</ph> finestra di messaggio viene ricevuto, la classe chiama il <ph id="ph2">`form1.ApplicationActivated`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class overview.</source>
          <target state="translated">Questo codice è tratto dall'esempio illustrato nel <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">Codice non viene visualizzato allo scopo di brevità.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.ReleaseHandle">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> for the whole code listing.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> per il listato di codice completo.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> that is associated with the current Windows message.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> associato al messaggio corrente di Windows.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>Invokes the default window procedure associated with this window.</source>
          <target state="translated">Richiama la routine di finestra predefinita associata a questa finestra.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>This method is called when a window message is sent to the handle of the window.</source>
          <target state="translated">Questo metodo viene chiamato quando viene inviato un messaggio della finestra per l'handle della finestra.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>The following code example demonstrates intercepting operating system window messages in a window procedure.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato l'intercettazione di messaggi di finestra del sistema operativo in una routine della finestra.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>The example creates a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> to accomplish this.</source>
          <target state="translated">Nell'esempio viene creata una classe che eredita da <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> a questo scopo.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`MyNativeWindowListener`</ph> class hooks into the window procedure of the form passed into the constructor, and overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> method to intercept the <ph id="ph3">`WM_ACTIVATEAPP`</ph> window message.</source>
          <target state="translated">Il <ph id="ph1">`MyNativeWindowListener`</ph> hook della routine della finestra del form passato al costruttore di classe ed esegue l'override di <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</ph> metodo per intercettare la <ph id="ph3">`WM_ACTIVATEAPP`</ph> messaggio della finestra.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>The class demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> methods to identify the window handle the <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> will use.</source>
          <target state="translated">Viene illustrato come utilizzare la classe di <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</ph> metodi per identificare l'handle della finestra di <ph id="ph3">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> utilizzerà.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>The handle is assigned based upon the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> events.</source>
          <target state="translated">L'handle viene assegnato in base al <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType&gt;</ph> eventi.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>When the <ph id="ph1">`WM_ACTIVATEAPP`</ph> window message is received, the class calls the <ph id="ph2">`form1.ApplicationActivated`</ph> method.</source>
          <target state="translated">Quando il <ph id="ph1">`WM_ACTIVATEAPP`</ph> finestra di messaggio viene ricevuto, la classe chiama il <ph id="ph2">`form1.ApplicationActivated`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> class overview.</source>
          <target state="translated">Questo codice è tratto dall'esempio illustrato nel <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> Cenni preliminari sulla classe.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">Codice non viene visualizzato allo scopo di brevità.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> for the whole code listing.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Windows.Forms.NativeWindow&gt;</ph> per il listato di codice completo.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>Override this method to implement specific message processing.</source>
          <target state="translated">Eseguire l'override di questo metodo per implementare l'elaborazione del messaggio specifico.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)">
          <source>Call <bpt id="p1">&lt;c&gt;</bpt>base.WndProc<ept id="p1">&lt;/c&gt;</ept> for unhandled messages.</source>
          <target state="translated">Chiamare <bpt id="p1">&lt;c&gt;</bpt>base. WndProc<ept id="p1">&lt;/c&gt;</ept> per messaggi non gestiti.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>