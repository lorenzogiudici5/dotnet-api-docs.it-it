<Type Name="GiveFeedbackEventHandler" FullName="System.Windows.Forms.GiveFeedbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4a1502c5fd8e6d8fb8bda57f0306fb07fba2094" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30638275" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void GiveFeedbackEventHandler(object sender, GiveFeedbackEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GiveFeedbackEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GiveFeedbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub GiveFeedbackEventHandler(sender As Object, e As GiveFeedbackEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void GiveFeedbackEventHandler(System::Object ^ sender, GiveFeedbackEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Origine dell'evento.</param>
    <param name="e">Oggetto <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> che contiene i dati dell'evento.</param>
    <summary>Rappresenta il metodo che gestisce l'evento <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> di un oggetto <see cref="T:System.Windows.Forms.Control" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si crea un delegato <xref:System.Windows.Forms.GiveFeedbackEventHandler>, si identifica il metodo che gestirà l'evento. Per associare l'evento al gestore eventi in uso, aggiungere all'evento un'istanza del delegato. Il gestore eventi viene chiamato ogni volta che si verifica l'evento, a meno che non venga rimosso il delegato. Per ulteriori informazioni sulla gestione degli eventi con i delegati, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'operazione di trascinamento e rilascio tra due <xref:System.Windows.Forms.ListBox> controlli. Nell'esempio viene chiamato il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo quando si avvia l'azione di trascinamento. L'azione di trascinamento viene avviata se il mouse viene spostato più <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> dalla posizione del mouse durante la <xref:System.Windows.Forms.Control.MouseDown> evento. Il <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> metodo viene utilizzato per determinare l'indice dell'elemento da trascinare durante il `MouseDown` evento.  
  
 Nell'esempio viene inoltre illustrato l'utilizzo di cursori personalizzati per l'operazione di trascinamento e rilascio. Nell'esempio si presuppone che due file cursore, `3dwarro.cur` e `3dwno.cur`, esiste nella directory dell'applicazione, per il trascinamento personalizzato e non trascinamento, rispettivamente. I cursori personalizzati da utilizzare se il `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> è selezionata. I cursori personalizzati vengono impostati <xref:System.Windows.Forms.Control.GiveFeedback> gestore dell'evento.  
  
 Lo stato della tastiera viene valutato nel <xref:System.Windows.Forms.Control.DragOver> il gestore eventi per il diritto `ListBox`, per determinare l'operazione di trascinamento basata sullo stato dei tasti MAIUSC, CTRL, ALT o CTRL + ALT. Il percorso nel `ListBox` in cui si verificherà il rilascio è determinato anche durante la `DragOver` evento. Se i dati da eliminare non sono un `String`, quindi il <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> è impostato su <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Infine, lo stato del trascinamento viene visualizzato nel `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 I dati da eliminare per il diritto `ListBox` viene determinato nel <xref:System.Windows.Forms.Control.DragDrop> gestore dell'evento e il `String` valore viene aggiunto nella posizione appropriata all'interno di `ListBox`. Se l'operazione di trascinamento viene spostato all'esterno dei limiti del form, quindi viene annullata l'operazione di trascinamento e rilascio nel <xref:System.Windows.Forms.Control.QueryContinueDrag> gestore dell'evento.  
  
 Questo estratto di codice viene illustrato l'utilizzo di <xref:System.Windows.Forms.GiveFeedbackEventHandler> delegato con il <xref:System.Windows.Forms.Control.GiveFeedback> evento. Vedere il <xref:System.Windows.Forms.Control.DoDragDrop%2A> metodo per l'esempio di codice completo.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.GiveFeedback" />
    <altmember cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />
  </Docs>
</Type>