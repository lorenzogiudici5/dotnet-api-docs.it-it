<Type Name="ListView" FullName="System.Windows.Forms.ListView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48abdad84545b1f08adb5ce8c31cae031c876452" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659195" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Forms::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un controllo visualizzazione elenco di Windows, nel quale viene rappresentato un insieme di elementi che è possibile visualizzare tramite una delle quattro visualizzazioni disponibili.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Forms.ListView> controllo consente di visualizzare un elenco di elementi con testo dell'elemento e, facoltativamente, un'icona per identificare il tipo di elemento. Ad esempio, l'elenco di Esplora risorse di file è simile a un <xref:System.Windows.Forms.ListView> controllo. Visualizza un elenco di file e cartelle attualmente selezionate nell'albero. Ogni file e cartella visualizza un'icona per identificare il tipo di file o cartella. Il <xref:System.Windows.Forms.ListViewItem> classe rappresenta un elemento all'interno di un <xref:System.Windows.Forms.ListView> controllo. Gli elementi vengono visualizzati nell'elenco possono essere visualizzati in uno dei cinque viste diverse. Gli elementi possono essere visualizzati come icone grandi, come icone piccole o icone piccole in un elenco verticale. Gli elementi possono anche avere elementi secondari che contengono informazioni che sono correlate all'elemento padre. Visualizzazione Dettagli consente di visualizzare l'elemento e i relativi elementi secondari in una griglia con le intestazioni di colonna che identificano le informazioni visualizzate in un elemento secondario. La visualizzazione affiancata, la cui disponibilità è limitata come descritto di seguito, consente di visualizzare l'elemento e i relativi elementi secondari sotto forma di riquadro che contiene un'icona di grandi dimensioni per le informazioni testuali. <xref:System.Windows.Forms.ListView> supporta selezioni singole o multiple. La funzionalità di selezione multipla consente all'utente di selezionare da un elenco di elementi in modo simile a un <xref:System.Windows.Forms.ListBox> controllo. Inoltre, l'utente può attivare gli elementi selezionati per eseguire un'attività. Ad esempio, è possibile utilizzare un <xref:System.Windows.Forms.ListView> controllo per visualizzare un elenco di file che è possibile aprire e utilizzare l'applicazione. L'utente può selezionare i file da aprire e quindi fare doppio clic per attivare gli elementi e aprire i file nell'applicazione. Il <xref:System.Windows.Forms.ListView> può anche visualizzare caselle di controllo, utilizzando il <xref:System.Windows.Forms.ListView.CheckBoxes%2A> proprietà, per consentire all'utente di selezionare gli elementi che si desiderano eseguire un'azione su. È possibile utilizzare il <xref:System.Windows.Forms.ListView> controllo in diversi modi. Il controllo può essere utilizzato per visualizzare le informazioni da un'applicazione, un database o un file di testo. Il <xref:System.Windows.Forms.ListView> consente inoltre di ottenere informazioni da parte dell'utente, quali la selezione di un set di file da elaborare.  
  
 <xref:System.Windows.Forms.ListView> fornisce un numero elevato di proprietà che forniscono flessibilità nell'aspetto e comportamento. Il <xref:System.Windows.Forms.ListView.View%2A> proprietà consente di modificare il modo in cui gli elementi vengono visualizzati. Il <xref:System.Windows.Forms.ListView.LargeImageList%2A>, <xref:System.Windows.Forms.ListView.SmallImageList%2A>, e <xref:System.Windows.Forms.ListView.StateImageList%2A> proprietà consentono di specificare il <xref:System.Windows.Forms.ImageList> gli oggetti che contengono le immagini visualizzate per gli elementi e, nel caso del <xref:System.Windows.Forms.ListView.StateImageList%2A>, le caselle di controllo che vengono visualizzati quando il <xref:System.Windows.Forms.ListView.CheckBoxes%2A> proprietà è impostata su `true`. Per determinare quali elementi sono selezionati, è possibile utilizzare il <xref:System.Windows.Forms.ListView.CheckedItems%2A> proprietà a cui accedere il <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> insieme. Il <xref:System.Windows.Forms.ListView.Columns%2A> proprietà consente l'accesso al <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>, che archivia le intestazioni di colonna vengono visualizzati quando il <xref:System.Windows.Forms.ListView.View%2A> del controllo è impostata su <xref:System.Windows.Forms.View.Details>. Gli elementi vengono aggiunti e rimossi dal <xref:System.Windows.Forms.ListView> tramite il <xref:System.Windows.Forms.ListView.Items%2A> proprietà. Il <xref:System.Windows.Forms.ListView.Items%2A> proprietà consente di accedere il <xref:System.Windows.Forms.ListView.ListViewItemCollection> del controllo, che fornisce metodi per la modifica degli elementi nel controllo. Se si desidera consentire all'utente di modificare il testo di un elemento, è possibile utilizzare il <xref:System.Windows.Forms.ListView.LabelEdit%2A> proprietà. Quando il controllo contiene un numero elevato di elementi, è spesso più semplice per l'utente per visualizzarli in un elenco ordinato. È possibile utilizzare il <xref:System.Windows.Forms.ListView.Sorting%2A> proprietà per ordinare gli elementi in ordine alfabetico. È inoltre possibile personalizzare completamente l'aspetto di un <xref:System.Windows.Forms.ListView> controllo. A tale scopo, impostare il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> proprietà `true` e gestire uno o più dei seguenti eventi: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>.  
  
 Molte delle proprietà del <xref:System.Windows.Forms.ListView> controllo vengono utilizzate quando il <xref:System.Windows.Forms.ListView.View%2A> del controllo è impostata su <xref:System.Windows.Forms.View.Details>. Il <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> proprietà consente agli utenti il <xref:System.Windows.Forms.ListView> controllo per riconfigurare l'ordine delle colonne in fase di esecuzione. Il <xref:System.Windows.Forms.ListView.FullRowSelect%2A> proprietà consente a un elemento e i relativi elementi secondari da selezionare anziché semplicemente l'elemento. Per visualizzare la griglia nella visualizzazione dettagli per individuare i limiti degli elementi ed elementi secondari nel <xref:System.Windows.Forms.ListView>, è possibile utilizzare il <xref:System.Windows.Forms.ListView.GridLines%2A> proprietà. Il <xref:System.Windows.Forms.ListView.HeaderStyle%2A> proprietà consente di specificare il tipo di intestazioni di colonna da visualizzare.  
  
 Oggetto <xref:System.Windows.Forms.ListView> controllo può operare in modalità virtuale, in cui <xref:System.Windows.Forms.ListViewItem> gli oggetti vengono generati in modo dinamico anziché essere archiviati nella <xref:System.Windows.Forms.ListView.Items%2A> insieme. Questo può essere utile per la gestione di elenchi di dimensioni molto grandi o elenchi il cui contenuto cambia di frequente. Per abilitare la modalità virtuale, impostare il <xref:System.Windows.Forms.ListView.VirtualMode%2A> proprietà `true` e gestire il <xref:System.Windows.Forms.ListView.RetrieveVirtualItem>, <xref:System.Windows.Forms.ListView.CacheVirtualItems>, e <xref:System.Windows.Forms.ListView.SearchForVirtualItem> eventi.  
  
 Oltre a molte proprietà che sono disponibili per un <xref:System.Windows.Forms.ListView> controllo, sono disponibili metodi ed eventi che l'applicazione può utilizzare per fornire funzionalità aggiuntive per il <xref:System.Windows.Forms.ListView>. Il <xref:System.Windows.Forms.ListView.BeginUpdate%2A> e <xref:System.Windows.Forms.ListView.EndUpdate%2A> metodi consentono di migliorare le prestazioni quando si aggiungono molti elementi a un <xref:System.Windows.Forms.ListView> impedendo ridisegnato ogni volta che viene aggiunto un elemento di controllo. Se il <xref:System.Windows.Forms.ListView> controllo vengono visualizzati elementi ed elementi secondari, si consiglia di fornire funzionalità quando l'utente fa un elemento secondario. Per determinare l'elemento il cui elemento secondario viene fatto clic, è possibile utilizzare il <xref:System.Windows.Forms.ListView.GetItemAt%2A> metodo. Quando si esegue la convalida degli articoli dopo che l'utente ha modificato le, si desidera visualizzare all'utente di modificare un elemento specifico. Il <xref:System.Windows.Forms.ListView.EnsureVisible%2A> metodo può essere chiamato per garantire che l'elemento specifico nell'area visibile del controllo.  
  
 Se il <xref:System.Windows.Forms.ListView.LabelEdit%2A> proprietà impostata su `true`, è possibile eseguire attività quali la convalida del testo modificato prima e dopo il testo modificato tramite la creazione di un gestore eventi per il <xref:System.Windows.Forms.ListView.BeforeLabelEdit> e <xref:System.Windows.Forms.ListView.AfterLabelEdit> eventi. Per eseguire attività quali l'apertura di un file o la visualizzazione di una finestra di dialogo per modificare un elemento visualizzato in un <xref:System.Windows.Forms.ListView>, è possibile creare un gestore eventi per il <xref:System.Windows.Forms.ListView.ItemActivate> evento. Se si consente all'utente di ordinare gli elementi in un <xref:System.Windows.Forms.ListView> quando si fa clic su un'intestazione di colonna, è possibile creare un gestore eventi per il <xref:System.Windows.Forms.ListView.ColumnClick> evento per eseguire l'ordinamento. Quando il <xref:System.Windows.Forms.ListView.CheckBoxes%2A> è impostata su `true`, è possibile determinare quando una modifica nello stato di controllo di un elemento mediante la gestione di <xref:System.Windows.Forms.ListView.ItemCheck> evento.  
  
 È inoltre possibile impostare un'immagine di sfondo per il <xref:System.Windows.Forms.ListView> con il <xref:System.Windows.Forms.Control.BackgroundImage%2A> proprietà. L'applicazione deve disporre di <xref:System.STAThreadAttribute> nel relativo `Main` metodo per visualizzare correttamente l'immagine di sfondo per il <xref:System.Windows.Forms.ListView> controllo. Inoltre, se un <xref:System.Windows.Forms.ListView> controllo con un'immagine di sfondo è ospitato in Internet Explorer, specificare comctl32.dll versione 6.0 come assembly dipendente per garantire l'immagine di sfondo venga visualizzata nel file manifesto dell'applicazione.  
  
> [!NOTE]
>  L'impostazione di <xref:System.Windows.Forms.Control.Cursor%2A> proprietà per un <xref:System.Windows.Forms.ListView> controllo non ha alcun effetto sull'aspetto del cursore in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1 e versioni precedenti.  
  
 Windows XP e Windows Server 2003 forniscono tre funzionalità che migliorano la <xref:System.Windows.Forms.ListView> controllare quando l'applicazione chiama il <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodo: visualizzazione affiancata, raggruppamento e il segno di inserimento.  
  
 La visualizzazione affiancata consente di bilanciare le informazioni grafiche e testuali visualizzando l'elemento e dell'elemento secondario di testo accanto a icone grandi. Impostare il <xref:System.Windows.Forms.ListView.View%2A> proprietà <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> per abilitare questo comportamento.  
  
 La funzionalità di raggruppamento consente di raggruppare visivamente gli elementi in categorie correlate. Utilizzare il <xref:System.Windows.Forms.ListView.Groups%2A> proprietà da aggiungere <xref:System.Windows.Forms.ListViewGroup> oggetti per il <xref:System.Windows.Forms.ListView> controllare quando si desidera abilitare questa funzionalità. Per disabilitare temporaneamente la funzionalità, impostare il <xref:System.Windows.Forms.ListView.ShowGroups%2A> proprietà `false`.  
  
 La funzionalità del segno di inserimento consente di fornire il riposizionamento degli elementi mediante trascinamento e rilascio con un feedback visivo per indicare i percorsi di rilascio. Utilizzare il <xref:System.Windows.Forms.ListViewInsertionMark> oggetto recuperato tramite il <xref:System.Windows.Forms.ListView.InsertionMark%2A> proprietà per visualizzare il segno di inserimento.  
  
 Queste funzionalità sono disponibili solo in Windows XP e Windows Server 2003. Nei sistemi operativi precedenti, il codice che si riferiscono a queste funzionalità non ha effetto e il segno di inserimento e gruppi non vengono visualizzate la visualizzazione affiancata viene visualizzato come visualizzazione Icone grandi. In alcuni casi, potrebbe essere necessario includere il codice che determina se sono disponibili le funzionalità e fornire una funzionalità alternativa quando non sono disponibili. Queste funzionalità sono fornite nella stessa libreria che fornisce la funzionalità di temi del sistema operativo. Per verificare la disponibilità di questa raccolta, chiamare il <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> overload del metodo e passare il <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valore.  
  
 Nella tabella seguente vengono illustrate alcune il <xref:System.Windows.Forms.ListView> membri e le viste sono validi in.  
  
|Membro di ListView|Visualizza|  
|---------------------|----------|  
|Proprietà <xref:System.Windows.Forms.ListView.Alignment%2A>|<xref:System.Windows.Forms.View.SmallIcon> o <xref:System.Windows.Forms.View.LargeIcon>|  
|Proprietà <xref:System.Windows.Forms.ListView.AutoArrange%2A>|<xref:System.Windows.Forms.View.SmallIcon> o <xref:System.Windows.Forms.View.LargeIcon>|  
|Metodo <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>|<xref:System.Windows.Forms.View.Details>|  
|Proprietà <xref:System.Windows.Forms.ListView.Columns%2A>|<xref:System.Windows.Forms.View.Details> o <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.DrawSubItem> Evento|<xref:System.Windows.Forms.View.Details>|  
|Metodo <xref:System.Windows.Forms.ListView.FindItemWithText%2A>|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>o <xref:System.Windows.Forms.View.Tile>|  
|Metodo <xref:System.Windows.Forms.ListView.FindNearestItem%2A>|<xref:System.Windows.Forms.View.SmallIcon> o <xref:System.Windows.Forms.View.LargeIcon>|  
|Metodo <xref:System.Windows.Forms.ListView.GetItemAt%2A>|<xref:System.Windows.Forms.View.Details> o <xref:System.Windows.Forms.View.Tile>|  
|Proprietà <xref:System.Windows.Forms.ListView.Groups%2A>|Tutte le visualizzazioni tranne <xref:System.Windows.Forms.View.List>|  
|Proprietà <xref:System.Windows.Forms.ListView.HeaderStyle%2A>|<xref:System.Windows.Forms.View.Details>|  
|Proprietà <xref:System.Windows.Forms.ListView.InsertionMark%2A>|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>o <xref:System.Windows.Forms.View.Tile>|  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ItemActivation Activation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ItemActivation Activation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Activation" />
      <MemberSignature Language="VB.NET" Value="Public Property Activation As ItemActivation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ItemActivation Activation { System::Windows::Forms::ItemActivation get(); void set(System::Windows::Forms::ItemActivation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemActivation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di azione che l'utente deve eseguire per attivare un elemento.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ItemActivation" />. Il valore predefinito è <see cref="F:System.Windows.Forms.ItemActivation.Standard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.Activation%2A> proprietà consente di specificare il modo con cui l'utente verrà attivato un elemento di <xref:System.Windows.Forms.ListView> controllo. Attivazione di un elemento in un <xref:System.Windows.Forms.ListView> è diverso da selezionare solo un elemento. Quando un elemento viene attivato, in genere viene eseguita un'azione in un gestore eventi per il <xref:System.Windows.Forms.ListView.ItemActivate> evento. Quando viene attivato un elemento, ad esempio, è possibile aprire un file o visualizzare una finestra di dialogo che consente di modificare l'elemento. In genere, un elemento si fa doppio clic dell'utente per l'attivazione. Se il <xref:System.Windows.Forms.ListView.Activation%2A> è impostata su <xref:System.Windows.Forms.ItemActivation.OneClick>, facendo clic su elemento quella attiva. L'impostazione di <xref:System.Windows.Forms.ListView.Activation%2A> proprietà <xref:System.Windows.Forms.ItemActivation.TwoClick> differisce dal doppio clic standard, perché i due clic può avere una durata qualsiasi tra di essi.  
  
> [!NOTE]
>  Se il <xref:System.Windows.Forms.ListView.Activation%2A> è impostata su <xref:System.Windows.Forms.ItemActivation.OneClick> o <xref:System.Windows.Forms.ItemActivation.TwoClick>, la modifica delle etichette non potrà essere indipendentemente dal valore della <xref:System.Windows.Forms.ListView.LabelEdit%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei membri di <see cref="T:System.Windows.Forms.ItemActivation" />.</exception>
        <altmember cref="T:System.Windows.Forms.ItemActivation" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'etichetta di un elemento viene modificata dall'utente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento si verifica quando l'utente termina la modifica del testo per un elemento. La nuova stringa digitata dall'utente per l'elemento viene passata all'evento e il gestore dell'evento può rifiutare la modifica. Se il gestore eventi rifiuta la modifica, il testo viene ripristinata al testo com'era prima che l'utente ha iniziato la modifica dell'elemento.  
  
> [!NOTE]
>  Poiché il <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> evento ha luogo prima della modifica dell'etichetta viene eseguito il commit, la chiamata di <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> metodo in un gestore per questo evento verrà ordinato l'elemento con il valore originale.  
  
 Affinché il <xref:System.Windows.Forms.ListView.AfterLabelEdit> dell'evento, il <xref:System.Windows.Forms.ListView.LabelEdit%2A> proprietà del <xref:System.Windows.Forms.ListView> controllo deve essere impostato su `true`.  
  
 È possibile creare un gestore eventi per il <xref:System.Windows.Forms.ListView.BeforeLabelEdit> evento per eseguire attività prima che l'utente modifica il testo di un elemento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento per limitare una nuova etichetta ai caratteri dell'alfabeto. Nell'esempio viene utilizzata la <xref:System.Text.ASCIIEncoding> classe per ottenere il codice carattere ASCII di ogni carattere di nuova etichetta. Se il carattere è compreso tra i codici ASCII che rappresentano numeri, la nuova etichetta non è applicata all'elemento. In questo esempio presuppone che sia stato creato un <xref:System.Windows.Forms.ListView> il controllo su un form e gli elementi aggiunti a esso. Nell'esempio si presuppone inoltre che sia stato collegato il <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento al gestore dell'evento definito nell'esempio di codice. Per utilizzare il <xref:System.Text.ASCIIEncoding> (classe), il file deve includere il <xref:System.Text> dello spazio dei nomi.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As ListViewAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewAlignment Alignment { System::Windows::Forms::ListViewAlignment get(); void set(System::Windows::Forms::ListViewAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'allineamento degli elementi nel controllo.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ListViewAlignment" />. Il valore predefinito è <see cref="F:System.Windows.Forms.ListViewAlignment.Top" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.Alignment%2A> proprietà ha effetto solo sull'allineamento quando i <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.LargeIcon> o <xref:System.Windows.Forms.View.SmallIcon>.  
  
> [!NOTE]
>  Questa proprietà non ha effetto se la <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.List>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori di <see cref="T:System.Windows.Forms.ListViewAlignment" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
      </Docs>
    </Member>
    <Member MemberName="AllowColumnReorder">
      <MemberSignature Language="C#" Value="public bool AllowColumnReorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowColumnReorder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowColumnReorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowColumnReorder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se le intestazioni di colonna possono essere trascinate dall'utente per riordinare le colonne nel controllo.</summary>
        <value>
          <see langword="true" /> se è consentito riordinare le colonne tramite un'operazione di trascinamento; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazione del valore della <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> proprietà ha effetto solo se il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Details>. È possibile utilizzare questa proprietà per consentire agli utenti di riposizionare le colonne nel controllo in fase di esecuzione. Quando il <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> è impostata su `true`, gli utenti possono posizionare le colonne nel controllo per visualizzare l'elemento e i relativi elementi secondari in modo che le loro esigenze all'interno dell'applicazione.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrangeIcons">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dispone gli elementi nel controllo quando vengono visualizzati come icone.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dispone gli elementi nel controllo quando vengono visualizzati come icone in base al valore della proprietà <see cref="P:System.Windows.Forms.ListView.Alignment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metodo è utile solo quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.LargeIcon> o <xref:System.Windows.Forms.View.SmallIcon>. La chiamata a questa versione di <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metodo dispone gli elementi in base al valore del <xref:System.Windows.Forms.ListView.Alignment%2A> proprietà. Per fare in modo che gli elementi essere allineati in base a un valore diverso da quello del <xref:System.Windows.Forms.ListView.Alignment%2A> proprietà, utilizzare l'altra versione del <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons (System.Windows.Forms.ListViewAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons(valuetype System.Windows.Forms.ListViewAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons(System.Windows.Forms.ListViewAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons (value As ListViewAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons(System::Windows::Forms::ListViewAlignment value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewAlignment" />
      </Parameters>
      <Docs>
        <param name="value">Uno dei valori di <see cref="T:System.Windows.Forms.ListViewAlignment" />.</param>
        <summary>Dispone gli elementi nel controllo quando vengono visualizzati come icone con un'impostazione di allineamento specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metodo è utile solo quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.LargeIcon> o <xref:System.Windows.Forms.View.SmallIcon>. Questa versione di <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metodo dispone le icone nel <xref:System.Windows.Forms.ListView> in base il <xref:System.Windows.Forms.ListViewAlignment> valore specificato nel `value` parametro. Chiamare questo metodo non modifica il valore di <xref:System.Windows.Forms.ListView.Alignment%2A> proprietà del controllo. Questo metodo viene utilizzato per disporre le icone nel controllo mediante un valore diverso da quello del <xref:System.Windows.Forms.ListView.Alignment%2A> proprietà. Per fare in modo che gli elementi essere allineati in base al valore del <xref:System.Windows.Forms.ListView.Alignment%2A> proprietà, utilizzare l'altra versione di <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore specificato nel parametro <paramref name="value" /> non è un membro dell'enumerazione <see cref="T:System.Windows.Forms.ListViewAlignment" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoArrange">
      <MemberSignature Language="C#" Value="public bool AutoArrange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoArrange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AutoArrange" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoArrange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoArrange { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se le icone vengono disposte automaticamente.</summary>
        <value>
          <see langword="true" /> se le icone vengono disposte automaticamente e bloccate sulla griglia; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.AutoArrange%2A> proprietà dispone solo gli elementi nel <xref:System.Windows.Forms.ListView> controllare quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.LargeIcon> o <xref:System.Windows.Forms.View.SmallIcon>. Per modificare l'allineamento degli elementi nel <xref:System.Windows.Forms.ListView> controllo, utilizzare il <xref:System.Windows.Forms.ListView.Alignment%2A> proprietà. È possibile utilizzare <xref:System.Windows.Forms.ListView.AutoArrange%2A> per garantire che tutti gli elementi del <xref:System.Windows.Forms.ListView> controllo vengono disposte automaticamente per evitare la sovrapposizione in fase di esecuzione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indice in base zero della colonna da ridimensionare.</param>
        <param name="headerAutoResize">Uno dei valori di <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />.</param>
        <summary>Ridimensiona la larghezza della colonna specificata come indicato dallo stile di ridimensionamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo è valido solo una volta il <xref:System.Windows.Forms.ListView> e contenente <xref:System.Windows.Forms.Form> siano stati costruiti e <xref:System.Windows.Forms.ListView> intestazioni di colonna e le colonne vengono popolate con gli elementi. Se vengono aggiunti nuovi elementi di <xref:System.Windows.Forms.ListView>, le colonne non verranno ridimensionate a meno che non <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> viene chiamata nuovamente.  
  
   
  
## Examples  
 Nell'esempio seguente viene inizializzato un <xref:System.Windows.Forms.ListView> nella visualizzazione dettagli e automaticamente ridimensiona le colonne mediante il <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> metodo. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare il `InitializeResizingListView` metodo dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Il parametro <paramref name="columnIndex" /> è maggiore di 0 se la proprietà <see cref="P:System.Windows.Forms.ListView.Columns" /> è <see langword="null" />  
  
 oppure  
  
 Il parametro <paramref name="columnIndex" /> è minore di 0 o maggiore del numero di colonne impostato.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="headerAutoResize" /> non è un membro dell'enumerazione <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumns(System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" />
      </Parameters>
      <Docs>
        <param name="headerAutoResize">Uno dei valori di <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />.</param>
        <summary>Ridimensiona la larghezza delle colonne come indicato dallo stile di ridimensionamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo è valido solo una volta il <xref:System.Windows.Forms.ListView> e contenente <xref:System.Windows.Forms.Form> siano stati costruiti e <xref:System.Windows.Forms.ListView> intestazioni di colonna e le colonne vengono popolate con gli elementi. Se vengono aggiunti nuovi elementi di <xref:System.Windows.Forms.ListView>, le colonne non verranno ridimensionate a meno che non <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> viene chiamata nuovamente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come inizializzare un <xref:System.Windows.Forms.ListView> nella visualizzazione dettagli e il ridimensionamento automatico delle colonne mediante il <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> metodo. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare il `InitializeResizingListView2` metodo dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          Viene chiamato il metodo <see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" /> con un valore diverso da <see cref="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None" /> se la proprietà <see cref="P:System.Windows.Forms.ListView.View" /> non è impostata su <see cref="F:System.Windows.Forms.View.Details" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore di sfondo.</summary>
        <value>Struttura <see cref="T:System.Drawing.Color" /> dello sfondo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore <see cref="T:System.Windows.Forms.ImageLayout" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ImageLayout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà ha effetto sul layout dell'immagine di sfondo di <xref:System.Windows.Forms.ListView> (controllo), pertanto non è visualizzata nella finestra di progettazione o da IntelliSense.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori di <see cref="T:System.Windows.Forms.ImageLayout" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà <see cref="P:System.Windows.Forms.ListView.BackgroundImageLayout" /> cambia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageTiled">
      <MemberSignature Language="C#" Value="public bool BackgroundImageTiled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundImageTiled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundImageTiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundImageTiled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'immagine di sfondo della classe <see cref="T:System.Windows.Forms.ListView" /> deve essere affiancata.</summary>
        <value>
          <see langword="true" /> se l'immagine di sfondo della classe <see cref="T:System.Windows.Forms.ListView" /> deve essere affiancata; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.BackgroundImageTiled%2A> restituisce proprietà `false` se un'immagine non è impostata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente inizia a modificare l'etichetta di un elemento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.BeforeLabelEdit> evento si verifica quando l'utente inizia a modificare il testo di un elemento. Se il gestore dell'evento Annulla questo evento, l'utente non è possibile modificare il testo. È possibile utilizzare questo evento per impedire all'utente di modificare gli elementi specifici di <xref:System.Windows.Forms.ListView> controllo. Se il <xref:System.Windows.Forms.ListView.LabelEdit%2A> proprietà del <xref:System.Windows.Forms.ListView> NFS è impostata su `false`, <xref:System.Windows.Forms.ListView.BeforeLabelEdit> non viene generato l'evento; tutti i tentativi di utente di modificare le etichette degli elementi vengono rifiutati automaticamente.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene mostrato come gestire il <xref:System.Windows.Forms.ListView.BeforeLabelEdit> evento e l'utilizzo di <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A?displayProperty=nameWithType> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form che contiene un <xref:System.Windows.Forms.ListView> controllo denominato `ListView1` e compilato con almeno tre elementi. Verificare che il gestore dell'evento nell'esempio sia associato con il relativo evento.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Impedisce che il controllo venga creato fino quando non viene chiamato il metodo <see cref="M:System.Windows.Forms.ListView.EndUpdate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il modo migliore per aggiungere più elementi in un <xref:System.Windows.Forms.ListView> consiste nell'utilizzare il <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metodo del <xref:System.Windows.Forms.ListView.ListViewItemCollection> (tramite il <xref:System.Windows.Forms.ListView.Items%2A> proprietà del <xref:System.Windows.Forms.ListView>). In questo modo è possibile aggiungere una matrice di elementi all'elenco in un'unica operazione. Tuttavia, se si desidera aggiungere gli elementi uno alla volta, tramite il <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodo il <xref:System.Windows.Forms.ListView.ListViewItemCollection> (classe), è possibile utilizzare il <xref:System.Windows.Forms.ListView.BeginUpdate%2A> per impedire il controllo di aggiornamento il <xref:System.Windows.Forms.ListView> ogni volta che viene aggiunto un elemento. Dopo aver completato l'operazione di aggiunta di elementi al controllo, chiamare il <xref:System.Windows.Forms.ListView.EndUpdate%2A> metodo per abilitare il <xref:System.Windows.Forms.ListView> per ridisegnare. In questo modo, è possibile evitare lo sfarfallio il <xref:System.Windows.Forms.ListView> quando un numero elevato di elementi viene aggiunti al controllo.  
  
 Se <xref:System.Windows.Forms.ListView.BeginUpdate%2A> viene chiamato più volte, <xref:System.Windows.Forms.ListView.EndUpdate%2A> deve essere chiamato un numero equivalente di volte. Fino all'ultima chiamata a <xref:System.Windows.Forms.ListView.EndUpdate%2A> il <xref:System.Windows.Forms.ListView> non verrà ridisegnato. In altri casi, più chiamate al metodo <xref:System.Windows.Forms.ListView.BeginUpdate%2A> non hanno alcun effetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come inizializzare un <xref:System.Windows.Forms.ListView> controllo per contenere le caselle di controllo. Viene inoltre illustrato come utilizzare il <xref:System.Windows.Forms.ListView.BeginUpdate%2A> e <xref:System.Windows.Forms.ListView.EndUpdate%2A> metodi. Per eseguire questo esempio, incollare il codice seguente in un form che contiene un <xref:System.Windows.Forms.ListView> denominato `ListView1`. Chiamare il `InititalizeListView` metodo dal costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EndUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo stile del bordo del controllo.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.BorderStyle" />. Il valore predefinito è <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Windows.Forms.ListView.BorderStyle%2A> proprietà per modificare lo stile del bordo di <xref:System.Windows.Forms.ListView> controllo in modo che corrisponda alle impostazioni di stile del bordo di altri controlli nel form. Ad esempio, se nessuno degli altri controlli nel form viene visualizzato un bordo, è possibile impostare il <xref:System.Windows.Forms.ListView.BorderStyle%2A> proprietà del <xref:System.Windows.Forms.ListView> controllo <xref:System.Windows.Forms.BorderStyle.None> in modo che corrisponda ad altri controlli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori di <see cref="T:System.Windows.Forms.BorderStyle" />.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CacheVirtualItems">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.CacheVirtualItems" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CacheVirtualItems As CacheVirtualItemsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::CacheVirtualItemsEventHandler ^ CacheVirtualItems;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CacheVirtualItemsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica se è stato modificato il contenuto di un'area di visualizzazione per una classe <see cref="T:System.Windows.Forms.ListView" /> in modalità virtuale; la classe <see cref="T:System.Windows.Forms.ListView" /> determina che è necessario un nuovo intervallo di elementi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento si verifica solo quando <xref:System.Windows.Forms.ListView.VirtualMode%2A> è `true`. Consente di gestire questo evento di <xref:System.Windows.Forms.ListView> per aggiornare le informazioni contenute nella cache in modo che sia immediatamente disponibile. Ciò può migliorare le prestazioni, elenchi di grandi dimensioni o elenca i cui elementi sono costose da calcolare.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, il gestore eventi controlla per verificare che sia effettivamente necessario un aggiornamento della cache e quindi Ricompila la cache. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Windows.Forms.ListView.VirtualMode%2A> proprietà.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se viene visualizzata una casella di controllo accanto a ogni elemento nel controllo.</summary>
        <value>
          <see langword="true" /> se viene visualizzata una casella di controllo accanto a ciascun elemento nel controllo <see cref="T:System.Windows.Forms.ListView" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.CheckBoxes%2A> proprietà consente di visualizzare una casella di controllo accanto a ogni elemento nell'elenco. In questo modo l'applicazione visualizzare un elenco di elementi (primari e secondari se la <xref:System.Windows.Forms.ListView.View%2A> è impostata su `View.Details`) che l'utente può selezionare selezionando la casella di controllo. Il <xref:System.Windows.Forms.ListView.CheckBoxes%2A> proprietà offre un modo per selezionare più elementi di <xref:System.Windows.Forms.ListView> controllo senza usare il tasto CTRL. A seconda dell'applicazione, utilizzando le caselle di controllo per selezionare elementi piuttosto che lo standard di metodo di selezione multipla può risultare più semplice per l'utente. Anche se il <xref:System.Windows.Forms.ListView.MultiSelect%2A> proprietà del <xref:System.Windows.Forms.ListView> NFS è impostata su `false`, puoi visualizzare le caselle di controllo e fornire le funzionalità di selezione più all'utente. Questa funzionalità può essere utile se non si desidera che la selezione di più elementi ancora si desidera consentire all'utente di selezionare più voci dall'elenco per eseguire un'operazione all'interno dell'applicazione.  
  
 Per determinare se è stato selezionato un elemento, creare un gestore eventi per il <xref:System.Windows.Forms.ListView.ItemCheck> evento. Per ottenere tutti gli elementi che vengono archiviati il <xref:System.Windows.Forms.ListView>, utilizzare il <xref:System.Windows.Forms.ListView.CheckedItems%2A> proprietà a cui accedere il <xref:System.Windows.Forms.ListView.CheckedIndexCollection> per il controllo. Per ottenere gli indici di tutti gli elementi vengono archiviati il <xref:System.Windows.Forms.ListView>, utilizzare il <xref:System.Windows.Forms.ListView.CheckedIndices%2A> proprietà.  
  
 Se un <xref:System.Windows.Forms.ImageList> è incluso il <xref:System.Windows.Forms.ListView.StateImageList%2A> proprietà, le immagini in posizioni dell'indice 0 e 1 nel <xref:System.Windows.Forms.ImageList> vengono visualizzati anziché la casella di controllo. Viene visualizzata l'immagine nella posizione di indice 0 anziché la casella di controllo deselezionata, e viene visualizzata l'immagine nella posizione di indice 1 anziché la casella di controllo.  
  
> [!NOTE]
>  Quando si imposta questa proprietà su `true`, <xref:System.Windows.Forms.ListView.ItemCheck> si verifica l'evento.  
>   
>  Caselle di controllo non sono visualizzati quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Tile>.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.MultiSelect" />
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedIndices As ListView.CheckedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedIndexCollection ^ CheckedIndices { System::Windows::Forms::ListView::CheckedIndexCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene gli indici degli elementi attualmente selezionati nel controllo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> che contiene gli indici degli elementi attualmente selezionati. Se nessun elemento è attualmente selezionato, viene restituito un oggetto <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> vuoto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è utile solo quando il <xref:System.Windows.Forms.ListView.CheckBoxes%2A> proprietà del <xref:System.Windows.Forms.ListView> NFS è impostata su `true`. Il <xref:System.Windows.Forms.ListView.CheckedIndices%2A> proprietà restituisce una raccolta che contiene le posizioni dell'indice nel <xref:System.Windows.Forms.ListView.ListViewItemCollection> di tutti gli elementi selezionati nel controllo. Per ulteriori informazioni su come modificare gli elementi nella raccolta, vedere <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.  
  
 Se si desidera ottenere una raccolta di elementi che sono archiviati il <xref:System.Windows.Forms.ListView> controllo, anziché le posizioni dell'indice degli elementi selezionati, usare il <xref:System.Windows.Forms.ListView.CheckedItems%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedListViewItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedListViewItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedItems As ListView.CheckedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedListViewItemCollection ^ CheckedItems { System::Windows::Forms::ListView::CheckedListViewItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene gli elementi attualmente selezionati nel controllo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> che contiene gli elementi attualmente selezionati. Se nessun elemento è attualmente selezionato, viene restituito un oggetto <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> vuoto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è utile solo quando il <xref:System.Windows.Forms.ListView.CheckBoxes%2A> proprietà del <xref:System.Windows.Forms.ListView> NFS è impostata su `true`. Il <xref:System.Windows.Forms.ListView.CheckedItems%2A> proprietà restituisce una raccolta che contiene tutti gli elementi selezionati nel controllo. Per ulteriori informazioni su come modificare gli elementi nella raccolta, vedere <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 Se si desidera ottenere una raccolta di posizioni di indice all'interno di <xref:System.Windows.Forms.ListView.ListViewItemCollection> degli elementi da cui vengono archiviati il <xref:System.Windows.Forms.ListView> controllo, anziché gli elementi selezionati, usare il <xref:System.Windows.Forms.ListView.CheckedIndices%2A> proprietà.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un <xref:System.Windows.Forms.ListView> che gestisce il <xref:System.Windows.Forms.ListView.ItemChecked> evento. Nell'esempio viene utilizzata la <xref:System.Windows.Forms.ListView.CheckedItems%2A> proprietà per calcolare un nuovo prezzo di ogni volta che un elemento è selezionato o deselezionato. Per eseguire questo esempio, incollare il codice seguente in un form che contiene un <xref:System.Windows.Forms.ListView> denominato `ListView1` e <xref:System.Windows.Forms.TextBox> denominato `Textbox1`. Chiamare il `InititalizeListView` metodo dal costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove tutti gli elementi e tutte le colonne dal controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questo metodo per rimuovere tutti gli elementi e le colonne di <xref:System.Windows.Forms.ListView> controllo senza dover chiamare i singoli `Clear` metodi di <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> e <xref:System.Windows.Forms.ListView.ListViewItemCollection> classi.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.ListView.Clear%2A> metodo non Cancella <xref:System.Windows.Forms.ListView.Groups%2A> specificato per il <xref:System.Windows.Forms.ListView> controllo. Per cancellare <xref:System.Windows.Forms.ListView.Groups%2A> chiamare <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.Windows.Forms.ListView.Clear%2A> e <xref:System.Windows.Forms.ListViewItem.Selected%2A?displayProperty=nameWithType> membri. Per eseguire questo esempio, incollare il codice seguente in un form che contiene un <xref:System.Windows.Forms.ListView> denominato `ListView1` e un pulsante, posizionato nella parte inferiore del form, denominato `Button1`. Chiamare il `InitializeListView` metodo dal costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ColumnClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnClickEventHandler ColumnClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnClickEventHandler ColumnClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnClick As ColumnClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnClickEventHandler ^ ColumnClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente fa clic su un'intestazione di colonna all'interno del controllo di visualizzazione elenco.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.ColumnClick> evento si verifica quando l'utente fa clic su una delle intestazioni di colonna in una visualizzazione di dettagli degli elementi in un <xref:System.Windows.Forms.ListView> controllo (quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Details>). Il <xref:System.Windows.Forms.ListView.ColumnClick> evento viene gestito in genere per ordinare gli elementi di <xref:System.Windows.Forms.ListView> utilizzando la colonna selezionata come colonna per ordinare in base.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L'esempio di codice seguente viene creato un form contenente un <xref:System.Windows.Forms.ListView> controllo che consente di ordinare manualmente gli elementi di quando una colonna il <xref:System.Windows.Forms.ListView> si fa clic sul controllo. Nell'esempio viene definita una classe denominata `ListViewItemComparer` che implementa il <xref:System.Collections.IComparer?displayProperty=nameWithType> interfaccia che esegue il <xref:System.Windows.Forms.ListViewItem> confronto. Nell'esempio viene creata un'istanza di `ListViewItemComparer` e viene utilizzata per impostare il <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> proprietà del <xref:System.Windows.Forms.ListView> controllo. Il <xref:System.Windows.Forms.ListView.Sort%2A> chiamata al metodo di <xref:System.Windows.Forms.ListView.ColumnClick> gestore dell'evento Usa i metodi definiti `ListViewItemComparer` per eseguire l'ordinamento degli elementi, in base alla colonna a cui viene fatto clic.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ColumnReordered">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnReordered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnReordered As ColumnReorderedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnReorderedEventHandler ^ ColumnReordered;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnReorderedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'ordine delle intestazioni di colonna cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.ColumnReordered> evento è un evento annullabile e può essere annullata la gestione dell'evento e l'impostazione di <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true`. Tuttavia, se l'evento viene annullato, il <xref:System.Windows.Forms.ColumnReorderedEventArgs.NewDisplayIndex%2A> del <xref:System.Windows.Forms.ColumnReorderedEventArgs> non modificherà il il <xref:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex%2A> valore.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ListView.ColumnReordered> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ListView> denominato `ListView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListView.ColumnReordered> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#467](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#467)]
 [!code-vb[System.Windows.Forms.EventExamples#467](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#467)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ColumnHeaderCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ColumnHeaderCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ListView.ColumnHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ColumnHeaderCollection ^ Columns { System::Windows::Forms::ListView::ColumnHeaderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ColumnHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la raccolta di tutte le intestazioni di colonna visualizzate nel controllo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> che rappresenta le intestazioni di colonna visualizzate quando la proprietà <see cref="P:System.Windows.Forms.ListView.View" /> è impostata su <see cref="F:System.Windows.Forms.View.Details" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.Columns%2A> proprietà restituisce una raccolta che contiene il <xref:System.Windows.Forms.ColumnHeader> gli oggetti che vengono visualizzati nel <xref:System.Windows.Forms.ListView> controllo. <xref:System.Windows.Forms.ColumnHeader> gli oggetti definiscono le colonne che vengono visualizzate nel <xref:System.Windows.Forms.ListView> controllare quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Details>. Ogni colonna viene utilizzata per visualizzare le informazioni dell'elemento secondario per ogni elemento di <xref:System.Windows.Forms.ListView>. Per ulteriori informazioni su come modificare gli elementi nella raccolta, vedere <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
> [!NOTE]
>  Se il <xref:System.Windows.Forms.ListView> controllo non è specificata alcuna intestazione di colonna e si imposta il <xref:System.Windows.Forms.ListView.View%2A> proprietà <xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.ListView> controllo non verrà visualizzato alcun elemento.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As ColumnWidthChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangedEventHandler ^ ColumnWidthChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la larghezza di una colonna viene correttamente modificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non si verificherà se la modifica della larghezza della colonna viene annullata il <xref:System.Windows.Forms.ListView.ColumnWidthChanging> evento  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ListView.ColumnWidthChanged> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ListView> denominato `ListView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListView.ColumnWidthChanged> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#468](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#468)]
 [!code-vb[System.Windows.Forms.EventExamples#468](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#468)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanging As ColumnWidthChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangingEventHandler ^ ColumnWidthChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene modificata la larghezza di una colonna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento consente di controllare la nuova larghezza della colonna con il <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> , proprietà e Annulla l'evento, se si sceglie impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà `true`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene mostrato come gestire il <xref:System.Windows.Forms.ListView.ColumnWidthChanging> evento. Viene inoltre illustrato il <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> e <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> membri. Per eseguire questo esempio, incollare il codice in un Windows Form. Chiamare `InitializeListView1` dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un handle per il controllo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà non è pertinente per questa classe.</summary>
        <value>
          <see langword="null" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le dimensioni predefinite del controllo.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Size" /> predefinito del controllo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Windows.Forms.ListView" /> e, facoltativamente, le risorse gestite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il <xref:System.Windows.Forms.ListView.Dispose%2A> metodo quando il componente non è più necessario. Questo metodo rimuove il componente dal contenitore (se il componente dispone di un sito) e genera l'evento dispose.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la superficie del controllo deve essere ridisegnata usando un buffer secondario per ridurre o evitare lo sfarfallio.</summary>
        <value>
          <see langword="true" /> se la superficie del controllo deve essere disegnata usando il doppio buffer; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawColumnHeader">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawColumnHeader" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawColumnHeader As DrawListViewColumnHeaderEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewColumnHeaderEventHandler ^ DrawColumnHeader;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewColumnHeaderEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene creata una visualizzazione di dettaglio di una classe <see cref="T:System.Windows.Forms.ListView" /> e la proprietà <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> è impostata su <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento consente di personalizzare l'aspetto di un <xref:System.Windows.Forms.ListView> controllo mediante il disegno personalizzato. Questo evento viene generato solo quando il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> è impostata su `true` e <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. Questo evento può verificarsi per ogni intestazione di colonna nel controllo. Per ulteriori informazioni sul disegno personalizzato, vedere il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> argomento relativo alla proprietà.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente fornisce un'implementazione di un <xref:System.Windows.Forms.ListView.DrawColumnHeader> gestore dell'evento. Per un esempio completo, inclusa l'implementazione del <xref:System.Windows.Forms.ListView.DrawSubItem> gestore eventi, vedere il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> argomento di riferimento.  
  
 [!code-csharp[ListViewOwnerDraw#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#5)]
 [!code-vb[ListViewOwnerDraw#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawListViewItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewItemEventHandler ^ DrawItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene creata una classe <see cref="T:System.Windows.Forms.ListView" /> e la proprietà <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> è impostata su <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento consente di personalizzare l'aspetto di un <xref:System.Windows.Forms.ListView> controllo mediante il disegno personalizzato. Questo evento viene generato solo quando il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> è impostata su `true`. Per ulteriori informazioni sulla modalità owner draw, vedere il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> argomento relativo alla proprietà.  
  
 Il <xref:System.Windows.Forms.ListView.DrawItem> evento può verificarsi per ogni <xref:System.Windows.Forms.ListView> elemento. Quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView.DrawSubItem> e <xref:System.Windows.Forms.ListView.DrawColumnHeader> eventi si verificano anche. In questo caso, è possibile gestire il <xref:System.Windows.Forms.ListView.DrawItem> evento per disegnare elementi comuni a tutti gli elementi, ad esempio, lo sfondo e gestire il <xref:System.Windows.Forms.ListView.DrawSubItem> evento per disegnare elementi per i singoli elementi secondari, ad esempio i valori di testo. È inoltre possibile creare tutti gli elementi nel <xref:System.Windows.Forms.ListView> controllare usando solo uno dei due eventi, sebbene ciò possa risultare più complessa. Per creare le intestazioni di colonna nella visualizzazione dettagli, è necessario gestire il <xref:System.Windows.Forms.ListView.DrawColumnHeader> evento.  
  
> [!NOTE]
>  A causa di un bug nel controllo Win32 sottostante, la <xref:System.Windows.Forms.ListView.DrawItem> evento si verifica senza i relativi <xref:System.Windows.Forms.ListView.DrawSubItem> facendo disegnato eventi una volta per ogni riga nella visualizzazione dei dettagli quando si sposta il puntatore del mouse sulla riga, in un <xref:System.Windows.Forms.ListView.DrawSubItem> gestore dell'evento da disegnare sovrapposto uno sfondo personalizzato creato un <xref:System.Windows.Forms.ListView.DrawItem> gestore dell'evento. Vedere l'esempio nel <xref:System.Windows.Forms.ListView.OwnerDraw%2A> argomento di riferimento per una soluzione alternativa per invalidare ciascuna riga quando si verifica l'evento aggiuntivo. Una soluzione alternativa consiste nell'inserire tutto il codice di disegno personalizzato un <xref:System.Windows.Forms.ListView.DrawSubItem> gestore dell'evento e disegnare lo sfondo per l'intero elemento (inclusi gli elementi secondari) solo quando il <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A?displayProperty=nameWithType> valore è 0.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente fornisce un'implementazione di un <xref:System.Windows.Forms.ListView.DrawItem> gestore dell'evento. Per un esempio completo, vedere il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> argomento di riferimento.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawSubItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawSubItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawSubItem As DrawListViewSubItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewSubItemEventHandler ^ DrawSubItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewSubItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene creata una visualizzazione di dettaglio di una classe <see cref="T:System.Windows.Forms.ListView" /> e la proprietà <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> è impostata su <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento consente di personalizzare l'aspetto di un <xref:System.Windows.Forms.ListView> controllo mediante il disegno personalizzato. Questo evento viene generato solo quando il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> è impostata su `true` e <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. Per ulteriori informazioni sul disegno personalizzato, vedere il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> argomento relativo alla proprietà.  
  
> [!NOTE]
>  Informazioni sull'elemento secondario viene in genere visualizzato nella visualizzazione affiancata, nonché visualizzare i dettagli, ma nella visualizzazione affiancata, deve essere disegnato in un gestore per il <xref:System.Windows.Forms.ListView.DrawItem> evento.  
  
 Il <xref:System.Windows.Forms.ListView.DrawSubItem> evento può verificarsi per ogni <xref:System.Windows.Forms.ListView> elemento secondario. È possibile gestire il <xref:System.Windows.Forms.ListView.DrawItem> evento per disegnare elementi comuni a tutti gli elementi secondari, ad esempio, lo sfondo e gestire il <xref:System.Windows.Forms.ListView.DrawSubItem> evento per disegnare elementi per i singoli elementi secondari, ad esempio i valori di testo. È inoltre possibile creare tutti gli elementi nel <xref:System.Windows.Forms.ListView> controllare usando solo uno dei due eventi, sebbene ciò possa risultare più complessa. Per creare le intestazioni di colonna nella visualizzazione dettagli, è necessario gestire il <xref:System.Windows.Forms.ListView.DrawColumnHeader> evento.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.ListView.DrawSubItem> non vengono generati eventi per gli elementi secondari per cui non <xref:System.Windows.Forms.ColumnHeader> oggetto è stato aggiunto il <xref:System.Windows.Forms.ListView.Columns%2A> insieme. Si noti inoltre che il primo elemento secondario di ogni <xref:System.Windows.Forms.ListViewItem> oggetto rappresenta l'elemento padre e viene visualizzato nella prima colonna.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente fornisce un'implementazione di un <xref:System.Windows.Forms.ListView.DrawSubItem> gestore dell'evento. Per un esempio completo, vedere il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> argomento di riferimento.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Riprende la creazione del controllo visualizzazione elenco sospesa dal metodo <see cref="M:System.Windows.Forms.ListView.BeginUpdate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il modo migliore per aggiungere più elementi in un <xref:System.Windows.Forms.ListView> consiste nell'utilizzare il <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> metodo del <xref:System.Windows.Forms.ListView.ListViewItemCollection> (tramite il <xref:System.Windows.Forms.ListView.Items%2A> proprietà del <xref:System.Windows.Forms.ListView>). In questo modo è possibile aggiungere una matrice di elementi all'elenco in un'unica operazione. Tuttavia, se si desidera aggiungere gli elementi uno alla volta, tramite il <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> metodo il <xref:System.Windows.Forms.ListView.ListViewItemCollection> (classe), è possibile utilizzare il <xref:System.Windows.Forms.ListView.BeginUpdate%2A> per impedire il controllo di aggiornamento il <xref:System.Windows.Forms.ListView> ogni volta che viene aggiunto un elemento. Dopo aver completato l'operazione di aggiunta di elementi al controllo, chiamare il <xref:System.Windows.Forms.ListView.EndUpdate%2A> metodo per abilitare il <xref:System.Windows.Forms.ListView> per ridisegnare. In questo modo, è possibile evitare lo sfarfallio il <xref:System.Windows.Forms.ListView> quando un numero elevato di elementi viene aggiunti al controllo.  
  
 Se <xref:System.Windows.Forms.ListView.BeginUpdate%2A> viene chiamato più volte, <xref:System.Windows.Forms.ListView.EndUpdate%2A> deve essere chiamato un numero equivalente di volte. Fino all'ultima chiamata a <xref:System.Windows.Forms.ListView.EndUpdate%2A> il <xref:System.Windows.Forms.ListView> non verrà ridisegnato. In altri casi, più chiamate al metodo <xref:System.Windows.Forms.ListView.BeginUpdate%2A> non hanno alcun effetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come inizializzare un <xref:System.Windows.Forms.ListView> controllo per contenere le caselle di controllo. Viene inoltre illustrato l'utilizzo di <xref:System.Windows.Forms.ListView.BeginUpdate%2A> e <xref:System.Windows.Forms.ListView.EndUpdate%2A> metodi. Per eseguire questo esempio, incollare il codice seguente in un form contenente un <xref:System.Windows.Forms.ListView> denominato `ListView1`. Chiamare il `InititalizeListView` metodo dal costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.BeginUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice a base zero dell'elemento da fare scorrere all'interno della visualizzazione.</param>
        <summary>Assicura che l'elemento specificato sia visibile all'interno del controllo, facendo scorrere il contenuto del controllo se necessario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questo metodo per assicurarsi che sia visibile all'interno di un elemento specifico di <xref:System.Windows.Forms.ListView> controllo. Quando si esegue la convalida degli elementi in un <xref:System.Windows.Forms.ListView>, è possibile chiamare il <xref:System.Windows.Forms.ListView.EnsureVisible%2A> metodo per garantire che un elemento che non hanno superato la convalida viene visualizzato nel <xref:System.Windows.Forms.ListView> controllo per consentire all'utente di eseguire le modifiche sull'elemento. Se l'elemento che si desidera rendere visibile si trova sopra l'area visualizzabile del <xref:System.Windows.Forms.ListView> di controllo, la chiamata di <xref:System.Windows.Forms.ListView.EnsureVisible%2A> metodo scorre il contenuto del controllo fino a quando non è il primo elemento nell'area visualizzabile del controllo. Se l'elemento si trova sotto l'area visualizzabile del <xref:System.Windows.Forms.ListView> di controllo, la chiamata di <xref:System.Windows.Forms.ListView.EnsureVisible%2A> metodo scorre il contenuto del <xref:System.Windows.Forms.ListView> controllare fino a quando l'elemento è l'ultimo elemento nell'area visualizzabile del controllo.  
  
 Per determinare se un elemento si trova nella parte superiore dell'area di visualizzazione di un <xref:System.Windows.Forms.ListView> controllo, utilizzare il <xref:System.Windows.Forms.ListView.TopItem%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.TopItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindItemWithText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Trova la prima classe <see cref="T:System.Windows.Forms.ListViewItem" /> che inizia con il valore di testo fornito.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo da cercare.</param>
        <summary>Trova il primo oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> che inizia con il valore di testo specificato.</summary>
        <returns>Prima classe <see cref="T:System.Windows.Forms.ListViewItem" /> che inizia con il valore di testo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ricerca non fa distinzione tra maiuscole e minuscole.  
  
 Il `text` parametro è possibile specificare una sottostringa di testo corrispondente desiderato. Inoltre, questo metodo restituirà il primo elemento che inizia con il testo specificato. Ad esempio, se un <xref:System.Windows.Forms.ListView> contiene due voci di elenco, ovvero il testo del primo elemento impostato su "angolare" e il testo del secondo elemento è impostato su "bracket", una chiamata a <xref:System.Windows.Forms.ListView.FindItemWithText%2A> passando `brack` come parametro restituirà l'elemento il cui testo è "bracket".  
  
 Il <xref:System.Windows.Forms.ListView.FindItemWithText%2A> restituisce `null` se l'elenco è vuoto o non esiste alcun elemento corrispondente.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra il <xref:System.Windows.Forms.ListView.FindItemWithText%2A> metodo. Per eseguire questo esempio, incollare il codice seguente in un Windows Form e chiamare il `InitializeFindListView` metodo dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento. Fare clic sul pulsante per visualizzare i risultati della chiamata al metodo.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Testo da cercare.</param>
        <param name="includeSubItemsInSearch">
          <see langword="true" /> per includere gli elementi secondari nella ricerca; in caso contrario, <see langword="false" />.</param>
        <param name="startIndex">Indice dell'elemento da cui iniziare la ricerca.</param>
        <summary>Trova la prima classe <see cref="T:System.Windows.Forms.ListViewItem" /> o <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, se indicata, che inizia con il valore di testo specificato. La ricerca inizia in corrispondenza dell'indice specificato.</summary>
        <returns>Prima classe <see cref="T:System.Windows.Forms.ListViewItem" /> che inizia con il valore di testo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ricerca non fa distinzione tra maiuscole e minuscole.  
  
 Il `text` parametro è possibile specificare una sottostringa di testo corrispondente desiderato. Inoltre, questo metodo restituirà il primo elemento che inizia con il testo specificato. Ad esempio, se un <xref:System.Windows.Forms.ListView> contiene due voci di elenco, ovvero il testo del primo elemento impostato su "angolare" e il testo del secondo elemento è impostato su "bracket", una chiamata a <xref:System.Windows.Forms.ListView.FindItemWithText%2A> , che passa "brack" come parametro restituirà l'elemento il cui testo è "bracket".  
  
 Il <xref:System.Windows.Forms.ListView.FindItemWithText%2A> restituisce `null` se l'elenco è vuoto o non esiste alcun elemento corrispondente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Il parametro <paramref name="startIndex" /> è minore di 0 o superiore al numero di elementi nella classe <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex, bool isPrefixSearch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer, isPrefixSearch As Boolean) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">Testo da cercare.</param>
        <param name="includeSubItemsInSearch">
          <see langword="true" /> per includere gli elementi secondari nella ricerca; in caso contrario, <see langword="false" />.</param>
        <param name="startIndex">Indice dell'elemento da cui iniziare la ricerca.</param>
        <param name="isPrefixSearch">
          <see langword="true" /> per consentire corrispondenze parziali; in caso contrario, <see langword="false" />.</param>
        <summary>Trova la prima classe <see cref="T:System.Windows.Forms.ListViewItem" /> o <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, se indicata, che inizia con il valore di testo specificato. La ricerca inizia in corrispondenza dell'indice specificato.</summary>
        <returns>Prima classe <see cref="T:System.Windows.Forms.ListViewItem" /> che inizia con il valore di testo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.FindItemWithText%2A> restituisce `null` se l'elenco è vuoto o non esiste alcun elemento corrispondente.  
  
 La ricerca non fa distinzione tra maiuscole e minuscole.  
  
 Il `text` parametro è possibile specificare una sottostringa di testo corrispondente desiderato. Questo metodo restituirà il primo elemento che inizia con il testo specificato, a meno che non `false` è passato per `isPrefixSearch`. Ad esempio, se un <xref:System.Windows.Forms.ListView> contiene due voci di elenco, ovvero il testo del primo elemento impostato su "angolare" e il testo del secondo elemento è impostato su "bracket", una chiamata a <xref:System.Windows.Forms.ListView.FindItemWithText%2A> , che passa "brack" come testo di ricerca restituirà l'elemento il cui testo è "bracket". Se `isPrefixSearch` è impostato su `false`, questa chiamata restituirà `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Il parametro <paramref name="startIndex" /> è minore di 0 o superiore al numero di elementi nella classe <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindNearestItem">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Trova l'elemento successivo a partire da un punto fornito, effettuando la ricerca nella direzione specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint dir, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint dir, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint dir, System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.Windows.Forms.SearchDirectionHint" />
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="dir">Uno dei valori di <see cref="T:System.Windows.Forms.SearchDirectionHint" />.</param>
        <param name="point">Punto da cui iniziare la ricerca.</param>
        <summary>Trova l'elemento successivo a partire dal punto specificato, eseguendo la ricerca nella direzione specificata.</summary>
        <returns>La classe <see cref="T:System.Windows.Forms.ListViewItem" /> è la più vicina al punto fornito, effettuando la ricerca nella direzione specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.FindNearestItem%2A> restituisce `null` se viene trovato alcun elemento nella direzione specificata. Identificazione dell'elemento più vicino può variare a seconda del sistema operativo in cui è in esecuzione l'applicazione e influiranno sui risultati di <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          La proprietà <see cref="P:System.Windows.Forms.ListView.View" /> è impostata su un valore diverso da <see cref="F:System.Windows.Forms.View.SmallIcon" /> o <see cref="F:System.Windows.Forms.View.LargeIcon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint, x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection, int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="searchDirection">Uno dei valori di <see cref="T:System.Windows.Forms.SearchDirectionHint" />.</param>
        <param name="x">Coordinata x per il punto da cui iniziare la ricerca.</param>
        <param name="y">Coordinata y per il punto da cui iniziare la ricerca.</param>
        <summary>Trova l'elemento successivo a partire dalle coordinate x e y fornite, effettuando la ricerca nella direzione specificata.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> più prossimo alle coordinate indicate, nella direzione di ricerca specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.FindNearestItem%2A> restituisce `null` se viene trovato alcun elemento nella direzione specificata. Identificazione dell'elemento più vicino può variare a seconda del sistema operativo in cui è in esecuzione l'applicazione e influiranno sui risultati di <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          La proprietà <see cref="P:System.Windows.Forms.ListView.View" /> è impostata su un valore diverso da <see cref="F:System.Windows.Forms.View.SmallIcon" /> o <see cref="F:System.Windows.Forms.View.LargeIcon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FocusedItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FocusedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem FocusedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FocusedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusedItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ FocusedItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'elemento nel controllo che ha lo stato attivo.</summary>
        <value>Classe <see cref="T:System.Windows.Forms.ListViewItem" /> che rappresenta l'elemento con lo stato attivo o <see langword="null" /> se nessun elemento è attivo nella classe <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.FocusedItem%2A> proprietà restituisce il <xref:System.Windows.Forms.ListViewItem> che rappresenta l'elemento attualmente visualizzato il rettangolo di attivazione per il <xref:System.Windows.Forms.ListView> controllo. Perché un <xref:System.Windows.Forms.ListView> controllo non dispone di alcun aree direttamente modificabili oltre gli elementi vengono visualizzati quando il <xref:System.Windows.Forms.ListView> controllo ha lo stato attivo, un elemento all'interno di <xref:System.Windows.Forms.ListView> consente di visualizzare il contorno tratteggiato tutto il testo dell'elemento. In genere, l'ultimo elemento selezionato nel <xref:System.Windows.Forms.ListView> controllo rappresenta l'elemento con lo stato attivo. Anche se un elemento può essere quello di tratteggiato, potrebbe non effettivamente essere un elemento selezionato nel <xref:System.Windows.Forms.ListView>. Utilizzare il <xref:System.Windows.Forms.ListView.SelectedItems%2A> o <xref:System.Windows.Forms.ListView.SelectedIndices%2A> proprietà per ottenere gli elementi selezionati nel <xref:System.Windows.Forms.ListView> (controllo), il <xref:System.Windows.Forms.ListView.FocusedItem%2A> proprietà non è necessariamente selezionata. È possibile utilizzare il <xref:System.Windows.Forms.ListView.FocusedItem%2A> selezionata una proprietà per determinare quale elemento è l'ultimo di <xref:System.Windows.Forms.ListView> controllo, indipendentemente dallo stato di selezione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore primo piano.</summary>
        <value>Oggetto <see cref="T:System.Drawing.Color" /> che rappresenta il colore di primo piano.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se quando si fa clic su un elemento vengono selezionati anche tutti i relativi elementi secondari.</summary>
        <value>
          <see langword="true" /> se quando si fa clic su un elemento vengono selezionati anche tutti i relativi elementi secondari; <see langword="false" /> se viene selezionato solo l'elemento su cui viene fatto clic. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.FullRowSelect%2A> proprietà ha effetto solo se il <xref:System.Windows.Forms.ListView.View%2A> proprietà del <xref:System.Windows.Forms.ListView> NFS è impostata su <xref:System.Windows.Forms.View.Details>. Il <xref:System.Windows.Forms.ListView.FullRowSelect%2A> proprietà è in genere utilizzato quando un <xref:System.Windows.Forms.ListView> Visualizza gli elementi con numerosi elementi secondari ed è importante essere in grado di visualizzare gli elementi selezionati quando il testo dell'elemento non è visibile a causa dello scorrimento orizzontale del contenuto del controllo.  
  
> [!NOTE]
>  Quando <xref:System.Windows.Forms.ListView.FullRowSelect%2A> è impostato su `true`, le descrizioni comandi per un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> non essere visualizzate; la descrizione comando per l'elemento padre <xref:System.Windows.Forms.ListViewItem> viene visualizzato.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="F:System.Windows.Forms.View.Details" />
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem GetItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem GetItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAt (x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ GetItemAt(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x della posizione in cui eseguire la ricerca di un elemento, espressa nelle coordinate del client.</param>
        <param name="y">Coordinata y della posizione in cui eseguire la ricerca di un elemento, espressa nelle coordinate del client.</param>
        <summary>Recupera l'elemento nella posizione specificata.</summary>
        <returns>Oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> che rappresenta l'elemento in corrispondenza della posizione specificata. Se non è presente alcun elemento in corrispondenza della posizione specificata, viene restituito <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.GetItemAt%2A> metodo consente di individuare l'elemento che si trova in una posizione specifica all'interno dell'area client del <xref:System.Windows.Forms.ListView> controllo. È possibile utilizzare questo metodo quando l'utente fa clic o fa un elemento secondario (quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su `View.Details`) e si desidera determinare l'elemento che possiede l'elemento secondario che è stato selezionato in base alle coordinate del mouse quando il mouse scelto dall'utente .  
  
> [!NOTE]
>  Quando il <xref:System.Windows.Forms.ListView.FullRowSelect%2A> valore della proprietà è `false`, questo metodo restituisce un elemento solo quando il percorso specificato è entro i limiti dell'elemento padre (che viene visualizzata nella prima colonna quando il controllo è in modalità dettagli). È necessario impostare il <xref:System.Windows.Forms.ListView.FullRowSelect%2A> proprietà `true` per recuperare un elemento con questo metodo in una posizione all'interno di un elemento secondario. È inoltre possibile utilizzare il <xref:System.Windows.Forms.ListView.HitTest%2A> metodo per recuperare informazioni dettagliate sull'elemento in una determinata posizione.  
  
 Per riposizionamento tramite trascinamento e rilascio degli elementi all'interno di un <xref:System.Windows.Forms.ListView>, è possibile utilizzare il <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> metodo anziché il <xref:System.Windows.Forms.ListView.GetItemAt%2A> (metodo). Il <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> metodo individua l'elemento più vicino indipendentemente da dove si trova il puntatore del mouse. Il <xref:System.Windows.Forms.ListView.GetItemAt%2A> , d'altra parte, restituisce `null` se non esiste alcun elemento nella posizione specificata.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.ListViewInsertionMark> classe è supportata solo in Windows XP e Windows Server 2003 quando l'applicazione chiama il <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Windows.Forms.PictureBox> e <xref:System.Windows.Forms.ListView> controlli. Il <xref:System.Windows.Forms.PictureBox> viene inizializzato tramite l'impostazione di <xref:System.Windows.Forms.PictureBox.BorderStyle%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.PictureBox.SizeMode%2A?displayProperty=nameWithType> proprietà utilizzando il <xref:System.Windows.Forms.BorderStyle> e <xref:System.Windows.Forms.PictureBoxSizeMode> enumerazioni, rispettivamente. Il <xref:System.Windows.Forms.ListView> viene popolato con le immagini dalla directory degli esempi. Il <xref:System.Windows.Forms.ListView.GetItemAt%2A> metodo viene utilizzato quando si gestisce il <xref:System.Windows.Forms.ListView> del controllo <xref:System.Windows.Forms.Control.MouseDown> evento per determinare se un elemento è selezionato. Se un elemento è selezionato, il gestore eventi visualizza il file selezionato impostando il <xref:System.Windows.Forms.PictureBox.Image%2A?displayProperty=nameWithType> proprietà. L'esempio richiede l'esistenza di file JPG nella cartella C:\documents and Settings\All Settings\All Pictures\Sample Pictures. Per eseguire questo esempio, incollare il codice in un form e chiamare il `InitializePictureBox` e `PopulateListView` metodi nel costruttore del form o `Load` metodo. Verificare che tutti gli eventi sono associati i gestori di eventi.  
  
 [!code-cpp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemRect">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera il rettangolo di delimitazione di un elemento all'interno del controllo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice a base zero dell'elemento all'interno della classe <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> di cui si desidera che venga restituito il rettangolo di delimitazione.</param>
        <summary>Recupera il rettangolo di delimitazione di un elemento specifico all'interno del controllo di visualizzazione elenco.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Rectangle" /> che rappresenta il rettangolo di delimitazione dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il rettangolo di delimitazione restituito da questa versione di <xref:System.Windows.Forms.ListView.GetItemRect%2A> metodo rappresenta l'intero elemento, inclusi l'icona di testo dell'elemento e testo dell'elemento secondario. Per specificare una parte specifica dell'elemento del rettangolo di delimitazione, utilizzare l'altra versione di <xref:System.Windows.Forms.ListView.GetItemRect%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index, System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index, valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32,System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer, portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index, System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="index">Indice a base zero dell'elemento all'interno della classe <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> di cui si desidera che venga restituito il rettangolo di delimitazione.</param>
        <param name="portion">Uno dei valori di <see cref="T:System.Windows.Forms.ItemBoundsPortion" /> che rappresenta una parte dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> per il quale recuperare il rettangolo di delimitazione.</param>
        <summary>Recupera la parte specificata del rettangolo di delimitazione di un elemento specifico all'interno del controllo di visualizzazione elenco.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Rectangle" /> che rappresenta il rettangolo di delimitazione per la parte specificata dell'oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il rettangolo di delimitazione restituito da questa versione di <xref:System.Windows.Forms.ListView.GetItemRect%2A> metodo rappresenta solo la sezione dell'elemento specificato nella `portion` parametro. Per restituire il rettangolo di delimitazione dell'intero elemento, utilizzare l'altra versione di <xref:System.Windows.Forms.ListView.GetItemRect%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ItemBoundsPortion" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public bool GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GridLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se devono essere visualizzate linee della griglia tra le righe e le colonne contenenti gli elementi e gli elementi secondari nel controllo.</summary>
        <value>
          <see langword="true" /> se le linee della griglia vengono create attorno agli elementi e agli elementi secondari; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.GridLines%2A> proprietà ha effetto solo se il <xref:System.Windows.Forms.ListView.View%2A> proprietà del <xref:System.Windows.Forms.ListView> NFS è impostata su <xref:System.Windows.Forms.View.Details>. Il <xref:System.Windows.Forms.ListView.GridLines%2A> proprietà consente di visualizzare le linee per identificare le righe e colonne che vengono visualizzate nel <xref:System.Windows.Forms.ListView> controllare quando vengono visualizzati gli elementi e degli elementi secondari. Le linee della griglia che vengono visualizzate non offrono la possibilità di ridimensionare righe e colonne come un'applicazione ad come Microsoft Excel. Solo le colonne possono essere ridimensionate, se le intestazioni di colonna vengono visualizzate, spostando il puntatore del mouse sul lato destro della colonna da ridimensionare e quindi facendo clic e trascinando la colonna fino a quando le dimensioni desiderate. La funzionalità di linee della griglia viene utilizzata per fornire all'utente del controllo limiti visibili attorno agli elementi e gli elementi secondari.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As ListViewGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroupCollection ^ Groups { System::Windows::Forms::ListViewGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di oggetti <see cref="T:System.Windows.Forms.ListViewGroup" /> assegnati al controllo.</summary>
        <value>Classe <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> contenente tutti i gruppi all'interno del controllo <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView> caratteristica di raggruppamento consente di creare gruppi visivi di correlate logicamente <xref:System.Windows.Forms.ListView> elementi. Ogni gruppo è costituito da un'intestazione testuale seguita da una linea orizzontale e gli elementi assegnati a tale gruppo. È possibile allineare il testo dell'intestazione a sinistra, a destra o al centro del controllo. I gruppi assegnati a un <xref:System.Windows.Forms.ListView> controllo visualizzato ogni volta che il <xref:System.Windows.Forms.ListView.View%2A> proprietà è impostata su un valore diverso da <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>.  
  
 <xref:System.Windows.Forms.ListView> gruppi di consentono agli utenti di trovare gli elementi che stanno cercando separando gli elementi in categorie utili. È possibile creare tutte le categorie necessarie. Un approccio tipico è per raggruppare gli elementi in base al modo in cui che l'elenco è ordinato. Ad esempio, è possibile raggruppare gli elementi in base alla lettera iniziale del nome dell'elemento quando l'elenco è ordinato alfabeticamente o per gli elementi secondari come tipo o la data quando l'elenco è ordinato, fare clic su un'intestazione di colonna nella visualizzazione dettagli. In Esplora risorse Usa questo tipo di raggruppamento.  
  
 Per utilizzare la caratteristica di raggruppamento, aggiungere uno o più <xref:System.Windows.Forms.ListViewGroup> oggetti per il <xref:System.Windows.Forms.ListView.Groups%2A> raccolta di un <xref:System.Windows.Forms.ListView> controllo. Impostare l'allineamento di testo e l'intestazione dell'intestazione gruppo nel <xref:System.Windows.Forms.ListViewGroup.%23ctor%2A> costruttore, oppure impostarle tramite il <xref:System.Windows.Forms.ListViewGroup.Header%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.ListViewGroup.HeaderAlignment%2A?displayProperty=nameWithType> proprietà.  
  
 Per disabilitare temporaneamente la funzionalità di raggruppamento, impostare il <xref:System.Windows.Forms.ListView.ShowGroups%2A> proprietà `false`.  
  
 È possibile assegnare un elemento a un gruppo specificando il gruppo nel <xref:System.Windows.Forms.ListViewItem.%23ctor%2A> costruttore, impostando il <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> proprietà o aggiungere direttamente l'elemento per il <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> insieme di un gruppo. Tutti gli elementi devono essere assegnati ai gruppi prima che vengano visualizzati. Tutti gli elementi che non sono assegnati a un gruppo verranno visualizzato nel gruppo predefinito, che contiene l'etichetta dell'intestazione "DefaultGroup{0}". Il gruppo predefinito non è inclusa nel <xref:System.Windows.Forms.ListView.Groups%2A> insieme e non può essere modificato. È particolarmente utile nel debug per verificare che tutti gli elementi siano stati aggiunti correttamente a gruppi.  
  
 Un elemento può essere solo in un gruppo alla volta. È possibile modificare il gruppo a cui appartiene un elemento impostando la <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> proprietà in fase di esecuzione o aggiungendolo al <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> raccolta di un altro gruppo, che rimuove automaticamente dal gruppo precedente.  
  
 La funzionalità del segno di inserimento è disabilitata quando si utilizzano gruppi. In questo modo la funzionalità di raggruppamento Ordina elementi per l'appartenenza al gruppo, mentre la funzionalità del segno di inserimento viene utilizzata con il riposizionamento di trascinamento e rilascio in un <xref:System.Windows.Forms.ListView> controllo che non sono già ordinati gli elementi.  
  
 <xref:System.Windows.Forms.ListView> i gruppi sono disponibili solo in Windows XP e Windows Server 2003 quando l'applicazione chiama il <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodo. Nei sistemi operativi precedenti, qualsiasi codice relativo ai gruppi non ha alcun effetto e non verranno visualizzati i gruppi. Di conseguenza, qualsiasi codice che dipende la funzionalità di raggruppamento potrebbe non funzionare correttamente.  
  
 Si desidera includere codice che determina se la funzionalità di raggruppamento è disponibile e fornire una funzionalità alternativa quando non è disponibile. Ad esempio, si potrebbe voler fornire un ordinamento alternativo durante l'esecuzione nei sistemi operativi che non supportano l'ordinamento dal gruppo.  
  
 La funzionalità di raggruppamento è disponibile nella stessa libreria che fornisce la funzionalità di temi del sistema operativo. Per verificare la disponibilità di questa raccolta, chiamare il <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> overload del metodo e passare il <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ListView> caratteristica di raggruppamento per organizzare gli elementi per il valore dell'elemento secondario nella visualizzazione dettagli. Questa modalità di raggruppamento è simile al raggruppamento utilizzato in Esplora risorse. Nell'esempio, i gruppi vengono creati dinamicamente. Per ogni colonna dell'elemento secondario, viene creato un gruppo per ogni valore univoco dell'elemento secondario. Per la colonna dell'elemento padre, viene creato un gruppo per ogni lettera iniziale univoca. Fare clic sull'intestazione di una colonna Ordina gli elementi nei gruppi creati per tale colonna. Fare di nuovo la stessa intestazione di colonna inverte l'ordine dei gruppi.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.ShowGroups" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColumnHeaderStyle HeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ColumnHeaderStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStyle As ColumnHeaderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColumnHeaderStyle HeaderStyle { System::Windows::Forms::ColumnHeaderStyle get(); void set(System::Windows::Forms::ColumnHeaderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeaderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo stile dell'intestazione di colonna.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ColumnHeaderStyle" />. Il valore predefinito è <see cref="F:System.Windows.Forms.ColumnHeaderStyle.Clickable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.HeaderStyle%2A> proprietà consente di specificare il tipo di intestazioni di colonna da visualizzare quando il <xref:System.Windows.Forms.ListView.View%2A> proprietà del <xref:System.Windows.Forms.ListView> NFS è impostata su <xref:System.Windows.Forms.View.Details> e <xref:System.Windows.Forms.ListView> controllo ha <xref:System.Windows.Forms.ColumnHeader> oggetti specificati nel <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>. <xref:System.Windows.Forms.ColumnHeader> gli oggetti definiscono le colonne che vengono visualizzate nel <xref:System.Windows.Forms.ListView> controllo. Ogni colonna viene utilizzata per visualizzare le informazioni dell'elemento secondario per ogni elemento di <xref:System.Windows.Forms.ListView>.  
  
 Il <xref:System.Windows.Forms.ListView.HeaderStyle%2A> proprietà consente di specificare se sono visibili le intestazioni di colonna o, se sono visibili, se devono funzionare come pulsanti selezionabili. Se il <xref:System.Windows.Forms.ListView.HeaderStyle%2A> è impostata su <xref:System.Windows.Forms.ColumnHeaderStyle.None?displayProperty=nameWithType>, le intestazioni di colonna non vengono visualizzate, anche se gli elementi e gli elementi secondari il <xref:System.Windows.Forms.ListView> controllo ancora vengono disposti in colonne. Se il <xref:System.Windows.Forms.ListView.HeaderStyle%2A> è impostata su <xref:System.Windows.Forms.ColumnHeaderStyle.Clickable?displayProperty=nameWithType>, le intestazioni di colonna funzionano come pulsanti che consente agli utenti di eseguire un'azione, ad esempio l'ordinamento degli elementi nella <xref:System.Windows.Forms.ListView> controllare utilizzando gli elementi nella colonna selezionata come chiave. È possibile implementare questo comportamento in un gestore per il <xref:System.Windows.Forms.ListView.ColumnClick> evento. Se il <xref:System.Windows.Forms.ListView.HeaderStyle%2A> è impostata su <xref:System.Windows.Forms.ColumnHeaderStyle.Nonclickable?displayProperty=nameWithType>, le intestazioni di colonna vengono visualizzati, ma non può essere selezionate.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un <xref:System.Windows.Forms.ListView> che consente di selezionare più elementi. Nell'esempio viene illustrato come impostare il <xref:System.Windows.Forms.ListView.HideSelection%2A> e <xref:System.Windows.Forms.ListView.HeaderStyle%2A> proprietà. Viene inoltre illustrato il <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> proprietà. Per eseguire questo esempio, incollare il codice seguente in un form che contiene un <xref:System.Windows.Forms.ListView> oggetto denominato `ListView1` e <xref:System.Windows.Forms.TextBox> denominato `TextBox1`. Chiamare il `InitializeListView` metodo dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori di <see cref="T:System.Windows.Forms.ColumnHeaderStyle" />.</exception>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnHeaderStyle" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'elemento selezionato nel controllo rimane evidenziato quando il controllo perde lo stato attivo.</summary>
        <value>
          <see langword="true" /> se l'elemento selezionato non appare evidenziato quando il controllo perde lo stato attivo; <see langword="false" />, se l'elemento selezionato rimane evidenziato quando il controllo perde lo stato attivo. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando questa proprietà è impostata su `false`, gli elementi selezionati nella <xref:System.Windows.Forms.ListView> controllo rimarrà evidenziato in un colore diverso dal colore della selezione corrente specificato dal sistema operativo quando la <xref:System.Windows.Forms.ListView> perde lo stato attivo. È possibile utilizzare questa proprietà per mantenere gli elementi selezionati dall'utente visibile quando l'utente fa clic su un altro controllo nel form o viene spostato su un'altra finestra.  
  
> [!NOTE]
>  Se si dell'accessibilità delle applicazioni, è consigliabile impostare il <xref:System.Windows.Forms.ListView.HideSelection%2A> proprietà `false`.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un <xref:System.Windows.Forms.ListView> che consente di selezionare più elementi. Nell'esempio viene illustrato come impostare il <xref:System.Windows.Forms.ListView.HideSelection%2A> e <xref:System.Windows.Forms.ListView.HeaderStyle%2A> proprietà. Viene inoltre illustrato il <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType>, e <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> proprietà. Per eseguire questo esempio, incollare il codice seguente in un form che contiene un <xref:System.Windows.Forms.ListView> oggetto denominato `ListView1` e <xref:System.Windows.Forms.TextBox> denominato `TextBox1`. Chiamare il `InitializeListView` metodo dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fornisce informazioni sull'elemento, date le coordinate x e y.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Classe <see cref="T:System.Drawing.Point" /> in base al quale recuperare le informazioni sull'elemento. Le coordinate sono relative all'angolo superiore sinistro del controllo.</param>
        <summary>Fornisce informazioni sull'elemento, dato un punto.</summary>
        <returns>Informazioni sull'elemento, dato un punto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per determinare se un punto in un elemento o un elemento secondario e nell'elemento il punto in cui si trova, ad esempio l'etichetta o immagine l'area. Se le coordinate si trovano all'esterno del controllo restituito <xref:System.Windows.Forms.ListViewHitTestInfo> oggetto ha un <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> proprietà "None"; e <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> e <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> sono impostate su `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il punto contiene coordinate minori di 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As ListViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Coordinata x in base a cui recuperare le informazioni sull'elemento. La coordinata è relativa all'angolo superiore sinistro del controllo.</param>
        <param name="y">Coordinata y in base a cui recuperare le informazioni sull'elemento. La coordinata è relativa all'angolo superiore sinistro del controllo.</param>
        <summary>Fornisce informazioni sull'elemento, date le coordinate x e y.</summary>
        <returns>Informazioni sull'elemento, date le coordinate x e y.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per determinare se un punto è un elemento o un elemento secondario e nell'elemento il punto in cui si trova, ad esempio l'etichetta o immagine l'area. Se le coordinate si trovano all'esterno del controllo restituito <xref:System.Windows.Forms.ListViewHitTestInfo> oggetto ha un <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> proprietà "None"; e <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> e <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> sono impostate su `null`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.Windows.Forms.ListView.HitTest%2A> metodo per determinare la posizione di un evento del mouse in un <xref:System.Windows.Forms.ListView>. Per eseguire questo esempio, incollarlo in un Windows Form che contiene un <xref:System.Windows.Forms.ListView> denominato `listView1` che viene popolato con gli elementi. Associare il <xref:System.Windows.Forms.Control.MouseDown> evento per `listView1` con il `listView1_MouseDown` metodo in questo esempio.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La coordinata x o y è minore di 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il testo di un elemento o di un elemento secondario deve assumere l'aspetto di collegamento ipertestuale al passaggio del mouse.</summary>
        <value>
          <see langword="true" /> se il testo dell'elemento deve avere l'aspetto di collegamento ipertestuale al passaggio del puntatore del mouse; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abilitazione willcause di intercettazione con il <xref:System.Windows.Forms.ListView.Activation%2A> proprietà da impostare <xref:System.Windows.Forms.ItemActivation.OneClick> e <xref:System.Windows.Forms.ListView.HoverSelection%2A> proprietà da impostare `true`. Inoltre, la modifica delle etichette in fase di esecuzione non è consentita quando è abilitata la funzionalità di intercettazione.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un <xref:System.Windows.Forms.ListView> con intercettazione abilitato. Per eseguire questo esempio, incollare il codice seguente in un Windows Form e chiamare il `InitializeHotTrackingListView` metodo dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverSelection">
      <MemberSignature Language="C#" Value="public bool HoverSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HoverSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HoverSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HoverSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HoverSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se un elemento viene selezionato automaticamente quando il puntatore del mouse rimane su di esso per alcuni secondi.</summary>
        <value>
          <see langword="true" /> se un elemento viene selezionato automaticamente al passaggio del puntatore del mouse; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando questa proprietà è impostata su `true`, l'utente può fare riferimento a un elemento di <xref:System.Windows.Forms.ListView> controllo per selezionare l'elemento. È possibile selezionare più elementi (quando il <xref:System.Windows.Forms.ListView.MultiSelect%2A> proprietà è impostata su true) tenendo premuto il tasto CTRL mentre si punta a ciascun elemento. È possibile utilizzare questa funzionalità per fornire un metodo più semplice per l'utente dell'applicazione per selezionare gli elementi di <xref:System.Windows.Forms.ListView> controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertionMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewInsertionMark InsertionMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewInsertionMark InsertionMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.InsertionMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertionMark As ListViewInsertionMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewInsertionMark ^ InsertionMark { System::Windows::Forms::ListViewInsertionMark ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewInsertionMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto utilizzato per indicare la destinazione finale prevista se un elemento viene trascinato all'interno di un controllo <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListViewInsertionMark" /> che rappresenta il segno di inserimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView> funzionalità del segno di inserimento consente di indicare visivamente il percorso di rilascio previsti in un'operazione di trascinamento e rilascio quando viene trascinato un elemento in una nuova posizione. Questa funzionalità si applica solo quando il <xref:System.Windows.Forms.ListView.AutoArrange%2A> è impostata su `true` e quando il <xref:System.Windows.Forms.ListView> controllo non consente di ordinare automaticamente gli elementi. Per impedire l'ordinamento automatico, il <xref:System.Windows.Forms.ListView.Sorting%2A> proprietà deve essere impostata su <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> e <xref:System.Windows.Forms.ListView.View%2A> proprietà deve essere impostata su <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>, o <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. Inoltre, la funzionalità del segno di inserimento potrebbe non essere visibile con il <xref:System.Windows.Forms.ListView> funzionalità di raggruppamento, poiché la funzionalità di raggruppamento Ordina gli elementi per l'appartenenza al gruppo.  
  
 Il <xref:System.Windows.Forms.ListViewInsertionMark> classe viene in genere utilizzata in un gestore per il <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> o <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> evento per aggiornare la posizione del segno di inserimento, come viene trascinato un elemento. Viene inoltre utilizzato in un gestore per il <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> o <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> evento per inserire un elemento trascinato nella posizione corretta. Per ulteriori informazioni, vedere <xref:System.Windows.Forms.ListViewInsertionMark> e [procedura: visualizzare un segno di inserimento in un controllo ListView Windows Form](~/docs/framework/winforms/controls/how-to-display-an-insertion-mark-in-a-windows-forms-listview-control.md).  
  
> [!NOTE]
>  La funzionalità del segno di inserimento è disponibile solo in Windows XP e Windows Server 2003 quando l'applicazione chiama il <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodo. Nei sistemi operativi precedenti, qualsiasi codice relativo al segno di inserimento non ha alcun effetto e il segno di inserimento non verrà visualizzato. Di conseguenza, qualsiasi codice che dipende la funzionalità del segno di inserimento potrebbe non funzionare correttamente. Si desidera includere codice che determina se questa funzionalità è disponibile e fornire una funzionalità alternativa quando non è disponibile. Potrebbe ad esempio, si desidera ignorare tutto il codice che implementa il riposizionamento durante l'esecuzione nei sistemi operativi che non supportano i segni di inserimento dell'elemento di trascinamento e rilascio.  
>   
>  La funzionalità del segno di inserimento viene fornita nella stessa libreria che fornisce la funzionalità di temi del sistema operativo. Per verificare la disponibilità di questa raccolta, chiamare il <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> overload del metodo e passare il <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ListView> funzionalità del segno di inserimento. In questo esempio implementa il riordino degli elementi di trascinamento e rilascio, usando gli eventi di trascinamento standard. La posizione del segno di inserimento viene aggiornata in un gestore per il <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> evento. In questo gestore, la posizione del puntatore del mouse viene confrontata con il punto centrale dell'elemento più vicino e il risultato viene utilizzato per determinare se il segno di inserimento a sinistra o a destra dell'elemento.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Uno dei valori di <see cref="T:System.Windows.Forms.Keys" />.</param>
        <summary>Determina se il tasto specificato è un normale tasto di input o un tasto speciale che richiede una pre-elaborazione.</summary>
        <returns>
          <see langword="true" /> se il tasto specificato è un normale tasto di input; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemActivate">
      <MemberSignature Language="C#" Value="public event EventHandler ItemActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemActivate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un elemento viene attivato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.ItemActivate> evento si verifica quando l'utente attiva uno o più elementi nel <xref:System.Windows.Forms.ListView> controllo. L'utente può attivare un elemento con un singolo clic o fare doppio clic su, in base al valore di <xref:System.Windows.Forms.ListView.Activation%2A> , proprietà o con la tastiera. All'interno del gestore eventi per il <xref:System.Windows.Forms.ListView.ItemActivate> evento, è possibile fare riferimento il <xref:System.Windows.Forms.ListView.SelectedItems%2A> o <xref:System.Windows.Forms.ListView.SelectedIndices%2A> proprietà per accedere alla raccolta di elementi selezionati nel <xref:System.Windows.Forms.ListView> per determinare quali elementi attivati.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ListView.ItemActivate> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ListView> denominato `ListView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListView.ItemActivate> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#473](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#473)]
 [!code-vb[System.Windows.Forms.EventExamples#473](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#473)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCheck As ItemCheckEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckEventHandler ^ ItemCheck;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando lo stato di selezione di un elemento cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.CheckBoxes%2A> proprietà deve essere impostata su true affinché le caselle di controllo da visualizzare accanto a ogni elemento nel <xref:System.Windows.Forms.ListView> controllo. Il <xref:System.Windows.Forms.ListView.ItemCheck> evento si verifica quando viene modificato lo stato di selezione di un elemento o di <xref:System.Windows.Forms.ListView.CheckBoxes%2A> è impostata su `true`. È possibile creare un gestore eventi per il <xref:System.Windows.Forms.ListView.ItemCheck> evento per eseguire attività quali la modifica dello stato dell'icona di un elemento o un'altra attività specifiche dell'applicazione ogni volta che un elemento viene archiviato il <xref:System.Windows.Forms.ListView> controllo.  
  
> [!NOTE]
>  Se non è stato creato l'handle di finestra quando il <xref:System.Windows.Forms.ListView.ItemCheck> evento viene generato, l'evento verrà ritardata. Una volta creato l'handle di finestra (quando il form viene visualizzato), qualsiasi ritardato <xref:System.Windows.Forms.ListView.ItemCheck> vengono generati eventi. Per ulteriori informazioni, vedere <xref:System.Windows.Forms.Control.HandleCreated>.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un <xref:System.Windows.Forms.ListView> controllo che gestisce il <xref:System.Windows.Forms.ListView.ItemCheck> evento. Il metodo utilizza il <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A?displayProperty=nameWithType> e <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A?displayProperty=nameWithType> proprietà per recuperare e calcolare il prezzo delle voci di menu selezionata. Per eseguire questo esempio, incollare il codice seguente in un form contenente un `ListView` denominato `ListView1` e `TextBox` denominato `Textbox1`. Chiamare il `InititalizeListView` metodo dal costruttore del form o `Load` metodo. Verificare che il <xref:System.Windows.Forms.ListView.ItemCheck> evento è associato il gestore dell'evento in questo esempio.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemChecked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckedEventHandler ItemChecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckedEventHandler ItemChecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemChecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChecked As ItemCheckedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckedEventHandler ^ ItemChecked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando lo stato di selezione di un elemento cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento è simile al <xref:System.Windows.Forms.ListView.ItemCheck> evento, ma viene generato dopo che l'elemento è stato selezionato.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ListView.ItemChecked> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per un altro esempio, vedere il <xref:System.Windows.Forms.ListView.ItemCheck> evento. Il codice funziona correttamente anche se è associato il gestore eventi per il <xref:System.Windows.Forms.ListView.ItemChecked> evento.  
  
 Per eseguire questo esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ListView> denominato `ListView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListView.ItemChecked> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#475](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#475)]
 [!code-vb[System.Windows.Forms.EventExamples#475](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#475)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente inizia a trascinare un elemento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.ItemDrag> evento si verifica quando l'utente inizia a trascinare un elemento. In genere il gestore eventi per il <xref:System.Windows.Forms.ListView.ItemDrag> evento esegue l'operazione di trascinamento chiamando il <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> metodo. È possibile utilizzare questo evento per eseguire le attività necessarie per trascinare gli elementi interno e all'esterno dell'applicazione <xref:System.Windows.Forms.ListView> controllo.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ListView.ItemDrag> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ListView> denominato `ListView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListView.ItemDrag> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#476](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#476)]
 [!code-vb[System.Windows.Forms.EventExamples#476](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#476)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemMouseHover As ListViewItemMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemMouseHoverEventHandler ^ ItemMouseHover;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il mouse viene spostato su un elemento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ListView.ItemMouseHover> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ListView> denominato `ListView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListView.ItemMouseHover> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#477](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#477)]
 [!code-vb[System.Windows.Forms.EventExamples#477](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#477)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ListViewItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ListViewItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListView.ListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ListViewItemCollection ^ Items { System::Windows::Forms::ListView::ListViewItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta contenente tutti gli elementi nel controllo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> che contiene tutti gli elementi all'interno del controllo <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzo di <xref:System.Windows.Forms.ListView.ListViewItemCollection> restituita da questa proprietà, è possibile aggiungere elementi, rimuovere gli elementi e ottenere un conteggio di elementi. Per ulteriori informazioni sulle attività che possono essere eseguite con gli elementi nella raccolta, vedere il <xref:System.Windows.Forms.ListView.ListViewItemCollection> argomenti relativi alla classe.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="ItemSelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemSelectionChanged As ListViewItemSelectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemSelectionChangedEventHandler ^ ItemSelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemSelectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando lo stato di selezione di un elemento cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In modalità virtuale, il <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> evento si verifica quando cambia lo stato di selezione di più elementi.  
  
 Il <xref:System.Windows.Forms.ListView.ItemSelectionChanged> evento si verifica se lo stato dell'elemento viene modificato da selezionato a deselezionato o viceversa.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ListView.ItemSelectionChanged> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ListView> denominato `ListView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListView.ItemSelectionChanged> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#478](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#478)]
 [!code-vb[System.Windows.Forms.EventExamples#478](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#478)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'utente può modificare le etichette degli elementi nel controllo.</summary>
        <value>
          <see langword="true" /> se l'utente può modificare le etichette degli elementi in fase di esecuzione; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Windows.Forms.ListView.LabelEdit%2A> è impostata su `true`, l'utente è in grado di modificare il testo di un elemento facendo clic sul testo dell'elemento per selezionarlo e quindi fare clic sul testo dell'elemento per inserire il testo dell'etichetta in modalità di modifica. L'utente può quindi modificare o sostituire l'etichetta di testo dell'elemento. È possibile utilizzare il <xref:System.Windows.Forms.ListView.BeforeLabelEdit> e <xref:System.Windows.Forms.ListView.AfterLabelEdit> gli eventi per eseguire attività prima e dopo che l'utente modifica testo di un elemento. Il testo degli elementi secondari non può essere modificato se questa proprietà è impostata su `true`. Per modificare il testo degli elementi secondari, è possibile visualizzare una finestra di dialogo per gli utenti quando si fa doppio clic su un elemento secondario nel controllo.  
  
> [!NOTE]
>  Se il <xref:System.Windows.Forms.ListView.Activation%2A> è impostata su <xref:System.Windows.Forms.ItemActivation.OneClick> o <xref:System.Windows.Forms.ItemActivation.TwoClick>, la modifica delle etichette non potrà essere indipendentemente dal valore della <xref:System.Windows.Forms.ListView.LabelEdit%2A> proprietà.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="LabelWrap">
      <MemberSignature Language="C#" Value="public bool LabelWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il testo delle etichette degli elementi va a capo quando gli elementi del controllo vengono visualizzati come icone.</summary>
        <value>
          <see langword="true" /> se il testo delle etichette va a capo quando viene utilizzata la visualizzazione per icone per gli elementi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Windows.Forms.ListView.LabelWrap%2A> è impostata su `true`, il testo dell'elemento viene eseguito il wrapping alla riga successiva del testo, se necessario. Se il testo è maggiore di due righe di testo, il testo viene accorciato. Se l'utente seleziona l'elemento, viene visualizzato tutto il testo dell'elemento. Se il <xref:System.Windows.Forms.ListView.LabelWrap%2A> è impostata su `false`, tutto il testo elemento viene visualizzato in una singola riga. Viene visualizzato il testo dell'intero elemento quando il <xref:System.Windows.Forms.ListView.LabelWrap%2A> è impostato su `false`. Questa proprietà viene utilizzato solo quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.LargeIcon> o <xref:System.Windows.Forms.View.SmallIcon>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="LargeImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList LargeImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList LargeImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LargeImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ LargeImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Forms.ImageList" /> da utilizzare quando gli elementi vengono visualizzati nel controllo tramite icone grandi.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ImageList" /> che contiene le icone da utilizzare quando la proprietà <see cref="P:System.Windows.Forms.ListView.View" /> è impostata su <see cref="F:System.Windows.Forms.View.LargeIcon" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.LargeImageList%2A> proprietà consente di specificare un <xref:System.Windows.Forms.ImageList> oggetto che contiene le icone da utilizzare quando si visualizzano gli elementi con icone grandi (quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.LargeIcon>). Il <xref:System.Windows.Forms.ListView> controllo può accettare qualsiasi formato grafico che il <xref:System.Windows.Forms.ImageList> controllo supporta la visualizzazione di icone. Il <xref:System.Windows.Forms.ListView> controllo non è limitato ai file con estensione ico. Una volta un <xref:System.Windows.Forms.ImageList> viene assegnato al <xref:System.Windows.Forms.ListView.LargeImageList%2A> proprietà, è possibile impostare il <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> proprietà di ogni <xref:System.Windows.Forms.ListViewItem> nel <xref:System.Windows.Forms.ListView> controllo sulla posizione di indice dell'immagine appropriata nel <xref:System.Windows.Forms.ImageList>. Le dimensioni delle icone per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> specificato da di <xref:System.Windows.Forms.ImageList.ImageSize%2A>.  
  
 Poiché un solo indice può essere specificato per il <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> proprietà, il <xref:System.Windows.Forms.ImageList> oggetti specificati nel <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà devono avere la stessa posizione di indice per le immagini da visualizzare. Ad esempio, se il <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> proprietà di un <xref:System.Windows.Forms.ListViewItem> è impostato su 0, le immagini da utilizzare per le icone grandi e piccole devono essere nella stessa posizione di indice nel <xref:System.Windows.Forms.ImageList> oggetti specificati nel <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà.  
  
> [!NOTE]
>  Se le immagini vengono specificate con le chiavi, è necessario inserire grandi e piccole versioni dell'immagine nella stessa posizione di indice nei relativi elenchi della rispettiva immagine. Quando si passa tra le visualizzazioni, la posizione di indice dell'immagine in un unico elenco viene utilizzata per individuare l'immagine in altro elenco, indipendentemente dal valore di chiave specificato.  
  
 Per impostare il <xref:System.Windows.Forms.ImageList> da utilizzare per visualizzare gli elementi con icone piccole (tutti modalità di visualizzazione diverso da <xref:System.Windows.Forms.View.LargeIcon>), utilizzare il <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. Se si desidera utilizzare le immagini per visualizzare l'elemento di stato, utilizzare il <xref:System.Windows.Forms.ListView.StateImageList%2A> proprietà.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="ListViewItemSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer ListViewItemSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ListViewItemSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property ListViewItemSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ ListViewItemSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'operatore di confronto per l'ordinamento per il controllo.</summary>
        <value>Oggetto <see cref="T:System.Collections.IComparer" /> che rappresenta l'operatore di confronto per l'ordinamento per il controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> proprietà consente di specificare l'oggetto che esegue l'ordinamento degli elementi in un <xref:System.Windows.Forms.ListView> controllare quando il <xref:System.Windows.Forms.ListView.Sort%2A> metodo viene chiamato o quando gli elementi vengono aggiunti all'elenco. Si noti che gli elementi non vengono ordinati automaticamente quando viene modificato il testo dell'etichetta.  
  
 L'oggetto specificato deve essere un'istanza di una classe che implementa il <xref:System.Collections.IComparer> interfaccia, che dispone di un singolo metodo denominato <xref:System.Collections.Comparer.Compare%2A?displayProperty=nameWithType>.  
  
 È possibile utilizzare questa proprietà per fornire un ordinamento personalizzato, ad esempio, quando viene fatto clic su un'intestazione di colonna nella visualizzazione dettagli. A tale scopo, creare una classe che implementa il <xref:System.Collections.IComparer> l'interfaccia e fornisce un costruttore che accetta l'indice di una colonna da ordinare. È quindi possibile implementare un gestore per il <xref:System.Windows.Forms.ListView.ColumnClick> evento che crea un'istanza di questa classe utilizzando l'indice della colonna selezionata. Quando si imposta la <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> proprietà nella nuova istanza di <xref:System.Windows.Forms.ListView> controllo venga automaticamente ordinato usando l'oggetto specificato. Le chiamate successive al <xref:System.Windows.Forms.ListView.Sort%2A> metodo utilizzare lo stesso oggetto.  
  
> [!NOTE]
>  Quando si imposta il valore di <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> proprietà, il <xref:System.Windows.Forms.ListView.Sort%2A> metodo viene chiamato automaticamente.  
  
   
  
## Examples  
 L'esempio di codice seguente viene creato un form contenente un <xref:System.Windows.Forms.ListView> controllo che consente di ordinare manualmente gli elementi di quando una colonna il <xref:System.Windows.Forms.ListView> si fa clic sul controllo. Nell'esempio viene definita una classe denominata `ListViewItemComparer` che implementa il <xref:System.Collections.IComparer?displayProperty=nameWithType> interfaccia che esegue il <xref:System.Windows.Forms.ListViewItem> confronto. Nell'esempio viene creata un'istanza di `ListViewItemComparer` e viene utilizzata per impostare il <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> proprietà del <xref:System.Windows.Forms.ListView> controllo. Il <xref:System.Windows.Forms.ListView.Sort%2A> chiamata al metodo di <xref:System.Windows.Forms.ListView.ColumnClick> gestore dell'evento Usa i metodi definiti `ListViewItemComparer` per eseguire l'ordinamento degli elementi, in base alla colonna a cui viene fatto clic.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se possono essere selezionati più elementi.</summary>
        <value>
          <see langword="true" /> se è possibile selezionare più elementi all'interno del controllo contemporaneamente; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Windows.Forms.ListView.MultiSelect%2A> è impostata su `true`, possono essere selezionati più elementi nel <xref:System.Windows.Forms.ListView> controllo. Per selezionare più elementi, l'utente deve tenere premuto il tasto CTRL mentre si fa clic gli elementi da selezionare. È possibile selezionare elementi consecutivi facendo clic su Seleziona il primo elemento e quindi, tenendo premuto il tasto MAIUSC, fare clic per selezionare l'ultimo elemento. È possibile utilizzare la funzionalità di selezione multipla per selezionare più elementi di <xref:System.Windows.Forms.ListView> controllare ed eseguire un'operazione su tutti gli elementi selezionati. Ad esempio, l'utente può selezionare più elementi e quindi fare doppio clic su un elemento selezionato per visualizzare un menu di scelta rapida che viene visualizzato un set di attività che possono essere eseguite sugli elementi selezionati.  
  
 Per determinare gli elementi selezionati nel <xref:System.Windows.Forms.ListView> controllo, utilizzare il <xref:System.Windows.Forms.ListView.SelectedItems%2A> proprietà. Il <xref:System.Windows.Forms.ListView.SelectedItems%2A> proprietà consente di accedere il <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> che contiene un elenco degli elementi selezionati. Se si desidera che le posizioni dell'indice di <xref:System.Windows.Forms.ListView.ListViewItemCollection> anziché gli elementi, è possibile utilizzare il <xref:System.Windows.Forms.ListView.SelectedIndices%2A> proprietà a cui accedere il <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Se non si desidera consentire più selezioni nel <xref:System.Windows.Forms.ListView>, ma si desidera offrire all'utente un modo per più elementi a scelta, è possibile visualizzare le caselle di controllo impostando il <xref:System.Windows.Forms.ListView.CheckBoxes%2A> proprietà `true`.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un <xref:System.Windows.Forms.ListView> che consente di selezionare più elementi. Nell'esempio viene illustrato come impostare il <xref:System.Windows.Forms.ListView.HideSelection%2A> e <xref:System.Windows.Forms.ListView.HeaderStyle%2A> proprietà. Per eseguire questo esempio, incollare il codice seguente in un form che contiene un <xref:System.Windows.Forms.ListView> oggetto denominato `ListView1` e <xref:System.Windows.Forms.TextBox> denominato `TextBox1`. Chiamare il `InitializeListView` metodo dal costruttore del form o `Load` metodo.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnAfterLabelEdit%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento per limitare una nuova etichetta ai caratteri dell'alfabeto. Nell'esempio viene utilizzata la <xref:System.Text.ASCIIEncoding> classe per ottenere il codice carattere ASCII di ogni carattere di nuova etichetta. Se il carattere è compreso tra i codici ASCII che rappresentano numeri, la nuova etichetta non è applicata all'elemento. In questo esempio presuppone che sia stato creato un <xref:System.Windows.Forms.ListView> il controllo su un form e gli elementi aggiunti a esso. Nell'esempio si presuppone inoltre che sia stato collegato il <xref:System.Windows.Forms.ListView.AfterLabelEdit> evento al gestore dell'evento definito nell'esempio di codice. Per utilizzare il <xref:System.Text.ASCIIEncoding> (classe), il file deve includere il <xref:System.Text> dello spazio dei nomi.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnBackgroundImageChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnBeforeLabelEdit%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCacheVirtualItems">
      <MemberSignature Language="C#" Value="protected virtual void OnCacheVirtualItems (System.Windows.Forms.CacheVirtualItemsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCacheVirtualItems(class System.Windows.Forms.CacheVirtualItemsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCacheVirtualItems (e As CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCacheVirtualItems(System::Windows::Forms::CacheVirtualItemsEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.CacheVirtualItemsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnCacheVirtualItems%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnClick (System.Windows.Forms.ColumnClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnClick(class System.Windows.Forms.ColumnClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnClick (e As ColumnClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnClick(System::Windows::Forms::ColumnClickEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ColumnClickEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.ColumnClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnColumnClick%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 L'esempio di codice seguente viene creato un form contenente un <xref:System.Windows.Forms.ListView> controllo che consente di ordinare manualmente gli elementi di quando una colonna il <xref:System.Windows.Forms.ListView> si fa clic sul controllo. Nell'esempio viene definita una classe denominata `ListViewItemComparer` che implementa il <xref:System.Collections.IComparer?displayProperty=nameWithType> interfaccia che esegue il <xref:System.Windows.Forms.ListViewItem> confronto. Nell'esempio viene creata un'istanza di `ListViewItemComparer` e viene utilizzata per impostare il <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> proprietà del <xref:System.Windows.Forms.ListView> controllo. Il <xref:System.Windows.Forms.ListView.Sort%2A> chiamata al metodo di <xref:System.Windows.Forms.ListView.ColumnClick> gestore dell'evento Usa i metodi definiti `ListViewItemComparer` per eseguire l'ordinamento degli elementi, in base alla colonna a cui viene fatto clic.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnColumnReordered">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnReordered (System.Windows.Forms.ColumnReorderedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnReordered(class System.Windows.Forms.ColumnReorderedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnReordered (e As ColumnReorderedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnReordered(System::Windows::Forms::ColumnReorderedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnReorderedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.ColumnReordered" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnColumnReordered%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.ColumnWidthChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.ColumnWidthChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::ColumnWidthChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnColumnWidthChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanging (System.Windows.Forms.ColumnWidthChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanging(class System.Windows.Forms.ColumnWidthChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanging (e As ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanging(System::Windows::Forms::ColumnWidthChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.ColumnWidthChanging> evento non si verificherà se la finestra della completa funzionalità di trascinamento, l'opzione "Mostra contenuto durante il trascinamento di finestra" è disabilitato.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnColumnWidthChanging%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawColumnHeader">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawColumnHeader (System.Windows.Forms.DrawListViewColumnHeaderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawColumnHeader(class System.Windows.Forms.DrawListViewColumnHeaderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawColumnHeader (e As DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawColumnHeader(System::Windows::Forms::DrawListViewColumnHeaderEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnDrawColumnHeader%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawListViewItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.DrawItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnDrawItem%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawSubItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawSubItem (System.Windows.Forms.DrawListViewSubItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawSubItem(class System.Windows.Forms.DrawListViewSubItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawSubItem (e As DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawSubItem(System::Windows::Forms::DrawListViewSubItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewSubItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.DrawSubItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnDrawSubItem%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see langword="FontChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnItemActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemActivate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.ItemActivate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnItemActivate%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCheck (ice As ItemCheckEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCheck(System::Windows::Forms::ItemCheckEventArgs ^ ice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice">Oggetto <see cref="T:System.Windows.Forms.ItemCheckEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.ItemCheck" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnItemCheck%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChecked (System.Windows.Forms.ItemCheckedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChecked(class System.Windows.Forms.ItemCheckedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChecked (e As ItemCheckedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChecked(System::Windows::Forms::ItemCheckedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemCheckedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ItemCheckedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.ItemChecked" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnItemChecked%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ItemDragEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.ItemDrag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnItemDrag%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemDrag" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnItemMouseHover (System.Windows.Forms.ListViewItemMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemMouseHover(class System.Windows.Forms.ListViewItemMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemMouseHover (e As ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemMouseHover(System::Windows::Forms::ListViewItemMouseHoverEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemMouseHoverEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ListViewItemMouseHoverEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.ItemMouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnItemMouseHover%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemSelectionChanged (System.Windows.Forms.ListViewItemSelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemSelectionChanged(class System.Windows.Forms.ListViewItemSelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemSelectionChanged (e As ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemSelectionChanged(System::Windows::Forms::ListViewItemSelectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemSelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ListViewItemSelectionChangedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnItemSelectionChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.MouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.ListView.OnMouseHover%2A> metodo viene chiamato quando il mouse è posizionato su un <xref:System.Windows.Forms.ListViewItem>, il metodo genera il <xref:System.Windows.Forms.ListView.ItemMouseHover> evento.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnMouseHover%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.ParentChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.Resize" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRetrieveVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnRetrieveVirtualItem (System.Windows.Forms.RetrieveVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRetrieveVirtualItem(class System.Windows.Forms.RetrieveVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRetrieveVirtualItem (e As RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRetrieveVirtualItem(System::Windows::Forms::RetrieveVirtualItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.RetrieveVirtualItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.RetrieveVirtualItemEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnRetrieveVirtualItem%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSearchForVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnSearchForVirtualItem (System.Windows.Forms.SearchForVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSearchForVirtualItem(class System.Windows.Forms.SearchForVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSearchForVirtualItem (e As SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSearchForVirtualItem(System::Windows::Forms::SearchForVirtualItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.SearchForVirtualItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnSearchForVirtualItem%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnSelectedIndexChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVirtualItemsSelectionRangeChanged (System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVirtualItemsSelectionRangeChanged(class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVirtualItemsSelectionRangeChanged (e As ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVirtualItemsSelectionRangeChanged(System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il controllo <see cref="T:System.Windows.Forms.ListView" /> deve essere disegnato dal sistema operativo o dal codice fornito.</summary>
        <value>
          <see langword="true" /> se il controllo <see cref="T:System.Windows.Forms.ListView" /> viene creato dal codice fornito; <see langword="false" /> se il controllo <see cref="T:System.Windows.Forms.ListView" /> viene creato dal sistema operativo. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Forms.ListView> controllo normalmente viene creato dal sistema operativo. Per personalizzare l'aspetto di <xref:System.Windows.Forms.ListView> set di elementi, gli elementi secondari e intestazioni di colonna, il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> proprietà `true` e fornire un gestore per uno o più dei seguenti eventi: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>. Si tratta del disegno personalizzato. Quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, si verificano tutti e tre gli eventi; in caso contrario, solo il <xref:System.Windows.Forms.ListView.DrawItem> si verifica l'evento.  
  
> [!NOTE]
>  Informazioni sull'elemento secondario viene in genere visualizzato nella visualizzazione affiancata, nonché visualizzare i dettagli, ma nella visualizzazione affiancata, deve essere disegnato in un gestore per il <xref:System.Windows.Forms.ListView.DrawItem> evento. Il <xref:System.Windows.Forms.ListView.DrawSubItem> non vengono generati eventi per gli elementi secondari per cui non <xref:System.Windows.Forms.ColumnHeader> oggetto è stato aggiunto il <xref:System.Windows.Forms.ListView.Columns%2A> insieme. Si noti inoltre che il primo elemento secondario di ogni <xref:System.Windows.Forms.ListViewItem> oggetto rappresenta l'elemento padre e viene visualizzato nella prima colonna.  
  
 Nella visualizzazione dei dettagli, è possibile gestire il <xref:System.Windows.Forms.ListView.DrawItem> evento per disegnare elementi comuni a tutti gli elementi secondari, ad esempio, lo sfondo e gestire il <xref:System.Windows.Forms.ListView.DrawSubItem> evento per disegnare elementi per i singoli elementi secondari, ad esempio i valori di testo. È inoltre possibile creare tutti gli elementi nel <xref:System.Windows.Forms.ListView> controllare usando solo uno dei due eventi, sebbene ciò possa risultare più complessa. Per creare le intestazioni di colonna nella visualizzazione dettagli, è necessario gestire il <xref:System.Windows.Forms.ListView.DrawColumnHeader> evento.  
  
> [!NOTE]
>  Per evitare problemi di sfarfallio delle immagini durante il disegno personalizzato, eseguire l'override di <xref:System.Windows.Forms.ListView> controllo e impostare il <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> proprietà `true`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come fornire un disegno personalizzato per un <xref:System.Windows.Forms.ListView> controllo. Il <xref:System.Windows.Forms.ListView> controllo nell'esempio dispone di uno sfondo sfumato. Gli elementi secondari con i valori negativi hanno di primo piano rosso e uno sfondo nero.  
  
 Un gestore per il <xref:System.Windows.Forms.ListView.DrawItem> evento Disegna lo sfondo per interi elementi. Un gestore per il <xref:System.Windows.Forms.ListView.DrawSubItem> evento traccia i valori di testo e il testo e lo sfondo per gli elementi secondari con i valori negativi. Un gestore per il <xref:System.Windows.Forms.ListView.DrawColumnHeader> evento disegna ogni intestazione di colonna.  
  
 Oggetto <xref:System.Windows.Forms.ContextMenu> componente fornisce un modo per alternare la visualizzazione dei dettagli e la visualizzazione elenco. Nella visualizzazione elenco, solo il <xref:System.Windows.Forms.ListView.DrawItem> viene generato l'evento. In questo caso, il testo e dello sfondo vengono creati sia <xref:System.Windows.Forms.ListView.DrawItem> gestore dell'evento.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo spazio tra il controllo <see cref="T:System.Windows.Forms.ListView" /> e il suo contenuto.</summary>
        <value>Classe <see cref="T:System.Windows.Forms.Padding" /> che specifica lo spazio tra il controllo <see cref="T:System.Windows.Forms.ListView" /> e il suo contenuto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.ListView.Padding" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene disegnato il controllo <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView> controllo viene creato dal sistema operativo o è personalizzato, pertanto la <xref:System.Windows.Forms.ListView.Paint> evento non viene mai generato. Per ulteriori informazioni sul disegno personalizzato, vedere il <xref:System.Windows.Forms.ListView.OwnerDraw%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RealizeProperties">
      <MemberSignature Language="C#" Value="protected void RealizeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RealizeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RealizeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RealizeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RealizeProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza le proprietà del controllo <see cref="T:System.Windows.Forms.ListView" /> che gestisce l'aspetto del controllo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedrawItems">
      <MemberSignature Language="C#" Value="public void RedrawItems (int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedrawItems(int32 startIndex, int32 endIndex, bool invalidateOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RedrawItems(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedrawItems (startIndex As Integer, endIndex As Integer, invalidateOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedrawItems(int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
        <Parameter Name="invalidateOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startIndex">Indice per il primo elemento dell'intervallo da ricreare.</param>
        <param name="endIndex">Indice per l'ultimo elemento dell'intervallo da ricreare.</param>
        <param name="invalidateOnly">
          <see langword="true" /> per invalidare l'intervallo di elementi; <see langword="false" /> per invalidare e ricreare gli elementi.</param>
        <summary>Forza la nuova creazione di un intervallo di oggetti <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.RedrawItems%2A> metodo può essere utilizzato se il <xref:System.Windows.Forms.ListView> è in modalità virtuale o in modalità normale.  
  
 Se il <xref:System.Windows.Forms.ListView.BeginUpdate%2A> metodo è stato chiamato prima della chiamata a <xref:System.Windows.Forms.ListView.RedrawItems%2A>, non si verificherà il ridisegno.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Il parametro <paramref name="startIndex" /> o <paramref name="endIndex" /> è  minore di 0, maggiore o uguale al numero di elementi presenti nella classe <see cref="T:System.Windows.Forms.ListView" /> o, in modalità virtuale, maggiore del valore della proprietà <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />.  
  
 oppure  
  
 Il parametro <paramref name="startIndex" /> fornito è maggiore del parametro <paramref name="endIndex." /></exception>
      </Docs>
    </Member>
    <Member MemberName="RetrieveVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RetrieveVirtualItem As RetrieveVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::RetrieveVirtualItemEventHandler ^ RetrieveVirtualItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RetrieveVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica se la classe <see cref="T:System.Windows.Forms.ListView" /> è in modalità virtuale e richiede una classe <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un <xref:System.Windows.Forms.ListView> oggetto è in modalità virtuale, viene creato <xref:System.Windows.Forms.ListViewItem> oggetti in modo dinamico anziché di <xref:System.Windows.Forms.ListView.Items%2A> insieme. Questo evento viene generato quando l'oggetto è necessario creare un <xref:System.Windows.Forms.ListViewItem> oggetto. Un gestore per questo evento deve creare appropriata <xref:System.Windows.Forms.ListViewItem> o recuperarlo dalla cache e passarlo tramite il <xref:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item%2A> proprietà.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un gestore per questo evento. In questo esempio listView1 richiede che ciascun <xref:System.Windows.Forms.ListViewItem> per visualizzare il quadrato del relativo indice. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Windows.Forms.ListView.VirtualMode%2A> proprietà.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item" /> non è impostata su un elemento quando viene gestito l'evento <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il controllo è disposto da destra a sinistra.</summary>
        <value>
          <see langword="true" /> per indicare che il controllo <see cref="T:System.Windows.Forms.ListView" /> e disposto da destra a sinistra; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView> è di proprietà per l'uso con applicazioni internazionali in cui la lingua viene letto da destra a sinistra. Se si imposta <xref:System.Windows.Forms.ListView> e <xref:System.Windows.Forms.RightToLeft> su true, il controllo contenuto e il testo viene disposto da destra a sinistra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.ListView.RightToLeftLayout" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ListView> denominato `ListView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#462](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#462)]
 [!code-vb[System.Windows.Forms.EventExamples#462](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#462)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se al controllo viene aggiunta una barra di scorrimento quando lo spazio disponibile non è sufficiente per visualizzare tutti gli elementi.</summary>
        <value>
          <see langword="true" /> se vengono aggiunte delle barre di scorrimento al controllo per consentire all'utente di visualizzare tutti gli elementi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando questa proprietà è impostata su `true`, <xref:System.Windows.Forms.ListView> viene visualizzata una barra di scorrimento verticale da utilizzare quando il numero di elementi supera le dimensioni dell'area client del controllo. È possibile utilizzare questa proprietà per assicurarsi che l'utente può accedere a tutti gli elementi che sono disponibili nel <xref:System.Windows.Forms.ListView> controllo.  
  
> [!NOTE]
>  Nelle versioni del [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] prima della versione 2.0, le intestazioni di colonna non venivano disegnate correttamente quando si imposta questa proprietà su `false` e il ridimensionamento del controllo per renderlo più grande. Per risolvere questo problema, impostare questa proprietà su `true` in un <xref:System.Windows.Forms.Form.ResizeBegin> gestore dell'evento e impostarla di nuovo su `false` in un <xref:System.Windows.Forms.Form.ResizeEnd> gestore dell'evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SearchForVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SearchForVirtualItem As SearchForVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::SearchForVirtualItemEventHandler ^ SearchForVirtualItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchForVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica se la classe <see cref="T:System.Windows.Forms.ListView" /> è in modalità virtuale ed è in corso una ricerca.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento si verifica quando un <xref:System.Windows.Forms.ListView> è in modalità virtuale e <xref:System.Windows.Forms.ListView.FindNearestItem%2A> o <xref:System.Windows.Forms.ListView.FindItemWithText%2A> metodo viene chiamato. Quando si gestisce questo evento, è necessario calcolare quale elemento dall'elenco di elementi forniti dal <xref:System.Windows.Forms.ListView.Items%2A> proprietà corrisponde ai criteri di ricerca e impostare il <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A?displayProperty=nameWithType> proprietà all'indice del <xref:System.Windows.Forms.ListViewItem>. Se non viene fornito un elemento, <xref:System.Windows.Forms.ListView.FindNearestItem%2A> e <xref:System.Windows.Forms.ListView.FindItemWithText%2A> restituirà `null`.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, una ricerca restituisce più vicino con un intero specificato in un elenco di diecimila prima quadrati. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Windows.Forms.ListView.VirtualMode%2A> proprietà.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#4)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'insieme <see cref="P:System.Windows.Forms.ListView.SelectedIndices" /> viene modificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.SelectedIndices%2A> raccolta cambia ogni volta che il <xref:System.Windows.Forms.ListViewItem.Selected%2A> proprietà di un <xref:System.Windows.Forms.ListViewItem> le modifiche. La modifica della proprietà può verificarsi a livello di codice o quando l'utente seleziona un elemento o Annulla la selezione di un elemento. Quando l'utente seleziona un elemento senza premendo il tasto CTRL per eseguire una selezione multipla, il controllo Cancella prima di tutto la selezione precedente. In questo caso, questo evento si verifica una volta per ogni elemento selezionato in precedenza e una volta per l'elemento selezionato.  
  
 Per determinare gli elementi selezionati nel <xref:System.Windows.Forms.ListView> controllo, utilizzare il <xref:System.Windows.Forms.ListView.SelectedItems%2A> proprietà a cui accedere il <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>. È possibile creare un gestore eventi per questo evento eseguire attività ogni volta che viene apportata una modifica per gli elementi selezionati nel <xref:System.Windows.Forms.ListView> controllo.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ListView.SelectedItems%2A> proprietà <xref:System.Windows.Forms.ListView.SelectedIndexChanged> evento, <xref:System.Windows.Forms.ListView.HeaderStyle%2A> membri e <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> classe. Per eseguire questo esempio, incollare il codice seguente in un form che contiene un <xref:System.Windows.Forms.ListView> oggetto denominato `ListView1` e <xref:System.Windows.Forms.TextBox> denominato `TextBox1`. Chiamare il `InitializeListView` metodo dal costruttore del form o `Load` metodo. In questo esempio richiede che il gestore dell'evento è associato correttamente il <xref:System.Windows.Forms.ListView.SelectedIndexChanged> evento  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
        <altmember cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedIndexCollection SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedIndexCollection SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedIndices As ListView.SelectedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedIndexCollection ^ SelectedIndices { System::Windows::Forms::ListView::SelectedIndexCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene gli indici degli elementi selezionati nel controllo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> che contiene gli indici degli elementi selezionati. Se non sono stati selezionati elementi, viene restituito un oggetto <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> vuoto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.SelectedIndices%2A> proprietà non conterrà tutti gli indici se si accede alla proprietà prima di <xref:System.Windows.Forms.ListView> viene creato l'handle, che si verifica in genere quando il <xref:System.Windows.Forms.ListView> viene caricato inizialmente per la visualizzazione del modulo. È possibile verificare se l'handle è stato creato con il <xref:System.Windows.Forms.Control.IsHandleCreated%2A> proprietà. Quando il <xref:System.Windows.Forms.ListView.MultiSelect%2A> è impostata su `true`, questa proprietà restituisce una raccolta che contiene gli indici di tutti gli elementi selezionati nel <xref:System.Windows.Forms.ListView>. Per un controllo a selezione singola <xref:System.Windows.Forms.ListView>, questa proprietà restituisce una raccolta che contiene un elemento singolo contenente l'indice dell'elemento selezionato solo nel <xref:System.Windows.Forms.ListView>. Per ulteriori informazioni sulle attività che possono essere eseguite con gli elementi nella raccolta, vedere <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Se si desidera ottenere una raccolta di elementi selezionati nel <xref:System.Windows.Forms.ListView> controllo, anziché le posizioni dell'indice degli elementi selezionati, usare il <xref:System.Windows.Forms.ListView.SelectedItems%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.Windows.Forms.ListView.SelectedIndices%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged>, e <xref:System.Windows.Forms.ListView.HeaderStyle%2A> membri e <xref:System.Windows.Forms.ListView.SelectedIndexCollection> classe. Per eseguire questo esempio, incollare il codice seguente in un form che contiene un <xref:System.Windows.Forms.ListView> oggetto denominato `ListView1` e <xref:System.Windows.Forms.TextBox> denominato `TextBox1`. Chiamare il `InitializeListView` metodo dal costruttore del form o `Load` metodo. In questo esempio richiede il gestore dell'evento è associato correttamente il <xref:System.Windows.Forms.ListView.SelectedIndexChanged> evento.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedListViewItemCollection SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedListViewItemCollection SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As ListView.SelectedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedListViewItemCollection ^ SelectedItems { System::Windows::Forms::ListView::SelectedListViewItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene gli elementi selezionati nel controllo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> che contiene gli elementi selezionati nel controllo. Se non sono stati selezionati elementi, viene restituito un oggetto <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> vuoto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.SelectedItems%2A> proprietà non conterrà alcun elemento se si accede alla proprietà prima di <xref:System.Windows.Forms.ListView> viene creato l'handle, che in genere si verifica quando <xref:System.Windows.Forms.ListView> viene caricato inizialmente per la visualizzazione del modulo. È possibile verificare se l'handle è stato creato con il <xref:System.Windows.Forms.Control.IsHandleCreated%2A> proprietà. Quando il <xref:System.Windows.Forms.ListView.MultiSelect%2A> è impostata su `true`, questa proprietà restituisce una raccolta contenente gli elementi selezionati nel <xref:System.Windows.Forms.ListView>. Per un controllo a selezione singola <xref:System.Windows.Forms.ListView>, questa proprietà restituisce una raccolta che contiene l'unico elemento selezionato nel <xref:System.Windows.Forms.ListView>. Per ulteriori informazioni sulle attività che possono essere eseguite con gli elementi nella raccolta, vedere <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>.  
  
 Se si desidera ottenere una raccolta di posizioni di indice all'interno di <xref:System.Windows.Forms.ListView.ListViewItemCollection> degli elementi selezionati nel <xref:System.Windows.Forms.ListView> controllo, anziché gli elementi selezionati, usare il <xref:System.Windows.Forms.ListView.SelectedIndices%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.Windows.Forms.ListView.SelectedItems%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> evento, e <xref:System.Windows.Forms.ListView.HeaderStyle%2A> membri e <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> classe. Per eseguire questo esempio, incollare il codice seguente in un form che contiene un <xref:System.Windows.Forms.ListView> oggetto denominato `ListView1` e <xref:System.Windows.Forms.TextBox> denominato `TextBox1`. Chiamare il `InitializeListView` metodo dal costruttore del form o `Load` metodo. In questo esempio richiede il gestore dell'evento è associato correttamente il <xref:System.Windows.Forms.ListView.SelectedIndexChanged> evento  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ShowGroups">
      <MemberSignature Language="C#" Value="public bool ShowGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowGroups { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se gli elementi vengono visualizzati in gruppi.</summary>
        <value>
          <see langword="true" /> per visualizzare gli elementi in gruppi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I gruppi assegnati a un <xref:System.Windows.Forms.ListView> controllo visualizzato ogni volta che il <xref:System.Windows.Forms.ListView.View%2A> proprietà è impostata su un valore diverso da <xref:System.Windows.Forms.View.List>. Il <xref:System.Windows.Forms.ListView> caratteristica di raggruppamento consente di creare gruppi visivi di correlate logicamente <xref:System.Windows.Forms.ListView> gli elementi in Windows XP e Windows Server 2003. Per abilitare questa funzionalità, l'applicazione deve chiamare il <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodo. Per altre informazioni, vedere la proprietà <xref:System.Windows.Forms.ListView.Groups%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Groups" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se le descrizioni comandi vengono visualizzate per gli oggetti <see cref="T:System.Windows.Forms.ListViewItem" /> contenuti nella classe <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>
          <see langword="true" /> se le descrizioni comandi della classe <see cref="T:System.Windows.Forms.ListViewItem" /> devono essere visualizzate; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> è impostata su `true`, qualsiasi <xref:System.Windows.Forms.ListViewItem> che dispone di un controllo descrizione comando visualizzarla; in caso contrario, viene visualizzato nulla.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> e <xref:System.Windows.Forms.ListViewItem.ToolTipText%2A?displayProperty=nameWithType> proprietà. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `InitializeItemsWithToolTips` dal costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList SmallImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList SmallImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SmallImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ SmallImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Forms.ImageList" /> da utilizzare quando gli elementi vengono visualizzati nel controllo tramite icone piccole.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ImageList" /> che contiene le icone da utilizzare quando la proprietà <see cref="P:System.Windows.Forms.ListView.View" /> è impostata su <see cref="F:System.Windows.Forms.View.SmallIcon" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà consente di specificare un <xref:System.Windows.Forms.ImageList> oggetto che contiene le icone da utilizzare quando gli elementi con icone piccole (quando il <xref:System.Windows.Forms.ListView.View%2A> proprietà è impostata su qualsiasi valore diverso da <xref:System.Windows.Forms.View.LargeIcon>). Il <xref:System.Windows.Forms.ListView> controllo può accettare qualsiasi formato grafico che il <xref:System.Windows.Forms.ImageList> controllo supporta la visualizzazione di icone. Il <xref:System.Windows.Forms.ListView> controllo non è limitato ai file con estensione ico. Una volta un <xref:System.Windows.Forms.ImageList> viene assegnato al <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà, è possibile impostare il <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> proprietà di ogni <xref:System.Windows.Forms.ListViewItem> nel <xref:System.Windows.Forms.ListView> controllo sulla posizione di indice dell'immagine appropriata nel <xref:System.Windows.Forms.ImageList>. Le dimensioni delle icone per il <xref:System.Windows.Forms.ListView.SmallImageList%2A> specificato da di <xref:System.Windows.Forms.ImageList.ImageSize%2A> proprietà.  
  
 Poiché un solo indice può essere specificato per il <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> proprietà, il <xref:System.Windows.Forms.ImageList> oggetti specificati nel <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà devono avere la stessa posizione di indice per le immagini da visualizzare. Ad esempio, se il <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> proprietà di un <xref:System.Windows.Forms.ListViewItem> è impostato su 0, le immagini da utilizzare per le icone grandi e piccole devono essere nella stessa posizione di indice nel <xref:System.Windows.Forms.ImageList> oggetti specificati nel <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà.  
  
> [!NOTE]
>  Se le immagini vengono specificate con le chiavi, è necessario inserire grandi e piccole versioni dell'immagine nella stessa posizione di indice nei relativi elenchi della rispettiva immagine. Quando si passa tra le visualizzazioni, la posizione di indice dell'immagine in un unico elenco viene utilizzata per individuare l'immagine in altro elenco, indipendentemente dal valore di chiave specificato.  
  
 Per impostare il <xref:System.Windows.Forms.ImageList> da utilizzare per visualizzare gli elementi con icone grandi (quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.LargeIcon>), utilizzare il <xref:System.Windows.Forms.ListView.LargeImageList%2A> proprietà. Se si desidera utilizzare le immagini per visualizzare l'elemento di stato, utilizzare il <xref:System.Windows.Forms.ListView.StateImageList%2A> proprietà.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ordina gli elementi della visualizzazione elenco.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere gli elementi vengono ordinati usando il <xref:System.Windows.Forms.ListView.Sorting%2A> proprietà, che ordina gli elementi in base al testo dell'elemento. Per personalizzare l'ordinamento, è necessario scrivere una classe che implementa il <xref:System.Collections.IComparer> interfaccia e impostare il <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> proprietà a un oggetto di tale classe. Ciò è utile, ad esempio, quando si desidera ordinare gli elementi di testo dell'elemento secondario. Per ulteriori informazioni sull'ordinamento manuale di elementi, vedere l'esempio per la <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> proprietà.  
  
 Se il <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> proprietà è impostata su un valore diverso da <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> o se il <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> è impostata, l'elenco è ordinato automaticamente quando vengono aggiunti elementi. Gli elementi non vengono ordinati automaticamente quando viene modificato il testo dell'etichetta.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder Sorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder Sorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorting As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder Sorting { System::Windows::Forms::SortOrder get(); void set(System::Windows::Forms::SortOrder value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il criterio di ordinamento per gli elementi nel controllo.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.SortOrder" />. Il valore predefinito è <see cref="F:System.Windows.Forms.SortOrder.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.Sorting%2A> proprietà consente di specificare se gli elementi vengono ordinati nel <xref:System.Windows.Forms.ListView> controllo. Per impostazione predefinita, viene eseguito alcun ordinamento. Quando il <xref:System.Windows.Forms.ListView.Sorting%2A> è impostata su <xref:System.Windows.Forms.SortOrder.Ascending> o <xref:System.Windows.Forms.SortOrder.Descending>, gli elementi di <xref:System.Windows.Forms.ListView> vengono ordinati automaticamente in ordine alfabetico crescente (quando la proprietà è impostata su <xref:System.Windows.Forms.SortOrder.Ascending>) o in ordine alfabetico decrescente (quando il proprietà è impostata su <xref:System.Windows.Forms.SortOrder.Descending>). È possibile utilizzare questa proprietà per l'ordinamento automatico di elementi visualizzati nel <xref:System.Windows.Forms.ListView> controllo per renderne più semplice per utenti di trovare gli elementi di un numero elevato di elementi è disponibile.  
  
 Se si desidera eseguire la propria l'elemento di ordinamento anziché il <xref:System.Windows.Forms.ListView.Sorting%2A> proprietà, utilizzare il <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> proprietà in combinazione con il <xref:System.Windows.Forms.ListView.Sort%2A> metodo.  
  
 Se il <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> proprietà è impostata su un valore diverso da <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> o se il <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> è impostata, l'elenco è ordinato automaticamente all'aggiunta di elementi. Gli elementi non vengono ordinati automaticamente quando viene modificato il testo dell'etichetta.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori di <see cref="T:System.Windows.Forms.SortOrder" />.</exception>
        <altmember cref="T:System.Windows.Forms.SortOrder" />
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Forms.ImageList" /> associato agli stati definiti da un'applicazione all'interno del controllo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ImageList" /> che contiene un set di immagini di stato che possono essere utilizzate per indicare lo stato definito da un'applicazione di un elemento. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.StateImageList%2A> proprietà consente di specificare un <xref:System.Windows.Forms.ImageList> che contiene le immagini da utilizzare per rappresentare uno stato specifico dell'applicazione di un elemento in un <xref:System.Windows.Forms.ListView> controllo. Le immagini di stato vengono visualizzate a sinistra di un'icona per l'elemento. È possibile utilizzare le immagini di stato, ad esempio caselle di controllo checked e unchecked, per indicare gli stati degli elementi definiti dall'applicazione. Le immagini di stato sono visibili in tutte le visualizzazioni del <xref:System.Windows.Forms.ListView> controllo.  
  
 Se un <xref:System.Windows.Forms.ImageList> specificato nella <xref:System.Windows.Forms.ListView.StateImageList%2A> proprietà e <xref:System.Windows.Forms.ListView.CheckBoxes%2A> è impostata su `true`, le immagini in posizioni dell'indice 0 e 1 nel <xref:System.Windows.Forms.ImageList> vengono visualizzati anziché la casella di controllo. Viene visualizzata l'immagine nella posizione di indice 0 anziché la casella di controllo deselezionata, e viene visualizzata l'immagine nella posizione di indice 1 anziché la casella di controllo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà non è pertinente per questa classe.</summary>
        <value>Testo da visualizzare nel controllo <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà <see cref="P:System.Windows.Forms.ListView.Text" /> cambia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size TileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size TileSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property TileSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size TileSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le dimensioni dei riquadri nella visualizzazione affiancata.</summary>
        <value>Struttura <see cref="T:System.Drawing.Size" /> che contiene le nuove dimensioni della finestra.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà controlla le dimensioni delle finestre quando il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. Impostazione di questa proprietà è utile per impedire il ritorno a capo quando il testo dell'elemento secondario è troppo lungo per essere visualizzato in una singola riga.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ListView> funzionalità di visualizzazione affiancata. Nell'esempio, la visualizzazione affiancata Visualizza gli elementi che rappresentano una documentazione. Ogni elemento viene visualizzato come un riquadro contenente un'icona di un libro, il titolo, autore e l'anno di pubblicazione. Per il codice di esempio lavorare, è necessario includere un file di icona denominato Book.ico nella stessa directory dell'esempio. Per visualizzare il riquadro di visualizzazione senza icone, impostare come commento le righe relative al <xref:System.Windows.Forms.ImageList> oggetto.  
  
 [!code-cpp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CPP/listviewtilingexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CS/listviewtilingexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/VB/listviewtilingexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="TopItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem TopItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem TopItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TopItem" />
      <MemberSignature Language="VB.NET" Value="Public Property TopItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ TopItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il primo elemento visibile nel controllo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ListViewItem" /> che rappresenta il primo elemento visibile nel controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inizialmente, l'elemento con la posizione di indice pari a zero (0) è in cima il <xref:System.Windows.Forms.ListView> controllo. Se il <xref:System.Windows.Forms.ListView> scorrimento del controllo, può essere un elemento diverso nella parte superiore del controllo. È possibile utilizzare questa proprietà per indicare o determinare quale elemento è visibile nella parte superiore del <xref:System.Windows.Forms.ListView> controllo. Il valore di <xref:System.Windows.Forms.ListView.TopItem%2A> proprietà non sarà sempre mantenuto, a seconda di dove il primo elemento desiderato è nella visualizzazione elenco.  
  
 Il numero di elementi visibili in un <xref:System.Windows.Forms.ListView> controllo in qualsiasi momento dipende l'altezza della visualizzazione elenco e le dimensioni degli elementi che contiene. Se gli elementi superano l'altezza della visualizzazione elenco, gli elementi verranno visualizzati su più pagine, l'utente può scorrere. Se si imposta il <xref:System.Windows.Forms.ListView.TopItem%2A> proprietà di un elemento nell'ultima pagina del <xref:System.Windows.Forms.ListView>, l'elemento verrà scorso automaticamente nella visualizzazione; tuttavia, <xref:System.Windows.Forms.ListView.TopItem%2A> verrà impostato sul primo elemento effettivo dell'ultima pagina.  
  
 Per garantire che un elemento specifico è l'area visibile del controllo (ma non necessariamente in posizione più in alto), utilizzare il <xref:System.Windows.Forms.ListView.EnsureVisible%2A> metodo.  
  
> [!NOTE]
>  Impostazione di questa proprietà non ha alcun effetto quando il <xref:System.Windows.Forms.ListView.Scrollable%2A> valore della proprietà è `false`.  
>   
>  Impostazione di questa proprietà non è supportata nelle versioni del [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] precedenti alla versione 2.0.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come reimpostare lo stile di un <xref:System.Windows.Forms.ListViewItem> elementi secondari dell'oggetto tramite l'utilizzo del <xref:System.Windows.Forms.ListView.TopItem%2A> proprietà e <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A?displayProperty=nameWithType> metodo. Per eseguire l'esempio, incollare il codice seguente in un form contenente un pulsante denominato `Button1` e chiamare il `InitializeListView` metodo nel costruttore del form o <xref:System.Windows.Forms.Form.Load> gestore dell'evento.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Windows.Forms.ListView.View" /> è impostata su <see cref="F:System.Windows.Forms.View.LargeIcon" />, <see cref="F:System.Windows.Forms.View.SmallIcon" /> o <see cref="F:System.Windows.Forms.View.Tile" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una rappresentazione in forma di stringa del controllo <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <returns>Stringa che specifica il tipo di controllo, il conteggio degli elementi nel controllo <see cref="T:System.Windows.Forms.ListView" /> e il tipo del primo elemento in <see cref="T:System.Windows.Forms.ListView" />, se il conteggio è diverso da 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtendedStyles">
      <MemberSignature Language="C#" Value="protected void UpdateExtendedStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateExtendedStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.UpdateExtendedStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateExtendedStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateExtendedStyles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aggiorna gli stili estesi applicati al controllo di visualizzazione elenco.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Windows.Forms.ListView.UpdateExtendedStyles%2A> nella classe derivata per eseguire l'override gli stili estesi utilizzati dal metodo di <xref:System.Windows.Forms.ListView> controllo. Se si chiama questo metodo, è necessario assicurarsi che gli stili estesi, impostati le proprietà per il <xref:System.Windows.Forms.ListView> controllo vengono utilizzati nella versione derivata del controllo.  
  
 Di seguito sono le proprietà che si applicano a uno stile esteso per il <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.Activation%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.HoverSelection%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.AllowColumnReorder" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="P:System.Windows.Forms.ListView.FullRowSelect" />
        <altmember cref="P:System.Windows.Forms.ListView.GridLines" />
        <altmember cref="P:System.Windows.Forms.ListView.HoverSelection" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleStateImageBehavior">
      <MemberSignature Language="C#" Value="public bool UseCompatibleStateImageBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleStateImageBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleStateImageBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleStateImageBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la classe <see cref="T:System.Windows.Forms.ListView" /> utilizza il comportamento dell'immagine di stato compatibile con [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1 o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0.</summary>
        <value>
          <see langword="true" /> se il comportamento dell'immagine di stato è compatibile con [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1; <see langword="false" /> se il comportamento è compatibile con [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diventa il <xref:System.Windows.Forms.ListView> controllo il [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 abilitare le immagini personalizzate sullo stato da impostare per indicare se un elemento è selezionato o deselezionato o in uno stato indeterminato. Con l'aggiunta di questa funzionalità, il [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 ha un comportamento diverso rispetto a .NET Framework 1.1. Se sono state create applicazioni che dipendono dal comportamento nel [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1, assicurarsi che il <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> è impostata su `true`, ovvero il valore predefinito. Per sfruttare appieno i vantaggi delle immagini di stato personalizzato, impostare <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> a `false`.  
  
> [!NOTE]
>  Se si utilizza il [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] finestra di progettazione, il <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> verrà impostata su `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.View View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.View View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::View View { System::Windows::Forms::View get(); void set(System::Windows::Forms::View value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il modo in cui gli elementi vengono visualizzati nel controllo.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.View" />. Il valore predefinito è <see cref="F:System.Windows.Forms.View.LargeIcon" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ListView.View%2A> proprietà consente di specificare il tipo di visualizzazione di <xref:System.Windows.Forms.ListView> controllo utilizzato per visualizzare gli elementi. È possibile impostare il <xref:System.Windows.Forms.ListView.View%2A> proprietà per visualizzare gli elementi con icone grandi o piccole o visualizzare gli elementi in un elenco verticale. L'opzione completo è la visualizzazione dei dettagli, che consente di visualizzare non solo gli elementi, ma gli elementi secondari specificati per ogni elemento. Ogni elemento viene visualizzato in una griglia, con ogni elemento elencata verticale e gli elementi secondari per ogni elemento visualizzato in una colonna, con le intestazioni di colonna. La visualizzazione dei dettagli è un modo ideale per visualizzare informazioni sul database a un utente. Con Windows XP e Windows Server 2003, è inoltre possibile visualizzare elementi come affiancati per bilanciare le informazioni grafiche e testuali mostrando un'icona grande insieme alle informazioni dell'elemento secondario di propria scelta. Per abilitare la visualizzazione affiancata, l'applicazione deve chiamare il <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodo. La visualizzazione di immagini piccole Visualizza ogni elemento con un'icona e informazioni testuali a destra dell'icona. La visualizzazione di immagini grandi Visualizza ogni elemento con un'icona e le informazioni testuali sotto l'icona. Le dimensioni delle icone dell'elenco di immagini specificata da di <xref:System.Windows.Forms.ImageList.ImageSize%2A> proprietà del <xref:System.Windows.Forms.ImageList> per il <xref:System.Windows.Forms.ListView.SmallImageList%2A> o <xref:System.Windows.Forms.ListView.LargeImageList%2A> proprietà.  
  
> [!NOTE]
>  Se si utilizzano più elenchi di immagini per la visualizzazione di icone piccole e grandi dimensioni, con un <xref:System.Windows.Forms.ListView> controllo, è necessario inserire piccole e grandi versioni dell'immagine alla stessa posizione di indice ai rispettivi elenchi di immagini. Quando si passa tra le visualizzazioni, la posizione di indice dell'immagine in un unico elenco viene utilizzata per individuare l'immagine in altro elenco, indipendentemente dal valore di chiave specificato.  
  
 La maggior parte delle proprietà di <xref:System.Windows.Forms.ListView> controllo influisce sulla modalità con cui le diverse visualizzazioni si comportano o vengono visualizzate. Alcune proprietà che influiscono sulle visualizzazioni degli elementi sono utili solo quando il <xref:System.Windows.Forms.ListView.View%2A> proprietà è impostata su un valore specifico, mentre altri sono utili in tutte le visualizzazioni. Ad esempio, le proprietà, ad esempio <xref:System.Windows.Forms.ListView.GridLines%2A> e <xref:System.Windows.Forms.ListView.FullRowSelect%2A> risultano utili solo se il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, mentre il <xref:System.Windows.Forms.ListView.MultiSelect%2A> e <xref:System.Windows.Forms.ListView.CheckBoxes%2A> proprietà risultano utili in tutte le visualizzazioni.  
  
 Nella tabella seguente vengono illustrate alcune il <xref:System.Windows.Forms.ListView> membri e le viste sono validi in.  
  
|Membro di ListView|Visualizza|  
|---------------------|----------|  
|Proprietà <xref:System.Windows.Forms.ListView.Alignment%2A>|<xref:System.Windows.Forms.View.SmallIcon> o <xref:System.Windows.Forms.View.LargeIcon>|  
|Proprietà <xref:System.Windows.Forms.ListView.AutoArrange%2A>|<xref:System.Windows.Forms.View.SmallIcon> o <xref:System.Windows.Forms.View.LargeIcon>|  
|Metodo <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.CheckBoxes%2A>|Tutte le visualizzazioni tranne <xref:System.Windows.Forms.View.Tile>|  
|Proprietà <xref:System.Windows.Forms.ListView.Columns%2A>|<xref:System.Windows.Forms.View.Details> o <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.DrawSubItem> Evento|<xref:System.Windows.Forms.View.Details>|  
|Metodo <xref:System.Windows.Forms.ListView.FindItemWithText%2A>|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>o <xref:System.Windows.Forms.View.Tile>|  
|Metodo <xref:System.Windows.Forms.ListView.FindNearestItem%2A>|<xref:System.Windows.Forms.View.SmallIcon> o <xref:System.Windows.Forms.View.LargeIcon>|  
|Metodo <xref:System.Windows.Forms.ListView.GetItemAt%2A>|<xref:System.Windows.Forms.View.Details> o <xref:System.Windows.Forms.View.Tile>|  
|Proprietà <xref:System.Windows.Forms.ListView.Groups%2A>|Tutte le visualizzazioni tranne <xref:System.Windows.Forms.View.List>|  
|Proprietà <xref:System.Windows.Forms.ListView.HeaderStyle%2A>|<xref:System.Windows.Forms.View.Details>|  
|Proprietà <xref:System.Windows.Forms.ListView.InsertionMark%2A>|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>o <xref:System.Windows.Forms.View.Tile>|  
  
 È possibile utilizzare il <xref:System.Windows.Forms.ListView.View%2A> proprietà per fornire visualizzazioni diverse dei dati nell'applicazione o bloccare una visualizzazione specifica per poter usare i relativi vantaggi. Ad esempio, il <xref:System.Windows.Forms.ListView.View%2A> è spesso impostata su <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> perché la visualizzazione dei dettagli sono disponibili numerose opzioni di visualizzazione disponibili nelle altre visualizzazioni.  
  
> [!NOTE]
>  Se il <xref:System.Windows.Forms.ListView> controllo non è specificata alcuna intestazione di colonna e si imposta il <xref:System.Windows.Forms.ListView.View%2A> proprietà <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView> controllo non verrà visualizzato alcun elemento. Se il <xref:System.Windows.Forms.ListView> controllo non è specificata alcuna intestazione di colonna e si imposta la <xref:System.Windows.Forms.ListView.View%2A> proprietà <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView> controllo non verrà visualizzati gli elementi secondari.  
  
 La visualizzazione affiancata Visualizza ogni elemento con un'icona grande alle informazioni sulla destra a sinistra e in formato testuale. Le informazioni testuali è costituito da etichetta dell'elemento aggiungendo gli elementi secondari. Per impostazione predefinita, viene visualizzato solo il primo elemento secondario, che corrisponde all'etichetta dell'elemento. Per visualizzare gli elementi secondari aggiuntivi, è necessario aggiungere <xref:System.Windows.Forms.ColumnHeader> oggetti per il <xref:System.Windows.Forms.ListView.Columns%2A> insieme. Ogni elemento secondario nel riquadro corrisponde a un'intestazione di colonna. Per controllare quali elementi secondari vengono visualizzati e l'ordine in cui sono visualizzate, è necessario impostare il <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A?displayProperty=nameWithType> proprietà per ogni elemento e <xref:System.Windows.Forms.ColumnHeader.Name%2A?displayProperty=nameWithType> proprietà per ogni intestazione. È quindi possibile aggiungere, rimuovere e riordinare le intestazioni nel <xref:System.Windows.Forms.ListView.Columns%2A> insieme per ottenere il risultato desiderato.  
  
 Per controllare le dimensioni dei riquadri nella visualizzazione affiancata, impostare il <xref:System.Windows.Forms.ListView.TileSize%2A> proprietà. Ciò è utile per evitare il ritorno a capo quando il testo dell'elemento secondario è troppo lungo per una singola riga.  
  
 Per un esempio di visualizzazione del riquadro, vedere il <xref:System.Windows.Forms.ListView.TileSize%2A> proprietà.  
  
> [!NOTE]
>  Sebbene le colonne vengono visualizzate solo nella visualizzazione dettagli, gli elementi secondari senza intestazioni di colonna non verranno visualizzati in visualizzazione dettagli o la visualizzazione affiancata.  
  
 La visualizzazione affiancata è disponibile solo in Windows XP e Windows Server 2003 quando l'applicazione chiama il <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metodo. Nei sistemi operativi precedenti, qualsiasi codice correlato alla visualizzazione affiancata non ha alcun effetto e il controllo <xref:System.Windows.Forms.ListView> viene visualizzato nella visualizzazione Icone grandi. Di conseguenza, qualsiasi codice che dipende dalla visualizzazione affiancata potrebbe non funzionare correttamente.  
  
 Si desidera includere codice che determina se la visualizzazione affiancata è disponibile e fornire una funzionalità alternativa quando non è disponibile. Ad esempio, quando si utilizza il disegno personalizzato per personalizzare l'aspetto di <xref:System.Windows.Forms.ListView> gli elementi nella visualizzazione affiancata, si potrebbe voler usare codice di disegno appropriato alla visualizzazione Icone grandi durante l'esecuzione nei sistemi operativi che non supportano la visualizzazione affiancata.  
  
 Funzionalità di visualizzazione affiancata viene fornita nella stessa libreria che fornisce la funzionalità di temi del sistema operativo. Per verificare la disponibilità di questa raccolta, chiamare il <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> overload del metodo e passare il <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valore.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.ListView> controllo con tre <xref:System.Windows.Forms.ListViewItem> oggetti specificati e tre <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> oggetti specificati per ogni elemento. Nell'esempio viene creata anche <xref:System.Windows.Forms.ColumnHeader> oggetti da visualizzare gli elementi secondari nella visualizzazione dei dettagli. Due <xref:System.Windows.Forms.ImageList> gli oggetti vengono creati anche nell'esempio di codice per fornire le immagini per il <xref:System.Windows.Forms.ListViewItem> oggetti. Questi <xref:System.Windows.Forms.ImageList> gli oggetti vengono aggiunti per il <xref:System.Windows.Forms.ListView.LargeImageList%2A> e <xref:System.Windows.Forms.ListView.SmallImageList%2A> proprietà. L'esempio Usa le proprietà seguenti nella creazione di <xref:System.Windows.Forms.ListView> controllo.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 In questo esempio richiede che il codice per è stato aggiunto un <xref:System.Windows.Forms.Form> e chiamare il metodo creato nell'esempio dal costruttore o un altro metodo nel form. Nell'esempio si presuppone inoltre che le immagini denominate `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, e `MyLargeImage2` si trovano nella directory radice dell'unità C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori di <see cref="T:System.Windows.Forms.View" />.</exception>
        <altmember cref="T:System.Windows.Forms.View" />
        <altmember cref="P:System.Windows.Forms.ListView.TileSize" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VirtualItemsSelectionRangeChanged As ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventHandler ^ VirtualItemsSelectionRangeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica se una classe <see cref="T:System.Windows.Forms.ListView" /> è in modalità virtuale ed è stato modificato lo stato di selezione di un intervallo di elementi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Windows.Forms.ListView> non è in modalità virtuale, il <xref:System.Windows.Forms.ListView.ItemSelectionChanged> verificherà l'evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ListView> denominato `ListView1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#482](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#482)]
 [!code-vb[System.Windows.Forms.EventExamples#482](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#482)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="VirtualListSize">
      <MemberSignature Language="C#" Value="public int VirtualListSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualListSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualListSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualListSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero degli oggetti <see cref="T:System.Windows.Forms.ListViewItem" /> contenuti nell’elemento quando è attiva la modalità virtuale.</summary>
        <value>Numero degli oggetti <see cref="T:System.Windows.Forms.ListViewItem" /> contenuti nella classe <see cref="T:System.Windows.Forms.ListView" /> in modalità virtuale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ottenere o impostare il <xref:System.Windows.Forms.ListView.VirtualListSize%2A> proprietà quando <xref:System.Windows.Forms.ListView.VirtualMode%2A> impostato su `false` avrà alcun effetto <xref:System.Windows.Forms.ListView>.  
  
 Se <xref:System.Windows.Forms.ListView.VirtualMode%2A> è impostato su `true`e <xref:System.Windows.Forms.ListView.VirtualListSize%2A> proprietà è maggiore di 0, è necessario gestire il <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> evento, fornendo un valore valido <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          La proprietà <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> è impostata su un valore minore di 0.</exception>
        <exception cref="T:System.InvalidOperationException">
          La proprietà <see cref="P:System.Windows.Forms.ListView.VirtualMode" /> è impostata su <see langword="true" />, la proprietà <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> è maggiore di 0 e l'evento <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> non è gestito.</exception>
        <altmember cref="P:System.Windows.Forms.ListView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se sono state fornite operazioni di gestione dati personalizzate per il controllo <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Windows.Forms.ListView" /> utilizza le operazioni di gestione dati fornite; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di <xref:System.Windows.Forms.ListView.VirtualMode%2A> proprietà `true` inserisce il <xref:System.Windows.Forms.ListView> in modalità virtuale. In modalità virtuale, la normale <xref:System.Windows.Forms.ListView.Items%2A> insieme è inutilizzato. In alternativa, <xref:System.Windows.Forms.ListViewItem> gli oggetti vengono creati in modo dinamico come il <xref:System.Windows.Forms.ListView> li richiede.  
  
 Modalità virtuale può essere utile in molte circostanze. Se un <xref:System.Windows.Forms.ListView> oggetto deve essere compilato da un insieme molto grande già presente in memoria, la creazione di un <xref:System.Windows.Forms.ListViewItem> dell'oggetto per ogni voce può essere dispendiosa. In modalità virtuale, vengono creati solo gli elementi necessari. In altri casi, i valori del <xref:System.Windows.Forms.ListViewItem> oggetti potrebbero essere necessario ricalcolare frequentemente e questa operazione per l'intera raccolta potrebbe produrre prestazioni inaccettabili. In modalità virtuale, vengono calcolati solo gli elementi necessari.  
  
 Per utilizzare la modalità virtuale, è necessario gestire il <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> evento, viene generato ogni volta il <xref:System.Windows.Forms.ListView> richiede un elemento. Questo evento deve creare il <xref:System.Windows.Forms.ListViewItem> oggetto a cui appartiene l'indice specificato. Inoltre, il <xref:System.Windows.Forms.ListView.VirtualListSize%2A> proprietà deve essere impostata per le dimensioni dell'elenco virtuale.  
  
 La gestione di <xref:System.Windows.Forms.ListView.SearchForVirtualItem> eventi consente la ricerca in modalità virtuale. Se questo evento non viene gestito, il <xref:System.Windows.Forms.ListView.FindItemWithText%2A> e <xref:System.Windows.Forms.ListView.FindNearestItem%2A> restituiranno metodi `null`.  
  
 È possibile gestire il <xref:System.Windows.Forms.ListView.CacheVirtualItems> evento per mantenere una cache di <xref:System.Windows.Forms.ListViewItem> oggetti. Se il calcolo o una ricerca per creare un <xref:System.Windows.Forms.ListViewItem> oggetto è operazioni onerose, gestione di una cache può migliorare le prestazioni.  
  
 Se il <xref:System.Windows.Forms.ListView.View%2A> è impostata su <xref:System.Windows.Forms.View.Tile>, verrà automaticamente modificato il valore per <xref:System.Windows.Forms.View.LargeIcon> quando <xref:System.Windows.Forms.ListView.VirtualMode%2A> è impostato su `true`.  
  
 In modalità virtuale, il <xref:System.Windows.Forms.ListView.Items%2A> raccolta è disabilitata. Il tentativo di accedervi risultati in un <xref:System.InvalidOperationException>. Lo stesso vale per il <xref:System.Windows.Forms.ListView.CheckedItems%2A> insieme e <xref:System.Windows.Forms.ListView.SelectedItems%2A> insieme. Se si desidera recuperare gli elementi selezionati, usare il <xref:System.Windows.Forms.ListView.SelectedIndices%2A> e <xref:System.Windows.Forms.ListView.CheckedIndices%2A> raccolte invece.  
  
   
  
## Examples  
 In questo esempio viene illustrato un semplice <xref:System.Windows.Forms.ListView> il cui contenuto è diecimila prima quadrati. Gestisce la ricerca e viene utilizzata una cache per migliorare le prestazioni.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          La proprietà <see cref="P:System.Windows.Forms.ListView.VirtualMode" /> è impostata su <see langword="true" /> ed esiste una delle seguenti condizioni:  
  
-   La proprietà <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> è maggiore di 0 e l'evento <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> non è gestito.  
  
     oppure  
  
-   La proprietà <see cref="P:System.Windows.Forms.ListView.Items" />, <see cref="P:System.Windows.Forms.ListView.CheckedItems" /> o <see cref="P:System.Windows.Forms.ListView.SelectedItems" /> contiene elementi.  
  
     oppure  
  
-   Vengono apportate delle modifiche alla proprietà <see cref="P:System.Windows.Forms.ListView.Items" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Oggetto <see cref="T:System.Windows.Forms.Message" /> di Windows da elaborare.</param>
        <summary>Esegue l'override di <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>