<Type Name="DataObject" FullName="System.Windows.Forms.DataObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="790d5db450a5067dabf16b0d3e9d67a55cd0e1ef" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48730697" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.Forms.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.Forms.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DataObject&#xA;Implements IDataObject, IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObject : System::Runtime::InteropServices::ComTypes::IDataObject, System::Windows::Forms::IDataObject" />
  <TypeSignature Language="F#" Value="type DataObject = class&#xA;    interface IDataObject&#xA;    interface IDataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementa un meccanismo di trasferimento dati di base.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataObject> implementa il <xref:System.Windows.Forms.IDataObject> interfaccia, i cui metodi offrono un meccanismo indipendente dal formato per il trasferimento dei dati.  
  
 Oggetto <xref:System.Windows.Forms.DataObject> viene in genere usato con il <xref:System.Windows.Forms.Clipboard> nelle operazioni di trascinamento e rilascio. Il <xref:System.Windows.Forms.DataObject> classe fornisce l'implementazione consigliato del <xref:System.Windows.Forms.IDataObject> interfaccia. È consigliabile usare la <xref:System.Windows.Forms.DataObject> classe anziché implementare <xref:System.Windows.Forms.IDataObject> manualmente.  
  
 Più blocchi di dati in formati diversi possono essere archiviati un <xref:System.Windows.Forms.DataObject>. I dati vengono recuperati da un <xref:System.Windows.Forms.DataObject> dal relativo formato associato. Poiché l'applicazione di destinazione potrebbe non essere nota, è possibile aumentare la probabilità che i dati saranno nel formato appropriato per un'applicazione inserendo i dati in un <xref:System.Windows.Forms.DataObject> in più formati. Vedere <xref:System.Windows.Forms.DataFormats> per i formati predefiniti. È possibile implementare il proprio formato tramite la creazione di un'istanza di <xref:System.Windows.Forms.DataFormats.Format> classe.  
  
 Per archiviare i dati in un <xref:System.Windows.Forms.DataObject>, passare i dati al costruttore o chiamata <xref:System.Windows.Forms.DataObject.SetData%2A>. È possibile aggiungere dati in più formati e allo stesso <xref:System.Windows.Forms.DataObject>. Se si desidera che i dati aggiunti siano recuperati nella chiamata solo, il formato nativo <xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29> con il `autoConvert` parametro impostato su `false`.  
  
 I dati possono essere recuperati da un <xref:System.Windows.Forms.DataObject> in qualsiasi formato compatibile con <xref:System.Windows.Forms.DataObject.GetData%2A>. Ad esempio, testo può essere convertito in Unicode. Per recuperare i dati nel formato in cui è stato archiviato, chiamare <xref:System.Windows.Forms.DataObject.GetData%2A> con il `autoConvert` parametro impostato su `false`.  
  
 Per determinare quali formati in cui sono memorizzati i dati, chiamare <xref:System.Windows.Forms.DataObject.GetFormats%2A>. Per determinare se è disponibile un formato, chiamare <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> con il formato desiderato.  
  
 Nelle [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], il <xref:System.Windows.Forms.DataObject> classe fornisce metodi aggiuntivi che rendono più semplice l'utilizzano con i dati nei formati comuni. Per aggiungere dati di un particolare formato per il <xref:System.Windows.Forms.DataObject>, usare appropriato `Set` *formato* metodo, ad esempio <xref:System.Windows.Forms.DataObject.SetText%2A>. Per recuperare i dati di un particolare formato dal <xref:System.Windows.Forms.DataObject>, chiamare innanzitutto appropriato `Contains` *formato* metodo (, ad esempio <xref:System.Windows.Forms.DataObject.ContainsText%2A>) per determinare se il <xref:System.Windows.Forms.DataObject> contiene i dati in tale formato, chiamare appropriato `Get` *formato* metodo (ad esempio <xref:System.Windows.Forms.DataObject.GetText%2A>) per recuperare i dati se il <xref:System.Windows.Forms.DataObject> lo contiene.  
  
> [!NOTE]
>  Considerazioni speciali potrebbero essere necessari quando si usa il formato metafile con gli Appunti. A causa di una limitazione nell'implementazione corrente del <xref:System.Windows.Forms.DataObject> (classe), il formato metafile utilizzato da .NET Framework potrebbe non essere riconosciute da applicazioni che usano un formato metafile precedente. In questo caso, è necessario interoperare con il Win32 Appunti application programming interface (API). Per altre informazioni, vedere l'articolo 323530, "Metafile negli Appunti sono non visibili per tutte le applicazioni" nella Microsoft Knowledge Base al http://support.microsoft.com.  
>   
>  Un oggetto deve essere serializzabile per poter essere inserita negli Appunti. Vedere <xref:System.Runtime.Serialization> per altre informazioni sulla serializzazione. Se l'applicazione di destinazione richiede un formato di dati molto specifica, le intestazioni aggiunte ai dati del processo di serializzazione potrebbero impedire all'applicazione riconosca i dati. Per mantenere il formato dei dati, aggiungere i dati come una <xref:System.Byte> matrice per un <xref:System.IO.MemoryStream> e passare la <xref:System.IO.MemoryStream> per il <xref:System.Windows.Forms.DataObject.SetData%2A> (metodo).  
  
   
  
## Examples  
 Esempio di codice seguente aggiunge i dati in un <xref:System.Windows.Forms.DataObject>. Per prima cosa, un nuovo <xref:System.Windows.Forms.DataObject> viene creato e un componente viene archiviato in esso. Viene quindi verificato se i dati nel tipo appropriato esiste nel <xref:System.Windows.Forms.DataObject>. Il risultato viene visualizzato in una casella di testo. Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 L'esempio seguente recupera i dati archiviati un <xref:System.Windows.Forms.DataObject>. Per prima cosa, un nuovo <xref:System.Windows.Forms.DataObject> viene creato con i dati di testo. Quindi, i dati vengono recuperati, specificando una stringa di un formato e visualizzato in una casella di testo. Il formato dei dati viene convertito automaticamente da testo in stringa. Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#2)]
 [!code-csharp[Classic DataObject Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#2)]
 [!code-vb[Classic DataObject Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DataObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DataObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.DataObject> e aggiunge dati a esso. Nell'esempio viene quindi recupera e visualizza i dati. Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Dati da memorizzare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DataObject" /> a cui viene aggiunto l'oggetto specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile aggiungere dati in qualsiasi formato per il <xref:System.Windows.Forms.DataObject> quando si utilizza questo costruttore, oppure è possibile aggiungere i dati come un <xref:System.Windows.Forms.IDataObject> per fornire più formati in una sola volta. Se si ha familiarità con la programmazione COM, è anche possibile aggiungere un oggetto dati che implementa il modello COM `IDataObject` interfaccia. Per altre informazioni, vedere `IDataObject` in MSDN library all'indirizzo http://msdn.microsoft.com/library.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.DataObject> che contiene una stringa. I dati vengono recuperati utilizzando il formato dei dati. I risultati vengono visualizzati in una casella di testo. Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=150123">IDataObject</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : string * obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject (format, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Formato dei dati specificati. Per i formati predefiniti, vedere <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="data">Dati da memorizzare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.DataObject" /> a cui viene aggiunto l'oggetto specificato nel formato specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Windows.Forms.DataObject> classe utilizzando una stringa che viene specificata come tipo di stringa. I dati vengono recuperati dal <xref:System.Windows.Forms.DataObject> specificando un formato come testo. I risultati vengono visualizzati in una casella di testo. Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public virtual bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="abstract member ContainsAudio : unit -&gt; bool&#xA;override this.ContainsAudio : unit -&gt; bool" Usage="dataObject.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se l'oggetto dati contiene dati nel formato <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <returns>
          <see langword="true" /> se l'oggetto dati contiene dati audio; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo per determinare se l'oggetto dati contiene dati audio prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public virtual bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member ContainsFileDropList : unit -&gt; bool&#xA;override this.ContainsFileDropList : unit -&gt; bool" Usage="dataObject.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se l'oggetto dati contiene dati nel formato <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> o che possano essere convertiti in tale formato.</summary>
        <returns>
          <see langword="true" /> se l'oggetto dati contiene un elenco di trascinamento dei file; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un elenco a discesa file è una raccolta di stringhe contenente le informazioni sul percorso per i file.  
  
 Usare questo metodo per determinare se l'oggetto dati contiene un elenco a discesa file prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public virtual bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsImage();" />
      <MemberSignature Language="F#" Value="abstract member ContainsImage : unit -&gt; bool&#xA;override this.ContainsImage : unit -&gt; bool" Usage="dataObject.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se l'oggetto dati contiene dati nel formato <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> o che possano essere convertiti in tale formato.</summary>
        <returns>
          <see langword="true" /> se l'oggetto dati contiene dati di immagine; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo per determinare se l'oggetto dati contiene dati dell'immagine prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetImage%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indica se l'oggetto dati contiene dati di testo.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText();" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : unit -&gt; bool&#xA;override this.ContainsText : unit -&gt; bool" Usage="dataObject.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se l'oggetto dati contiene dati nel formato <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />.</summary>
        <returns>
          <see langword="true" /> se l'oggetto dati contiene dati di testo; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo per determinare se l'oggetto dati contiene dati di testo prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetText%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool&#xA;override this.ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="dataObject.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Uno dei valori di <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Indica se l'oggetto dati contiene dati di testo nel formato indicato dal valore <see cref="T:System.Windows.Forms.TextDataFormat" /> specificato.</summary>
        <returns>
          <see langword="true" /> se l'oggetto dati contiene dati di testo nel formato specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo per determinare se l'oggetto dati contiene dati di testo prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetText%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> non è un valore valido di <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="abstract member GetAudioStream : unit -&gt; System.IO.Stream&#xA;override this.GetAudioStream : unit -&gt; System.IO.Stream" Usage="dataObject.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un flusso audio dall'oggetto dati.</summary>
        <returns>Classe <see cref="T:System.IO.Stream" /> contenente dati audio oppure <see langword="null" /> se l'oggetto dati non contiene dati nel formato <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> metodo per determinare se l'oggetto dati contiene dati audio prima di recuperarli con questo metodo.  
  
 Usare il <xref:System.Windows.Forms.DataObject.SetAudio%2A> metodo per aggiungere dati audio all'oggetto dati.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce i dati associati con il formato dati specificato.</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj&#xA;override this.GetData : string -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Formato dei dati da recuperare. Per i formati predefiniti, vedere <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <summary>Restituisce i dati associati con il formato dati specificato.</summary>
        <returns>Dati associati al formato specificato, oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questo metodo non è possibile trovare i dati nel formato specificato, tenta di convertire i dati nel formato. Se i dati non possono essere convertiti nel formato specificato o se i dati è stati archiviati con la conversione automatica impostata su `false`, questo metodo restituisce `null`.  
  
 Per determinare se i dati sono associati, o possono essere convertiti in tale formato, chiamare <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> prima di chiamare <xref:System.Windows.Forms.DataObject.GetData%2A>. Chiamare <xref:System.Windows.Forms.DataObject.GetFormats%2A> per un elenco dei formati validi per i dati archiviati in questo <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Dati possono essere convertiti in un altro formato, se è stato archiviato che specifica che la conversione è consentita, e se il formato richiesto è compatibile con il formato archiviati. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.  
>   
>  Quando `format` è <xref:System.Windows.Forms.DataFormats.Html>, questo metodo restituisce una stringa con codificata UTF-8 in applicazioni destinate a .NET 4.5 o versione successiva e ANSI in una stringa codificata in applicazioni che hanno come destinazione .NET 4.0 o versione inferiore.  
  
   
  
## Examples  
 Esempio di codice seguente recupera i dati archiviati un <xref:System.Windows.Forms.DataObject>. Per prima cosa, un nuovo <xref:System.Windows.Forms.DataObject> viene creato con i dati di testo. Quindi, i dati vengono recuperati, specificando una stringa di un formato e visualizzato in una casella di testo.  
  
 Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[classic dataobject example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[classic dataobject example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[classic dataobject example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj&#xA;override this.GetData : Type -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Oggetto <see cref="T:System.Type" /> che rappresenta il formato dei dati da recuperare.</param>
        <summary>Restituisce i dati associati al formato del tipo di classe specificato.</summary>
        <returns>Dati associati al formato specificato, oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questo metodo non è possibile trovare i dati nel formato specificato, tenta di convertire i dati nel formato. Se i dati non possono essere convertiti nel formato specificato o se i dati è stati archiviati con la conversione automatica impostata su `false`, questo metodo restituisce `null`.  
  
 Per determinare se i dati sono associati, o possono essere convertiti in tale formato, chiamare <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> prima di chiamare <xref:System.Windows.Forms.DataObject.GetData%2A>. Chiamare <xref:System.Windows.Forms.DataObject.GetFormats%2A> per un elenco dei formati validi per i dati archiviati in questo <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Dati possono essere convertiti in un altro formato, se è stato archiviato che specifica che la conversione è consentita, e se il formato richiesto è compatibile con il formato archiviati. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.  
  
   
  
## Examples  
 Esempio di codice seguente recupera i dati archiviati un <xref:System.Windows.Forms.DataObject>. Per prima cosa, un nuovo <xref:System.Windows.Forms.DataObject> viene creato con un componente. Quindi, i dati vengono recuperati, specificando il relativo tipo. Il tipo di dati recuperati viene visualizzato in una casella di testo.  
  
 Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.GetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj&#xA;override this.GetData : string * bool -&gt; obj" Usage="dataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Formato dei dati da recuperare. Per i formati predefiniti, vedere <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="true" /> per convertire i dati nel formato specificato; in caso contrario, <see langword="false" />.</param>
        <summary>Restituisce i dati associati al formato specificato, usando un parametro di conversione automatica per stabilire se convertirli nel formato.</summary>
        <returns>Dati associati al formato specificato, oppure <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il `autoConvert` parametro è `true` e questo metodo non è possibile trovare i dati nel formato specificato, tenta di convertire i dati nel formato. Se i dati non possono essere convertiti nel formato specificato o se i dati è stati archiviati con la conversione automatica impostata su `false`, questo metodo restituisce `null`.  
  
 Se il `autoConvert` parametro è `false`, questo metodo restituisce i dati nel formato specificato, o `null` se non viene trovato alcun dato nel formato seguente.  
  
 Per determinare se i dati sono associati, o possono essere convertiti in tale formato, chiamare <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> prima di chiamare <xref:System.Windows.Forms.DataObject.GetData%2A>. Chiamare <xref:System.Windows.Forms.DataObject.GetFormats%2A> per un elenco dei formati validi per i dati archiviati in questo <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Dati possono essere convertiti in un altro formato, se è stato archiviato che specifica che la conversione è consentita, e se il formato richiesto è compatibile con il formato archiviati. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.  
>   
>  Quando `format` è <xref:System.Windows.Forms.DataFormats.Html>, questo metodo restituisce una stringa con codificata UTF-8 in applicazioni destinate a .NET 4.5 o versione successiva e ANSI in una stringa codificata in applicazioni che hanno come destinazione .NET 4.0 o versione inferiore.  
  
   
  
## Examples  
 Esempio di codice seguente recupera i dati archiviati un <xref:System.Windows.Forms.DataObject>, usando il `autoConvert` parametro per specificare se convertire il formato dei dati.  
  
 Per prima cosa, un nuovo <xref:System.Windows.Forms.DataObject> viene creato con i dati di testo. L'esempio tenta di recuperare i dati, specificando un formato stringa e nessuna conversione di formato, ovvero il `autoConvert` parametro è `false`. Questa operazione non riesce perché non sono presenti dati stringa nel <xref:System.Windows.Forms.DataObject>.  
  
 Successivamente, l'esempio prova a recuperare i dati anche in questo caso, con la `autoConvert` parametro è impostato su `true`. Questa operazione ha esito positivo e i risultati vengono visualizzati un <xref:System.Windows.Forms.MessageBox>.  
  
 Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.GetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se i dati memorizzati in questa classe <see cref="T:System.Windows.Forms.DataObject" /> sono associati al formato specificato.</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool&#xA;override this.GetDataPresent : string -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Formato da verificare. Per i formati predefiniti, vedere <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <summary>Determina se i dati memorizzati in questa classe <see cref="T:System.Windows.Forms.DataObject" /> sono associati al formato specificato o possono essere convertiti in tale formato.</summary>
        <returns>
          <see langword="true" /> se i dati memorizzati in questa classe <see cref="T:System.Windows.Forms.DataObject" /> sono associati o possono essere convertiti nel formato specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per determinare la presenza di un formato prima di chiamare <xref:System.Windows.Forms.DataObject.GetData%2A>. Chiamare <xref:System.Windows.Forms.DataObject.GetFormats%2A> per i formati disponibili in questo <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Dati possono essere convertiti in un altro formato, se è stato archiviato che specifica che la conversione è consentita, e se il formato richiesto è compatibile con il formato archiviati. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.  
  
> [!NOTE]
>  Se nessun dati possono essere recuperati, verrà generata alcuna eccezione. Al contrario, `false` verranno restituiti.  
  
   
  
## Examples  
 Esempio di codice seguente determina se i dati attualmente archiviati in questo <xref:System.Windows.Forms.DataObject> associata oppure può essere convertito nel formato specificato. Un nuovo <xref:System.Windows.Forms.DataObject> viene inizializzata con una stringa e il relativo formato associato specificate come testo.  
  
 Quindi, viene indicato se esistono dati di testo nel <xref:System.Windows.Forms.DataObject>. Questo codice si presuppone che `textBox1` è stato creato.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool&#xA;override this.GetDataPresent : Type -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Type" /> che rappresenta il formato da ricercare.</param>
        <summary>Determina se i dati memorizzati in questa classe <see cref="T:System.Windows.Forms.DataObject" /> sono associati al formato specificato o possono essere convertiti in tale formato.</summary>
        <returns>
          <see langword="true" /> se i dati memorizzati in questa classe <see cref="T:System.Windows.Forms.DataObject" /> sono associati o possono essere convertiti nel formato specificato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per determinare la presenza di un formato prima di chiamare <xref:System.Windows.Forms.DataObject.GetData%2A>. Chiamare <xref:System.Windows.Forms.DataObject.GetFormats%2A> per i formati disponibili in questo <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Dati possono essere convertiti in un altro formato, se è stato archiviato che specifica che la conversione è consentita, e se il formato richiesto è compatibile con il formato archiviati. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.  
  
> [!NOTE]
>  Se nessun dati possono essere recuperati, verrà generata alcuna eccezione. Al contrario, `false` verranno restituiti.  
  
   
  
## Examples  
 Esempio di codice seguente determina se i dati del tipo specificato è presente un <xref:System.Windows.Forms.DataObject>, o se i dati possono essere convertiti nel tipo specificato. Il risultato viene visualizzato in una casella di testo. Il codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool&#xA;override this.GetDataPresent : string * bool -&gt; bool" Usage="dataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Formato da verificare. Per i formati predefiniti, vedere <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="true" /> per determinare se i dati memorizzati in questa classe <see cref="T:System.Windows.Forms.DataObject" /> possono essere convertiti nel formato specificato; <see langword="false" /> per verificare se i dati sono nel formato specificato.</param>
        <summary>Determina se questa classe <see cref="T:System.Windows.Forms.DataObject" /> contiene dati nel formato specificato o, facoltativamente, contiene i dati che possono essere convertiti nel formato specificato.</summary>
        <returns>
          <see langword="true" /> se i dati sono nel formato specificato o possono essere convertiti in tale formato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per determinare la presenza di un formato prima di chiamare <xref:System.Windows.Forms.DataObject.GetData%2A>. Chiamare <xref:System.Windows.Forms.DataObject.GetFormats%2A> per i formati disponibili in questo <xref:System.Windows.Forms.DataObject>.  
  
 Questo metodo restituisce `true` quando:  
  
-   Il `autoConvert` parametro è `true` e i dati si trova in un formato che può essere convertito nel formato appropriato.  
  
-   Il `autoConvert` parametro è `false` e i dati sono nel formato appropriato.  
  
 Questo metodo restituisce `false` quando:  
  
-   Il `autoConvert` parametro è `true` e questo metodo non è possibile trovare i dati nel formato specificato e non può convertire i dati nel formato specificato o i dati archiviati con la conversione automatica impostata su `false`.  
  
-   Il `autoConvert` parametro è `false` e i dati non esiste in questo <xref:System.Windows.Forms.DataObject> nel formato specificato.  
  
> [!NOTE]
>  Dati possono essere convertiti in un altro formato, se si tratta stored specificando che la conversione è consentita e se il formato richiesto è compatibile con il formato archiviati. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.  
  
> [!NOTE]
>  Se nessun dati possono essere recuperati, verrà generata alcuna eccezione. Al contrario, `false` verranno restituiti.  
  
   
  
## Examples  
 Esempio di codice seguente determina se i dati attualmente archiviati nel <xref:System.Windows.Forms.DataObject> è associato a un formato specificato. Per prima cosa, un nuovo <xref:System.Windows.Forms.DataObject> viene inizializzata con una stringa, specificando un formato testo.  
  
 L'oggetto <xref:System.Windows.Forms.DataObject> viene eseguita una query per i dati associati al formato di testo, che specifica il `autoConvert` parametro come `false`. Il risultato di questa query viene stampato in una casella di testo.  
  
 L'oggetto <xref:System.Windows.Forms.DataObject> viene eseguita una query per i dati associati al formato della stringa, specificando il `autoConvert` parametro come `true`. I risultati vengono stampati nella casella di testo. Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection&#xA;override this.GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="dataObject.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un insieme di nomi di file dall'oggetto dati.</summary>
        <returns>Classe <see cref="T:System.Collections.Specialized.StringCollection" /> contenente i nomi di file o <see langword="null" /> se l'oggetto dati non contiene dati nel formato <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> o che possano essere convertiti in tale formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un elenco a discesa file è una raccolta di stringhe contenente le informazioni sul percorso per i file.  
  
 Un elenco a discesa file viene archiviato in un oggetto dati come un <xref:System.String> matrice. Questo metodo converte la matrice per un <xref:System.Collections.Specialized.StringCollection> e restituisce la raccolta.  
  
 Usare il <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> metodo per determinare se l'oggetto dati contiene un elenco a discesa file prima di recuperarli con questo metodo.  
  
 Usare il <xref:System.Windows.Forms.DataObject.SetFileDropList%2A> metodo per aggiungere un tipo drop list per l'oggetto dati.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un elenco di tutti i formati ai quali sono associati i dati memorizzati in questa classe <see cref="T:System.Windows.Forms.DataObject" /> o nei quali possono essere convertiti.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]&#xA;override this.GetFormats : unit -&gt; string[]" Usage="dataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un elenco di tutti i formati ai quali sono associati i dati memorizzati in questa classe <see cref="T:System.Windows.Forms.DataObject" /> o nei quali possono essere convertiti.</summary>
        <returns>Matrice di tipo <see cref="T:System.String" /> contenente un elenco di tutti i formati supportati dai dati memorizzati in questo oggetto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per ottenere formati dati supportati prima di chiamare <xref:System.Windows.Forms.DataObject.GetData%2A>. Vedere <xref:System.Windows.Forms.DataFormats> per i formati predefiniti.  
  
> [!NOTE]
>  Dati possono essere convertiti in un altro formato, se si tratta stored specificando che la conversione è consentita e se il formato richiesto è compatibile con il formato archiviati. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.  
  
   
  
## Examples  
 Nell'esempio di query di esempio di codice un <xref:System.Windows.Forms.DataObject> per i formati associati ai dati e i formati di dati possono essere convertiti in. In una casella di testo viene visualizzato l'elenco risulta. Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]&#xA;override this.GetFormats : bool -&gt; string[]" Usage="dataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <see langword="true" /> per recuperare tutti i formati ai quali sono associati i dati memorizzati in questa classe <see cref="T:System.Windows.Forms.DataObject" /> o nei quali possono essere convertiti; <see langword="false" /> per recuperare solo i formati nativi dei dati.</param>
        <summary>Restituisce un elenco di tutti i formati ai quali sono associati i dati memorizzati in questa classe <see cref="T:System.Windows.Forms.DataObject" /> o nei quali possono essere convertiti, utilizzando un parametro di conversione automatica per determinare se recuperare tutti quelli in cui i dati possono essere convertiti oppure solo i formati nativi.</summary>
        <returns>Matrice di tipo <see cref="T:System.String" /> contenente un elenco di tutti i formati supportati dai dati memorizzati in questo oggetto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per ottenere formati dati supportati prima di chiamare <xref:System.Windows.Forms.DataObject.GetData%2A>. Vedere <xref:System.Windows.Forms.DataFormats> per i formati predefiniti.  
  
> [!NOTE]
>  Dati possono essere convertiti in un altro formato, se si tratta stored specificando che la conversione è consentita e se il formato richiesto è compatibile con il formato archiviati. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.  
  
   
  
## Examples  
 Nell'esempio di query di esempio di codice un <xref:System.Windows.Forms.DataObject> per i formati associati ai dati. La prima query consente di specificare il `autoConvert` come parametro `false`, in modo che solo i formati nativi dei dati viene restituito. La seconda query specifica i `autoConvert` come parametro `true`, pertanto l'elenco dei formati sono inclusi i formati di dati possono essere convertiti in.  
  
 Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.GetFormats Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="abstract member GetImage : unit -&gt; System.Drawing.Image&#xA;override this.GetImage : unit -&gt; System.Drawing.Image" Usage="dataObject.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un'immagine dall'oggetto dati.</summary>
        <returns>Classe <see cref="T:System.Drawing.Image" /> che rappresenta i dati di immagine nell'oggetto dati o <see langword="null" /> se l'oggetto dati non contiene dati nel formato <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> specificato o che possano essere convertiti in tale formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Windows.Forms.DataObject.ContainsImage%2A> metodo per determinare se l'oggetto dati contiene dati dell'immagine prima di recuperarli con questo metodo.  
  
 Usare il <xref:System.Windows.Forms.DataObject.SetImage%2A> metodo per aggiungere dati di immagine per l'oggetto dati.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera dati di testo dall'oggetto dati.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="abstract member GetText : unit -&gt; string&#xA;override this.GetText : unit -&gt; string" Usage="dataObject.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera dati di testo dall'oggetto dati nel formato <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />.</summary>
        <returns>Dati di testo nell'oggetto dati o <see cref="F:System.String.Empty" /> se l'oggetto dati non contiene dati nel formato <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Windows.Forms.DataObject.ContainsText%2A> metodo per determinare se l'oggetto dati contiene dati di testo prima di recuperarli con questo metodo.  
  
 Usare il <xref:System.Windows.Forms.DataObject.SetText%2A> metodo per aggiungere dati di testo all'oggetto dati.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member GetText : System.Windows.Forms.TextDataFormat -&gt; string&#xA;override this.GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="dataObject.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Uno dei valori di <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Recupera dati di testo dall'oggetto dati nel formato indicato dal valore <see cref="T:System.Windows.Forms.TextDataFormat" /> specificato.</summary>
        <returns>Dati di testo nell'oggetto dati o <see cref="F:System.String.Empty" /> se l'oggetto dati non contiene dati nel formato specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Windows.Forms.DataObject.ContainsText%2A> metodo per determinare se l'oggetto dati contiene dati di testo prima di recuperarli con questo metodo.  
  
 Usare il <xref:System.Windows.Forms.DataObject.SetText%2A> metodo per aggiungere dati di testo all'oggetto dati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> non è un valore valido di <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge dati all'oggetto dati nel formato <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : byte[] -&gt; unit&#xA;override this.SetAudio : byte[] -&gt; unit" Usage="dataObject.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Matrice <see cref="T:System.Byte" /> contenente i dati audio.</param>
        <summary>Aggiunge una matrice <see cref="T:System.Byte" /> all'oggetto dati nel formato <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> dopo la loro conversione nella classe <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per recuperare i dati audio dall'oggetto dati, usare prima la <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> metodo per determinare se l'oggetto dati contiene dati audio prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> è <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : System.IO.Stream -&gt; unit&#xA;override this.SetAudio : System.IO.Stream -&gt; unit" Usage="dataObject.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">Classe <see cref="T:System.IO.Stream" /> contenente i dati audio.</param>
        <summary>Aggiunge una classe <see cref="T:System.IO.Stream" /> all'oggetto dati nel formato <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per recuperare i dati audio dall'oggetto dati, usare prima la <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> metodo per determinare se l'oggetto dati contiene dati audio prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> è <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge un oggetto all'oggetto <see cref="T:System.Windows.Forms.DataObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit&#xA;override this.SetData : obj -&gt; unit" Usage="dataObject.SetData data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Dati da memorizzare.</param>
        <summary>Aggiunge l'oggetto specificato alla classe <see cref="T:System.Windows.Forms.DataObject" /> utilizzando il tipo di oggetto come formato dei dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Se non si conosce il formato dell'applicazione di destinazione, è possibile archiviare i dati in più formati con questo metodo. Dati archiviati usando questo metodo possono essere convertiti in un formato compatibile quando vengono recuperati.  
  
 Il <xref:System.Windows.Forms.DataObject.SetData%28System.Object%29> overload archivi le `data` valore in un formato che viene determinato chiamando il <xref:System.Object.GetType%2A?displayProperty=nameWithType> (metodo). Se `data` implementa la <xref:System.Runtime.Serialization.ISerializable> interfaccia, questo overload archivia anche il valore di <xref:System.Windows.DataFormats.Serializable> formato.  
  
   
  
## Examples  
 Esempio di codice seguente archivia i dati in un <xref:System.Windows.Forms.DataObject>. Per prima cosa, un nuovo <xref:System.Windows.Forms.DataObject> viene creato e un componente viene archiviato in esso. Quindi, i dati vengono recuperati, specificando la classe. Il risultato viene visualizzato in una casella di testo.  
  
 Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.SetData3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit&#xA;override this.SetData : string * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Formato associato ai dati. Per i formati predefiniti, vedere <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="data">Dati da memorizzare.</param>
        <summary>Aggiunge l'oggetto specificato alla classe <see cref="T:System.Windows.Forms.DataObject" /> utilizzando il formato specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Se non si conosce il formato dell'applicazione di destinazione, è possibile archiviare i dati in più formati con questo metodo.  
  
 Dati archiviati usando questo metodo possono essere convertiti in un formato compatibile quando vengono recuperati.  
  
   
  
## Examples  
 Esempio di codice seguente archivia i dati in un <xref:System.Windows.Forms.DataObject>, specificando un formato Unicode.  
  
 Quindi i dati vengono recuperati, specificando il formato di testo, poiché il valore predefinito è per convertire i dati quando il formato finale è compatibile. Il risultato viene visualizzato in una casella di testo.  
  
 Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.SetData1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit&#xA;override this.SetData : Type * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Oggetto <see cref="T:System.Type" /> che rappresenta il formato associato ai dati.</param>
        <param name="data">Dati da memorizzare.</param>
        <summary>Aggiunge l'oggetto specificato alla classe <see cref="T:System.Windows.Forms.DataObject" /> utilizzando il tipo specificato come formato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Se non si conosce il formato dell'applicazione di destinazione, è possibile archiviare i dati in più formati con questo metodo.  
  
 Dati archiviati usando questo metodo possono essere convertiti in un formato compatibile quando vengono recuperati.  
  
   
  
## Examples  
 Esempio di codice seguente archivia i dati in un <xref:System.Windows.Forms.DataObject> usando un <xref:System.Type> come formato dei dati. I dati vengono quindi recuperati chiamando <xref:System.Windows.Forms.DataObject.GetData%2A> utilizzando il <xref:System.Type> per specificare il formato dei dati. Il risultato viene visualizzato in una casella di testo.  
  
 Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.SetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit&#xA;override this.SetData : string * bool * obj -&gt; unit" Usage="dataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Formato associato ai dati. Per i formati predefiniti, vedere <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="true" /> per consentire la conversione dei dati in un altro formato; in caso contrario, <see langword="false" />.</param>
        <param name="data">Dati da memorizzare.</param>
        <summary>Aggiunge l'oggetto specificato alla classe <see cref="T:System.Windows.Forms.DataObject" /> utilizzando il formato specificato e indicando se i dati possono essere convertiti in un altro formato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Se non si conosce il formato dell'applicazione di destinazione, è possibile archiviare i dati in più formati con questo metodo.  
  
   
  
## Examples  
 Esempio di codice seguente archivia i dati in un <xref:System.Windows.Forms.DataObject> e specifica che i dati possono essere recuperati solo nel relativo formato nativo.  
  
 Per prima cosa, un nuovo <xref:System.Windows.Forms.DataObject> viene creato. Dati in formato Unicode vengono archiviati nel <xref:System.Windows.Forms.DataObject>, con `autoConvert` impostato su `false`.  
  
 Quindi, <xref:System.Windows.Forms.DataObject> viene eseguita una query per l'elenco dei formati di dati disponibili. Viene restituito solo il formato Unicode, anche se i dati Unicode possono essere convertiti in testo e altri formati.  
  
 Questo codice si presuppone che `textBox1` è stato creato.  
  
 [!code-cpp[Classic DataObject.SetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public virtual void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="abstract member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit&#xA;override this.SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="dataObject.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths">Classe <see cref="T:System.Collections.Specialized.StringCollection" /> contenente i nomi di file.</param>
        <summary>Aggiunge un insieme di nomi di file all'oggetto dati nel formato <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un elenco a discesa file è una raccolta di stringhe contenente le informazioni sul percorso per i file.  
  
 Un elenco a discesa file viene archiviato in un oggetto dati come un <xref:System.String> matrice. Questo metodo converte `filePaths` a un <xref:System.String> matrice prima di aggiungerlo all'oggetto dati.  
  
 Per recuperare un elenco a discesa file dall'oggetto dati, usare prima la <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> metodo per determinare se l'oggetto dati contiene i dati in tale formato prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> è <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public virtual void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="abstract member SetImage : System.Drawing.Image -&gt; unit&#xA;override this.SetImage : System.Drawing.Image -&gt; unit" Usage="dataObject.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Classe <see cref="T:System.Drawing.Image" /> da aggiungere all'oggetto dati.</param>
        <summary>Aggiunge una classe <see cref="T:System.Drawing.Image" /> all'oggetto dati nel formato <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per recuperare i dati immagine dall'oggetto dati, usare prima la <xref:System.Windows.Forms.DataObject.ContainsImage%2A> metodo per determinare se l'oggetto dati contiene dati dell'immagine prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetImage%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> è <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge dati di testo all'oggetto dati.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string -&gt; unit&#xA;override this.SetText : string -&gt; unit" Usage="dataObject.SetText textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">Testo da aggiungere all'oggetto dati.</param>
        <summary>Aggiunge dati di testo all'oggetto dati nel formato <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per recuperare i dati di testo dall'oggetto dati, usare prima la <xref:System.Windows.Forms.DataObject.ContainsText%2A> metodo per determinare se l'oggetto dati contiene dati dell'immagine prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetText%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> è <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit&#xA;override this.SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="dataObject.SetText (textData, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="textData">Testo da aggiungere all'oggetto dati.</param>
        <param name="format">Uno dei valori di <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Aggiunge dati di testo all'oggetto dati nel formato indicato dal valore <see cref="T:System.Windows.Forms.TextDataFormat" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per recuperare i dati di testo dall'oggetto dati, usare prima la <xref:System.Windows.Forms.DataObject.ContainsText%2A> metodo per determinare se l'oggetto dati contiene dati dell'immagine prima di recuperarli con la <xref:System.Windows.Forms.DataObject.GetText%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> è <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> non è un valore valido di <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetc, System::Runtime::InteropServices::ComTypes::ADVF advf, System::Runtime::InteropServices::ComTypes::IAdviseSink ^ pAdvSink, [Runtime::InteropServices::Out] int % pdwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" />
        <Parameter Name="pdwConnection" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">Struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passata per riferimento, che definisce formato, periferica di destinazione, aspetto e supporto che verranno utilizzati per notifiche future.</param>
        <param name="advf">Uno dei valori di <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> che specifica un gruppo di flag per il controllo della connessione consultiva.</param>
        <param name="pAdvSink">Puntatore all'interfaccia <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> nel sink consultivo che riceverà la notifica della modifica.</param>
        <param name="pdwConnection">Quando termina, questo metodo contiene un puntatore a un token DWORD che identifica la connessione. È possibile utilizzare questo token in un secondo momento per eliminare la connessione consultiva passandolo al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Se il valore è zero, la connessione non è stata stabilita. Questo parametro viene passato non inizializzato.</param>
        <summary>Crea una connessione tra un oggetto dati e un sink consultivo. Questo metodo viene chiamato da un oggetto che supporta un sink consultivo e abilita tale sink per ricevere una notifica delle modifiche nei dati dell'oggetto.</summary>
        <returns>Questo metodo supporta i valori restituiti standard E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, nonché quanto segue: 
 <list type="table"><listheader><term> Valore 
 </term><description> Descrizione 
 </description></listheader><item><term> S_OK 
 </term><description> La connessione consultiva è stata creata.  
  
 </description></item><item><term> E_NOTIMPL 
 </term><description> Questo metodo non è implementato nell'oggetto dati.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> È presente un valore non valido per <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; attualmente, è supportato solo il valore -1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> È presente un valore non valido per il parametro <paramref name="pFormatetc" />.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED 
 </term><description> L'oggetto dati non supporta la notifica delle modifiche.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast della classe <xref:System.Windows.Forms.DataObject> su un'interfaccia <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub DUnadvise (dwConnection As Integer) Implements IDataObject.DUnadvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int dwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DUnadvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwConnection">Token DWORD che specifica la connessione da rimuovere. Usare il valore restituito da <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> quando è stata originariamente stabilita la connessione.</param>
        <summary>Elimina definitivamente una connessione di notifica stabilita in precedenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast della classe <xref:System.Windows.Forms.DataObject> su un'interfaccia <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberSignature Language="VB.NET" Value="Function EnumDAdvise (ByRef enumAdvise As IEnumSTATDATA) As Integer Implements IDataObject.EnumDAdvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumSTATDATA ^ % enumAdvise) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumDAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> che riceve il puntatore a interfaccia per il nuovo oggetto enumeratore. Se l'implementazione imposta <c>enumAdvise</c> su <see langword="null" />, non sono attualmente presenti connessioni a sink consultivi. Questo parametro viene passato non inizializzato.</param>
        <summary>Crea un oggetto che può essere usato per enumerare le connessioni consultive correnti.</summary>
        <returns>Questo metodo supporta il valore restituito standard E_OUTOFMEMORY, nonché quanto riportato di seguito:  
  
 <list type="table"><listheader><term> Valore  
  
 </term><description> Descrizione  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> Viene creata un'istanza dell'oggetto enumeratore o non sono presenti connessioni.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> Questo oggetto non supporta le notifiche consultive.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast della classe <xref:System.Windows.Forms.DataObject> su un'interfaccia <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberSignature Language="VB.NET" Value="Function EnumFormatEtc (dwDirection As DATADIR) As IEnumFORMATETC Implements IDataObject.EnumFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Runtime::InteropServices::ComTypes::IEnumFORMATETC ^ System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System::Runtime::InteropServices::ComTypes::DATADIR dwDirection) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" />
      </Parameters>
      <Docs>
        <param name="dwDirection">Uno dei valori di <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> che specifica la direzione dei dati.</param>
        <summary>Crea un oggetto per l'enumerazione delle strutture <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> per un oggetto dati. Queste strutture sono utilizzate nelle chiamate al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> o <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
        <returns>Questo metodo supporta i valori restituiti standard E_INVALIDARG e E_OUTOFMEMORY, nonché quanto riportato di seguito: 
 <list type="table"><listheader><term> Valore 
 </term><description> Descrizione 
 </description></listheader><item><term> S_OK 
 </term><description> L'oggetto enumeratore è stato creato correttamente.  
  
 </description></item><item><term> E_NOTIMPL 
 </term><description> La direzione specificata dal parametro <paramref name="direction" /> non è supportata.  
  
 </description></item><item><term> OLE_S_USEREG 
 </term><description> Richiede l'enumerazione OLE dei formati dal Registro di sistema.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast della classe <xref:System.Windows.Forms.DataObject> su un'interfaccia <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function GetCanonicalFormatEtc (ByRef pformatetcIn As FORMATETC, ByRef pformatetcOut As FORMATETC) As Integer Implements IDataObject.GetCanonicalFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcIn, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcOut) = System::Runtime::InteropServices::ComTypes::IDataObject::GetCanonicalFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">Un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione che il chiamante desidera utilizzare per recuperare dati in una chiamata successiva quale <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Il membro <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> non è significativo in questo caso e deve essere ignorato.</param>
        <param name="pformatetcOut">Quando termina, questo metodo contiene un puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> che contiene le informazioni più generali possibili per un rendering specifico, che lo rendono equivalente in modo canonico a <c>formatetIn</c>. Il chiamante deve allocare questa struttura e il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> deve inserire i dati. Per recuperare dati in una chiamata successiva come ad esempio <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, il chiamante usa il valore specificato di <c>formatOut</c>, a meno che il valore specificato non sia <see langword="null" />. Questo valore è <see langword="null" /> se il metodo restituisce <see langword="DATA_S_SAMEFORMATETC" />. Il membro <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> non è significativo in questo caso e deve essere ignorato. Questo parametro viene passato non inizializzato.</param>
        <summary>Fornisce una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> standard logicamente equivalente a una struttura più complessa. Utilizzare questo metodo per determinare se due strutture <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> diverse restituiscono gli stessi dati, eliminando la necessità di rendering duplicati.</summary>
        <returns>Questo metodo supporta i valori restituiti standard E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, nonché quanto segue: 
 <list type="table"><listheader><term> Valore 
 </term><description> Descrizione 
 </description></listheader><item><term> S_OK 
 </term><description> La struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> restituita è diversa da quella passata.  
  
 </description></item><item><term> DATA_S_SAMEFORMATETC 
 </term><description> Le strutture <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> sono uguali e nel parametro <paramref name="formatOut" /> viene restituito <see langword="null" />.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> È presente un valore non valido per <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; attualmente, è supportato solo il valore -1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> È presente un valore non valido per il parametro <paramref name="pFormatetc" />.  
  
 </description></item><item><term> OLE_E_NOTRUNNING 
 </term><description> L'applicazione non è in esecuzione.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast della classe <xref:System.Windows.Forms.DataObject> su un'interfaccia <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetData (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="out" />
      </Parameters>
      <Docs>
        <param name="formatetc">Puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione da utilizzare per il passaggio di dati. È possibile specificare più supporti usando l'operatore booleano OR, consentendo al metodo di scegliere il supporto ottimale tra quelli specificati.</param>
        <param name="medium">Quando termina, questo metodo contiene un puntatore alla struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> che indica il supporto di archiviazione contenente i dati restituiti mediante il membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> e la responsabilità del rilascio del supporto mediante il valore del relativo membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />. Se <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> è <see langword="null" />, il ricevente del supporto è responsabile del rilascio; in caso contrario <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> punta all'interfaccia <see langword="IUnknown" /> nell'oggetto appropriato per consentire la chiamata al metodo <see langword="Release" /> relativo. È necessario che il supporto sia allocato e compilato dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Questo parametro viene passato non inizializzato.</param>
        <summary>Ottiene i dati da un oggetto dati di origine. Il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, chiamato da un consumer di dati, esegue il rendering dei dati descritti nella struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> specificata e li trasferisce mediante la struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> specificata. Il chiamante si assume la responsabilità del rilascio della struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast della classe <xref:System.Windows.Forms.DataObject> su un'interfaccia <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">Memoria insufficiente per eseguire questa operazione.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetDataHere (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetDataHere" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetDataHere;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">Puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione da utilizzare per il passaggio di dati. È possibile specificare un solo supporto in <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> e sono validi solo i seguenti valori di <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" /> o <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
        <param name="medium">Oggetto <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passato per riferimento, che definisce il supporto di archiviazione contenente i dati di cui è in corso il trasferimento. È necessario che il supporto sia allocato dal chiamante e compilato dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Il chiamante deve anche liberare il supporto. L'implementazione di questo metodo deve sempre fornire un valore <see langword="null" /> per il membro <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> della struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> alla quale punta il parametro.</param>
        <summary>Ottiene i dati da un oggetto dati di origine. Questo metodo, chiamato da un consumer di dati, si differenzia dal metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> in quanto il chiamante deve allocare e liberare il supporto di archiviazione specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast della classe <xref:System.Windows.Forms.DataObject> su un'interfaccia <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function QueryGetData (ByRef formatetc As FORMATETC) As Integer Implements IDataObject.QueryGetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc) = System::Runtime::InteropServices::ComTypes::IDataObject::QueryGetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">Puntatore a una struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passato per riferimento, che definisce formato, supporto e periferica di destinazione da utilizzare per la query.</param>
        <summary>Determina se l'oggetto dati è in grado di eseguire il rendering dei dati descritti nella struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />. Gli oggetti che tentano un'operazione di inserimento o rilascio possono chiamare questo metodo prima di chiamare <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> per ottenere indicazioni relative alla riuscita dell'operazione.</summary>
        <returns>Questo metodo supporta i valori restituiti standard E_INVALIDARG, E_UNEXPECTED e E_OUTOFMEMORY, nonché quanto segue: 
 <list type="table"><listheader><term> Valore 
 </term><description> Descrizione 
 </description></listheader><item><term> S_OK 
 </term><description> Una successiva chiamata al metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> avrà probabilmente esito positivo.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> Valore non valido per <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; attualmente, è supportato solo il valore -1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> Valore non valido per il parametro <paramref name="pFormatetc" />.  
  
 </description></item><item><term> DV_E_TYMED 
 </term><description> Valore di <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> non valido.  
  
 </description></item><item><term> DV_E_DVASPECT 
 </term><description> Valore di <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> non valido.  
  
 </description></item><item><term> OLE_E_NOTRUNNING 
 </term><description> L'applicazione non è in esecuzione.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast della classe <xref:System.Windows.Forms.DataObject> su un'interfaccia <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetData (ByRef pFormatetcIn As FORMATETC, ByRef pmedium As STGMEDIUM, fRelease As Boolean) Implements IDataObject.SetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetcIn, System::Runtime::InteropServices::ComTypes::STGMEDIUM % pmedium, bool fRelease) = System::Runtime::InteropServices::ComTypes::IDataObject::SetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" />
        <Parameter Name="fRelease" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn">Struttura <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passata per riferimento, che definisce il formato utilizzato dall'oggetto dati nell'interpretazione dei dati contenuti nel supporto di archiviazione.</param>
        <param name="pmedium">Struttura <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passata per riferimento, che definisce il supporto di archiviazione in cui vengono passati i dati.</param>
        <param name="fRelease">
          <see langword="true" /> per specificare che l'oggetto dati chiamato, il quale implementa il metodo <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, è proprietario del supporto di archiviazione al termine della chiamata. L'oggetto dati deve pertanto liberare il supporto dopo l'utilizzo chiamando la funzione <see langword="ReleaseStgMedium" />. <see langword="false" /> per specificare che il chiamante mantiene la proprietà del supporto di archiviazione e che l'oggetto dati chiamato utilizza tale supporto solo per la durata della chiamata.</param>
        <summary>Trasferisce i dati all'oggetto che implementa il metodo. Questo metodo viene chiamato da un oggetto contenente un'origine dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast della classe <xref:System.Windows.Forms.DataObject> su un'interfaccia <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Questo metodo non supporta il tipo di oggetto dati sottostante.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>