<Type Name="ToolStripManager" FullName="System.Windows.Forms.ToolStripManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35f1c0af4fb416263dc2ce977f105bf7efd1a945" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649695" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ToolStripManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ToolStripManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToolStripManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripManager sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Controlla il rendering e il raggruppamento verticale/orizzontale dei controlli <see cref="T:System.Windows.Forms.ToolStrip" /> nonché l'unione degli oggetti <see cref="T:System.Windows.Forms.MenuStrip" />, <see cref="T:System.Windows.Forms.ToolStripDropDownMenu" /> e <see cref="T:System.Windows.Forms.ToolStripMenuItem" />. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripManager> supporta <xref:System.Windows.Forms.ToolStrip>-attività per l'intera applicazione, ad esempio l'unione, le impostazioni e opzioni di rendering correlate. Di overload <xref:System.Windows.Forms.ToolStripManager.Merge%2A> metodo combina <xref:System.Windows.Forms.ToolStrip> controlli tra loro e il metodo di overload <xref:System.Windows.Forms.ToolStripManager.RevertMerge%2A> metodo annulla un'operazione di unione.  
  
 Utilizzare il <xref:System.Windows.Forms.ToolStripRenderer> classe con il <xref:System.Windows.Forms.ToolStripManager> classe per ottenere maggiore controllo e personalizzazione lo stile di disegno e layout.  
  
   
  
## Examples  
 Esempio di codice seguente illustra gli scenari tipici di unione di voce di menu.  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#1)]  
  
 Esempio di codice seguente viene illustrato come chiamare <xref:System.Windows.Forms.ToolStripManager> e alcuni dei relativi membri.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.ToolStrip1#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolStripRenderer" />
    <altmember cref="T:System.Windows.Forms.ToolStripProfessionalRenderer" />
    <altmember cref="T:System.Windows.Forms.ToolStripContainer" />
    <altmember cref="T:System.Windows.Forms.MergeAction" />
    <altmember cref="P:System.Windows.Forms.ToolStripItem.MergeIndex" />
    <altmember cref="P:System.Windows.Forms.ToolStripItem.MergeAction" />
    <altmember cref="P:System.Windows.Forms.ToolStrip.AllowMerge" />
  </Docs>
  <Members>
    <Member MemberName="FindToolStrip">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ToolStrip FindToolStrip (string toolStripName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.ToolStrip FindToolStrip(string toolStripName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.FindToolStrip(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindToolStrip (toolStripName As String) As ToolStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::ToolStrip ^ FindToolStrip(System::String ^ toolStripName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolStripName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolStripName">Stringa che specifica il nome del controllo <see cref="T:System.Windows.Forms.ToolStrip" /> o del tipo <see cref="T:System.Windows.Forms.ToolStrip" /> derivato da trovare.</param>
        <summary>Trova il controllo <see cref="T:System.Windows.Forms.ToolStrip" /> specificato o un tipo derivato da <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <returns>Controllo <see cref="T:System.Windows.Forms.ToolStrip" /> o uno dei relativi tipi derivati come specificato dal parametro <paramref name="toolStripName" /> oppure <see langword="null" /> se <see cref="T:System.Windows.Forms.ToolStrip" /> non viene trovato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ToolStripManager.FindToolStrip%2A> metodo per cercare un <xref:System.Windows.Forms.ToolStrip> o un oggetto derivato da <xref:System.Windows.Forms.ToolStrip>. Tipi derivati della <xref:System.Windows.Forms.ToolStrip> sono <xref:System.Windows.Forms.StatusStrip>, <xref:System.Windows.Forms.MenuStrip>, <xref:System.Windows.Forms.ToolStripDropDown>, <xref:System.Windows.Forms.ToolStripDropDownMenu>, e <xref:System.Windows.Forms.ContextMenuStrip>. Se l'oggetto della ricerca non è specificamente una <xref:System.Windows.Forms.ToolStrip> ma uno di questi tipi derivati, eseguire il cast del tipo restituito, se necessario.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un utilizzo del <xref:System.Windows.Forms.ToolStripManager.FindToolStrip%2A> metodo. In questo esempio fa parte di un esempio più esaustivo disponibile per il <xref:System.Windows.Forms.ToolStripManager.Renderer%2A> proprietà.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#80)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#80)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShortcutDefined">
      <MemberSignature Language="C#" Value="public static bool IsShortcutDefined (System.Windows.Forms.Keys shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsShortcutDefined(valuetype System.Windows.Forms.Keys shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.IsShortcutDefined(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsShortcutDefined (shortcut As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsShortcutDefined(System::Windows::Forms::Keys shortcut);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortcut" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="shortcut">Tasto di scelta rapida per il quale è necessario eseguire la ricerca.</param>
        <summary>Recupera un valore che indica se il tasto di scelta rapida specificato è utilizzato da uno dei controlli <see cref="T:System.Windows.Forms.ToolStrip" /> di un form.</summary>
        <returns>
          <see langword="true" /> se il tasto di scelta rapida è utilizzato da un controllo <see cref="T:System.Windows.Forms.ToolStrip" /> del form; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.IsValidShortcut(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidShortcut">
      <MemberSignature Language="C#" Value="public static bool IsValidShortcut (System.Windows.Forms.Keys shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidShortcut(valuetype System.Windows.Forms.Keys shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.IsValidShortcut(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidShortcut (shortcut As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidShortcut(System::Windows::Forms::Keys shortcut);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortcut" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="shortcut">Tasto di scelta rapida per il quale è necessario testare la validità.</param>
        <summary>Recupera un valore che indica se un tasto di scelta rapida definito è valido.</summary>
        <returns>
          <see langword="true" /> se il tasto di scelta rapida è valido; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tasti di scelta rapida validi sono i tasti funzione F1 a F12 solo; tasti funzione con modificatori MAIUSC, ALT o CTRL. o altre chiavi con modificatori MAIUSC, ALT o CTRL. Tasti CTRL, ALT + o MAIUSC e diverso da tasti funzione non sono tasti di scelta rapida valido se utilizzato da solo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.IsShortcutDefined(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadSettings">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica le impostazioni per un oggetto <see cref="T:System.Windows.Forms.Form" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadSettings">
      <MemberSignature Language="C#" Value="public static void LoadSettings (System.Windows.Forms.Form targetForm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadSettings(class System.Windows.Forms.Form targetForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.LoadSettings(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadSettings (targetForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LoadSettings(System::Windows::Forms::Form ^ targetForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="targetForm">Oggetto <see cref="T:System.Windows.Forms.Form" /> il cui nome corrisponde anche alla chiave delle impostazioni.</param>
        <summary>Carica le impostazioni per l'oggetto <see cref="T:System.Windows.Forms.Form" /> indicato utilizzando il nome completo dell'oggetto <see cref="T:System.Windows.Forms.Form" /> come chiave delle impostazioni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> ora in cui i controlli che non sono presenti nel form in fase di progettazione di <xref:System.Windows.Forms.ToolStrip> impostazioni vengono salvate vengono rimossi dal <xref:System.Windows.Forms.Form> quando il caricamento delle impostazioni. Per reimpostare le impostazioni, impostare come commento il <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> di riga e lasciare il <xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A> riga. Questo non verrà caricata alcuna impostazione e manterrà lo stato dell'ultima. Quando si rimuove il commento dal <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> riga, tali impostazioni verranno applicate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="targetForm" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadSettings">
      <MemberSignature Language="C#" Value="public static void LoadSettings (System.Windows.Forms.Form targetForm, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadSettings(class System.Windows.Forms.Form targetForm, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.LoadSettings(System.Windows.Forms.Form,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadSettings (targetForm As Form, key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LoadSettings(System::Windows::Forms::Form ^ targetForm, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForm" Type="System.Windows.Forms.Form" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForm">Oggetto <see cref="T:System.Windows.Forms.Form" /> per cui caricare le impostazioni.</param>
        <param name="key">Oggetto <see cref="T:System.String" /> che rappresenta la chiave delle impostazioni per questo oggetto <see cref="T:System.Windows.Forms.Form" />.</param>
        <summary>Carica le impostazioni per l'oggetto <see cref="T:System.Windows.Forms.Form" /> specificato utilizzando la chiave delle impostazioni indicata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> ora in cui i controlli che non sono presenti nel form in fase di progettazione di <xref:System.Windows.Forms.ToolStrip> impostazioni vengono salvate vengono rimossi dal <xref:System.Windows.Forms.Form> quando il caricamento delle impostazioni. Per reimpostare le impostazioni, impostare come commento il <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> di riga e lasciare il <xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A> riga. Questo non verrà caricata alcuna impostazione e manterrà lo stato dell'ultima. Quando si rimuove il commento dal <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> riga, tali impostazioni verranno applicate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="key" /> è <see langword="null" /> o vuoto.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Merge">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Combina i controlli <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public static bool Merge (System.Windows.Forms.ToolStrip sourceToolStrip, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Merge(class System.Windows.Forms.ToolStrip sourceToolStrip, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Merge (sourceToolStrip As ToolStrip, targetName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Merge(System::Windows::Forms::ToolStrip ^ sourceToolStrip, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceToolStrip" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceToolStrip">
          <see cref="T:System.Windows.Forms.ToolStrip" /> da combinare con l'oggetto <see cref="T:System.Windows.Forms.ToolStrip" /> a cui fa riferimento il parametro <c>targetName</c>.</param>
        <param name="targetName">Nome dell'oggetto <see cref="T:System.Windows.Forms.ToolStrip" /> che riceve l'oggetto <see cref="T:System.Windows.Forms.ToolStrip" /> specificato dal parametro <c>sourceToolStrip</c>.</param>
        <summary>Combina due oggetti <see cref="T:System.Windows.Forms.ToolStrip" /> dello stesso tipo.</summary>
        <returns>
          <see langword="true" /> se l'unione è stata eseguita correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType> metodo per combinare <xref:System.Windows.Forms.ToolStrip> oggetti dello stesso tipo, ad esempio <xref:System.Windows.Forms.ToolStrip> oggetti con altri <xref:System.Windows.Forms.ToolStrip> oggetti, <xref:System.Windows.Forms.MenuStrip> oggetti con altri <xref:System.Windows.Forms.MenuStrip> oggetti e così via.  
  
 Utilizzare il <xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType> metodo per combinare <xref:System.Windows.Forms.ToolStrip> oggetti di tipi diversi.  
  
 Il <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType> proprietà deve essere impostata su `true` per entrambi <xref:System.Windows.Forms.ToolStrip> oggetti e i tipi di origine e destinazione devono essere identici o questo metodo restituisce `false`.  
  
> [!NOTE]
>  Se sono presenti due <xref:System.Windows.Forms.MenuStrip> controlli in un form figlio MDI, l'impostazione <xref:System.Windows.Forms.Form.IsMdiContainer%2A> a `true` per l'elemento padre modulo unisce il contenuto di una sola il <xref:System.Windows.Forms.MenuStrip> controlli. Utilizzare <xref:System.Windows.Forms.ToolStripManager.Merge%2A> per unire il contenuto dell'elemento figlio aggiuntiva <xref:System.Windows.Forms.MenuStrip> controlli del form padre MDI.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="sourceToolStrip" /> o il parametro <paramref name="targetName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">I parametri <paramref name="sourceToolStrip" /> o <paramref name="targetName" /> si riferiscono allo stesso oggetto <see cref="T:System.Windows.Forms.ToolStrip" />.</exception>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public static bool Merge (System.Windows.Forms.ToolStrip sourceToolStrip, System.Windows.Forms.ToolStrip targetToolStrip);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Merge(class System.Windows.Forms.ToolStrip sourceToolStrip, class System.Windows.Forms.ToolStrip targetToolStrip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Merge (sourceToolStrip As ToolStrip, targetToolStrip As ToolStrip) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Merge(System::Windows::Forms::ToolStrip ^ sourceToolStrip, System::Windows::Forms::ToolStrip ^ targetToolStrip);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceToolStrip" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="targetToolStrip" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="sourceToolStrip">
          <see cref="T:System.Windows.Forms.ToolStrip" /> da combinare con l'oggetto <see cref="T:System.Windows.Forms.ToolStrip" /> a cui fa riferimento il parametro <c>targetToolStrip</c>.</param>
        <param name="targetToolStrip">
          <see cref="T:System.Windows.Forms.ToolStrip" /> che riceve l'oggetto <see cref="T:System.Windows.Forms.ToolStrip" /> a cui fa riferimento il parametro <c>sourceToolStrip</c>.</param>
        <summary>Combina due oggetti <see cref="T:System.Windows.Forms.ToolStrip" /> di tipo diverso.</summary>
        <returns>
          <see langword="true" /> se l'unione è stata eseguita correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType> metodo per combinare <xref:System.Windows.Forms.ToolStrip> oggetti di tipi diversi.  
  
 Utilizzare il <xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType> metodo per combinare <xref:System.Windows.Forms.ToolStrip> oggetti dello stesso tipo, ad esempio <xref:System.Windows.Forms.ToolStrip> oggetti con altri <xref:System.Windows.Forms.ToolStrip> oggetti, <xref:System.Windows.Forms.MenuStrip> oggetti con altri <xref:System.Windows.Forms.MenuStrip> oggetti e così via.  
  
 Il <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType> proprietà deve essere impostata su `true` per entrambi <xref:System.Windows.Forms.ToolStrip> oggetti o questo metodo restituisce `false`.  
  
> [!NOTE]
>  Se sono presenti due <xref:System.Windows.Forms.MenuStrip> controlli in un form figlio MDI, l'impostazione <xref:System.Windows.Forms.Form.IsMdiContainer%2A> a `true` per l'elemento padre modulo unisce il contenuto di una sola il <xref:System.Windows.Forms.MenuStrip> controlli. Utilizzare <xref:System.Windows.Forms.ToolStripManager.Merge%2A> per unire il contenuto dell'elemento figlio aggiuntiva <xref:System.Windows.Forms.MenuStrip> controlli del form padre MDI.  
  
   
  
## Examples  
 Esempio di codice seguente unisce le voci di menu in base alle scelte specificate. Questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Forms.ToolStripManager> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="Renderer">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ToolStripRenderer Renderer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.ToolStripRenderer Renderer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripManager.Renderer" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Renderer As ToolStripRenderer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::ToolStripRenderer ^ Renderer { System::Windows::Forms::ToolStripRenderer ^ get(); void set(System::Windows::Forms::ToolStripRenderer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripRenderer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta gli stili di disegno predefiniti per il form.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ToolStripRenderer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo <xref:System.Windows.Forms.ToolStripManager.Renderer%2A> proprietà viene utilizzata quando il <xref:System.Windows.Forms.ToolStrip.RenderMode%2A> proprietà dell'oggetto corrente <xref:System.Windows.Forms.ToolStrip> è impostato su <xref:System.Windows.Forms.ToolStripRenderMode.ManagerRenderMode>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come applicare un renderer personalizzato professionale a un singolo <xref:System.Windows.Forms.ToolStrip> o all'applicazione nel suo complesso.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#70)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#70)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendererChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler RendererChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RendererChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripManager.RendererChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event RendererChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ RendererChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.ToolStripManager.Renderer" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
> [!CAUTION]
>  Per evitare perdite di memoria, è possibile disabilitare questo evento quando l'applicazione è stato eliminato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ToolStripManager.RendererChanged> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ToolStripManager> denominato `ToolStripManager1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ToolStripManager.RendererChanged> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#603](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#603)]
 [!code-vb[System.Windows.Forms.EventExamples#603](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#603)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ToolStripManagerRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.ToolStripManagerRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripManager.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property RenderMode As ToolStripManagerRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::ToolStripManagerRenderMode RenderMode { System::Windows::Forms::ToolStripManagerRenderMode get(); void set(System::Windows::Forms::ToolStripManagerRenderMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripManagerRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tema predefinito per il form.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ToolStripManagerRenderMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ToolStripManager.RenderMode%2A> proprietà da ottenere o impostare se l'applicazione viene disegnata mediante il <xref:System.Windows.Forms.ToolStripProfessionalRenderer>, <xref:System.Windows.Forms.ToolStripSystemRenderer>, o un oggetto personalizzato <xref:System.Windows.Forms.ToolStripRenderer>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un utilizzo del <xref:System.Windows.Forms.ToolStripManager.RenderMode%2A> proprietà. In questo esempio fa parte di un esempio più esaustivo disponibile per il <xref:System.Windows.Forms.ToolStripManager.Renderer%2A> proprietà.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#80)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#80)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore impostato non è uno dei valori di <see cref="T:System.Windows.Forms.ToolStripManagerRenderMode" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Windows.Forms.ToolStripManagerRenderMode" /> è impostato su <see cref="F:System.Windows.Forms.ToolStripManagerRenderMode.Custom" />; utilizzare invece la proprietà <see cref="P:System.Windows.Forms.ToolStripManager.Renderer" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RevertMerge">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Annulla l'unione di due oggetti <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="RevertMerge">
      <MemberSignature Language="C#" Value="public static bool RevertMerge (string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RevertMerge(string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RevertMerge (targetName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RevertMerge(System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetName">Nome dell'oggetto <see cref="T:System.Windows.Forms.ToolStripItem" /> per il quale è necessario annullare un'operazione di unione.</param>
        <summary>Annulla l'unione di due oggetti <see cref="T:System.Windows.Forms.ToolStrip" />, reimpostando l'oggetto <see cref="T:System.Windows.Forms.ToolStrip" /> con il nome specificato sullo stato precedente all'unione e annullando tutte le operazioni di unione precedenti.</summary>
        <returns>
          <see langword="true" /> se l'annullamento dell'unione è stato eseguito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType> proprietà deve essere impostata su `true` per entrambi <xref:System.Windows.Forms.ToolStrip> oggetti o questo metodo restituisce `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="RevertMerge">
      <MemberSignature Language="C#" Value="public static bool RevertMerge (System.Windows.Forms.ToolStrip targetToolStrip);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RevertMerge(class System.Windows.Forms.ToolStrip targetToolStrip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RevertMerge (targetToolStrip As ToolStrip) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RevertMerge(System::Windows::Forms::ToolStrip ^ targetToolStrip);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetToolStrip" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="targetToolStrip">Oggetto <see cref="T:System.Windows.Forms.ToolStripItem" /> per il quale è necessario annullare un'operazione di unione.</param>
        <summary>Annulla l'unione di due oggetti <see cref="T:System.Windows.Forms.ToolStrip" />, reimpostando l'oggetto <see cref="T:System.Windows.Forms.ToolStrip" /> specificato sullo stato precedente all'unione e annullando tutte le operazioni di unione precedenti.</summary>
        <returns>
          <see langword="true" /> se l'annullamento dell'unione è stato eseguito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType> proprietà deve essere impostata su `true` per entrambi <xref:System.Windows.Forms.ToolStrip> oggetti o questo metodo restituisce `false`.  
  
   
  
## Examples  
 Esempio di codice seguente consente di annullare l'unione di voci di menu. Questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Forms.ToolStripManager> Cenni preliminari sulla classe.  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RevertMerge">
      <MemberSignature Language="C#" Value="public static bool RevertMerge (System.Windows.Forms.ToolStrip targetToolStrip, System.Windows.Forms.ToolStrip sourceToolStrip);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RevertMerge(class System.Windows.Forms.ToolStrip targetToolStrip, class System.Windows.Forms.ToolStrip sourceToolStrip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RevertMerge (targetToolStrip As ToolStrip, sourceToolStrip As ToolStrip) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RevertMerge(System::Windows::Forms::ToolStrip ^ targetToolStrip, System::Windows::Forms::ToolStrip ^ sourceToolStrip);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetToolStrip" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="sourceToolStrip" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="targetToolStrip">Nome dell'oggetto <see cref="T:System.Windows.Forms.ToolStripItem" /> per il quale è necessario annullare un'operazione di unione.</param>
        <param name="sourceToolStrip">
          <see cref="T:System.Windows.Forms.ToolStrip" /> precedentemente unito a <c>targetToolStrip</c>.</param>
        <summary>Annulla l'unione di due oggetti <see cref="T:System.Windows.Forms.ToolStrip" />, restituendo entrambi i controlli <see cref="T:System.Windows.Forms.ToolStrip" /> nello stato precedente all'unione e annullando tutte le operazioni di unione precedenti.</summary>
        <returns>
          <see langword="true" /> se l'annullamento dell'unione è stato eseguito correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType> proprietà deve essere impostata su `true` per entrambi <xref:System.Windows.Forms.ToolStrip> oggetti o questo metodo restituisce `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="sourceToolStrip" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveSettings">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Salva le impostazioni per l'oggetto <see cref="T:System.Windows.Forms.Form" /> specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public static void SaveSettings (System.Windows.Forms.Form sourceForm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveSettings(class System.Windows.Forms.Form sourceForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.SaveSettings(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveSettings (sourceForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveSettings(System::Windows::Forms::Form ^ sourceForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="sourceForm">Oggetto <see cref="T:System.Windows.Forms.Form" /> il cui nome corrisponde anche alla chiave delle impostazioni.</param>
        <summary>Salva le impostazioni per l'oggetto <see cref="T:System.Windows.Forms.Form" /> indicato utilizzando il nome completo dell'oggetto <see cref="T:System.Windows.Forms.Form" /> come chiave delle impostazioni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> ora in cui i controlli che non sono presenti nel form in fase di progettazione di <xref:System.Windows.Forms.ToolStrip> impostazioni vengono salvate vengono rimossi dal <xref:System.Windows.Forms.Form> quando il caricamento delle impostazioni. Per reimpostare le impostazioni, impostare come commento il <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> di riga e lasciare il <xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A> riga. Questo non verrà caricata alcuna impostazione e manterrà lo stato dell'ultima. Quando si rimuove il commento dal <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> riga, tali impostazioni verranno applicate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="sourceForm" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public static void SaveSettings (System.Windows.Forms.Form sourceForm, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveSettings(class System.Windows.Forms.Form sourceForm, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.SaveSettings(System.Windows.Forms.Form,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveSettings (sourceForm As Form, key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveSettings(System::Windows::Forms::Form ^ sourceForm, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceForm" Type="System.Windows.Forms.Form" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceForm">Oggetto <see cref="T:System.Windows.Forms.Form" /> per cui salvare le impostazioni.</param>
        <param name="key">Oggetto <see cref="T:System.String" /> che rappresenta la chiave delle impostazioni per questo oggetto <see cref="T:System.Windows.Forms.Form" />.</param>
        <summary>Salva le impostazioni per l'oggetto <see cref="T:System.Windows.Forms.Form" /> specificato utilizzando la chiave delle impostazioni indicata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> ora in cui i controlli che non sono presenti nel form in fase di progettazione di <xref:System.Windows.Forms.ToolStrip> impostazioni vengono salvate vengono rimossi dal <xref:System.Windows.Forms.Form> quando il caricamento delle impostazioni. Per reimpostare le impostazioni, impostare come commento il <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> di riga e lasciare il <xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A> riga. Questo non verrà caricata alcuna impostazione e manterrà lo stato dell'ultima. Quando si rimuove il commento dal <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> riga, tali impostazioni verranno applicate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="key" /> è <see langword="null" /> o vuoto.</exception>
      </Docs>
    </Member>
    <Member MemberName="VisualStylesEnabled">
      <MemberSignature Language="C#" Value="public static bool VisualStylesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool VisualStylesEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripManager.VisualStylesEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property VisualStylesEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool VisualStylesEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se per il rendering di un controllo <see cref="T:System.Windows.Forms.ToolStrip" /> vengono utilizzate le informazioni sullo stile di visualizzazione denominate temi.</summary>
        <value>
          <see langword="true" /> se per il rendering di <see cref="T:System.Windows.Forms.ToolStripItem" /> vengono utilizzati i temi; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>