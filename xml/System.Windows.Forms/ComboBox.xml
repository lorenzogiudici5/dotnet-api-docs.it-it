<Type Name="ComboBox" FullName="System.Windows.Forms.ComboBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0bdbc8006779bb1ae9876a1987e07981407f723" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061469" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComboBox : System.Windows.Forms.ListControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComboBox extends System.Windows.Forms.ListControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox&#xA;Inherits ListControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBox : System::Windows::Forms::ListControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ComboBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un controllo casella combinata di Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Forms.ComboBox> consente di visualizzare una casella di testo combinata con un <xref:System.Windows.Forms.ListBox>, che consente all'utente di selezionare gli elementi dall'elenco o immettere un nuovo valore.  
  
 Il <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> proprietà specifica se viene sempre visualizzato un elenco o se viene visualizzato l'elenco in un elenco a discesa. Il <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> proprietà specifica inoltre se è possibile modificare la parte di testo. Vedere <xref:System.Windows.Forms.ComboBoxStyle> per le impostazioni disponibili e gli effetti. Non è disponibile alcuna impostazione sempre visualizzare l'elenco e impedire l'immissione di un nuovo valore. Per visualizzare un elenco a cui non è possibile aggiungere alcun nuovo valore, utilizzare un <xref:System.Windows.Forms.ListBox> controllo.  
  
 Per aggiungere o rimuovere gli oggetti nell'elenco in fase di esecuzione, utilizzare i metodi del <xref:System.Windows.Forms.ComboBox.ObjectCollection> classe (tramite il <xref:System.Windows.Forms.ComboBox.Items%2A> proprietà del <xref:System.Windows.Forms.ComboBox>). È possibile assegnare una matrice di riferimenti agli oggetti con il <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metodo. L'elenco verrà quindi visualizzato il valore di stringa del valore predefinito per ogni oggetto. È possibile aggiungere singoli oggetti con il <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> metodo. È possibile eliminare gli elementi con il <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> metodo oppure deselezionare l'intero elenco con il <xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> metodo.  
  
 Oltre alle funzionalità di visualizzazione e selezione, il <xref:System.Windows.Forms.ComboBox> fornisce anche funzionalità che consentono di aggiungere in modo efficiente elementi per il <xref:System.Windows.Forms.ComboBox> e per trovare testo all'interno di elementi dell'elenco. Con il <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> e <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> metodi, è possibile aggiungere un numero elevato di elementi per il <xref:System.Windows.Forms.ComboBox> senza il controllo viene ridisegnato ogni volta che un elemento viene aggiunto all'elenco. Il <xref:System.Windows.Forms.ComboBox.FindString%2A> e <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> metodi consentono di cercare un elemento nell'elenco che contiene una stringa di ricerca specifico.  
  
 È possibile utilizzare queste proprietà per gestire l'elemento attualmente selezionato nell'elenco, il <xref:System.Windows.Forms.ComboBox.Text%2A> proprietà per specificare la stringa visualizzata nel campo di modifica, il <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> proprietà da ottenere o impostare l'elemento corrente e <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> proprietà da ottenere o impostare un Fare riferimento all'oggetto.  
  
> [!NOTE]
>  Se dispone di un <xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.ComboBox>, o <xref:System.Windows.Forms.CheckedListBox> su una base di Windows Form di pagina e si desidera modificare le raccolte di stringhe dei controlli in una classe derivata, le raccolte di stringhe dei controlli nel form di base devono essere vuote. Se l'insieme di stringhe non sono vuoto, diventano sola lettura quando si deriva un altro formato.  
  
   
  
## Examples  
 Esempio di codice seguente è un'applicazione completa che illustra come usare il <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> metodo per aggiungere elementi a un <xref:System.Windows.Forms.ComboBox>, il <xref:System.Windows.Forms.ComboBox.FindString%2A> metodo per trovare gli elementi in un <xref:System.Windows.Forms.ComboBox>e <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> e <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> metodi per aggiungere in modo efficiente un elevato numero di elementi a un <xref:System.Windows.Forms.ComboBox>. La possibilità di archiviare i valori sono diversi dal testo visualizzato è ereditata da <xref:System.Windows.Forms.ListControl>. Per un esempio di come utilizzare questa funzionalità, vedere la <xref:System.Windows.Forms.ListControl> classe.  
  
 È necessario aggiungere riferimenti al `System.Drawing` e `System.Windows.Forms` gli spazi dei nomi per eseguire questo esempio.  
  
 [!code-cpp[ComboBox#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxtype.cpp#1)]
 [!code-csharp[ComboBox#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxtype.cs#1)]
 [!code-vb[ComboBox#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxtype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemsCore">
      <MemberSignature Language="C#" Value="protected virtual void AddItemsCore (object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddItemsCore(object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.AddItemsCore(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddItemsCore (value As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddItemsCore(cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated.  There is no replacement.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="value">Elementi da aggiungere.</param>
        <summary>Aggiunge gli elementi specificati alla casella combinata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteCustomSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteCustomSource As AutoCompleteStringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteStringCollection ^ AutoCompleteCustomSource { System::Windows::Forms::AutoCompleteStringCollection ^ get(); void set(System::Windows::Forms::AutoCompleteStringCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteStringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto <see cref="T:System.Collections.Specialized.StringCollection" /> personalizzato da usare quando la proprietà <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" /> è impostata su <see langword="CustomSource" />.</summary>
        <value>Oggetto <see cref="T:System.Collections.Specialized.StringCollection" /> da usare con <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, e <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> proprietà per creare un <xref:System.Windows.Forms.ComboBox> che viene completata automaticamente le stringhe di input confrontando il prefisso immesso e i prefissi di tutte le stringhe in un'origine gestita. Ciò è utile per <xref:System.Windows.Forms.ComboBox> controlli in cui gli URL, indirizzi, nomi di file o i comandi verranno immessi di frequente. Se sono presenti voci duplicate nell'origine gestita, il completamento automatico funziona in modo anomalo.  
  
 L'utilizzo del <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> proprietà è facoltativa, ma è necessario impostare il <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> proprietà `CustomSource` per poter utilizzare <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>.  
  
 È necessario utilizzare il <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> e <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> insieme di proprietà.  
  
> [!NOTE]
>  Il sistema operativo potrebbe limitare il numero di stringhe personalizzate che può essere visualizzato in una sola volta. Per le stringhe che contengono una barra (/) o una barra rovesciata (\\), il completamento automatico aggiunge tutti i caratteri solo a compresa la barra.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteMode AutoCompleteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteMode AutoCompleteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.AutoCompleteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteMode As AutoCompleteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteMode AutoCompleteMode { System::Windows::Forms::AutoCompleteMode get(); void set(System::Windows::Forms::AutoCompleteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'opzione che controlla la modalità di funzionamento del completamento automatico per l'oggetto <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.AutoCompleteMode" />. I valori sono <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />, <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />, <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" /> e <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />. Il valore predefinito è <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, e <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> proprietà per creare un <xref:System.Windows.Forms.ComboBox> che viene completata automaticamente le stringhe di input confrontando il prefisso immesso e i prefissi di tutte le stringhe in un'origine gestita. Ciò è utile per <xref:System.Windows.Forms.ComboBox> controlli in cui gli URL, indirizzi, nomi di file o i comandi verranno immessi di frequente. Se sono presenti voci duplicate nell'origine gestita, il completamento automatico funziona in modo anomalo.  
  
 Se si imposta <xref:System.Windows.Forms.ComboBoxStyle> a <xref:System.Windows.Forms.ComboBoxStyle.DropDownList>, nell'elenco vengono visualizzati solo se <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> è <xref:System.Windows.Forms.AutoCompleteMode.Suggest> o <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend>.  
  
 L'utilizzo del <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> proprietà è facoltativa, ma è necessario impostare il <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> proprietà <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> per poter utilizzare <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>.  
  
 È necessario utilizzare il <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> e <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> insieme di proprietà.  
  
 Con <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> impostato su <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend> e <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> impostato su <xref:System.Windows.Forms.AutoCompleteSource.ListItems>, il comportamento è come segue:  
  
-   Se l'elenco di stringhe è vuoto, premendo il tasto BACKSPACE o CANC non esegue alcuna operazione.  
  
-   Se viene premuto il tasto BACKSPACE in meno di un secondo, viene selezionato l'elemento precedente o non viene selezionato nulla se l'elenco della stringa è vuota.  
  
-   Se viene premuto il tasto BACKSPACE in più di un secondo, il primo elemento è selezionato.  
  
-   Se viene premuto il tasto CANC, viene selezionato il primo elemento.  
  
> [!NOTE]
>  Il sistema operativo potrebbe limitare il numero di stringhe personalizzate che può essere visualizzato in una sola volta. Per le stringhe che contengono una barra (/) o una barra rovesciata (\\), il completamento automatico aggiunge tutti i caratteri solo a compresa la barra.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori dell'oggetto <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</exception>
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteSource AutoCompleteSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteSource AutoCompleteSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteSource As AutoCompleteSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteSource AutoCompleteSource { System::Windows::Forms::AutoCompleteSource get(); void set(System::Windows::Forms::AutoCompleteSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica l'origine delle stringhe complete usate per il completamento automatico.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.AutoCompleteSource" />. Le opzioni sono <see langword="AllSystemSources" />, <see langword="AllUrl" />, <see langword="FileSystem" />, <see langword="HistoryList" />, <see langword="RecentlyUsedList" />, <see langword="CustomSource" /> e <see langword="None" />. Il valore predefinito è <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, e <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> proprietà per creare un <xref:System.Windows.Forms.ComboBox> che viene completata automaticamente le stringhe di input confrontando il prefisso immesso e i prefissi di tutte le stringhe in un'origine gestita. Ciò è utile per <xref:System.Windows.Forms.ComboBox> controlli in cui gli URL, indirizzi, nomi di file o i comandi verranno immessi di frequente.  
  
 L'utilizzo del <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> proprietà è facoltativa, ma è necessario impostare il <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> proprietà <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> per poter utilizzare <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>.  
  
 È necessario utilizzare il <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> e <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> insieme di proprietà.  
  
 Con <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> impostato su <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend> e <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> impostato su <xref:System.Windows.Forms.AutoCompleteSource.ListItems>, il comportamento è come segue:  
  
-   Se l'elenco di stringhe è vuoto, premendo il tasto BACKSPACE o CANC non esegue alcuna operazione.  
  
-   Se viene premuto il tasto BACKSPACE in meno di un secondo, viene selezionato l'elemento precedente o non viene selezionato nulla se l'elenco della stringa è vuota.  
  
-   Se viene premuto il tasto BACKSPACE in più di un secondo, il primo elemento è selezionato.  
  
-   Se viene premuto il tasto CANC, viene selezionato il primo elemento.  
  
> [!NOTE]
>  Il sistema operativo potrebbe limitare il numero di stringhe personalizzate che può essere visualizzato in una sola volta. Per le stringhe che contengono una barra (/) o una barra rovesciata (\\), il completamento automatico aggiunge tutti i caratteri solo a compresa la barra.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori dell'oggetto <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</exception>
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore di sfondo del controllo.</summary>
        <value>Oggetto colore che rappresenta il colore di sfondo del controllo. Il valore predefinito corrisponde al valore della proprietà <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà non è pertinente per questa classe.</summary>
        <value>Immagine di sfondo visualizzata nel controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il valore della proprietà <see cref="P:System.Windows.Forms.ComboBox.BackgroundImage" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il layout dell'immagine di sfondo definito nell'enumerazione <see cref="T:System.Windows.Forms.ImageLayout" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ImageLayout" /> (<see langword="Center" />, <see langword="None" />, <see langword="Stretch" />, <see langword="Tile" /> o <see langword="Zoom" />).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori dell'oggetto <see cref="T:System.Windows.Forms.ImageLayout" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà <see cref="P:System.Windows.Forms.ComboBox.BackgroundImageLayout" /> cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Garantisce il mantenimento delle prestazioni quando gli elementi vengono aggiunti all'oggetto <see cref="T:System.Windows.Forms.ComboBox" /> uno alla volta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo impedisce il controllo di fino a quando il <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> metodo viene chiamato.  
  
 La modalità preferita per aggiungere elementi al <xref:System.Windows.Forms.ComboBox> consiste nell'utilizzare il <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metodo il <xref:System.Windows.Forms.ComboBox.ObjectCollection> classe (tramite il <xref:System.Windows.Forms.ComboBox.Items%2A> proprietà del <xref:System.Windows.Forms.ComboBox>). In questo modo è possibile aggiungere una matrice di elementi all'elenco in una sola volta. Tuttavia, se si desidera aggiungere gli elementi uno alla volta, tramite il <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> metodo il <xref:System.Windows.Forms.ComboBox.ObjectCollection> (classe), è possibile utilizzare il <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> per impedire il controllo di aggiornamento il <xref:System.Windows.Forms.ComboBox> ogni volta che un elemento viene aggiunto all'elenco. Dopo aver completato l'attività di aggiunta all'elenco di elementi, chiamare il <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> metodo per abilitare il <xref:System.Windows.Forms.ComboBox> per ridisegnare. Questa modalità di aggiunta di elementi possibile evitare lo sfarfallio durante il disegno del <xref:System.Windows.Forms.ComboBox> quando un numero elevato di elementi viene aggiunti all'elenco.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> e <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> metodi. L'esempio fa parte di un esempio di codice completo nel <xref:System.Windows.Forms.ComboBox> Cenni preliminari sulla classe.  
  
 [!code-cpp[ComboBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#3)]
 [!code-csharp[ComboBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#3)]
 [!code-vb[ComboBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuovo oggetto di accessibilità per il controllo.</summary>
        <returns>Nuovo oggetto di accessibilità per il controllo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un handle per il controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene sottoposto a override in <xref:System.Windows.Forms.ComboBox> per evitare più layout durante la creazione dell'handle a causa di <xref:System.Windows.Forms.ComboBox> dimensioni a modifica.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i parametri necessari per la creazione quando viene creato l'handle del controllo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.CreateParams" /> contenente i parametri di creazione necessari quando viene creato l'handle del controllo.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'origine dati per l'oggetto <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <value>Oggetto che implementa l'interfaccia <see cref="T:System.Collections.IList" /> oppure <see cref="T:System.Array" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'origine dati può essere un database, un servizio Web o un oggetto che può essere utilizzato successivamente per generare controlli con associazione a dati. Quando il <xref:System.Windows.Forms.ComboBox.DataSource%2A> è impostata, la raccolta di elementi non può essere modificata.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Windows.Forms.ComboBox.DataSource%2A> proprietà per visualizzare una matrice di giorni della settimana in un <xref:System.Windows.Forms.ComboBox>.  
  
 [!code-csharp[System.Windows.Forms.ComboBox.DataSource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.combobox.datasource/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBox.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.combobox.datasource/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le dimensioni predefinite del controllo.</summary>
        <value>Dimensioni predefinite del controllo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Windows.Forms.ComboBox" /> e, facoltativamente, le risorse gestite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal metodo pubblico `Dispose` (metodo) e <xref:System.Object.Finalize%2A> metodo. `Dispose` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.  
  
 Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Windows.Forms.ComboBox> fa riferimento. Il metodo richiama il metodo `Dispose` di ciascun oggetto cui viene fatto riferimento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            Il metodo <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. Quando si esegue l'override <see langword="Dispose(Boolean)" /> prestare attenzione a non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata a <see langword="Dispose" />. Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Per ulteriori informazioni su <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [si esegue l'override del metodo Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questo evento non è pertinente per questa classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene modificato un aspetto visivo di un oggetto <see cref="T:System.Windows.Forms.ComboBox" /> disegnato dal proprietario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene utilizzato da un proprietario <xref:System.Windows.Forms.ComboBox>. È possibile utilizzare questo evento per eseguire le attività necessarie per disegnare gli elementi nel <xref:System.Windows.Forms.ComboBox>. Se si dispone di un elemento con dimensioni variabili (quando il <xref:System.Windows.Forms.ComboBox.DrawMode%2A?displayProperty=nameWithType> è impostata sul `OwnerDrawVariable` valore <xref:System.Windows.Forms.DrawMode?displayProperty=nameWithType>), prima di disegnare un elemento, il <xref:System.Windows.Forms.ComboBox.MeasureItem> viene generato l'evento. È possibile creare un gestore eventi per il <xref:System.Windows.Forms.ComboBox.MeasureItem> evento per specificare le dimensioni dell'elemento che si intende creare nel gestore eventi per il <xref:System.Windows.Forms.ComboBox.DrawItem> evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una casella combinata proprietario impostando il <xref:System.Windows.Forms.ComboBox.DrawMode%2A> proprietà `OwnerDrawnVariable` e la gestione di <xref:System.Windows.Forms.ComboBox.DrawItem> e <xref:System.Windows.Forms.ComboBox.MeasureItem> eventi. Viene inoltre illustrato come impostare il <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> e <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form. Chiamare il `InitializeComboBox` metodo nel costruttore del form o <xref:System.Windows.Forms.Form.Load> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawMode As DrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawMode DrawMode { System::Windows::Forms::DrawMode get(); void set(System::Windows::Forms::DrawMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il codice o il sistema operativo potrà gestire il disegno degli elementi contenuti nell'elenco.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Windows.Forms.DrawMode" />. Il valore predefinito è <see cref="F:System.Windows.Forms.DrawMode.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una casella combinata proprietario impostando il <xref:System.Windows.Forms.ComboBox.DrawMode%2A> proprietà `OwnerDrawnVariable` e la gestione di <xref:System.Windows.Forms.ComboBox.DrawItem> e <xref:System.Windows.Forms.ComboBox.MeasureItem> eventi. Viene inoltre illustrato come impostare il <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> e <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form. Chiamare il `InitializeComboBox` metodo nel costruttore del form o <xref:System.Windows.Forms.Form.Load> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore non è un valore di enumerazione di <see cref="T:System.Windows.Forms.DrawMode" /> valido.</exception>
        <altmember cref="T:System.Windows.Forms.DrawMode" />
        <altmember cref="E:System.Windows.Forms.ComboBox.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ComboBox.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="DropDown">
      <MemberSignature Language="C#" Value="public event EventHandler DropDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DropDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene visualizzata la parte a discesa di un oggetto <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inizializzare un <xref:System.Windows.Forms.ComboBox> controllo impostando la proprietà text e utilizzando il <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metodo per popolare il <xref:System.Windows.Forms.ComboBox>. Viene inoltre illustrato come la gestione di <xref:System.Windows.Forms.ComboBox.DropDown> evento. Per eseguire l'esempio, incollare il codice seguente in un form e chiamare il `InitializeComboBox` metodo nel costruttore del form o <xref:System.Windows.Forms.Form.Load> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ComboBox.DropDownClosed" />
      </Docs>
    </Member>
    <Member MemberName="DropDownClosed">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DropDownClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la parte a discesa di <see cref="T:System.Windows.Forms.ComboBox" /> non è più visibile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ComboBox.DropDownClosed> evento per ripristinare lo stato del <xref:System.Windows.Forms.ComboBox> dalle modifiche apportate in risposta al <xref:System.Windows.Forms.ComboBox.DropDown> evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ComboBox.DropDownClosed> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ComboBox> denominato `ComboBox1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ComboBox.DropDownClosed> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#168](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#168)]
 [!code-vb[System.Windows.Forms.EventExamples#168](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#168)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ComboBox.DropDown" />
      </Docs>
    </Member>
    <Member MemberName="DropDownHeight">
      <MemberSignature Language="C#" Value="public int DropDownHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DropDownHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DropDownHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DropDownHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'altezza in pixel della parte a discesa di <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <value>Altezza, in pixel, della casella di riepilogo a discesa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazione di <xref:System.Windows.Forms.ComboBox.DropDownHeight%2A> proprietà Reimposta il <xref:System.Windows.Forms.ComboBox.IntegralHeight%2A> proprietà `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore specificato è minore di 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBoxStyle DropDownStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ComboBoxStyle DropDownStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DropDownStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownStyle As ComboBoxStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBoxStyle DropDownStyle { System::Windows::Forms::ComboBoxStyle get(); void set(System::Windows::Forms::ComboBoxStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBoxStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica lo stile della casella combinata.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Forms.ComboBoxStyle" />. Il valore predefinito è <see langword="DropDown" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> proprietà specifica se viene sempre visualizzato un elenco o se viene visualizzato l'elenco in un elenco a discesa. Il <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> proprietà specifica inoltre se è possibile modificare la parte di testo. Vedere <xref:System.Windows.Forms.ComboBoxStyle> per le impostazioni disponibili e gli effetti. Non è disponibile alcuna impostazione sempre visualizzare l'elenco e impedire l'immissione di un nuovo valore. Per visualizzare un elenco a cui non è possibile aggiungere alcun nuovo valore, utilizzare un <xref:System.Windows.Forms.ListBox> controllo.  
  
   
  
## Examples  
 L'esempio di codice seguente viene illustrato come impostare il <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form. Chiamare il `InitializeComboBox` metodo nel costruttore del form o <xref:System.Windows.Forms.Form.Load> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore assegnato non è uno dei valori di <see cref="T:System.Windows.Forms.ComboBoxStyle" />.</exception>
        <altmember cref="T:System.Windows.Forms.ComboBoxStyle" />
      </Docs>
    </Member>
    <Member MemberName="DropDownStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DropDownStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownStyleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> viene modificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ComboBox.DropDownStyleChanged> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ComboBox> denominato `ComboBox1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ComboBox.DropDownStyleChanged> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#166](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#166)]
 [!code-vb[System.Windows.Forms.EventExamples#166](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#166)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownWidth">
      <MemberSignature Language="C#" Value="public int DropDownWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DropDownWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DropDownWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DropDownWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la larghezza della parte a discesa di una casella combinata.</summary>
        <value>Larghezza in pixel della casella di riepilogo a discesa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è stato impostato un valore per il <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A>, questa proprietà restituisce il <xref:System.Windows.Forms.Control.Width%2A> della casella combinata.  
  
> [!NOTE]
>  La larghezza dell'elenco a discesa non può essere minore di <xref:System.Windows.Forms.ComboBox> larghezza.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una casella combinata proprietario impostando il <xref:System.Windows.Forms.ComboBox.DrawMode%2A> proprietà `OwnerDrawnVariable` e la gestione di <xref:System.Windows.Forms.ComboBox.DrawItem> e <xref:System.Windows.Forms.ComboBox.MeasureItem> eventi. Viene inoltre illustrato come impostare il <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> e <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form. Chiamare il `InitializeComboBox` metodo nel costruttore del form o <xref:System.Windows.Forms.Form.Load> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore specificato è minore di 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="DroppedDown">
      <MemberSignature Language="C#" Value="public bool DroppedDown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DroppedDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DroppedDown" />
      <MemberSignature Language="VB.NET" Value="Public Property DroppedDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DroppedDown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la parte a discesa della casella combinata è visualizzata.</summary>
        <value>
          <see langword="true" /> se l'elenco a discesa è visualizzato; in caso contrario, <see langword="false" />. Il valore predefinito è false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Riprende il disegno del controllo <see cref="T:System.Windows.Forms.ComboBox" /> dopo la sospensione da parte del metodo <see cref="M:System.Windows.Forms.ComboBox.BeginUpdate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La modalità preferita per aggiungere elementi al <xref:System.Windows.Forms.ComboBox> consiste nell'utilizzare il <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metodo il <xref:System.Windows.Forms.ComboBox.ObjectCollection> classe (tramite il <xref:System.Windows.Forms.ComboBox.Items%2A> proprietà del <xref:System.Windows.Forms.ComboBox>). In questo modo è possibile aggiungere una matrice di elementi all'elenco in una sola volta. Tuttavia, se si desidera aggiungere gli elementi uno alla volta, tramite il <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> metodo il <xref:System.Windows.Forms.ComboBox.ObjectCollection> (classe), è possibile utilizzare il <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> per impedire il controllo di aggiornamento il <xref:System.Windows.Forms.ComboBox> ogni volta che un elemento viene aggiunto all'elenco. Dopo aver completato l'attività di aggiunta all'elenco di elementi, chiamare il <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> metodo per abilitare il <xref:System.Windows.Forms.ComboBox> per ridisegnare. In questo modo, è possibile evitare lo sfarfallio il <xref:System.Windows.Forms.ComboBox> quando un numero elevato di elementi viene aggiunti all'elenco.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> e <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> metodi. L'esempio fa parte di un esempio di codice il <xref:System.Windows.Forms.ComboBox> Cenni preliminari sulla classe.  
  
 [!code-cpp[ComboBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#3)]
 [!code-csharp[ComboBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#3)]
 [!code-vb[ComboBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindString">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce l'indice del primo elemento nell'oggetto <see cref="T:System.Windows.Forms.ComboBox" /> che inizia con la stringa specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Oggetto <see cref="T:System.String" /> da cercare.</param>
        <summary>Restituisce l'indice del primo elemento nell'oggetto <see cref="T:System.Windows.Forms.ComboBox" /> che inizia con la stringa specificata.</summary>
        <returns>Indice in base zero del primo elemento trovato; restituisce -1 se non vengono trovate corrispondenze.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ricerca eseguita da questo metodo non è tra maiuscole e minuscole. Il `s` parametro è una sottostringa da confrontare con il testo associato agli elementi nell'elenco della casella combinata. La ricerca individua una corrispondenza parziale, a partire dall'inizio del testo e restituisce il primo elemento nell'elenco che corrisponde alla sottostringa specificata. È quindi possibile eseguire attività, ad esempio la rimozione dell'elemento che contiene il testo di ricerca tramite la <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> metodo o la modifica del testo dell'elemento. Dopo aver trovato il testo specificato, se si desidera cercare altre istanze del testo nel <xref:System.Windows.Forms.ComboBox>, è necessario utilizzare la versione del <xref:System.Windows.Forms.ComboBox.FindString%2A> metodo che fornisce un parametro per specificare un indice iniziale all'interno di <xref:System.Windows.Forms.ComboBox>. Se si desidera eseguire una ricerca di una corrispondenza esatta anziché una corrispondenza parziale, utilizzare il <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Windows.Forms.ComboBox.FindString%2A> (metodo) e <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> proprietà. L'esempio fa parte di un esempio di codice completo nel <xref:System.Windows.Forms.ComboBox> Cenni preliminari sulla classe.  
  
 [!code-cpp[ComboBox#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#4)]
 [!code-csharp[ComboBox#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#4)]
 [!code-vb[ComboBox#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindString(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">Oggetto <see cref="T:System.String" /> da cercare.</param>
        <param name="startIndex">Indice in base zero dell'elemento che precede il primo elemento da cercare. Impostare su -1 per avviare la ricerca dall'inizio del controllo.</param>
        <summary>Restituisce l'indice del primo elemento in <see cref="T:System.Windows.Forms.ComboBox" /> successivo all'indice specificato che contiene la stringa specificata. Alla ricerca non viene applicata la distinzione tra maiuscole e minuscole.</summary>
        <returns>Indice in base zero del primo elemento trovato; restituisce -1 se non vengono trovate corrispondenze oppure 0 se il parametro <paramref name="s" /> specifica <see cref="F:System.String.Empty" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ricerca eseguita da questo metodo non è tra maiuscole e minuscole. Il `s` parametro è una sottostringa da confrontare con il testo associato agli elementi nell'elenco della casella combinata. La ricerca individua una corrispondenza parziale a partire dall'inizio del testo, restituisce il primo elemento nell'elenco che corrisponde alla sottostringa specificata. È quindi possibile eseguire attività, ad esempio la rimozione dell'elemento che contiene il testo di ricerca tramite la <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> metodo o la modifica del testo dell'elemento. Questo metodo viene in genere utilizzato dopo aver effettuata una chiamata utilizzando la versione di questo metodo che non specifica un indice iniziale. Dopo aver individuato un elemento iniziale nell'elenco, questo metodo viene in genere utilizzato per trovare ulteriori istanze del testo di ricerca specificando la posizione dell'indice nel `startIndex` parametro dell'elemento dopo la prima occorrenza del testo di ricerca. Se si desidera eseguire una ricerca di una corrispondenza esatta anziché una corrispondenza parziale, utilizzare il <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> è minore di -1.  
  
 oppure  
  
 Il parametro <paramref name="startIndex" /> è maggiore dell'ultimo indice contenuto nell'insieme.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindStringExact">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Trova l'elemento che corrisponde esattamente alla stringa specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindStringExact(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Oggetto <see cref="T:System.String" /> da cercare.</param>
        <summary>Trova il primo elemento nella casella combinata che corrisponde alla stringa specificata.</summary>
        <returns>Indice in base zero del primo elemento trovato; restituisce -1 se non vengono trovate corrispondenze oppure 0 se il parametro <paramref name="s" /> specifica <see cref="F:System.String.Empty" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ricerca eseguita da questo metodo non è tra maiuscole e minuscole. Il `s` parametro è una stringa da confrontare con il testo associato agli elementi nell'elenco della casella combinata. La ricerca per trovare una corrispondenza a partire dall'inizio del testo, restituisce il primo elemento nell'elenco che corrisponde alla sottostringa specificata. È quindi possibile eseguire attività, ad esempio la rimozione dell'elemento che contiene il testo di ricerca tramite la <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> metodo o la modifica del testo dell'elemento. Dopo aver trovato il testo specificato, se si desidera cercare altre istanze del testo nel <xref:System.Windows.Forms.ComboBox>, è necessario utilizzare la versione del <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> metodo che fornisce un parametro per specificare un indice iniziale all'interno di <xref:System.Windows.Forms.ComboBox>. Se si desidera eseguire una ricerca di parole parziali anziché una corrispondenza esatta, utilizzare il <xref:System.Windows.Forms.ComboBox.FindString%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inizializzare un <xref:System.Windows.Forms.ComboBox> controllo impostando il <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> e <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> le proprietà e usando il <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> metodi per la ricerca di <xref:System.Windows.Forms.ComboBox>. Inoltre illustrato come gestire il <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindStringExact(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">Oggetto <see cref="T:System.String" /> da cercare.</param>
        <param name="startIndex">Indice in base zero dell'elemento che precede il primo elemento da cercare. Impostare su -1 per avviare la ricerca dall'inizio del controllo.</param>
        <summary>Trova il primo elemento dopo l'indice specificato che corrisponde alla stringa indicata.</summary>
        <returns>Indice in base zero del primo elemento trovato; restituisce -1 se non vengono trovate corrispondenze oppure 0 se il parametro <paramref name="s" /> specifica <see cref="F:System.String.Empty" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ricerca eseguita da questo metodo non è tra maiuscole e minuscole. Il `s` parametro è una stringa da confrontare con il testo associato agli elementi nell'elenco della casella combinata. La ricerca per trovare una corrispondenza a partire dall'inizio del testo, restituisce il primo elemento nell'elenco che corrisponde alla sottostringa specificata. È quindi possibile eseguire attività, ad esempio la rimozione dell'elemento che contiene il testo di ricerca tramite la <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> metodo o la modifica del testo dell'elemento. Questo metodo viene in genere utilizzato dopo aver effettuata una chiamata utilizzando la versione di questo metodo che non specifica un indice iniziale. Dopo aver individuato un elemento iniziale nell'elenco, questo metodo viene in genere utilizzato per trovare ulteriori istanze del testo di ricerca specificando la posizione dell'indice nel `startIndex` parametro dell'elemento dopo la prima occorrenza del testo di ricerca. Se si desidera eseguire una ricerca di parole parziali anziché una corrispondenza esatta, utilizzare il <xref:System.Windows.Forms.ComboBox.FindString%2A> metodo.  
  
 Ricerca eseguita da questo metodo è circolare. Anche se la ricerca inizia in corrispondenza dell'indice successivo dopo il `startIndex` parametro, la ricerca viene riavviato da 0 quando viene raggiunta la fine della raccolta. Tuttavia, si noti che se il `startIndex` parametro è uguale all'ultimo indice nella raccolta, viene generata un'eccezione.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inizializzare un <xref:System.Windows.Forms.ComboBox> controllo impostando il <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> e <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> le proprietà e usando il <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> metodi per la ricerca di <xref:System.Windows.Forms.ComboBox>. Inoltre illustrato come gestire il <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> è minore di -1.  
  
 oppure  
  
 Il parametro <paramref name="startIndex" /> è uguale all'ultimo indice contenuto nell'insieme.</exception>
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'aspetto dell'oggetto <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <value>Uno dei valori di enumerazione che specifica l'aspetto del controllo. Le opzioni sono <see langword="Flat" />, <see langword="Popup" />, <see langword="Standard" /> e <see langword="System" />. Il valore predefinito è <see langword="Standard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A partire da .NET Framework 4.5.2, se il <xref:System.Windows.Forms.ComboBox.FlatStyle%2A> è impostata su <xref:System.Windows.Forms.FlatStyle.Flat> o <xref:System.Windows.Forms.FlatStyle.Popup>, la freccia a discesa può essere ridimensionata. Il ridimensionamento è determinato dall'impostazione DPI di sistema quando il file app. config contiene la voce seguente:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore specificato non è uno dei valori dell'oggetto <see cref="T:System.Windows.Forms.FlatStyle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public override bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Windows.Forms.ComboBox" /> ha lo stato attivo.</summary>
        <value>
          <see langword="true" /> se il controllo è attivo; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il colore primo piano del controllo.</summary>
        <value>Colore primo piano del controllo. Il valore predefinito corrisponde al valore della proprietà <see cref="P:System.Windows.Forms.Control.DefaultForeColor" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemHeight">
      <MemberSignature Language="C#" Value="public int GetItemHeight (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetItemHeight(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.GetItemHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemHeight (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetItemHeight(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indice dell'elemento di cui restituire l'altezza.</param>
        <summary>Restituisce l'altezza di un elemento nell'oggetto <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <returns>Altezza in pixel dell'elemento in corrispondenza dell'indice specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.Windows.Forms.ComboBox.DrawMode%2A> non è impostata su `OwnerDrawVariable`, il valore della `index` parametro viene ignorato perché tutti gli elementi standard <xref:System.Windows.Forms.ComboBox> sono della stessa dimensione. È possibile utilizzare questa proprietà quando si utilizza un proprietario <xref:System.Windows.Forms.ComboBox> per determinare le dimensioni di qualsiasi elemento all'interno di <xref:System.Windows.Forms.ComboBox>.  
  
 Per ulteriori informazioni su come specificare l'altezza degli elementi contenuti in un elenco di proprietario, vedere <xref:System.Windows.Forms.ComboBox.MeasureItem> evento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> è minore di zero.  
  
 oppure  
  
 Il parametro <paramref name="index" /> è maggiore del numero di elementi contenuti nell'elenco.</exception>
      </Docs>
    </Member>
    <Member MemberName="IntegralHeight">
      <MemberSignature Language="C#" Value="public bool IntegralHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IntegralHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.IntegralHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property IntegralHeight As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IntegralHeight { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il controllo deve essere ridimensionato per evitare di visualizzare elementi parziali.</summary>
        <value>
          <see langword="true" /> se l'elenco può contenere unicamente elementi completi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando questa proprietà è impostata su `true`, il controllo viene ridimensionato automaticamente per impedire la visualizzazione parziale di un elemento. Se si desidera mantenere le dimensioni originali del <xref:System.Windows.Forms.ComboBox> in base ai requisiti di spazio del form, impostare questa proprietà su `false`. Se il <xref:System.Windows.Forms.ComboBox> non contiene alcun elemento, questa proprietà non ha alcun effetto.  
  
 Impostazione di <xref:System.Windows.Forms.ComboBox.DropDownHeight%2A> proprietà Reimposta il <xref:System.Windows.Forms.ComboBox.IntegralHeight%2A> proprietà `false`.  
  
> [!NOTE]
>  Se il <xref:System.Windows.Forms.ComboBox.DrawMode%2A> è impostata su `OwnerDrawVariable`, questa proprietà non ha alcun effetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Uno dei valori di <see cref="T:System.Windows.Forms.Keys" />.</param>
        <summary>Determina se il tasto specificato è un normale tasto di input o un tasto speciale che richiede una pre-elaborazione.</summary>
        <returns>
          <see langword="true" /> se il tasto specificato è un normale tasto di input; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ComboBox.IsInputKey%2A> restituisce `true` quando il `keyData` parametro include il <xref:System.Windows.Forms.Keys.Return> o <xref:System.Windows.Forms.Keys.Escape> valore e il <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> proprietà `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'altezza di un elemento nella casella combinata.</summary>
        <value>Altezza in pixel di un elemento nella casella combinata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Windows.Forms.ComboBox.DrawMode%2A> è impostata su `OwnerDrawFixed`, tutti gli elementi hanno la stessa altezza. Quando il <xref:System.Windows.Forms.DrawMode> è impostata su `OwnerDrawVariable`, <xref:System.Windows.Forms.ComboBox.ItemHeight%2A> proprietà specifica l'altezza di ogni elemento aggiunto al <xref:System.Windows.Forms.ComboBox>. Perché ogni elemento in un elenco di proprietario può avere un'altezza differente, è possibile utilizzare il <xref:System.Windows.Forms.ComboBox.GetItemHeight%2A> metodo per ottenere l'altezza di un elemento specifico di <xref:System.Windows.Forms.ComboBox>. Se si utilizza il <xref:System.Windows.Forms.ComboBox.ItemHeight%2A> proprietà in un <xref:System.Windows.Forms.ComboBox> con elementi di altezza variabile, questa proprietà restituisce l'altezza del primo elemento nel controllo.  
  
 Per ulteriori informazioni su come specificare l'altezza degli elementi contenuti in un elenco di proprietario, vedere <xref:System.Windows.Forms.ComboBox.MeasureItem> evento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore dell'altezza dell'elemento è minore di zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ComboBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ComboBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBox::ObjectCollection ^ Items { System::Windows::Forms::ComboBox::ObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto che rappresenta la raccolta degli elementi contenuti in <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <value>Oggetto <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> che rappresenta gli elementi contenuti in <see cref="T:System.Windows.Forms.ComboBox" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di ottenere un riferimento all'elenco di elementi che sono attualmente archiviati nel <xref:System.Windows.Forms.ComboBox>. Con questo riferimento, è possibile aggiungere elementi, rimuovere gli elementi e di ottenere il conteggio degli elementi nella raccolta.  
  
 Sebbene il <xref:System.Windows.Forms.ComboBox> è in genere utilizzato per visualizzare gli elementi di testo, è possibile aggiungere qualsiasi oggetto per il <xref:System.Windows.Forms.ComboBox>. In genere, la rappresentazione di un oggetto di <xref:System.Windows.Forms.ComboBox> è la stringa restituita da tale oggetto <xref:System.Object.ToString%2A> metodo. Se si desidera disporre di un membro dell'oggetto visualizzato, scegliere il membro che verrà visualizzato impostando il <xref:System.Windows.Forms.ListControl.DisplayMember%2A> proprietà sul nome del membro appropriato. È anche possibile scegliere un membro dell'oggetto che rappresenta il valore restituito dall'oggetto impostando il <xref:System.Windows.Forms.ListControl.ValueMember%2A> proprietà. Per ulteriori informazioni, vedere <xref:System.Windows.Forms.ListControl>.  
  
 Per ulteriori informazioni sulle attività che possono essere eseguite con la raccolta di elementi, vedere il <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> argomenti relativi alla classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come aggiungere un numero ridotto di <xref:System.Windows.Forms.ComboBox> elementi. Se è necessario aggiungere un numero elevato di elementi, vedere l'esempio in <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A>. Entrambi gli esempi fanno parte di un esempio più esaustivo disponibile nel <xref:System.Windows.Forms.ComboBox> Cenni preliminari sulla classe.  
  
 [!code-cpp[ComboBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#2)]
 [!code-csharp[ComboBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#2)]
 [!code-vb[ComboBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownItems">
      <MemberSignature Language="C#" Value="public int MaxDropDownItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDropDownItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MaxDropDownItems" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDropDownItems As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDropDownItems { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero massimo di elementi da visualizzare nell'elenco a discesa di <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <value>Numero massimo di elementi nella parte a discesa. Il valore minimo per la proprietà è 1, il valore massimo è 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inizializzare un <xref:System.Windows.Forms.ComboBox> controllo impostando il <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> e <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> le proprietà e usando il <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> metodi per la ricerca di <xref:System.Windows.Forms.ComboBox>. Inoltre illustrato come gestire il <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il numero massimo viene impostato su un valore minore di 1 o maggiore di 100.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la dimensione che rappresenta il limite superiore specificabile dal metodo <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />.</summary>
        <value>Coppia ordinata di tipo <see cref="T:System.Drawing.Size" /> che rappresenta la larghezza e l'altezza di un rettangolo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di caratteri che un utente può digitare in <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <value>Numero massimo di caratteri che un utente può immettere. I valori minori di zero vengono reimpostati su zero, che corrisponde al valore predefinito.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica ogni volta che è necessario creare un elemento <see cref="T:System.Windows.Forms.ComboBox" /> disegnato dal proprietario e quando vengono stabilite le dimensioni degli elementi dell'elenco.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un gestore eventi per questo evento per specificare le dimensioni di un elemento prima che venga disegnata <xref:System.Windows.Forms.ComboBox.DrawItem> evento.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una casella combinata proprietario impostando il <xref:System.Windows.Forms.ComboBox.DrawMode%2A> proprietà `OwnerDrawnVariable` e la gestione di <xref:System.Windows.Forms.ComboBox.DrawItem> e <xref:System.Windows.Forms.ComboBox.MeasureItem> eventi. Viene inoltre illustrato come impostare il <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> e <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> proprietà. Per eseguire l'esempio, incollare il codice seguente in un form. Chiamare il `InitializeComboBox` metodo nel costruttore del form o <xref:System.Windows.Forms.Form.Load> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la dimensione che rappresenta il limite inferiore specificabile dal metodo <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />.</summary>
        <value>Coppia ordinata di tipo <see cref="T:System.Drawing.Size" /> che rappresenta la larghezza e l'altezza di un rettangolo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.BackColorChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayMemberChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDisplayMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayMemberChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ComboBox.DrawItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato ogni volta che un proprietario <xref:System.Windows.Forms.ComboBox> elemento deve essere disegnato e dopo <xref:System.Windows.Forms.ComboBox.OnMeasureItem%2A> viene chiamato. Per ulteriori informazioni, vedere <xref:System.Windows.Forms.ComboBox.DrawItem>.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnDrawItem%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ComboBox.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="OnDropDown">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDown (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDown(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDown (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDown(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ComboBox.DropDown" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che viene visualizzato l'elenco a discesa.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnDropDown%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownClosed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ComboBox.DropDownClosed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnDropDownClosed%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ComboBox.DropDownClosed" />
      </Docs>
    </Member>
    <Member MemberName="OnDropDownStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownStyleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ComboBox.DropDownStyleChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato quando si imposta <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> su un nuovo valore.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnDropDownStyleChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.FontChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnForeColorChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.ForeColorChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.GotFocus" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnGotFocus%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnHandleCreated%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnHandleDestroyed%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.KeyEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.KeyDown" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnKeyDown%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.KeyPress" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il valore del <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> proprietà di `e` è <xref:System.Windows.Forms.Keys.Return> o <xref:System.Windows.Forms.Keys.Escape> e <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> proprietà `true`, il <xref:System.Windows.Forms.ComboBox.OnKeyPress%2A> metodo imposta <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> per `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.LostFocus" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnLostFocus%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Evento <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> che è stato generato.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ComboBox.MeasureItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato ogni volta che un proprietario <xref:System.Windows.Forms.ComboBox> elemento deve essere disegnato e prima <xref:System.Windows.Forms.ComboBox.OnDrawItem%2A> viene chiamato. Per ulteriori informazioni, vedere <xref:System.Windows.Forms.ComboBox.MeasureItem>.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnMeasureItem%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.MeasureItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ComboBox.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.MouseEnter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnMouseEnter%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnMouseLeave%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnParentBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentBackColorChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.BackColorChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnParentBackColorChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.Resize" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnResize%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato quando si seleziona un nuovo elemento dall'elenco o quando si imposta la <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> proprietà.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnSelectedIndexChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedItemChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato quando si seleziona un nuovo elemento dall'elenco o quando si imposta la <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> proprietà.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnSelectedItemChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedValueChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnSelectedValueChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChangeCommitted">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChangeCommitted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChangeCommitted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChangeCommitted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChangeCommitted(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> viene generato solo quando l'utente modifica la selezione della casella combinata o quando si imposta la <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>. Tuttavia, a seconda della modalità di <xref:System.Windows.Forms.ComboBox> è configurato, e come l'utente cambia l'elemento selezionato, il <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> evento non può essere generato. In alternativa, è possibile gestire il <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>, ma si noti che questo evento si verifica se l'indice viene modificato a livello di codice o dall'utente.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> evento e <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> proprietà per modificare la lunghezza della casella di testo a seconda di ciò che l'utente ha selezionato e il commit.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.TextChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnTextChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTextUpdate">
      <MemberSignature Language="C#" Value="protected virtual void OnTextUpdate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextUpdate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextUpdate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextUpdate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.ComboBox.TextUpdate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnTextUpdate%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ComboBox.TextUpdate" />
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected override void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.CancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Windows.Forms.Control.Validating" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per ulteriori informazioni, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Windows.Forms.ComboBox.OnValidating%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> in una classe derivata, verificare di chiamare il metodo <see cref="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> della classe di base in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà non è pertinente per questa classe.</summary>
        <value>Valore <see cref="T:System.Windows.Forms.Padding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questo evento non è pertinente per questa classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il controllo <see cref="T:System.Windows.Forms.ComboBox" /> viene ridisegnato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento non è pertinente per questa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'altezza preferita di <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <value>Altezza preferita in pixel dell'area dell'elemento della casella combinata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'altezza preferita è un valore basato su una regolazione per il bordo e l'altezza del tipo di carattere.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Oggetto messaggio, passato per riferimento, che rappresenta il messaggio della finestra da elaborare.</param>
        <summary>Elabora un messaggio relativo ai tasti e generare gli eventi appropriati del controllo.</summary>
        <returns>
          <see langword="true" /> se il messaggio è stato elaborato dal controllo; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItem">
      <MemberSignature Language="C#" Value="protected override void RefreshItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.RefreshItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Posizione dell'elemento da aggiornare.</param>
        <summary>Aggiorna l'elemento contenuto nella posizione specificata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="protected override void RefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aggiorna tutti gli elementi <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public override void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reimposta il valore predefinito della proprietà <see cref="P:System.Windows.Forms.Control.Text" /> (<see cref="F:System.String.Empty" />).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">Fattore di scala per l'altezza e la larghezza del controllo.</param>
        <param name="specified">Valore che specifica i limiti del controllo da usare per definirne le dimensioni e la posizione.</param>
        <summary>Scala la posizione, le dimensioni, la spaziatura interna e il margine di un controllo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">Posizione del primo carattere nella selezione di testo corrente all'interno della casella di testo.</param>
        <param name="length">Numero di caratteri da selezionare.</param>
        <summary>Seleziona un intervallo di testo nella parte modificabile dell'oggetto <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si desidera impostare la posizione iniziale per il primo carattere del testo del controllo, impostare il `start` parametro a zero. È possibile utilizzare questo metodo per selezionare una sottostringa di testo, ad esempio, quando ricerca attraverso il testo del controllo e informazioni di sostituzione.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> Restituisce il valore più basso della selezione corrente. Ad esempio, `Select(10, -4)` seleziona il testo dalla posizione del carattere 6 alla posizione 10. Se ora si ottiene il <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> valore, sarà 6 anziché 10.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="start" /> è minore di zero.  
  
 oppure  
  
 <paramref name="start" /> più <paramref name="length" /> hanno un valore minore di zero.</exception>
        <altmember cref="P:System.Windows.Forms.ComboBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Seleziona tutto il testo nella parte modificabile dell'oggetto <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public override int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'indice che specifica l'elemento selezionato.</summary>
        <value>Indice in base zero dell'elemento attualmente selezionato. Se non è stato selezionato alcun elemento, verrà restituito il valore uno negativo (-1).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà indica l'indice in base zero dell'elemento attualmente selezionato nell'elenco della casella combinata. L'impostazione di un nuovo indice genera il <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> evento.  
  
 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, e <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> sono correlati nel modo seguente:  
  
-   Se <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> è `false`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> viene impostata su-1 quando <xref:System.Windows.Forms.ListControl.SelectedValue%2A> è vuoto.  
  
-   Se <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> è `true`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> verrà impostato su-1 quando <xref:System.Windows.Forms.ListControl.SelectedValue%2A> è vuoto.  
  
> [!NOTE]
>  Per deselezionare l'elemento attualmente selezionato, impostare il <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> su -1. Non è possibile impostare il <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> di un <xref:System.Windows.Forms.ComboBox> elemento su -1 se l'elemento è un elemento di associazione a dati.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Windows.Forms.ComboBox.FindString%2A> (metodo) e <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> proprietà. L'esempio fa parte di un esempio più esaustivo di <xref:System.Windows.Forms.ComboBox> Cenni preliminari sulla classe.  
  
 [!code-cpp[ComboBox#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#4)]
 [!code-csharp[ComboBox#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#4)]
 [!code-vb[ComboBox#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice specificato è minore o uguale a -2.  
  
 oppure  
  
 L'indice specificato è maggiore di o uguale al numero di elementi contenuti nella casella combinata.</exception>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.ListControl.FormattingEnabled" />
        <altmember cref="P:System.Windows.Forms.ListControl.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la proprietà <see cref="P:System.Windows.Forms.ComboBox.SelectedIndex" /> viene modificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare un gestore eventi per questo evento determinare quando l'indice selezionato nel <xref:System.Windows.Forms.ComboBox> è stata modificata. Può essere utile quando è necessario visualizzare le informazioni in altri controlli in base alla selezione corrente nella <xref:System.Windows.Forms.ComboBox>. È possibile utilizzare il gestore eventi per questo evento per caricare le informazioni contenute in altri controlli.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inizializzare un <xref:System.Windows.Forms.ComboBox> controllo impostando il <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> e <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> le proprietà e usando il <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> metodi per la ricerca di <xref:System.Windows.Forms.ComboBox>. Inoltre illustrato come gestire il <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'elemento attualmente selezionato in <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <value>Oggetto corrispondente all'elemento attualmente selezionato oppure <see langword="null" /> se non è attualmente selezionato alcun elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si imposta la <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> proprietà a un oggetto, il <xref:System.Windows.Forms.ComboBox> tentativi che quella attualmente selezionata nell'elenco dell'oggetto. Se l'oggetto viene trovato nell'elenco, viene visualizzato nella parte modificabile del <xref:System.Windows.Forms.ComboBox> e <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> proprietà è impostata per l'indice corrispondente. Se l'oggetto non esiste nell'elenco, il <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> proprietà viene mantenuta il valore corrente.  
  
> [!NOTE]
>  Il <xref:System.Windows.Forms.ComboBox> classe Cerca l'oggetto specificato utilizzando il <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> metodo. Questo metodo Usa il <xref:System.Object.Equals%2A> metodo per determinare l'uguaglianza.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> e <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> proprietà. L'esempio fa parte di un esempio di codice completo nel <xref:System.Windows.Forms.ComboBox> Cenni preliminari sulla classe.  
  
 [!code-cpp[ComboBox#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#5)]
 [!code-csharp[ComboBox#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#5)]
 [!code-vb[ComboBox#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo selezionato nella parte modificabile di un oggetto <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <value>Stringa che rappresenta il testo selezionato nella casella combinata. Se la proprietà <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> è impostata su <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList" />, il valore restituito sarà una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Windows.Forms.ComboBox.SelectedText%2A> proprietà da recuperare o modificare il testo attualmente selezionato in un <xref:System.Windows.Forms.ComboBox> controllo. Tuttavia, è necessario tenere presente che è possibile modificare la selezione automaticamente a causa di interazione dell'utente. Ad esempio, se si recupera la <xref:System.Windows.Forms.ComboBox.SelectedText%2A> valore in un pulsante <xref:System.Windows.Forms.Control.Click> gestore dell'evento, il valore sarà una stringa vuota. Questo avviene perché la selezione viene cancellata automaticamente quando si sposta lo stato attivo dalla casella combinata sul pulsante.  
  
 Quando la casella combinata perde lo stato attivo, il punto di selezione si sposta all'inizio del testo e qualsiasi testo selezionato viene deselezionato. In questo caso, il recupero di <xref:System.Windows.Forms.ComboBox.SelectedText%2A> proprietà recupera una stringa vuota e impostazione di <xref:System.Windows.Forms.ComboBox.SelectedText%2A> proprietà aggiunge il valore specificato all'inizio del testo.  
  
 Quando la casella combinata Ottiene lo stato attivo, il testo completo del controllo viene selezionato automaticamente. Se si chiama il controllo <xref:System.Windows.Forms.Control.Focus%2A> è selezionata per impostare lo stato attivo, il testo completo indipendentemente dal fatto che il controllo avesse già lo stato attivo.  
  
 Quando l'utente seleziona un elemento dall'elenco a discesa o utilizzando i tasti freccia su e freccia giù, viene selezionato automaticamente il testo per il nuovo elemento. Tuttavia, se si tenta di ottenere il <xref:System.Windows.Forms.ComboBox.SelectedText%2A> valore in un <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> o <xref:System.Windows.Forms.ListControl.SelectedValueChanged> gestore dell'evento, la proprietà restituisce una stringa vuota. Questo avviene perché, al momento di questi eventi, il precedente <xref:System.Windows.Forms.ComboBox.SelectedText%2A> valore è stato cancellato e il nuovo valore non è ancora stato impostato. Per recuperare il valore corrente in un <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> o <xref:System.Windows.Forms.ListControl.SelectedValueChanged> gestore dell'evento, utilizzare il <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> proprietà invece.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangeCommitted">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChangeCommitted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChangeCommitted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChangeCommitted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChangeCommitted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando l'utente modifica l'elemento selezionato e la modifica viene visualizzata in <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> evento viene generato solo quando l'utente modifica la selezione della casella combinata e se è possibile creare un gestore per questo evento per fornire una gestione speciale per il <xref:System.Windows.Forms.ComboBox> quando l'utente modifica l'elemento selezionato nell'elenco. Tuttavia, a seconda della modalità di <xref:System.Windows.Forms.ComboBox> è configurato, e come l'utente cambia l'elemento selezionato, il <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> evento non può essere generato. In alternativa, è possibile gestire il <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>, ma si noti che questo evento si verifica se l'indice viene modificato a livello di codice o dall'utente.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> evento e <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> proprietà per modificare la lunghezza della casella di testo a seconda di ciò che l'utente ha selezionato e il commit.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di caratteri selezionati nella parte modificabile della casella combinata.</summary>
        <value>Numero di caratteri selezionati nella casella combinata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa proprietà per determinare se tutti i caratteri sono attualmente selezionati nel controllo casella combinata prima di eseguire operazioni sul testo selezionato. Quando il valore della <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> è impostata su un valore che è maggiore del numero di caratteri all'interno del testo del controllo, il valore della <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> proprietà è impostata per l'intera lunghezza del testo nel controllo meno il valore di <xref:System.Windows.Forms.ComboBox.SelectionStart%2A>proprietà (se viene specificato un valore per il <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> proprietà).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore era minore di zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'indice iniziale del testo selezionato nella casella combinata.</summary>
        <value>Indice in base zero del primo carattere nella stringa della selezione di testo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è selezionato alcun testo nel controllo, questa proprietà indica il punto di inserimento per il nuovo testo. Se si imposta questa proprietà in una posizione oltre la lunghezza del testo nel controllo, la posizione iniziale della selezione viene posizionata dopo l'ultimo carattere. Quando viene selezionato testo nel controllo casella di testo, la modifica di questa proprietà può rilasciare il valore di <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> proprietà. Se il testo rimanente nel controllo dopo la posizione indicata dal <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> proprietà è minore del valore del <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> proprietà, il valore della <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> della proprietà viene automaticamente ridotto. Il valore della <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> proprietà mai causa un aumento di <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> proprietà.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> Restituisce il valore più basso della selezione corrente. Ad esempio, `Select(10, -4)` seleziona il testo dalla posizione del carattere 6 alla posizione 10. Se ora si ottiene il <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> valore, sarà 6 anziché 10.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore è minore di zero.</exception>
        <altmember cref="M:System.Windows.Forms.ComboBox.Select(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">Posizione orizzontale, in pixel, del controllo.</param>
        <param name="y">Posizione verticale, in pixel, del controllo.</param>
        <param name="width">Larghezza, in pixel, del controllo.</param>
        <param name="height">Altezza, in pixel, del controllo.</param>
        <param name="specified">Uno dei valori di <see cref="T:System.Windows.Forms.BoundsSpecified" />.</param>
        <summary>Imposta la dimensione e la posizione dell'oggetto <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemCore">
      <MemberSignature Language="C#" Value="protected override void SetItemCore (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItemCore(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SetItemCore(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItemCore (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItemCore(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Indice della matrice dell'oggetto.</param>
        <param name="value">Oggetto.</param>
        <summary>Quando ne viene eseguito l'override in una classe derivata, imposta l'oggetto con l'indice specificato nella classe derivata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemsCore">
      <MemberSignature Language="C#" Value="protected override void SetItemsCore (System.Collections.IList value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItemsCore(class System.Collections.IList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SetItemsCore(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItemsCore (value As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItemsCore(System::Collections::IList ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="value">Matrice di elementi.</param>
        <summary>Quando ne viene eseguito l'override in una classe derivata, imposta la matrice di oggetti specificata in una raccolta nella classe derivata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se gli elementi nella casella combinata sono ordinati.</summary>
        <value>
          <see langword="true" /> se la casella combinata è ordinata; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà specifica se il <xref:System.Windows.Forms.ComboBox> Ordina le voci esistenti e aggiungere nuove voci nella posizione appropriata nell'elenco. È possibile utilizzare questa proprietà per l'ordinamento automatico di elementi in un <xref:System.Windows.Forms.ComboBox>. Quando vengono aggiunti a un controllo ordinato <xref:System.Windows.Forms.ComboBox>, gli elementi vengono spostati nella posizione desiderata nell'elenco ordinato. Quando si imposta la proprietà su `false`, vengono aggiunti nuovi elementi alla fine dell'elenco esistente. L'ordinamento è distinzione tra maiuscole e in ordine alfabetico crescente.  
  
 Il tentativo di impostare il <xref:System.Windows.Forms.ComboBox.Sorted%2A> genera proprietà in un controllo con associazione a dati un <xref:System.ArgumentException>. È necessario ordinare i dati utilizzando il modello di dati sottostante.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si è tentato di ordinare un oggetto <see cref="T:System.Windows.Forms.ComboBox" /> associato a un'origine dati.</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo associato a questo controllo.</summary>
        <value>Testo associato a questo controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di <xref:System.Windows.Forms.ComboBox.Text%2A> proprietà `null` o una stringa vuota ("") imposta il <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> su -1. Impostazione di <xref:System.Windows.Forms.ComboBox.Text%2A> su un valore che è nel <xref:System.Windows.Forms.ComboBox.Items%2A> set di raccolta il <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> per l'indice dell'elemento. Impostazione di <xref:System.Windows.Forms.ComboBox.Text%2A> su un valore che non si trova nell'insieme lascia il <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> subisce modifiche.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inizializzare un <xref:System.Windows.Forms.ComboBox> controllo impostando il <xref:System.Windows.Forms.ComboBox.Text%2A> proprietà e sull'utilizzo di <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> metodo per popolare il <xref:System.Windows.Forms.ComboBox>. Viene inoltre illustrato come la gestione di <xref:System.Windows.Forms.ComboBox.DropDown> evento. Per eseguire l'esempio, incollare il codice seguente in un form e chiamare il `InitializeComboBox` metodo nel costruttore del form o <xref:System.Windows.Forms.Form.Load> evento.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler TextUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextUpdate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.TextUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextUpdate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextUpdate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il controllo ha formattato il testo, ma prima che questo venga visualizzato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Forms.ComboBox.TextUpdate> evento per convalidare il testo prima che venga visualizzato. <xref:System.Windows.Forms.ComboBox.TextUpdate> non viene generato se la <xref:System.Windows.Forms.ComboBox.Text%2A> proprietà a livello di codice viene modificata.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo membro. Nell'esempio, un gestore eventi genera report sull'occorrenza del <xref:System.Windows.Forms.ComboBox.TextUpdate> evento. Questo report consente di capire quando l'evento si verifica e possa agevolare il debug. Per generare un report su più eventi o per gli eventi che si verificano di frequente, è possibile sostituire <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o aggiungere il messaggio a un controllo <xref:System.Windows.Forms.TextBox>.  
  
 Per eseguire l'esempio di codice, incollarlo in un progetto che contiene un'istanza del tipo <xref:System.Windows.Forms.ComboBox> denominato `ComboBox1`. Assicurarsi quindi che il gestore dell'evento è associato il <xref:System.Windows.Forms.ComboBox.TextUpdate> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#167](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#167)]
 [!code-vb[System.Windows.Forms.EventExamples#167](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#167)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una stringa che rappresenta il controllo <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <returns>Oggetto <see cref="T:System.String" /> che rappresenta l'oggetto <see cref="T:System.Windows.Forms.ComboBox" /> corrente. La stringa include il tipo e il numero di elementi del controllo <see cref="T:System.Windows.Forms.ComboBox" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Oggetto <see cref="T:System.Windows.Forms.Message" /> di Windows da elaborare.</param>
        <summary>Elabora i messaggi di Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i messaggi vengono inviati i <xref:System.Windows.Forms.Control.WndProc%2A> metodo filtrati tramite il <xref:System.Windows.Forms.Control.PreProcessMessage%2A> metodo.  
  
 Il metodo <xref:System.Windows.Forms.Control.WndProc%2A> corrisponde esattamente alla funzione `WindowProc` di Windows. Per ulteriori informazioni sull'elaborazione dei messaggi di Windows, vedere la `WindowProc` funzione nella documentazione di Windows Platform SDK che si trova in MSDN all'indirizzo http://msdn.microsoft.com/library.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'override di <xref:System.Windows.Forms.Control.WndProc%2A> metodo per gestire i messaggi di sistema operativo identificati nella <xref:System.Windows.Forms.Message> struttura. Il sistema operativo WM_ACTIVATEAPP viene gestito in questo esempio per sapere quando diventa attiva un'altra applicazione. Fare riferimento alla documentazione Platform SDK disponibile in MSDN all'indirizzo http://msdn.microsoft.com/library comprendere disponibili <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, e <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> valori. Valori costanti effettivi sono reperibile nel file di intestazione di Windows. h incluso nel download di Platform SDK (sezione Core SDK), è inoltre disponibile in MSDN all'indirizzo http://msdn.microsoft.com/library.  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per l'ereditarietà delle classi per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <block subset="none" type="overrides">
          <para>I controlli ereditano deve chiamare la classe base <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> metodo per elaborare i messaggi che non gestiti.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>