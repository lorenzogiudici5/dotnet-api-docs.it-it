<Type Name="ImageIndexConverter" FullName="System.Windows.Forms.ImageIndexConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8f3d90dc0e10b3448f142901f3e22b8df22c466" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36520323" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImageIndexConverter : System.ComponentModel.Int32Converter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageIndexConverter extends System.ComponentModel.Int32Converter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ImageIndexConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageIndexConverter&#xA;Inherits Int32Converter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageIndexConverter : System::ComponentModel::Int32Converter" />
  <TypeSignature Language="F#" Value="type ImageIndexConverter = class&#xA;    inherit Int32Converter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Int32Converter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un convertitore di tipi per convertire dati di un indice dell'immagine da e verso una stringa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.ImageIndexConverter> classe viene utilizzata per convertire i valori di indice di un <xref:System.Windows.Forms.ImageList> da e verso altri tipi di dati, in genere <xref:System.String>. Per ulteriori informazioni sui convertitori di tipi, vedere la <xref:System.ComponentModel.TypeConverter> classe di base e [procedura: implementare un convertitore di tipi](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
> [!NOTE]
>  In genere, è non creare direttamente un'istanza di un <xref:System.Windows.Forms.ImageIndexConverter>. In alternativa, chiamare il <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metodo <xref:System.ComponentModel.TypeDescriptor>. Per altre informazioni, vedere gli esempi nel <xref:System.ComponentModel.TypeConverter> classe di base.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageIndexConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageIndexConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza un'istanza della classe <see cref="T:System.Windows.Forms.ImageIndexConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, è non creare direttamente un'istanza di un <xref:System.Windows.Forms.ImageIndexConverter>. In alternativa, chiamare il <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metodo <xref:System.ComponentModel.TypeDescriptor>. Per altre informazioni, vedere gli esempi nel <xref:System.ComponentModel.TypeConverter> classe di base.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="imageIndexConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
        <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> per fornire informazioni sulle impostazioni locali.</param>
        <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
        <summary>Converte l'oggetto valore specificato in un intero con segno a 32 bit.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo convertitore di tipo solo può convertire un oggetto intero con segno a 32 bit in e da una stringa.  
  
 Il `context` può essere utilizzato per estrarre ulteriori informazioni sull'ambiente da cui viene richiamato il convertitore di tipo. Poiché può essere `null`, è sempre consigliabile eseguire un controllo. Anche le proprietà dell'oggetto contesto possono restituire `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Impossibile eseguire la conversione.</exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="imageIndexConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato che può essere usato per estrarre informazioni aggiuntive sull'ambiente da cui viene richiamato il convertitore di tipi. Questo parametro o le proprietà di questo parametro possono essere <see langword="null" />.</param>
        <param name="culture">Classe <see cref="T:System.Globalization.CultureInfo" /> che fornisce informazioni sulle impostazioni locali.</param>
        <param name="value">Oggetto da convertire, normalmente un indice rappresentato come un <see cref="T:System.Int32" />.</param>
        <param name="destinationType">Tipo in cui convertire l'oggetto, spesso <see cref="T:System.String" />.</param>
        <summary>Converte l'oggetto indicato nel tipo di destinazione specificato.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita di questo metodo può solo convertire un valore di indice rappresentato come un <xref:System.Int32> a un <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="destinationType" /> è <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Non è stato possibile convertire il parametro <paramref name="value" /> specificato nel parametro <paramref name="destinationType" /> specificato.</exception>
        <block subset="none" type="overrides">
          <para>Eseguire l'override di questo metodo per fornire la propria capacità di conversione.  Il <paramref name="context" /> parametro può essere utilizzato per estrarre ulteriori informazioni sull'ambiente da cui viene richiamato il convertitore di tipo. È possibile <see langword="null" />, pertanto è sempre consigliabile controllare questo valore restituito. Anche le proprietà sull'oggetto context possono restituire <see langword="null" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="imageIndexConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato che può essere usato per estrarre informazioni aggiuntive sull'ambiente da cui viene richiamato il convertitore di tipi. Questo parametro o le proprietà di questo parametro possono essere <see langword="null" />.</param>
        <summary>Restituisce una raccolta di valori di indice standard per l'elenco di immagini associato al contesto di formato specificato.</summary>
        <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> che contiene un insieme standard di valori di indice validi. Se non viene trovato alcun elenco di immagini, questa raccolta conterrà un singolo oggetto con un valore di -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Restituisce una raccolta di valori di indice per elenchi di immagini associati con il <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A?displayProperty=nameWithType> proprietà del `context` parametro. Se un <xref:System.Windows.Forms.ImageList> non viene trovato, l'elemento padre del componente viene eseguita una ricerca per tale elenco.  
  
 In genere il <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> metodo viene chiamato prima un tentativo di utilizzare il <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> e <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive%2A> metodi.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive" />
        <altmember cref="P:System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="imageIndexConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Contesto di un formattatore.</param>
        <summary>Specifica se l'elenco di valori standard restituiti dal metodo <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> rappresenta un elenco esclusivo.</summary>
        <returns>
          <see langword="true" /> se il metodo <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> restituisce un elenco esclusivo di valori validi; in caso contrario, <see langword="false" />. Questa implementazione restituisce sempre <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'elenco restituito dal <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> metodo è esclusivo, quindi nessun altro valore è valido. È tipico di un tipo di dati enumerati. Se l'elenco non è esclusivo, allora sono presenti altri valori validi oltre all'elenco standard di valori che <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> fornisce.  
  
 Se implementato in questo tipo di convertitore, questo metodo restituisce sempre `false`.  
  
 In genere il <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> metodo viene chiamato prima un tentativo di utilizzare il <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> e <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive%2A> metodi.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="imageIndexConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato che può essere usato per estrarre informazioni aggiuntive sull'ambiente da cui viene richiamato il convertitore di tipi. Questo parametro o le proprietà di questo parametro possono essere <see langword="null" />.</param>
        <summary>Indica se il tipo di convertitore supporta un gruppo standard di valori selezionabili da un elenco.</summary>
        <returns>
          <see langword="true" /> se il metodo <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> restituisce un un gruppo standard di valori; in caso contrario, <see langword="false" />. Restituisce sempre <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando implementato in questa classe <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> restituisce sempre `true` poiché questo oggetto supporta un set standard di valori di indice per le immagini che possono essere selezionate da un elenco.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="IncludeNoneAsStandardValue">
      <MemberSignature Language="C#" Value="protected virtual bool IncludeNoneAsStandardValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeNoneAsStandardValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IncludeNoneAsStandardValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IncludeNoneAsStandardValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeNoneAsStandardValue : bool" Usage="System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se un valore <see langword="none" /> o <see langword="null" /> è valido nell'insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />.</summary>
        <value>
          <see langword="true" /> se un valore <see langword="none" /> o <see langword="null" /> è valido nell'insieme di valori standard; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando implementato in questa classe è sempre restituisce `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>